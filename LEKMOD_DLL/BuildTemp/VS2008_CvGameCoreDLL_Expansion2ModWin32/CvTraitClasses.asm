; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\EnormousApplePie\Documents\GitHub\Lekmod\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvTraitClasses.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?NO_QUEST_DATA@CvMinorCivQuest@@2HB		; CvMinorCivQuest::NO_QUEST_DATA
PUBLIC	?NO_TURN@CvMinorCivQuest@@2HB			; CvMinorCivQuest::NO_TURN
CONST	SEGMENT
$SG223032 DB	'ShortDescription', 00H
	ORG $+3
$SG223033 DB	'LevelExperienceModifier', 00H
$SG223034 DB	'GreatPeopleRateModifier', 00H
$SG223035 DB	'GreatScientistRateModifier', 00H
	ORG $+1
$SG223036 DB	'GreatGeneralRateModifier', 00H
	ORG $+3
$SG223037 DB	'GreatGeneralExtraBonus', 00H
	ORG $+1
$SG223038 DB	'GreatPersonGiftInfluence', 00H
	ORG $+3
$SG223039 DB	'MaxGlobalBuildingProductionModifier', 00H
$SG223040 DB	'MaxTeamBuildingProductionModifier', 00H
	ORG $+2
$SG223041 DB	'MaxPlayerBuildingProductionModifier', 00H
$SG223042 DB	'CityUnhappinessModifier', 00H
$SG223043 DB	'PopulationUnhappinessModifier', 00H
	ORG $+2
$SG223044 DB	'CityStateBonusModifier', 00H
	ORG $+1
$SG223045 DB	'CityStateFriendshipModifier', 00H
$SG223046 DB	'CityStateCombatModifier', 00H
$SG223047 DB	'LandBarbarianConversionPercent', 00H
	ORG $+1
$SG223048 DB	'LandBarbarianConversionExtraUnits', 00H
	ORG $+2
$SG223049 DB	'SeaBarbarianConversionPercent', 00H
	ORG $+2
$SG223050 DB	'CapitalBuildingModifier', 00H
$SG223051 DB	'PlotBuyCostModifier', 00H
$SG223052 DB	'PlotCultureCostModifier', 00H
$SG223053 DB	'SciencePerGreatPersonBorn', 00H
	ORG $+2
$SG223054 DB	'NumTurnsBeforeMinorAlliesRefuseBribes', 00H
	ORG $+2
$SG223055 DB	'GoldenAgeTileBonusFaith', 00H
$SG223056 DB	'CultureFromKills', 00H
	ORG $+3
$SG223057 DB	'FaithFromKills', 00H
	ORG $+1
$SG223058 DB	'CityCultureBonus', 00H
	ORG $+3
$SG223059 DB	'CapitalThemingBonusModifier', 00H
$SG223060 DB	'PolicyCostModifier', 00H
	ORG $+1
$SG223061 DB	'CityConnectionTradeRouteChange', 00H
	ORG $+1
$SG223062 DB	'WonderProductionModifier', 00H
	ORG $+3
$SG223063 DB	'PlunderModifier', 00H
$SG223064 DB	'ImprovementMaintenanceModifier', 00H
	ORG $+1
$SG223065 DB	'GoldenAgeDurationModifier', 00H
	ORG $+2
$SG223066 DB	'GoldenAgeMoveChange', 00H
$SG223067 DB	'GoldenAgeCombatModifier', 00H
$SG223068 DB	'GoldenAgeTourismModifier', 00H
	ORG $+3
$SG223069 DB	'GoldenAgeGreatArtistRateModifier', 00H
	ORG $+3
$SG223070 DB	'GoldenAgeGreatMusicianRateModifier', 00H
	ORG $+1
$SG223071 DB	'GoldenAgeGreatWriterRateModifier', 00H
	ORG $+3
$SG223072 DB	'ExtraEmbarkMoves', 00H
	ORG $+3
$SG223073 DB	'NaturalWonderFirstFinderGold', 00H
	ORG $+3
$SG223074 DB	'NaturalWonderSubsequentFinderGold', 00H
	ORG $+2
$SG223075 DB	'NaturalWonderFirstFinderFaith', 00H
	ORG $+2
$SG223076 DB	'NaturalWonderSubsequentFinderFaith', 00H
	ORG $+1
$SG223077 DB	'NaturalWonderYieldModifier', 00H
	ORG $+1
$SG223078 DB	'NaturalWonderHappinessModifier', 00H
	ORG $+1
$SG223079 DB	'NearbyImprovementCombatBonus', 00H
	ORG $+3
$SG223080 DB	'NearbyImprovementBonusRange', 00H
$SG223081 DB	'CultureBuildingYieldChange', 00H
	ORG $+1
$SG223082 DB	'CombatBonusVsHigherTech', 00H
$SG223083 DB	'CombatBonusVsLargerCiv', 00H
	ORG $+1
$SG223084 DB	'LandUnitMaintenanceModifier', 00H
$SG223085 DB	'NavalUnitMaintenanceModifier', 00H
	ORG $+3
$SG223086 DB	'RazeSpeedModifier', 00H
	ORG $+2
$SG223087 DB	'DOFGreatPersonModifier', 00H
	ORG $+1
$SG223088 DB	'LuxuryHappinessRetention', 00H
	ORG $+3
$SG223089 DB	'ExtraHappinessPerLuxury', 00H
$SG223090 DB	'ExtraSpies', 00H
	ORG $+1
$SG223091 DB	'HappinessPerReligion', 00H
	ORG $+3
$SG223092 DB	'UnresearchedTechBonusFromKills', 00H
	ORG $+1
$SG223093 DB	'ExtraFoundedCityTerritoryClaimRange', 00H
$SG223094 DB	'FreeSocialPoliciesPerEra', 00H
	ORG $+3
$SG223095 DB	'NumTradeRoutesModifier', 00H
	ORG $+1
$SG223096 DB	'TradeRouteResourceModifier', 00H
	ORG $+1
$SG223097 DB	'UniqueLuxuryCities', 00H
	ORG $+1
$SG223098 DB	'UniqueLuxuryQuantity', 00H
	ORG $+3
$SG223099 DB	'WorkerSpeedModifier', 00H
$SG223100 DB	'AfraidMinorPerTurnInfluence', 00H
$SG223101 DB	'LandTradeRouteRangeBonus', 00H
	ORG $+3
$SG223102 DB	'TradeReligionModifier', 00H
	ORG $+2
$SG223103 DB	'TradeBuildingModifier', 00H
	ORG $+2
$SG223105 DB	'FreeUnit', 00H
	ORG $+3
$SG223107 DB	'FreeUnitPrereqTech', 00H
	ORG $+1
$SG223110 DB	'FreeBuildingPrereqTech', 00H
	ORG $+1
$SG223113 DB	'CapitalFreeBuildingPrereqTech', 00H
	ORG $+2
$SG223116 DB	'CombatBonusImprovement', 00H
	ORG $+1
$SG223119 DB	'ObsoleteTech', 00H
	ORG $+3
$SG223121 DB	'PrereqTech', 00H
	ORG $+1
$SG223123 DB	'FreeBuilding', 00H
	ORG $+3
$SG223126 DB	'FreeCapitalBuilding', 00H
$SG223129 DB	'FreeBuildingOnConquest', 00H
	ORG $+1
$SG223132 DB	'FightWellDamaged', 00H
	ORG $+3
$SG223133 DB	'MoveFriendlyWoodsAsRoad', 00H
$SG223134 DB	'FasterAlongRiver', 00H
	ORG $+3
$SG223135 DB	'FasterInHills', 00H
	ORG $+2
$SG223136 DB	'EmbarkedAllWater', 00H
	ORG $+3
$SG223137 DB	'EmbarkedToLandFlatCost', 00H
	ORG $+1
$SG223138 DB	'NoHillsImprovementMaintenance', 00H
	ORG $+2
$SG223139 DB	'TechBoostFromCapitalScienceBuildings', 00H
	ORG $+3
$SG223140 DB	'StaysAliveZeroCities', 00H
	ORG $+3
$SG223141 DB	'FaithFromUnimprovedForest', 00H
	ORG $+2
$SG223142 DB	'SeaTradeRoutesArePlunderImmune', 00H
	ORG $+1
$SG223143 DB	'EarnsGreatPersonOnSlotOrGuild', 00H
	ORG $+2
$SG223144 DB	'BonusReligiousBelief', 00H
	ORG $+3
$SG223145 DB	'AbleToAnnexCityStates', 00H
	ORG $+2
$SG223146 DB	'CrossesMountainsAfterGreatGeneral', 00H
	ORG $+2
$SG223147 DB	'MayaCalendarBonuses', 00H
$SG223148 DB	'NoAnnexing', 00H
	ORG $+1
$SG223149 DB	'TechFromCityConquer', 00H
$SG223150 DB	'UniqueLuxuryRequiresNewArea', 00H
$SG223151 DB	'RiverTradeRoad', 00H
	ORG $+1
$SG223152 DB	'AngerFreeIntrusionOfCityStates', 00H
	ORG $+1
$SG223154 DB	'TraitType', 00H
	ORG $+2
$SG223155 DB	'Trait_ExtraYieldThresholds', 00H
	ORG $+1
$SG223156 DB	'TraitType', 00H
	ORG $+2
$SG223157 DB	'Trait_YieldChanges', 00H
	ORG $+1
$SG223158 DB	'TraitType', 00H
	ORG $+2
$SG223159 DB	'Trait_YieldChangesStrategicResources', 00H
	ORG $+3
$SG223160 DB	'TraitType', 00H
	ORG $+2
$SG223161 DB	'Trait_YieldChangesLuxuryResources', 00H
	ORG $+2
$SG223162 DB	'TraitType', 00H
	ORG $+2
$SG223163 DB	'Trait_YieldChangesNaturalWonder', 00H
$SG223164 DB	'TraitType', 00H
	ORG $+2
$SG223165 DB	'Trait_YieldChangesPerTradePartner', 00H
	ORG $+2
$SG223166 DB	'TraitType', 00H
	ORG $+2
$SG223167 DB	'Trait_YieldChangesIncomingTradeRoute', 00H
	ORG $+3
$SG223168 DB	'TraitType', 00H
	ORG $+2
$SG223169 DB	'Trait_YieldModifiers', 00H
	ORG $+3
$SG223177 DB	'Trait_Terrains', 00H
	ORG $+1
$SG223181 DB	'select TraitType, Terrains.ID as TerrainID, StrategicRes'
	DB	'ourceQuantityModifier from Trait_Terrains join Terrains on Te'
	DB	'rrains.Type = TerrainType where TraitType = ?', 00H
	ORG $+1
$SG223186 DB	'TerrainID', 00H
	ORG $+2
$SG223188 DB	'StrategicResourceQuantityModifier', 00H
	ORG $+2
$SG223190 DB	'FreePromotionUnitCombats', 00H
	ORG $+3
$SG223194 DB	'select UnitPromotions.ID, UnitCombatInfos.ID from Trait_'
	DB	'FreePromotionUnitCombats, UnitPromotions, UnitCombatInfos whe'
	DB	're TraitType = ? and PromotionType = UnitPromotions.Type and '
	DB	'UnitCombatType = UnitCombatInfos.Type', 00H
$SG223274 DB	'ResourceQuantityModifier', 00H
	ORG $+3
$SG223275 DB	'TraitType', 00H
	ORG $+2
$SG223276 DB	'ResourceType', 00H
	ORG $+3
$SG223277 DB	'Trait_ResourceQuantityModifiers', 00H
$SG223278 DB	'Resources', 00H
	ORG $+2
$SG223280 DB	'UnitCombatInfos', 00H
$SG223282 DB	'Trait_MovesChangeUnitCombats', 00H
	ORG $+7
$SG223286 DB	'select UnitCombatInfos.ID, MovesChange from Trait_MovesC'
	DB	'hangeUnitCombats inner join UnitCombatInfos on UnitCombatInfo'
	DB	's.Type = UnitCombatType where TraitType = ?;', 00H
	ORG $+2
$SG223293 DB	'UnitCombatInfos', 00H
$SG223295 DB	'Trait_MaintenanceModifierUnitCombats', 00H
	ORG $+7
$SG223299 DB	'select UnitCombatInfos.ID, MaintenanceModifier from Trai'
	DB	't_MaintenanceModifierUnitCombats inner join UnitCombatInfos o'
	DB	'n UnitCombatInfos.Type = UnitCombatType where TraitType = ?;', 00H
	ORG $+2
$SG223305 DB	'Yields', 00H
	ORG $+1
$SG223306 DB	'Improvements', 00H
	ORG $+3
$SG223308 DB	'Trait_ImprovementYieldChanges', 00H
	ORG $+6
$SG223311 DB	'select Improvements.ID as ImprovementID, Yields.ID as Yi'
	DB	'eldID, Yield from Trait_ImprovementYieldChanges inner join Im'
	DB	'provements on Improvements.Type = ImprovementType inner join '
	DB	'Yields on Yields.Type = YieldType where TraitType = ?', 00H
$SG223318 DB	'Yields', 00H
	ORG $+1
$SG223319 DB	'Specialists', 00H
$SG223321 DB	'Building_SpecialistYieldChanges', 00H
$SG223332 DB	'Features', 00H
	ORG $+3
$SG223324 DB	'select Specialists.ID as SpecialistID, Yields.ID as Yiel'
	DB	'dID, Yield from Trait_SpecialistYieldChanges inner join Speci'
	DB	'alists on Specialists.Type = SpecialistType inner join Yields'
	DB	' on Yields.Type = YieldType where TraitType = ?', 00H
	ORG $+2
$SG223331 DB	'Yields', 00H
	ORG $+1
$SG223334 DB	'Trait_UnimprovedFeatureYieldChanges', 00H
$SG223337 DB	'select Features.ID as FeatureID, Yields.ID as YieldID, Y'
	DB	'ield from Trait_UnimprovedFeatureYieldChanges inner join Feat'
	DB	'ures on Features.Type = FeatureType inner join Yields on Yiel'
	DB	'ds.Type = YieldType where TraitType = ?', 00H
	ORG $+2
$SG223349 DB	'Trait_NoTrain', 00H
	ORG $+6
$SG223352 DB	'SELECT Traits.ID, UnitClasses.ID FROM Trait_NoTrain inne'
	DB	'r join Traits on Trait_NoTrain.TraitType = Traits.Type inner '
	DB	'join UnitClasses on Trait_NoTrain.UnitClassType = UnitClasses'
	DB	'.Type where TraitType = ?', 00H
$SG223364 DB	'Trait_NoBuild', 00H
	ORG $+6
$SG223367 DB	'SELECT Traits.ID, Improvements.ID FROM Trait_NoBuild inn'
	DB	'er join Traits on Trait_NoBuild.TraitType = Traits.Type inner'
	DB	' join Improvements on Trait_NoBuild.ImprovementType = Improve'
	DB	'ments.Type where TraitType = ?', 00H
	ORG $+3
$SG223379 DB	'Trait_FreeResourceFirstXCities', 00H
	ORG $+5
$SG223382 DB	'select Resources.ID as ResourceID, ResourceQuantity, Num'
	DB	'Cities from Trait_FreeResourceFirstXCities inner join Resourc'
	DB	'es on Resources.Type = ResourceType where TraitType = ?', 00H
	ORG $+3
_CALENDAR_START DD 0c542865br			; -3112.4
_DAYS_IN_BAKTUN DD 0480ca000r			; 144000
_DAYS_IN_KATUN DD 045e10000r			; 7200
_DAYS_IN_TUN DD	043b40000r			; 360
_DAYS_IN_WINAL DD 041a00000r			; 20
_DAYS_IN_YEAR DD 043b69f00r			; 365.242
$SG224046 DB	'%d.%d.%d.%d.%d', 00H
	ORG $+1
$SG224066 DB	'TXT_KEY_MAYA_CALENDAR_LONG_STRING', 00H
	ORG $+2
$SG224073 DB	'UNIT_PROPHET', 00H
	ORG $+3
$SG224084 DB	'UNIT_ENGINEER', 00H
	ORG $+2
$SG224090 DB	'UNIT_SCIENTIST', 00H
	ORG $+1
$SG224094 DB	'AIGRANDSTRATEGY_SPACESHIP', 00H
	ORG $+2
$SG224097 DB	'UNIT_ARTIST', 00H
$SG224101 DB	'AIGRANDSTRATEGY_CULTURE', 00H
$SG224104 DB	'UNIT_MERCHANT', 00H
	ORG $+2
$SG224108 DB	'AIGRANDSTRATEGY_UNITED_NATIONS', 00H
	ORG $+1
$SG224111 DB	'UNIT_GREAT_GENERAL', 00H
	ORG $+1
$SG224115 DB	'AIGRANDSTRATEGY_CONQUEST', 00H
	ORG $+3
$SG224118 DB	'UNIT_PROPHET', 00H
	ORG $+3
$SG224122 DB	'UNIT_ENGINEER', 00H
	ORG $+2
$SG224126 DB	'UNIT_WRITER', 00H
$SG224130 DB	'UNIT_MERCHANT', 00H
	ORG $+2
$SG224134 DB	'UNIT_SCIENTIST', 00H
	ORG $+1
$SG224138 DB	'UNIT_ARTIST', 00H
$SG224142 DB	'UNIT_MUSICIAN', 00H
	ORG $+2
$SG224146 DB	'UNIT_GREAT_GENERAL', 00H
	ORG $+1
$SG224150 DB	'UNIT_GREAT_ADMIRAL', 00H
	ORG $+1
$SG224304 DB	'SPECIALUNIT_PEOPLE', 00H
	ORG $+1
$SG224662 DB	'Barbarian Camp Conversion', 00H
	ORG $+2
$SG224674 DB	'Converted barbarian camp, X: %d, Y: %d', 00H
	ORG $+1
$SG224677 DB	'TXT_KEY_NOTIFICATION_BARB_CAMP_CONVERTS', 00H
$SG224680 DB	'TXT_KEY_NOTIFICATION_SUMMARY_BARB_CAMP_CONVERTS', 00H
$SG224693 DB	'Barbarian Naval Unit Conversion', 00H
$SG224696 DB	'LEADER_SULEIMAN', 00H
$SG224699 DB	'Converted barbarian naval unit, X: %d, Y: %d', 00H
	ORG $+3
$SG224702 DB	'TXT_KEY_NOTIFICATION_BARB_NAVAL_UNIT_CONVERTS', 00H
	ORG $+2
$SG224705 DB	'TXT_KEY_NOTIFICATION_SUMMARY_BARB_NAVAL_UNIT_CONVERTS', 00H
CONST	ENDS
;	COMDAT ?NO_TURN@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_TURN@CvMinorCivQuest@@2HB DD 0ffffffffH		; CvMinorCivQuest::NO_TURN
CONST	ENDS
;	COMDAT ?NO_QUEST_DATA@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_QUEST_DATA@CvMinorCivQuest@@2HB DD 0ffffffffH	; CvMinorCivQuest::NO_QUEST_DATA
CONST	ENDS
PUBLIC	?xToHexspaceX@@YAHHH@Z				; xToHexspaceX
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
;	COMDAT ?xToHexspaceX@@YAHHH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?xToHexspaceX@@YAHHH@Z PROC				; xToHexspaceX, COMDAT

; 86   : 	return iX - ((iY >= 0) ? (iY>>1) : ((iY - 1)/2));

	mov	ecx, DWORD PTR _iY$[esp-4]
	test	ecx, ecx
	jge	SHORT $LN5@xToHexspac
	lea	eax, DWORD PTR [ecx-1]
	cdq
	sub	eax, edx
	mov	ecx, eax
$LN5@xToHexspac:
	mov	eax, DWORD PTR _iX$[esp-4]
	sar	ecx, 1
	sub	eax, ecx

; 87   : }

	ret	0
?xToHexspaceX@@YAHHH@Z ENDP				; xToHexspaceX
_TEXT	ENDS
PUBLIC	?hexspaceXToX@@YAHHH@Z				; hexspaceXToX
; Function compile flags: /Ogtpy
;	COMDAT ?hexspaceXToX@@YAHHH@Z
_TEXT	SEGMENT
_iHexspaceX$ = 8					; size = 4
_iHexspaceY$ = 12					; size = 4
?hexspaceXToX@@YAHHH@Z PROC				; hexspaceXToX, COMDAT

; 91   : 	return iHexspaceX + ((iHexspaceY >= 0) ? (iHexspaceY>>1) : ((iHexspaceY - 1)/2));

	mov	eax, DWORD PTR _iHexspaceY$[esp-4]
	test	eax, eax
	jl	SHORT $LN3@hexspaceXT
	mov	ecx, DWORD PTR _iHexspaceX$[esp-4]
	sar	eax, 1
	add	eax, ecx

; 92   : }

	ret	0
$LN3@hexspaceXT:

; 91   : 	return iHexspaceX + ((iHexspaceY >= 0) ? (iHexspaceY>>1) : ((iHexspaceY - 1)/2));

	dec	eax
	cdq
	sub	eax, edx
	mov	edx, DWORD PTR _iHexspaceX$[esp-4]
	sar	eax, 1
	add	eax, edx

; 92   : }

	ret	0
?hexspaceXToX@@YAHHH@Z ENDP				; hexspaceXToX
_TEXT	ENDS
PUBLIC	?GetLevelExperienceModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetLevelExperienceModifier
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
;	COMDAT ?GetLevelExperienceModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetLevelExperienceModifier@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetLevelExperienceModifier, COMDAT
; _this$ = ecx

; 210  : 	return m_iLevelExperienceModifier;

	mov	eax, DWORD PTR [ecx+260]

; 211  : }

	ret	0
?GetLevelExperienceModifier@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetLevelExperienceModifier
_TEXT	ENDS
PUBLIC	?GetGreatPeopleRateModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetGreatPeopleRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetGreatPeopleRateModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetGreatPeopleRateModifier@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetGreatPeopleRateModifier, COMDAT
; _this$ = ecx

; 216  : 	return m_iGreatPeopleRateModifier;

	mov	eax, DWORD PTR [ecx+264]

; 217  : }

	ret	0
?GetGreatPeopleRateModifier@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetGreatPeopleRateModifier
_TEXT	ENDS
PUBLIC	?GetGreatScientistRateModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetGreatScientistRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetGreatScientistRateModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetGreatScientistRateModifier@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetGreatScientistRateModifier, COMDAT
; _this$ = ecx

; 222  : 	return m_iGreatScientistRateModifier;

	mov	eax, DWORD PTR [ecx+268]

; 223  : }

	ret	0
?GetGreatScientistRateModifier@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetGreatScientistRateModifier
_TEXT	ENDS
PUBLIC	?GetGreatGeneralRateModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetGreatGeneralRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetGreatGeneralRateModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetGreatGeneralRateModifier@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetGreatGeneralRateModifier, COMDAT
; _this$ = ecx

; 228  : 	return m_iGreatGeneralRateModifier;

	mov	eax, DWORD PTR [ecx+272]

; 229  : }

	ret	0
?GetGreatGeneralRateModifier@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetGreatGeneralRateModifier
_TEXT	ENDS
PUBLIC	?GetGreatGeneralExtraBonus@CvTraitEntry@@QBEHXZ	; CvTraitEntry::GetGreatGeneralExtraBonus
; Function compile flags: /Ogtpy
;	COMDAT ?GetGreatGeneralExtraBonus@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetGreatGeneralExtraBonus@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetGreatGeneralExtraBonus, COMDAT
; _this$ = ecx

; 234  : 	return m_iGreatGeneralExtraBonus;

	mov	eax, DWORD PTR [ecx+276]

; 235  : }

	ret	0
?GetGreatGeneralExtraBonus@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetGreatGeneralExtraBonus
_TEXT	ENDS
PUBLIC	?GetGreatPersonGiftInfluence@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetGreatPersonGiftInfluence
; Function compile flags: /Ogtpy
;	COMDAT ?GetGreatPersonGiftInfluence@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetGreatPersonGiftInfluence@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetGreatPersonGiftInfluence, COMDAT
; _this$ = ecx

; 240  : 	return m_iGreatPersonGiftInfluence;

	mov	eax, DWORD PTR [ecx+280]

; 241  : }

	ret	0
?GetGreatPersonGiftInfluence@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetGreatPersonGiftInfluence
_TEXT	ENDS
PUBLIC	?GetMaxGlobalBuildingProductionModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetMaxGlobalBuildingProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetMaxGlobalBuildingProductionModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetMaxGlobalBuildingProductionModifier@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetMaxGlobalBuildingProductionModifier, COMDAT
; _this$ = ecx

; 246  : 	return m_iMaxGlobalBuildingProductionModifier;

	mov	eax, DWORD PTR [ecx+284]

; 247  : }

	ret	0
?GetMaxGlobalBuildingProductionModifier@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetMaxGlobalBuildingProductionModifier
_TEXT	ENDS
PUBLIC	?GetMaxTeamBuildingProductionModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetMaxTeamBuildingProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetMaxTeamBuildingProductionModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetMaxTeamBuildingProductionModifier@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetMaxTeamBuildingProductionModifier, COMDAT
; _this$ = ecx

; 252  : 	return m_iMaxTeamBuildingProductionModifier;

	mov	eax, DWORD PTR [ecx+288]

; 253  : }

	ret	0
?GetMaxTeamBuildingProductionModifier@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetMaxTeamBuildingProductionModifier
_TEXT	ENDS
PUBLIC	?GetMaxPlayerBuildingProductionModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetMaxPlayerBuildingProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetMaxPlayerBuildingProductionModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetMaxPlayerBuildingProductionModifier@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetMaxPlayerBuildingProductionModifier, COMDAT
; _this$ = ecx

; 258  : 	return m_iMaxPlayerBuildingProductionModifier;

	mov	eax, DWORD PTR [ecx+292]

; 259  : }

	ret	0
?GetMaxPlayerBuildingProductionModifier@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetMaxPlayerBuildingProductionModifier
_TEXT	ENDS
PUBLIC	?GetCityUnhappinessModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetCityUnhappinessModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetCityUnhappinessModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetCityUnhappinessModifier@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetCityUnhappinessModifier, COMDAT
; _this$ = ecx

; 264  : 	return m_iCityUnhappinessModifier;

	mov	eax, DWORD PTR [ecx+296]

; 265  : }

	ret	0
?GetCityUnhappinessModifier@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetCityUnhappinessModifier
_TEXT	ENDS
PUBLIC	?GetPopulationUnhappinessModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetPopulationUnhappinessModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetPopulationUnhappinessModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetPopulationUnhappinessModifier@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetPopulationUnhappinessModifier, COMDAT
; _this$ = ecx

; 270  : 	return m_iPopulationUnhappinessModifier;

	mov	eax, DWORD PTR [ecx+300]

; 271  : }

	ret	0
?GetPopulationUnhappinessModifier@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetPopulationUnhappinessModifier
_TEXT	ENDS
PUBLIC	?GetCityStateBonusModifier@CvTraitEntry@@QBEHXZ	; CvTraitEntry::GetCityStateBonusModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetCityStateBonusModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetCityStateBonusModifier@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetCityStateBonusModifier, COMDAT
; _this$ = ecx

; 276  : 	return m_iCityStateBonusModifier;

	mov	eax, DWORD PTR [ecx+304]

; 277  : }

	ret	0
?GetCityStateBonusModifier@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetCityStateBonusModifier
_TEXT	ENDS
PUBLIC	?GetCityStateFriendshipModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetCityStateFriendshipModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetCityStateFriendshipModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetCityStateFriendshipModifier@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetCityStateFriendshipModifier, COMDAT
; _this$ = ecx

; 282  : 	return m_iCityStateFriendshipModifier;

	mov	eax, DWORD PTR [ecx+308]

; 283  : }

	ret	0
?GetCityStateFriendshipModifier@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetCityStateFriendshipModifier
_TEXT	ENDS
PUBLIC	?GetCityStateCombatModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetCityStateCombatModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetCityStateCombatModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetCityStateCombatModifier@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetCityStateCombatModifier, COMDAT
; _this$ = ecx

; 288  : 	return m_iCityStateCombatModifier;

	mov	eax, DWORD PTR [ecx+312]

; 289  : }

	ret	0
?GetCityStateCombatModifier@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetCityStateCombatModifier
_TEXT	ENDS
PUBLIC	?GetLandBarbarianConversionPercent@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetLandBarbarianConversionPercent
; Function compile flags: /Ogtpy
;	COMDAT ?GetLandBarbarianConversionPercent@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetLandBarbarianConversionPercent@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetLandBarbarianConversionPercent, COMDAT
; _this$ = ecx

; 294  : 	return m_iLandBarbarianConversionPercent;

	mov	eax, DWORD PTR [ecx+316]

; 295  : }

	ret	0
?GetLandBarbarianConversionPercent@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetLandBarbarianConversionPercent
_TEXT	ENDS
PUBLIC	?GetLandBarbarianConversionExtraUnits@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetLandBarbarianConversionExtraUnits
; Function compile flags: /Ogtpy
;	COMDAT ?GetLandBarbarianConversionExtraUnits@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetLandBarbarianConversionExtraUnits@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetLandBarbarianConversionExtraUnits, COMDAT
; _this$ = ecx

; 300  : 	return m_iLandBarbarianConversionExtraUnits;

	mov	eax, DWORD PTR [ecx+320]

; 301  : }

	ret	0
?GetLandBarbarianConversionExtraUnits@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetLandBarbarianConversionExtraUnits
_TEXT	ENDS
PUBLIC	?GetSeaBarbarianConversionPercent@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetSeaBarbarianConversionPercent
; Function compile flags: /Ogtpy
;	COMDAT ?GetSeaBarbarianConversionPercent@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetSeaBarbarianConversionPercent@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetSeaBarbarianConversionPercent, COMDAT
; _this$ = ecx

; 306  : 	return m_iSeaBarbarianConversionPercent;

	mov	eax, DWORD PTR [ecx+324]

; 307  : }

	ret	0
?GetSeaBarbarianConversionPercent@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetSeaBarbarianConversionPercent
_TEXT	ENDS
PUBLIC	?GetCapitalBuildingModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetCapitalBuildingModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetCapitalBuildingModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetCapitalBuildingModifier@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetCapitalBuildingModifier, COMDAT
; _this$ = ecx

; 312  : 	return m_iCapitalBuildingModifier;

	mov	eax, DWORD PTR [ecx+328]

; 313  : }

	ret	0
?GetCapitalBuildingModifier@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetCapitalBuildingModifier
_TEXT	ENDS
PUBLIC	?GetPlotBuyCostModifier@CvTraitEntry@@QBEHXZ	; CvTraitEntry::GetPlotBuyCostModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetPlotBuyCostModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetPlotBuyCostModifier@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetPlotBuyCostModifier, COMDAT
; _this$ = ecx

; 318  : 	return m_iPlotBuyCostModifier;

	mov	eax, DWORD PTR [ecx+332]

; 319  : }

	ret	0
?GetPlotBuyCostModifier@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetPlotBuyCostModifier
_TEXT	ENDS
PUBLIC	?GetPlotCultureCostModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetPlotCultureCostModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetPlotCultureCostModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetPlotCultureCostModifier@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetPlotCultureCostModifier, COMDAT
; _this$ = ecx

; 324  : 	return m_iPlotCultureCostModifier;

	mov	eax, DWORD PTR [ecx+336]

; 325  : }

	ret	0
?GetPlotCultureCostModifier@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetPlotCultureCostModifier
_TEXT	ENDS
PUBLIC	?GetSciencePerGreatPersonBorn@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetSciencePerGreatPersonBorn
; Function compile flags: /Ogtpy
;	COMDAT ?GetSciencePerGreatPersonBorn@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetSciencePerGreatPersonBorn@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetSciencePerGreatPersonBorn, COMDAT
; _this$ = ecx

; 331  : 	return m_iSciencePerGreatPersonBorn;

	mov	eax, DWORD PTR [ecx+340]

; 332  : }

	ret	0
?GetSciencePerGreatPersonBorn@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetSciencePerGreatPersonBorn
_TEXT	ENDS
PUBLIC	?GetNumTurnsBeforeMinorAlliesRefuseBribes@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetNumTurnsBeforeMinorAlliesRefuseBribes
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumTurnsBeforeMinorAlliesRefuseBribes@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetNumTurnsBeforeMinorAlliesRefuseBribes@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetNumTurnsBeforeMinorAlliesRefuseBribes, COMDAT
; _this$ = ecx

; 339  : 	return m_iNumTurnsBeforeMinorAlliesRefuseBribes;

	mov	eax, DWORD PTR [ecx+344]

; 340  : }

	ret	0
?GetNumTurnsBeforeMinorAlliesRefuseBribes@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetNumTurnsBeforeMinorAlliesRefuseBribes
_TEXT	ENDS
PUBLIC	?GetGoldenAgeTileBonusFaith@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetGoldenAgeTileBonusFaith
; Function compile flags: /Ogtpy
;	COMDAT ?GetGoldenAgeTileBonusFaith@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetGoldenAgeTileBonusFaith@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetGoldenAgeTileBonusFaith, COMDAT
; _this$ = ecx

; 347  : 	return m_iGoldenAgeTileBonusFaith;

	mov	eax, DWORD PTR [ecx+348]

; 348  : }

	ret	0
?GetGoldenAgeTileBonusFaith@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetGoldenAgeTileBonusFaith
_TEXT	ENDS
PUBLIC	?GetCultureFromKills@CvTraitEntry@@QBEHXZ	; CvTraitEntry::GetCultureFromKills
; Function compile flags: /Ogtpy
;	COMDAT ?GetCultureFromKills@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetCultureFromKills@CvTraitEntry@@QBEHXZ PROC		; CvTraitEntry::GetCultureFromKills, COMDAT
; _this$ = ecx

; 355  : 	return m_iCultureFromKills;

	mov	eax, DWORD PTR [ecx+352]

; 356  : }

	ret	0
?GetCultureFromKills@CvTraitEntry@@QBEHXZ ENDP		; CvTraitEntry::GetCultureFromKills
_TEXT	ENDS
PUBLIC	?GetFaithFromKills@CvTraitEntry@@QBEHXZ		; CvTraitEntry::GetFaithFromKills
; Function compile flags: /Ogtpy
;	COMDAT ?GetFaithFromKills@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetFaithFromKills@CvTraitEntry@@QBEHXZ PROC		; CvTraitEntry::GetFaithFromKills, COMDAT
; _this$ = ecx

; 361  : 	return m_iFaithFromKills;

	mov	eax, DWORD PTR [ecx+356]

; 362  : }

	ret	0
?GetFaithFromKills@CvTraitEntry@@QBEHXZ ENDP		; CvTraitEntry::GetFaithFromKills
_TEXT	ENDS
PUBLIC	?GetCityCultureBonus@CvTraitEntry@@QBEHXZ	; CvTraitEntry::GetCityCultureBonus
; Function compile flags: /Ogtpy
;	COMDAT ?GetCityCultureBonus@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetCityCultureBonus@CvTraitEntry@@QBEHXZ PROC		; CvTraitEntry::GetCityCultureBonus, COMDAT
; _this$ = ecx

; 367  : 	return m_iCityCultureBonus;

	mov	eax, DWORD PTR [ecx+360]

; 368  : }

	ret	0
?GetCityCultureBonus@CvTraitEntry@@QBEHXZ ENDP		; CvTraitEntry::GetCityCultureBonus
_TEXT	ENDS
PUBLIC	?GetCapitalThemingBonusModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetCapitalThemingBonusModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetCapitalThemingBonusModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetCapitalThemingBonusModifier@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetCapitalThemingBonusModifier, COMDAT
; _this$ = ecx

; 373  : 	return m_iCapitalThemingBonusModifier;

	mov	eax, DWORD PTR [ecx+364]

; 374  : }

	ret	0
?GetCapitalThemingBonusModifier@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetCapitalThemingBonusModifier
_TEXT	ENDS
PUBLIC	?GetPolicyCostModifier@CvTraitEntry@@QBEHXZ	; CvTraitEntry::GetPolicyCostModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetPolicyCostModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetPolicyCostModifier@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetPolicyCostModifier, COMDAT
; _this$ = ecx

; 379  : 	return m_iPolicyCostModifier;

	mov	eax, DWORD PTR [ecx+368]

; 380  : }

	ret	0
?GetPolicyCostModifier@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetPolicyCostModifier
_TEXT	ENDS
PUBLIC	?GetCityConnectionTradeRouteChange@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetCityConnectionTradeRouteChange
; Function compile flags: /Ogtpy
;	COMDAT ?GetCityConnectionTradeRouteChange@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetCityConnectionTradeRouteChange@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetCityConnectionTradeRouteChange, COMDAT
; _this$ = ecx

; 385  : 	return m_iCityConnectionTradeRouteChange;

	mov	eax, DWORD PTR [ecx+372]

; 386  : }

	ret	0
?GetCityConnectionTradeRouteChange@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetCityConnectionTradeRouteChange
_TEXT	ENDS
PUBLIC	?GetWonderProductionModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetWonderProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetWonderProductionModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetWonderProductionModifier@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetWonderProductionModifier, COMDAT
; _this$ = ecx

; 391  : 	return m_iWonderProductionModifier;

	mov	eax, DWORD PTR [ecx+376]

; 392  : }

	ret	0
?GetWonderProductionModifier@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetWonderProductionModifier
_TEXT	ENDS
PUBLIC	?GetPlunderModifier@CvTraitEntry@@QBEHXZ	; CvTraitEntry::GetPlunderModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetPlunderModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetPlunderModifier@CvTraitEntry@@QBEHXZ PROC		; CvTraitEntry::GetPlunderModifier, COMDAT
; _this$ = ecx

; 397  : 	return m_iPlunderModifier;

	mov	eax, DWORD PTR [ecx+380]

; 398  : }

	ret	0
?GetPlunderModifier@CvTraitEntry@@QBEHXZ ENDP		; CvTraitEntry::GetPlunderModifier
_TEXT	ENDS
PUBLIC	?GetImprovementMaintenanceModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetImprovementMaintenanceModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetImprovementMaintenanceModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetImprovementMaintenanceModifier@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetImprovementMaintenanceModifier, COMDAT
; _this$ = ecx

; 403  : 	return m_iImprovementMaintenanceModifier;

	mov	eax, DWORD PTR [ecx+384]

; 404  : }

	ret	0
?GetImprovementMaintenanceModifier@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetImprovementMaintenanceModifier
_TEXT	ENDS
PUBLIC	?GetGoldenAgeDurationModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetGoldenAgeDurationModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetGoldenAgeDurationModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetGoldenAgeDurationModifier@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetGoldenAgeDurationModifier, COMDAT
; _this$ = ecx

; 409  : 	return m_iGoldenAgeDurationModifier;

	mov	eax, DWORD PTR [ecx+388]

; 410  : }

	ret	0
?GetGoldenAgeDurationModifier@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetGoldenAgeDurationModifier
_TEXT	ENDS
PUBLIC	?GetGoldenAgeMoveChange@CvTraitEntry@@QBEHXZ	; CvTraitEntry::GetGoldenAgeMoveChange
; Function compile flags: /Ogtpy
;	COMDAT ?GetGoldenAgeMoveChange@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetGoldenAgeMoveChange@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetGoldenAgeMoveChange, COMDAT
; _this$ = ecx

; 415  : 	return m_iGoldenAgeMoveChange;

	mov	eax, DWORD PTR [ecx+392]

; 416  : }

	ret	0
?GetGoldenAgeMoveChange@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetGoldenAgeMoveChange
_TEXT	ENDS
PUBLIC	?GetGoldenAgeCombatModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetGoldenAgeCombatModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetGoldenAgeCombatModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetGoldenAgeCombatModifier@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetGoldenAgeCombatModifier, COMDAT
; _this$ = ecx

; 421  : 	return m_iGoldenAgeCombatModifier;

	mov	eax, DWORD PTR [ecx+396]

; 422  : }

	ret	0
?GetGoldenAgeCombatModifier@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetGoldenAgeCombatModifier
_TEXT	ENDS
PUBLIC	?GetGoldenAgeTourismModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetGoldenAgeTourismModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetGoldenAgeTourismModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetGoldenAgeTourismModifier@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetGoldenAgeTourismModifier, COMDAT
; _this$ = ecx

; 427  : 	return m_iGoldenAgeTourismModifier;

	mov	eax, DWORD PTR [ecx+400]

; 428  : }

	ret	0
?GetGoldenAgeTourismModifier@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetGoldenAgeTourismModifier
_TEXT	ENDS
PUBLIC	?GetGoldenAgeGreatArtistRateModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetGoldenAgeGreatArtistRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetGoldenAgeGreatArtistRateModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetGoldenAgeGreatArtistRateModifier@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetGoldenAgeGreatArtistRateModifier, COMDAT
; _this$ = ecx

; 433  : 	return m_iGoldenAgeGreatArtistRateModifier;

	mov	eax, DWORD PTR [ecx+404]

; 434  : }

	ret	0
?GetGoldenAgeGreatArtistRateModifier@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetGoldenAgeGreatArtistRateModifier
_TEXT	ENDS
PUBLIC	?GetGoldenAgeGreatMusicianRateModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetGoldenAgeGreatMusicianRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetGoldenAgeGreatMusicianRateModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetGoldenAgeGreatMusicianRateModifier@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetGoldenAgeGreatMusicianRateModifier, COMDAT
; _this$ = ecx

; 439  : 	return m_iGoldenAgeGreatMusicianRateModifier;

	mov	eax, DWORD PTR [ecx+408]

; 440  : }

	ret	0
?GetGoldenAgeGreatMusicianRateModifier@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetGoldenAgeGreatMusicianRateModifier
_TEXT	ENDS
PUBLIC	?GetGoldenAgeGreatWriterRateModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetGoldenAgeGreatWriterRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetGoldenAgeGreatWriterRateModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetGoldenAgeGreatWriterRateModifier@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetGoldenAgeGreatWriterRateModifier, COMDAT
; _this$ = ecx

; 445  : 	return m_iGoldenAgeGreatWriterRateModifier;

	mov	eax, DWORD PTR [ecx+412]

; 446  : }

	ret	0
?GetGoldenAgeGreatWriterRateModifier@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetGoldenAgeGreatWriterRateModifier
_TEXT	ENDS
PUBLIC	?GetExtraEmbarkMoves@CvTraitEntry@@QBEHXZ	; CvTraitEntry::GetExtraEmbarkMoves
; Function compile flags: /Ogtpy
;	COMDAT ?GetExtraEmbarkMoves@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetExtraEmbarkMoves@CvTraitEntry@@QBEHXZ PROC		; CvTraitEntry::GetExtraEmbarkMoves, COMDAT
; _this$ = ecx

; 451  : 	return m_iExtraEmbarkMoves;

	mov	eax, DWORD PTR [ecx+424]

; 452  : }

	ret	0
?GetExtraEmbarkMoves@CvTraitEntry@@QBEHXZ ENDP		; CvTraitEntry::GetExtraEmbarkMoves
_TEXT	ENDS
PUBLIC	?GetFreeUnitClassType@CvTraitEntry@@QBEHXZ	; CvTraitEntry::GetFreeUnitClassType
; Function compile flags: /Ogtpy
;	COMDAT ?GetFreeUnitClassType@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetFreeUnitClassType@CvTraitEntry@@QBEHXZ PROC		; CvTraitEntry::GetFreeUnitClassType, COMDAT
; _this$ = ecx

; 457  : 	return m_iFreeUnitClassType;

	mov	eax, DWORD PTR [ecx+428]

; 458  : }

	ret	0
?GetFreeUnitClassType@CvTraitEntry@@QBEHXZ ENDP		; CvTraitEntry::GetFreeUnitClassType
_TEXT	ENDS
PUBLIC	?GetNaturalWonderFirstFinderGold@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetNaturalWonderFirstFinderGold
; Function compile flags: /Ogtpy
;	COMDAT ?GetNaturalWonderFirstFinderGold@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetNaturalWonderFirstFinderGold@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetNaturalWonderFirstFinderGold, COMDAT
; _this$ = ecx

; 463  : 	return m_iNaturalWonderFirstFinderGold;

	mov	eax, DWORD PTR [ecx+432]

; 464  : }

	ret	0
?GetNaturalWonderFirstFinderGold@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetNaturalWonderFirstFinderGold
_TEXT	ENDS
PUBLIC	?GetNaturalWonderSubsequentFinderGold@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetNaturalWonderSubsequentFinderGold
; Function compile flags: /Ogtpy
;	COMDAT ?GetNaturalWonderSubsequentFinderGold@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetNaturalWonderSubsequentFinderGold@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetNaturalWonderSubsequentFinderGold, COMDAT
; _this$ = ecx

; 469  : 	return m_iNaturalWonderSubsequentFinderGold;

	mov	eax, DWORD PTR [ecx+436]

; 470  : }

	ret	0
?GetNaturalWonderSubsequentFinderGold@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetNaturalWonderSubsequentFinderGold
_TEXT	ENDS
PUBLIC	?GetNaturalWonderFirstFinderFaith@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetNaturalWonderFirstFinderFaith
; Function compile flags: /Ogtpy
;	COMDAT ?GetNaturalWonderFirstFinderFaith@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetNaturalWonderFirstFinderFaith@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetNaturalWonderFirstFinderFaith, COMDAT
; _this$ = ecx

; 477  : 	return m_iNaturalWonderFirstFinderFaith;

	mov	eax, DWORD PTR [ecx+440]

; 478  : }

	ret	0
?GetNaturalWonderFirstFinderFaith@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetNaturalWonderFirstFinderFaith
_TEXT	ENDS
PUBLIC	?GetNaturalWonderSubsequentFinderFaith@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetNaturalWonderSubsequentFinderFaith
; Function compile flags: /Ogtpy
;	COMDAT ?GetNaturalWonderSubsequentFinderFaith@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetNaturalWonderSubsequentFinderFaith@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetNaturalWonderSubsequentFinderFaith, COMDAT
; _this$ = ecx

; 483  : 	return m_iNaturalWonderSubsequentFinderFaith;

	mov	eax, DWORD PTR [ecx+444]

; 484  : }

	ret	0
?GetNaturalWonderSubsequentFinderFaith@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetNaturalWonderSubsequentFinderFaith
_TEXT	ENDS
PUBLIC	?GetNaturalWonderYieldModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetNaturalWonderYieldModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetNaturalWonderYieldModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetNaturalWonderYieldModifier@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetNaturalWonderYieldModifier, COMDAT
; _this$ = ecx

; 491  : 	return m_iNaturalWonderYieldModifier;

	mov	eax, DWORD PTR [ecx+448]

; 492  : }

	ret	0
?GetNaturalWonderYieldModifier@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetNaturalWonderYieldModifier
_TEXT	ENDS
PUBLIC	?GetNaturalWonderHappinessModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetNaturalWonderHappinessModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetNaturalWonderHappinessModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetNaturalWonderHappinessModifier@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetNaturalWonderHappinessModifier, COMDAT
; _this$ = ecx

; 497  : 	return m_iNaturalWonderHappinessModifier;

	mov	eax, DWORD PTR [ecx+452]

; 498  : }

	ret	0
?GetNaturalWonderHappinessModifier@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetNaturalWonderHappinessModifier
_TEXT	ENDS
PUBLIC	?GetNearbyImprovementCombatBonus@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetNearbyImprovementCombatBonus
; Function compile flags: /Ogtpy
;	COMDAT ?GetNearbyImprovementCombatBonus@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetNearbyImprovementCombatBonus@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetNearbyImprovementCombatBonus, COMDAT
; _this$ = ecx

; 503  : 	return m_iNearbyImprovementCombatBonus;

	mov	eax, DWORD PTR [ecx+456]

; 504  : }

	ret	0
?GetNearbyImprovementCombatBonus@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetNearbyImprovementCombatBonus
_TEXT	ENDS
PUBLIC	?GetNearbyImprovementBonusRange@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetNearbyImprovementBonusRange
; Function compile flags: /Ogtpy
;	COMDAT ?GetNearbyImprovementBonusRange@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetNearbyImprovementBonusRange@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetNearbyImprovementBonusRange, COMDAT
; _this$ = ecx

; 509  : 	return m_iNearbyImprovementBonusRange;

	mov	eax, DWORD PTR [ecx+460]

; 510  : }

	ret	0
?GetNearbyImprovementBonusRange@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetNearbyImprovementBonusRange
_TEXT	ENDS
PUBLIC	?GetCultureBuildingYieldChange@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetCultureBuildingYieldChange
; Function compile flags: /Ogtpy
;	COMDAT ?GetCultureBuildingYieldChange@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetCultureBuildingYieldChange@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetCultureBuildingYieldChange, COMDAT
; _this$ = ecx

; 515  : 	return m_iCultureBuildingYieldChange;

	mov	eax, DWORD PTR [ecx+464]

; 516  : }

	ret	0
?GetCultureBuildingYieldChange@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetCultureBuildingYieldChange
_TEXT	ENDS
PUBLIC	?GetCombatBonusVsHigherTech@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetCombatBonusVsHigherTech
; Function compile flags: /Ogtpy
;	COMDAT ?GetCombatBonusVsHigherTech@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetCombatBonusVsHigherTech@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetCombatBonusVsHigherTech, COMDAT
; _this$ = ecx

; 521  : 	return m_iCombatBonusVsHigherTech;

	mov	eax, DWORD PTR [ecx+468]

; 522  : }

	ret	0
?GetCombatBonusVsHigherTech@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetCombatBonusVsHigherTech
_TEXT	ENDS
PUBLIC	?_Swap_aux@_Container_base@std@@QAEXAAV12@@Z	; std::_Container_base::_Swap_aux
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ?_Swap_aux@_Container_base@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Swap_aux@_Container_base@std@@QAEXAAV12@@Z PROC	; std::_Container_base::_Swap_aux, COMDAT
; _this$ = ecx

; 602  : 		// Do nothing: we don't have an aux object.
; 603  : 		}

	ret	4
?_Swap_aux@_Container_base@std@@QAEXAAV12@@Z ENDP	; std::_Container_base::_Swap_aux
_TEXT	ENDS
PUBLIC	?GetCombatBonusVsLargerCiv@CvTraitEntry@@QBEHXZ	; CvTraitEntry::GetCombatBonusVsLargerCiv
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
;	COMDAT ?GetCombatBonusVsLargerCiv@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetCombatBonusVsLargerCiv@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetCombatBonusVsLargerCiv, COMDAT
; _this$ = ecx

; 527  : 	return m_iCombatBonusVsLargerCiv;

	mov	eax, DWORD PTR [ecx+472]

; 528  : }

	ret	0
?GetCombatBonusVsLargerCiv@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetCombatBonusVsLargerCiv
_TEXT	ENDS
PUBLIC	?GetRazeSpeedModifier@CvTraitEntry@@QBEHXZ	; CvTraitEntry::GetRazeSpeedModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetRazeSpeedModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetRazeSpeedModifier@CvTraitEntry@@QBEHXZ PROC		; CvTraitEntry::GetRazeSpeedModifier, COMDAT
; _this$ = ecx

; 533  : 	return m_iRazeSpeedModifier;

	mov	eax, DWORD PTR [ecx+484]

; 534  : }

	ret	0
?GetRazeSpeedModifier@CvTraitEntry@@QBEHXZ ENDP		; CvTraitEntry::GetRazeSpeedModifier
_TEXT	ENDS
PUBLIC	?GetDOFGreatPersonModifier@CvTraitEntry@@QBEHXZ	; CvTraitEntry::GetDOFGreatPersonModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetDOFGreatPersonModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetDOFGreatPersonModifier@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetDOFGreatPersonModifier, COMDAT
; _this$ = ecx

; 539  : 	return m_iDOFGreatPersonModifier;

	mov	eax, DWORD PTR [ecx+488]

; 540  : }

	ret	0
?GetDOFGreatPersonModifier@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetDOFGreatPersonModifier
_TEXT	ENDS
PUBLIC	?GetLandUnitMaintenanceModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetLandUnitMaintenanceModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetLandUnitMaintenanceModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetLandUnitMaintenanceModifier@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetLandUnitMaintenanceModifier, COMDAT
; _this$ = ecx

; 545  : 	return m_iLandUnitMaintenanceModifier;

	mov	eax, DWORD PTR [ecx+476]

; 546  : }

	ret	0
?GetLandUnitMaintenanceModifier@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetLandUnitMaintenanceModifier
_TEXT	ENDS
PUBLIC	?GetNavalUnitMaintenanceModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetNavalUnitMaintenanceModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetNavalUnitMaintenanceModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetNavalUnitMaintenanceModifier@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetNavalUnitMaintenanceModifier, COMDAT
; _this$ = ecx

; 551  : 	return m_iNavalUnitMaintenanceModifier;

	mov	eax, DWORD PTR [ecx+480]

; 552  : }

	ret	0
?GetNavalUnitMaintenanceModifier@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetNavalUnitMaintenanceModifier
_TEXT	ENDS
PUBLIC	?GetLuxuryHappinessRetention@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetLuxuryHappinessRetention
; Function compile flags: /Ogtpy
;	COMDAT ?GetLuxuryHappinessRetention@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetLuxuryHappinessRetention@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetLuxuryHappinessRetention, COMDAT
; _this$ = ecx

; 557  : 	return m_iLuxuryHappinessRetention;

	mov	eax, DWORD PTR [ecx+492]

; 558  : }

	ret	0
?GetLuxuryHappinessRetention@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetLuxuryHappinessRetention
_TEXT	ENDS
PUBLIC	?GetExtraHappinessPerLuxury@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetExtraHappinessPerLuxury
; Function compile flags: /Ogtpy
;	COMDAT ?GetExtraHappinessPerLuxury@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetExtraHappinessPerLuxury@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetExtraHappinessPerLuxury, COMDAT
; _this$ = ecx

; 564  : 	return m_iExtraHappinessPerLuxury;

	mov	eax, DWORD PTR [ecx+496]

; 565  : }

	ret	0
?GetExtraHappinessPerLuxury@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetExtraHappinessPerLuxury
_TEXT	ENDS
PUBLIC	?GetExtraSpies@CvTraitEntry@@QBEHXZ		; CvTraitEntry::GetExtraSpies
; Function compile flags: /Ogtpy
;	COMDAT ?GetExtraSpies@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetExtraSpies@CvTraitEntry@@QBEHXZ PROC		; CvTraitEntry::GetExtraSpies, COMDAT
; _this$ = ecx

; 572  : 	return m_iExtraSpies;

	mov	eax, DWORD PTR [ecx+500]

; 573  : }

	ret	0
?GetExtraSpies@CvTraitEntry@@QBEHXZ ENDP		; CvTraitEntry::GetExtraSpies
_TEXT	ENDS
PUBLIC	?GetHappinessPerReligion@CvTraitEntry@@QBEHXZ	; CvTraitEntry::GetHappinessPerReligion
; Function compile flags: /Ogtpy
;	COMDAT ?GetHappinessPerReligion@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetHappinessPerReligion@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetHappinessPerReligion, COMDAT
; _this$ = ecx

; 579  : 	return m_iHappinessPerReligion;

	mov	eax, DWORD PTR [ecx+504]

; 580  : }

	ret	0
?GetHappinessPerReligion@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetHappinessPerReligion
_TEXT	ENDS
PUBLIC	?GetUnresearchedTechBonusFromKills@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetUnresearchedTechBonusFromKills
; Function compile flags: /Ogtpy
;	COMDAT ?GetUnresearchedTechBonusFromKills@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetUnresearchedTechBonusFromKills@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetUnresearchedTechBonusFromKills, COMDAT
; _this$ = ecx

; 586  : 	return m_iUnresearchedTechBonusFromKills;

	mov	eax, DWORD PTR [ecx+508]

; 587  : }

	ret	0
?GetUnresearchedTechBonusFromKills@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetUnresearchedTechBonusFromKills
_TEXT	ENDS
PUBLIC	?GetExtraFoundedCityTerritoryClaimRange@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetExtraFoundedCityTerritoryClaimRange
; Function compile flags: /Ogtpy
;	COMDAT ?GetExtraFoundedCityTerritoryClaimRange@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetExtraFoundedCityTerritoryClaimRange@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetExtraFoundedCityTerritoryClaimRange, COMDAT
; _this$ = ecx

; 591  : 	return m_iExtraFoundedCityTerritoryClaimRange;

	mov	eax, DWORD PTR [ecx+512]

; 592  : }

	ret	0
?GetExtraFoundedCityTerritoryClaimRange@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetExtraFoundedCityTerritoryClaimRange
_TEXT	ENDS
PUBLIC	?GetFreeSocialPoliciesPerEra@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetFreeSocialPoliciesPerEra
; Function compile flags: /Ogtpy
;	COMDAT ?GetFreeSocialPoliciesPerEra@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetFreeSocialPoliciesPerEra@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetFreeSocialPoliciesPerEra, COMDAT
; _this$ = ecx

; 597  : 	return m_iFreeSocialPoliciesPerEra;

	mov	eax, DWORD PTR [ecx+516]

; 598  : }

	ret	0
?GetFreeSocialPoliciesPerEra@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetFreeSocialPoliciesPerEra
_TEXT	ENDS
PUBLIC	?GetNumTradeRoutesModifier@CvTraitEntry@@QBEHXZ	; CvTraitEntry::GetNumTradeRoutesModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumTradeRoutesModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetNumTradeRoutesModifier@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetNumTradeRoutesModifier, COMDAT
; _this$ = ecx

; 602  : 	return m_iNumTradeRoutesModifier;

	mov	eax, DWORD PTR [ecx+520]

; 603  : }

	ret	0
?GetNumTradeRoutesModifier@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetNumTradeRoutesModifier
_TEXT	ENDS
PUBLIC	?GetTradeRouteResourceModifier@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetTradeRouteResourceModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetTradeRouteResourceModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetTradeRouteResourceModifier@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetTradeRouteResourceModifier, COMDAT
; _this$ = ecx

; 607  : 	return m_iTradeRouteResourceModifier;

	mov	eax, DWORD PTR [ecx+524]

; 608  : }

	ret	0
?GetTradeRouteResourceModifier@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetTradeRouteResourceModifier
_TEXT	ENDS
PUBLIC	?GetUniqueLuxuryCities@CvTraitEntry@@QBEHXZ	; CvTraitEntry::GetUniqueLuxuryCities
; Function compile flags: /Ogtpy
;	COMDAT ?GetUniqueLuxuryCities@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetUniqueLuxuryCities@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetUniqueLuxuryCities, COMDAT
; _this$ = ecx

; 612  : 	return m_iUniqueLuxuryCities;

	mov	eax, DWORD PTR [ecx+528]

; 613  : }

	ret	0
?GetUniqueLuxuryCities@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetUniqueLuxuryCities
_TEXT	ENDS
PUBLIC	?GetUniqueLuxuryQuantity@CvTraitEntry@@QBEHXZ	; CvTraitEntry::GetUniqueLuxuryQuantity
; Function compile flags: /Ogtpy
;	COMDAT ?GetUniqueLuxuryQuantity@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetUniqueLuxuryQuantity@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetUniqueLuxuryQuantity, COMDAT
; _this$ = ecx

; 617  : 	return m_iUniqueLuxuryQuantity;

	mov	eax, DWORD PTR [ecx+532]

; 618  : }

	ret	0
?GetUniqueLuxuryQuantity@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetUniqueLuxuryQuantity
_TEXT	ENDS
PUBLIC	?GetWorkerSpeedModifier@CvTraitEntry@@QBEHXZ	; CvTraitEntry::GetWorkerSpeedModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetWorkerSpeedModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetWorkerSpeedModifier@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetWorkerSpeedModifier, COMDAT
; _this$ = ecx

; 622  : 	return m_iWorkerSpeedModifier;

	mov	eax, DWORD PTR [ecx+536]

; 623  : }

	ret	0
?GetWorkerSpeedModifier@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetWorkerSpeedModifier
_TEXT	ENDS
PUBLIC	?GetAfraidMinorPerTurnInfluence@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetAfraidMinorPerTurnInfluence
; Function compile flags: /Ogtpy
;	COMDAT ?GetAfraidMinorPerTurnInfluence@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetAfraidMinorPerTurnInfluence@CvTraitEntry@@QBEHXZ PROC ; CvTraitEntry::GetAfraidMinorPerTurnInfluence, COMDAT
; _this$ = ecx

; 627  : 	return m_iAfraidMinorPerTurnInfluence;

	mov	eax, DWORD PTR [ecx+540]

; 628  : }

	ret	0
?GetAfraidMinorPerTurnInfluence@CvTraitEntry@@QBEHXZ ENDP ; CvTraitEntry::GetAfraidMinorPerTurnInfluence
_TEXT	ENDS
PUBLIC	?GetLandTradeRouteRangeBonus@CvTraitEntry@@QBEHXZ ; CvTraitEntry::GetLandTradeRouteRangeBonus
; Function compile flags: /Ogtpy
;	COMDAT ?GetLandTradeRouteRangeBonus@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetLandTradeRouteRangeBonus@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetLandTradeRouteRangeBonus, COMDAT
; _this$ = ecx

; 632  : 	return m_iLandTradeRouteRangeBonus;

	mov	eax, DWORD PTR [ecx+544]

; 633  : }

	ret	0
?GetLandTradeRouteRangeBonus@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetLandTradeRouteRangeBonus
_TEXT	ENDS
PUBLIC	?GetTradeReligionModifier@CvTraitEntry@@QBEHXZ	; CvTraitEntry::GetTradeReligionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetTradeReligionModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetTradeReligionModifier@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetTradeReligionModifier, COMDAT
; _this$ = ecx

; 637  : 	return m_iTradeReligionModifier;

	mov	eax, DWORD PTR [ecx+548]

; 638  : }

	ret	0
?GetTradeReligionModifier@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetTradeReligionModifier
_TEXT	ENDS
PUBLIC	?GetTradeBuildingModifier@CvTraitEntry@@QBEHXZ	; CvTraitEntry::GetTradeBuildingModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetTradeBuildingModifier@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetTradeBuildingModifier@CvTraitEntry@@QBEHXZ PROC	; CvTraitEntry::GetTradeBuildingModifier, COMDAT
; _this$ = ecx

; 642  : 	return m_iTradeBuildingModifier;

	mov	eax, DWORD PTR [ecx+552]

; 643  : }

	ret	0
?GetTradeBuildingModifier@CvTraitEntry@@QBEHXZ ENDP	; CvTraitEntry::GetTradeBuildingModifier
_TEXT	ENDS
PUBLIC	?GetFreeBuildingPrereqTech@CvTraitEntry@@QBE?AW4TechTypes@@XZ ; CvTraitEntry::GetFreeBuildingPrereqTech
; Function compile flags: /Ogtpy
;	COMDAT ?GetFreeBuildingPrereqTech@CvTraitEntry@@QBE?AW4TechTypes@@XZ
_TEXT	SEGMENT
?GetFreeBuildingPrereqTech@CvTraitEntry@@QBE?AW4TechTypes@@XZ PROC ; CvTraitEntry::GetFreeBuildingPrereqTech, COMDAT
; _this$ = ecx

; 649  : 	return m_eFreeBuildingPrereqTech;

	mov	eax, DWORD PTR [ecx+572]

; 650  : }

	ret	0
?GetFreeBuildingPrereqTech@CvTraitEntry@@QBE?AW4TechTypes@@XZ ENDP ; CvTraitEntry::GetFreeBuildingPrereqTech
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 371  : 		{	// construct from message string

	push	esi
	lea	eax, DWORD PTR __Message$[esp]
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 372  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	?GetCapitalFreeBuildingPrereqTech@CvTraitEntry@@QBE?AW4TechTypes@@XZ ; CvTraitEntry::GetCapitalFreeBuildingPrereqTech
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
;	COMDAT ?GetCapitalFreeBuildingPrereqTech@CvTraitEntry@@QBE?AW4TechTypes@@XZ
_TEXT	SEGMENT
?GetCapitalFreeBuildingPrereqTech@CvTraitEntry@@QBE?AW4TechTypes@@XZ PROC ; CvTraitEntry::GetCapitalFreeBuildingPrereqTech, COMDAT
; _this$ = ecx

; 653  : 	return m_eCapitalFreeBuildingPrereqTech;

	mov	eax, DWORD PTR [ecx+576]

; 654  : }

	ret	0
?GetCapitalFreeBuildingPrereqTech@CvTraitEntry@@QBE?AW4TechTypes@@XZ ENDP ; CvTraitEntry::GetCapitalFreeBuildingPrereqTech
_TEXT	ENDS
PUBLIC	?GetFreeUnitPrereqTech@CvTraitEntry@@QBE?AW4TechTypes@@XZ ; CvTraitEntry::GetFreeUnitPrereqTech
; Function compile flags: /Ogtpy
;	COMDAT ?GetFreeUnitPrereqTech@CvTraitEntry@@QBE?AW4TechTypes@@XZ
_TEXT	SEGMENT
?GetFreeUnitPrereqTech@CvTraitEntry@@QBE?AW4TechTypes@@XZ PROC ; CvTraitEntry::GetFreeUnitPrereqTech, COMDAT
; _this$ = ecx

; 659  : 	return m_eFreeUnitPrereqTech;

	mov	eax, DWORD PTR [ecx+556]

; 660  : }

	ret	0
?GetFreeUnitPrereqTech@CvTraitEntry@@QBE?AW4TechTypes@@XZ ENDP ; CvTraitEntry::GetFreeUnitPrereqTech
_TEXT	ENDS
PUBLIC	?GetCombatBonusImprovement@CvTraitEntry@@QBE?AW4ImprovementTypes@@XZ ; CvTraitEntry::GetCombatBonusImprovement
; Function compile flags: /Ogtpy
;	COMDAT ?GetCombatBonusImprovement@CvTraitEntry@@QBE?AW4ImprovementTypes@@XZ
_TEXT	SEGMENT
?GetCombatBonusImprovement@CvTraitEntry@@QBE?AW4ImprovementTypes@@XZ PROC ; CvTraitEntry::GetCombatBonusImprovement, COMDAT
; _this$ = ecx

; 665  : 	return m_eCombatBonusImprovement;

	mov	eax, DWORD PTR [ecx+560]

; 666  : }

	ret	0
?GetCombatBonusImprovement@CvTraitEntry@@QBE?AW4ImprovementTypes@@XZ ENDP ; CvTraitEntry::GetCombatBonusImprovement
_TEXT	ENDS
PUBLIC	?GetFreeBuilding@CvTraitEntry@@QBE?AW4BuildingTypes@@XZ ; CvTraitEntry::GetFreeBuilding
; Function compile flags: /Ogtpy
;	COMDAT ?GetFreeBuilding@CvTraitEntry@@QBE?AW4BuildingTypes@@XZ
_TEXT	SEGMENT
?GetFreeBuilding@CvTraitEntry@@QBE?AW4BuildingTypes@@XZ PROC ; CvTraitEntry::GetFreeBuilding, COMDAT
; _this$ = ecx

; 671  : 	return m_eFreeBuilding;

	mov	eax, DWORD PTR [ecx+564]

; 672  : }

	ret	0
?GetFreeBuilding@CvTraitEntry@@QBE?AW4BuildingTypes@@XZ ENDP ; CvTraitEntry::GetFreeBuilding
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 380  : 		{	// destroy the object

	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 381  : 		}

	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
PUBLIC	?GetFreeCapitalBuilding@CvTraitEntry@@QBE?AW4BuildingTypes@@XZ ; CvTraitEntry::GetFreeCapitalBuilding
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
;	COMDAT ?GetFreeCapitalBuilding@CvTraitEntry@@QBE?AW4BuildingTypes@@XZ
_TEXT	SEGMENT
?GetFreeCapitalBuilding@CvTraitEntry@@QBE?AW4BuildingTypes@@XZ PROC ; CvTraitEntry::GetFreeCapitalBuilding, COMDAT
; _this$ = ecx

; 677  : 	return m_eFreeCapitalBuilding;

	mov	eax, DWORD PTR [ecx+568]

; 678  : }

	ret	0
?GetFreeCapitalBuilding@CvTraitEntry@@QBE?AW4BuildingTypes@@XZ ENDP ; CvTraitEntry::GetFreeCapitalBuilding
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtpy
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?GetFreeBuildingOnConquest@CvTraitEntry@@QBE?AW4BuildingTypes@@XZ ; CvTraitEntry::GetFreeBuildingOnConquest
; Function compile flags: /Ogtpy
;	COMDAT ?GetFreeBuildingOnConquest@CvTraitEntry@@QBE?AW4BuildingTypes@@XZ
_TEXT	SEGMENT
?GetFreeBuildingOnConquest@CvTraitEntry@@QBE?AW4BuildingTypes@@XZ PROC ; CvTraitEntry::GetFreeBuildingOnConquest, COMDAT
; _this$ = ecx

; 683  : 	return m_eFreeBuildingOnConquest;

	mov	eax, DWORD PTR [ecx+580]

; 684  : }

	ret	0
?GetFreeBuildingOnConquest@CvTraitEntry@@QBE?AW4BuildingTypes@@XZ ENDP ; CvTraitEntry::GetFreeBuildingOnConquest
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[esp-4]

; 60   : 	}

	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	?IsFightWellDamaged@CvTraitEntry@@QBE_NXZ	; CvTraitEntry::IsFightWellDamaged
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
;	COMDAT ?IsFightWellDamaged@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsFightWellDamaged@CvTraitEntry@@QBE_NXZ PROC		; CvTraitEntry::IsFightWellDamaged, COMDAT
; _this$ = ecx

; 689  : 	return m_bFightWellDamaged;

	mov	al, BYTE PTR [ecx+584]

; 690  : }

	ret	0
?IsFightWellDamaged@CvTraitEntry@@QBE_NXZ ENDP		; CvTraitEntry::IsFightWellDamaged
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	}

	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?IsMoveFriendlyWoodsAsRoad@CvTraitEntry@@QBE_NXZ ; CvTraitEntry::IsMoveFriendlyWoodsAsRoad
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
;	COMDAT ?IsMoveFriendlyWoodsAsRoad@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsMoveFriendlyWoodsAsRoad@CvTraitEntry@@QBE_NXZ PROC	; CvTraitEntry::IsMoveFriendlyWoodsAsRoad, COMDAT
; _this$ = ecx

; 695  : 	return m_bMoveFriendlyWoodsAsRoad;

	mov	al, BYTE PTR [ecx+585]

; 696  : }

	ret	0
?IsMoveFriendlyWoodsAsRoad@CvTraitEntry@@QBE_NXZ ENDP	; CvTraitEntry::IsMoveFriendlyWoodsAsRoad
_TEXT	ENDS
PUBLIC	?IsFasterAlongRiver@CvTraitEntry@@QBE_NXZ	; CvTraitEntry::IsFasterAlongRiver
; Function compile flags: /Ogtpy
;	COMDAT ?IsFasterAlongRiver@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsFasterAlongRiver@CvTraitEntry@@QBE_NXZ PROC		; CvTraitEntry::IsFasterAlongRiver, COMDAT
; _this$ = ecx

; 701  : 	return m_bFasterAlongRiver;

	mov	al, BYTE PTR [ecx+586]

; 702  : }

	ret	0
?IsFasterAlongRiver@CvTraitEntry@@QBE_NXZ ENDP		; CvTraitEntry::IsFasterAlongRiver
_TEXT	ENDS
PUBLIC	?IsFasterInHills@CvTraitEntry@@QBE_NXZ		; CvTraitEntry::IsFasterInHills
; Function compile flags: /Ogtpy
;	COMDAT ?IsFasterInHills@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsFasterInHills@CvTraitEntry@@QBE_NXZ PROC		; CvTraitEntry::IsFasterInHills, COMDAT
; _this$ = ecx

; 707  : 	return m_bFasterInHills;

	mov	al, BYTE PTR [ecx+587]

; 708  : }

	ret	0
?IsFasterInHills@CvTraitEntry@@QBE_NXZ ENDP		; CvTraitEntry::IsFasterInHills
_TEXT	ENDS
PUBLIC	?IsEmbarkedAllWater@CvTraitEntry@@QBE_NXZ	; CvTraitEntry::IsEmbarkedAllWater
; Function compile flags: /Ogtpy
;	COMDAT ?IsEmbarkedAllWater@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsEmbarkedAllWater@CvTraitEntry@@QBE_NXZ PROC		; CvTraitEntry::IsEmbarkedAllWater, COMDAT
; _this$ = ecx

; 713  : 	return m_bEmbarkedAllWater;

	mov	al, BYTE PTR [ecx+588]

; 714  : }

	ret	0
?IsEmbarkedAllWater@CvTraitEntry@@QBE_NXZ ENDP		; CvTraitEntry::IsEmbarkedAllWater
_TEXT	ENDS
PUBLIC	?IsEmbarkedToLandFlatCost@CvTraitEntry@@QBE_NXZ	; CvTraitEntry::IsEmbarkedToLandFlatCost
; Function compile flags: /Ogtpy
;	COMDAT ?IsEmbarkedToLandFlatCost@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsEmbarkedToLandFlatCost@CvTraitEntry@@QBE_NXZ PROC	; CvTraitEntry::IsEmbarkedToLandFlatCost, COMDAT
; _this$ = ecx

; 719  : 	return m_bEmbarkedToLandFlatCost;

	mov	al, BYTE PTR [ecx+589]

; 720  : }

	ret	0
?IsEmbarkedToLandFlatCost@CvTraitEntry@@QBE_NXZ ENDP	; CvTraitEntry::IsEmbarkedToLandFlatCost
_TEXT	ENDS
PUBLIC	?IsNoHillsImprovementMaintenance@CvTraitEntry@@QBE_NXZ ; CvTraitEntry::IsNoHillsImprovementMaintenance
; Function compile flags: /Ogtpy
;	COMDAT ?IsNoHillsImprovementMaintenance@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsNoHillsImprovementMaintenance@CvTraitEntry@@QBE_NXZ PROC ; CvTraitEntry::IsNoHillsImprovementMaintenance, COMDAT
; _this$ = ecx

; 725  : 	return m_bNoHillsImprovementMaintenance;

	mov	al, BYTE PTR [ecx+590]

; 726  : }

	ret	0
?IsNoHillsImprovementMaintenance@CvTraitEntry@@QBE_NXZ ENDP ; CvTraitEntry::IsNoHillsImprovementMaintenance
_TEXT	ENDS
PUBLIC	?IsTechBoostFromCapitalScienceBuildings@CvTraitEntry@@QBE_NXZ ; CvTraitEntry::IsTechBoostFromCapitalScienceBuildings
; Function compile flags: /Ogtpy
;	COMDAT ?IsTechBoostFromCapitalScienceBuildings@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsTechBoostFromCapitalScienceBuildings@CvTraitEntry@@QBE_NXZ PROC ; CvTraitEntry::IsTechBoostFromCapitalScienceBuildings, COMDAT
; _this$ = ecx

; 731  : 	return m_bTechBoostFromCapitalScienceBuildings;

	mov	al, BYTE PTR [ecx+591]

; 732  : }

	ret	0
?IsTechBoostFromCapitalScienceBuildings@CvTraitEntry@@QBE_NXZ ENDP ; CvTraitEntry::IsTechBoostFromCapitalScienceBuildings
_TEXT	ENDS
PUBLIC	?IsStaysAliveZeroCities@CvTraitEntry@@QBE_NXZ	; CvTraitEntry::IsStaysAliveZeroCities
; Function compile flags: /Ogtpy
;	COMDAT ?IsStaysAliveZeroCities@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsStaysAliveZeroCities@CvTraitEntry@@QBE_NXZ PROC	; CvTraitEntry::IsStaysAliveZeroCities, COMDAT
; _this$ = ecx

; 737  : 	return m_bStaysAliveZeroCities;

	mov	al, BYTE PTR [ecx+592]

; 738  : }

	ret	0
?IsStaysAliveZeroCities@CvTraitEntry@@QBE_NXZ ENDP	; CvTraitEntry::IsStaysAliveZeroCities
_TEXT	ENDS
PUBLIC	?IsFaithFromUnimprovedForest@CvTraitEntry@@QBE_NXZ ; CvTraitEntry::IsFaithFromUnimprovedForest
; Function compile flags: /Ogtpy
;	COMDAT ?IsFaithFromUnimprovedForest@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsFaithFromUnimprovedForest@CvTraitEntry@@QBE_NXZ PROC	; CvTraitEntry::IsFaithFromUnimprovedForest, COMDAT
; _this$ = ecx

; 743  : 	return m_bFaithFromUnimprovedForest;

	mov	al, BYTE PTR [ecx+593]

; 744  : }

	ret	0
?IsFaithFromUnimprovedForest@CvTraitEntry@@QBE_NXZ ENDP	; CvTraitEntry::IsFaithFromUnimprovedForest
_TEXT	ENDS
PUBLIC	?IsSeaTradeRoutesArePlunderImmune@CvTraitEntry@@QBE_NXZ ; CvTraitEntry::IsSeaTradeRoutesArePlunderImmune
; Function compile flags: /Ogtpy
;	COMDAT ?IsSeaTradeRoutesArePlunderImmune@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsSeaTradeRoutesArePlunderImmune@CvTraitEntry@@QBE_NXZ PROC ; CvTraitEntry::IsSeaTradeRoutesArePlunderImmune, COMDAT
; _this$ = ecx

; 750  : 	return m_bSeaTradeRoutesArePlunderImmune;

	mov	al, BYTE PTR [ecx+594]

; 751  : }

	ret	0
?IsSeaTradeRoutesArePlunderImmune@CvTraitEntry@@QBE_NXZ ENDP ; CvTraitEntry::IsSeaTradeRoutesArePlunderImmune
_TEXT	ENDS
PUBLIC	?IsEarnsGreatPersonOnSlotOrGuild@CvTraitEntry@@QBE_NXZ ; CvTraitEntry::IsEarnsGreatPersonOnSlotOrGuild
; Function compile flags: /Ogtpy
;	COMDAT ?IsEarnsGreatPersonOnSlotOrGuild@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsEarnsGreatPersonOnSlotOrGuild@CvTraitEntry@@QBE_NXZ PROC ; CvTraitEntry::IsEarnsGreatPersonOnSlotOrGuild, COMDAT
; _this$ = ecx

; 758  : 	return m_bEarnsGreatPersonOnSlotOrGuild;

	mov	al, BYTE PTR [ecx+595]

; 759  : }

	ret	0
?IsEarnsGreatPersonOnSlotOrGuild@CvTraitEntry@@QBE_NXZ ENDP ; CvTraitEntry::IsEarnsGreatPersonOnSlotOrGuild
_TEXT	ENDS
PUBLIC	?IsHasBuiltWritersGuild@CvTraitEntry@@QBE_NXZ	; CvTraitEntry::IsHasBuiltWritersGuild
; Function compile flags: /Ogtpy
;	COMDAT ?IsHasBuiltWritersGuild@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsHasBuiltWritersGuild@CvTraitEntry@@QBE_NXZ PROC	; CvTraitEntry::IsHasBuiltWritersGuild, COMDAT
; _this$ = ecx

; 763  : 	return m_bHasBuiltWritersGuild;

	mov	al, BYTE PTR [ecx+596]

; 764  : };

	ret	0
?IsHasBuiltWritersGuild@CvTraitEntry@@QBE_NXZ ENDP	; CvTraitEntry::IsHasBuiltWritersGuild
_TEXT	ENDS
PUBLIC	?SetHasBuiltWritersGuild@CvTraitEntry@@QAEX_N@Z	; CvTraitEntry::SetHasBuiltWritersGuild
; Function compile flags: /Ogtpy
;	COMDAT ?SetHasBuiltWritersGuild@CvTraitEntry@@QAEX_N@Z
_TEXT	SEGMENT
_hasBuilt$ = 8						; size = 1
?SetHasBuiltWritersGuild@CvTraitEntry@@QAEX_N@Z PROC	; CvTraitEntry::SetHasBuiltWritersGuild, COMDAT
; _this$ = ecx

; 768  : 	m_bHasBuiltWritersGuild = hasBuilt;

	mov	al, BYTE PTR _hasBuilt$[esp-4]
	mov	BYTE PTR [ecx+596], al

; 769  : };

	ret	4
?SetHasBuiltWritersGuild@CvTraitEntry@@QAEX_N@Z ENDP	; CvTraitEntry::SetHasBuiltWritersGuild
_TEXT	ENDS
PUBLIC	?IsHasBuiltArtistsGuild@CvTraitEntry@@QBE_NXZ	; CvTraitEntry::IsHasBuiltArtistsGuild
; Function compile flags: /Ogtpy
;	COMDAT ?IsHasBuiltArtistsGuild@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsHasBuiltArtistsGuild@CvTraitEntry@@QBE_NXZ PROC	; CvTraitEntry::IsHasBuiltArtistsGuild, COMDAT
; _this$ = ecx

; 773  : 	return m_bHasBuiltArtistsGuild;

	mov	al, BYTE PTR [ecx+597]

; 774  : };

	ret	0
?IsHasBuiltArtistsGuild@CvTraitEntry@@QBE_NXZ ENDP	; CvTraitEntry::IsHasBuiltArtistsGuild
_TEXT	ENDS
PUBLIC	?SetHasBuiltArtistsGuild@CvTraitEntry@@QAEX_N@Z	; CvTraitEntry::SetHasBuiltArtistsGuild
; Function compile flags: /Ogtpy
;	COMDAT ?SetHasBuiltArtistsGuild@CvTraitEntry@@QAEX_N@Z
_TEXT	SEGMENT
_hasBuilt$ = 8						; size = 1
?SetHasBuiltArtistsGuild@CvTraitEntry@@QAEX_N@Z PROC	; CvTraitEntry::SetHasBuiltArtistsGuild, COMDAT
; _this$ = ecx

; 778  : 	m_bHasBuiltArtistsGuild = hasBuilt;

	mov	al, BYTE PTR _hasBuilt$[esp-4]
	mov	BYTE PTR [ecx+597], al

; 779  : };

	ret	4
?SetHasBuiltArtistsGuild@CvTraitEntry@@QAEX_N@Z ENDP	; CvTraitEntry::SetHasBuiltArtistsGuild
_TEXT	ENDS
PUBLIC	?IsHasBuiltMusiciansGuild@CvTraitEntry@@QBE_NXZ	; CvTraitEntry::IsHasBuiltMusiciansGuild
; Function compile flags: /Ogtpy
;	COMDAT ?IsHasBuiltMusiciansGuild@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsHasBuiltMusiciansGuild@CvTraitEntry@@QBE_NXZ PROC	; CvTraitEntry::IsHasBuiltMusiciansGuild, COMDAT
; _this$ = ecx

; 783  : 	return m_bHasBuiltMusiciansGuild;

	mov	al, BYTE PTR [ecx+598]

; 784  : };

	ret	0
?IsHasBuiltMusiciansGuild@CvTraitEntry@@QBE_NXZ ENDP	; CvTraitEntry::IsHasBuiltMusiciansGuild
_TEXT	ENDS
PUBLIC	?SetHasBuiltMusiciansGuild@CvTraitEntry@@QAEX_N@Z ; CvTraitEntry::SetHasBuiltMusiciansGuild
; Function compile flags: /Ogtpy
;	COMDAT ?SetHasBuiltMusiciansGuild@CvTraitEntry@@QAEX_N@Z
_TEXT	SEGMENT
_hasBuilt$ = 8						; size = 1
?SetHasBuiltMusiciansGuild@CvTraitEntry@@QAEX_N@Z PROC	; CvTraitEntry::SetHasBuiltMusiciansGuild, COMDAT
; _this$ = ecx

; 788  : 	m_bHasBuiltMusiciansGuild = hasBuilt;

	mov	al, BYTE PTR _hasBuilt$[esp-4]
	mov	BYTE PTR [ecx+598], al

; 789  : };

	ret	4
?SetHasBuiltMusiciansGuild@CvTraitEntry@@QAEX_N@Z ENDP	; CvTraitEntry::SetHasBuiltMusiciansGuild
_TEXT	ENDS
PUBLIC	?IsBonusReligiousBelief@CvTraitEntry@@QBE_NXZ	; CvTraitEntry::IsBonusReligiousBelief
; Function compile flags: /Ogtpy
;	COMDAT ?IsBonusReligiousBelief@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsBonusReligiousBelief@CvTraitEntry@@QBE_NXZ PROC	; CvTraitEntry::IsBonusReligiousBelief, COMDAT
; _this$ = ecx

; 795  : 	return m_bBonusReligiousBelief;

	mov	al, BYTE PTR [ecx+599]

; 796  : }

	ret	0
?IsBonusReligiousBelief@CvTraitEntry@@QBE_NXZ ENDP	; CvTraitEntry::IsBonusReligiousBelief
_TEXT	ENDS
PUBLIC	?IsAbleToAnnexCityStates@CvTraitEntry@@QBE_NXZ	; CvTraitEntry::IsAbleToAnnexCityStates
; Function compile flags: /Ogtpy
;	COMDAT ?IsAbleToAnnexCityStates@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsAbleToAnnexCityStates@CvTraitEntry@@QBE_NXZ PROC	; CvTraitEntry::IsAbleToAnnexCityStates, COMDAT
; _this$ = ecx

; 801  : 	return m_bAbleToAnnexCityStates;

	mov	al, BYTE PTR [ecx+600]

; 802  : }

	ret	0
?IsAbleToAnnexCityStates@CvTraitEntry@@QBE_NXZ ENDP	; CvTraitEntry::IsAbleToAnnexCityStates
_TEXT	ENDS
PUBLIC	?IsCrossesMountainsAfterGreatGeneral@CvTraitEntry@@QBE_NXZ ; CvTraitEntry::IsCrossesMountainsAfterGreatGeneral
; Function compile flags: /Ogtpy
;	COMDAT ?IsCrossesMountainsAfterGreatGeneral@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsCrossesMountainsAfterGreatGeneral@CvTraitEntry@@QBE_NXZ PROC ; CvTraitEntry::IsCrossesMountainsAfterGreatGeneral, COMDAT
; _this$ = ecx

; 807  : 	return m_bCrossesMountainsAfterGreatGeneral;

	mov	al, BYTE PTR [ecx+601]

; 808  : }

	ret	0
?IsCrossesMountainsAfterGreatGeneral@CvTraitEntry@@QBE_NXZ ENDP ; CvTraitEntry::IsCrossesMountainsAfterGreatGeneral
_TEXT	ENDS
PUBLIC	?IsMayaCalendarBonuses@CvTraitEntry@@QBE_NXZ	; CvTraitEntry::IsMayaCalendarBonuses
; Function compile flags: /Ogtpy
;	COMDAT ?IsMayaCalendarBonuses@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsMayaCalendarBonuses@CvTraitEntry@@QBE_NXZ PROC	; CvTraitEntry::IsMayaCalendarBonuses, COMDAT
; _this$ = ecx

; 813  : 	return m_bMayaCalendarBonuses;

	mov	al, BYTE PTR [ecx+602]

; 814  : }

	ret	0
?IsMayaCalendarBonuses@CvTraitEntry@@QBE_NXZ ENDP	; CvTraitEntry::IsMayaCalendarBonuses
_TEXT	ENDS
PUBLIC	?IsNoAnnexing@CvTraitEntry@@QBE_NXZ		; CvTraitEntry::IsNoAnnexing
; Function compile flags: /Ogtpy
;	COMDAT ?IsNoAnnexing@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsNoAnnexing@CvTraitEntry@@QBE_NXZ PROC		; CvTraitEntry::IsNoAnnexing, COMDAT
; _this$ = ecx

; 819  : 	return m_bNoAnnexing;

	mov	al, BYTE PTR [ecx+603]

; 820  : }

	ret	0
?IsNoAnnexing@CvTraitEntry@@QBE_NXZ ENDP		; CvTraitEntry::IsNoAnnexing
_TEXT	ENDS
PUBLIC	?IsTechFromCityConquer@CvTraitEntry@@QBE_NXZ	; CvTraitEntry::IsTechFromCityConquer
; Function compile flags: /Ogtpy
;	COMDAT ?IsTechFromCityConquer@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsTechFromCityConquer@CvTraitEntry@@QBE_NXZ PROC	; CvTraitEntry::IsTechFromCityConquer, COMDAT
; _this$ = ecx

; 825  : 	return m_bTechFromCityConquer;

	mov	al, BYTE PTR [ecx+604]

; 826  : }

	ret	0
?IsTechFromCityConquer@CvTraitEntry@@QBE_NXZ ENDP	; CvTraitEntry::IsTechFromCityConquer
_TEXT	ENDS
PUBLIC	?IsUniqueLuxuryRequiresNewArea@CvTraitEntry@@QBE_NXZ ; CvTraitEntry::IsUniqueLuxuryRequiresNewArea
; Function compile flags: /Ogtpy
;	COMDAT ?IsUniqueLuxuryRequiresNewArea@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsUniqueLuxuryRequiresNewArea@CvTraitEntry@@QBE_NXZ PROC ; CvTraitEntry::IsUniqueLuxuryRequiresNewArea, COMDAT
; _this$ = ecx

; 831  : 	return m_bUniqueLuxuryRequiresNewArea;

	mov	al, BYTE PTR [ecx+605]

; 832  : }

	ret	0
?IsUniqueLuxuryRequiresNewArea@CvTraitEntry@@QBE_NXZ ENDP ; CvTraitEntry::IsUniqueLuxuryRequiresNewArea
_TEXT	ENDS
PUBLIC	?IsRiverTradeRoad@CvTraitEntry@@QBE_NXZ		; CvTraitEntry::IsRiverTradeRoad
; Function compile flags: /Ogtpy
;	COMDAT ?IsRiverTradeRoad@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsRiverTradeRoad@CvTraitEntry@@QBE_NXZ PROC		; CvTraitEntry::IsRiverTradeRoad, COMDAT
; _this$ = ecx

; 837  : 	return m_bRiverTradeRoad;

	mov	al, BYTE PTR [ecx+606]

; 838  : }

	ret	0
?IsRiverTradeRoad@CvTraitEntry@@QBE_NXZ ENDP		; CvTraitEntry::IsRiverTradeRoad
_TEXT	ENDS
PUBLIC	?IsAngerFreeIntrusionOfCityStates@CvTraitEntry@@QBE_NXZ ; CvTraitEntry::IsAngerFreeIntrusionOfCityStates
; Function compile flags: /Ogtpy
;	COMDAT ?IsAngerFreeIntrusionOfCityStates@CvTraitEntry@@QBE_NXZ
_TEXT	SEGMENT
?IsAngerFreeIntrusionOfCityStates@CvTraitEntry@@QBE_NXZ PROC ; CvTraitEntry::IsAngerFreeIntrusionOfCityStates, COMDAT
; _this$ = ecx

; 843  : 	return m_bAngerFreeIntrusionOfCityStates;

	mov	al, BYTE PTR [ecx+607]

; 844  : }

	ret	0
?IsAngerFreeIntrusionOfCityStates@CvTraitEntry@@QBE_NXZ ENDP ; CvTraitEntry::IsAngerFreeIntrusionOfCityStates
_TEXT	ENDS
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
PUBLIC	??_R4logic_error@std@@6B@			; std::logic_error::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	??_R3logic_error@std@@8				; std::logic_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2logic_error@std@@8				; std::logic_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@logic_error@std@@8		; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??0exception@std@@QAE@XZ:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@logic_error@std@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
rdata$r	SEGMENT
??_R1A@?0A@EA@logic_error@std@@8 DD FLAT:??_R0?AVlogic_error@std@@@8 ; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT
??_R2logic_error@std@@8 DD FLAT:??_R1A@?0A@EA@logic_error@std@@8 ; std::logic_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT
??_R3logic_error@std@@8 DD 00H				; std::logic_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT
??_R4logic_error@std@@6B@ DD 00H			; std::logic_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_R4logic_error@std@@6B@ ; std::logic_error::`vftable'
	DD	FLAT:??_Elogic_error@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 26   : 		{	// construct from message string

	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+20], esi
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	eax, DWORD PTR __Message$[esp+16]
	push	eax
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR __$EHRec$[esp+32], 0
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z

; 27   : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
PUBLIC	?GetExtraYieldThreshold@CvTraitEntry@@QBEHH@Z	; CvTraitEntry::GetExtraYieldThreshold
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
;	COMDAT ?GetExtraYieldThreshold@CvTraitEntry@@QBEHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
?GetExtraYieldThreshold@CvTraitEntry@@QBEHH@Z PROC	; CvTraitEntry::GetExtraYieldThreshold, COMDAT
; _this$ = ecx

; 861  : 	return m_paiExtraYieldThreshold ? m_paiExtraYieldThreshold[i] : -1;

	mov	eax, DWORD PTR [ecx+636]
	test	eax, eax
	je	SHORT $LN3@GetExtraYi
	mov	ecx, DWORD PTR _i$[esp-4]
	mov	eax, DWORD PTR [eax+ecx*4]

; 862  : }

	ret	4
$LN3@GetExtraYi:

; 861  : 	return m_paiExtraYieldThreshold ? m_paiExtraYieldThreshold[i] : -1;

	or	eax, -1

; 862  : }

	ret	4
?GetExtraYieldThreshold@CvTraitEntry@@QBEHH@Z ENDP	; CvTraitEntry::GetExtraYieldThreshold
_TEXT	ENDS
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
??1logic_error@std@@UAE@XZ PROC				; std::logic_error::~logic_error, COMDAT
; _this$ = ecx

; 30   : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 31   : 		}

	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	pop	esi
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
_TEXT	ENDS
PUBLIC	?GetYieldChange@CvTraitEntry@@QBEHH@Z		; CvTraitEntry::GetYieldChange
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
;	COMDAT ?GetYieldChange@CvTraitEntry@@QBEHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
?GetYieldChange@CvTraitEntry@@QBEHH@Z PROC		; CvTraitEntry::GetYieldChange, COMDAT
; _this$ = ecx

; 867  : 	return m_paiYieldChange ? m_paiYieldChange[i] : -1;

	mov	eax, DWORD PTR [ecx+640]
	test	eax, eax
	je	SHORT $LN3@GetYieldCh
	mov	ecx, DWORD PTR _i$[esp-4]
	mov	eax, DWORD PTR [eax+ecx*4]

; 868  : }

	ret	4
$LN3@GetYieldCh:

; 867  : 	return m_paiYieldChange ? m_paiYieldChange[i] : -1;

	or	eax, -1

; 868  : }

	ret	4
?GetYieldChange@CvTraitEntry@@QBEHH@Z ENDP		; CvTraitEntry::GetYieldChange
_TEXT	ENDS
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@logic_error@std@@UBEPBDXZ PROC			; std::logic_error::what, COMDAT
; _this$ = ecx

; 35   : 		return (_Str.c_str());

	add	ecx, 12					; 0000000cH
	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
_TEXT	ENDS
PUBLIC	?GetYieldChangeStrategicResources@CvTraitEntry@@QBEHH@Z ; CvTraitEntry::GetYieldChangeStrategicResources
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
;	COMDAT ?GetYieldChangeStrategicResources@CvTraitEntry@@QBEHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
?GetYieldChangeStrategicResources@CvTraitEntry@@QBEHH@Z PROC ; CvTraitEntry::GetYieldChangeStrategicResources, COMDAT
; _this$ = ecx

; 873  : 	return m_paiYieldChangeStrategicResources ? m_paiYieldChangeStrategicResources[i] : -1;

	mov	eax, DWORD PTR [ecx+644]
	test	eax, eax
	je	SHORT $LN3@GetYieldCh@2
	mov	ecx, DWORD PTR _i$[esp-4]
	mov	eax, DWORD PTR [eax+ecx*4]

; 874  : }

	ret	4
$LN3@GetYieldCh@2:

; 873  : 	return m_paiYieldChangeStrategicResources ? m_paiYieldChangeStrategicResources[i] : -1;

	or	eax, -1

; 874  : }

	ret	4
?GetYieldChangeStrategicResources@CvTraitEntry@@QBEHH@Z ENDP ; CvTraitEntry::GetYieldChangeStrategicResources
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar@2
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@2:
	mov	eax, esi
	pop	esi
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?GetYieldChangeLuxuryResources@CvTraitEntry@@QBEHH@Z ; CvTraitEntry::GetYieldChangeLuxuryResources
; Function compile flags: /Ogtpy
;	COMDAT ?GetYieldChangeLuxuryResources@CvTraitEntry@@QBEHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
?GetYieldChangeLuxuryResources@CvTraitEntry@@QBEHH@Z PROC ; CvTraitEntry::GetYieldChangeLuxuryResources, COMDAT
; _this$ = ecx

; 880  : 	return m_paiYieldChangeLuxuryResources ? m_paiYieldChangeLuxuryResources[i] : -1;

	mov	eax, DWORD PTR [ecx+648]
	test	eax, eax
	je	SHORT $LN3@GetYieldCh@3
	mov	ecx, DWORD PTR _i$[esp-4]
	mov	eax, DWORD PTR [eax+ecx*4]

; 881  : }

	ret	4
$LN3@GetYieldCh@3:

; 880  : 	return m_paiYieldChangeLuxuryResources ? m_paiYieldChangeLuxuryResources[i] : -1;

	or	eax, -1

; 881  : }

	ret	4
?GetYieldChangeLuxuryResources@CvTraitEntry@@QBEHH@Z ENDP ; CvTraitEntry::GetYieldChangeLuxuryResources
_TEXT	ENDS
PUBLIC	?GetYieldChangeNaturalWonder@CvTraitEntry@@QBEHH@Z ; CvTraitEntry::GetYieldChangeNaturalWonder
; Function compile flags: /Ogtpy
;	COMDAT ?GetYieldChangeNaturalWonder@CvTraitEntry@@QBEHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
?GetYieldChangeNaturalWonder@CvTraitEntry@@QBEHH@Z PROC	; CvTraitEntry::GetYieldChangeNaturalWonder, COMDAT
; _this$ = ecx

; 887  : 	return m_paiYieldChangeNaturalWonder ? m_paiYieldChangeNaturalWonder[i] : -1;

	mov	eax, DWORD PTR [ecx+652]
	test	eax, eax
	je	SHORT $LN3@GetYieldCh@4
	mov	ecx, DWORD PTR _i$[esp-4]
	mov	eax, DWORD PTR [eax+ecx*4]

; 888  : }

	ret	4
$LN3@GetYieldCh@4:

; 887  : 	return m_paiYieldChangeNaturalWonder ? m_paiYieldChangeNaturalWonder[i] : -1;

	or	eax, -1

; 888  : }

	ret	4
?GetYieldChangeNaturalWonder@CvTraitEntry@@QBEHH@Z ENDP	; CvTraitEntry::GetYieldChangeNaturalWonder
_TEXT	ENDS
PUBLIC	?GetYieldChangePerTradePartner@CvTraitEntry@@QBEHH@Z ; CvTraitEntry::GetYieldChangePerTradePartner
; Function compile flags: /Ogtpy
;	COMDAT ?GetYieldChangePerTradePartner@CvTraitEntry@@QBEHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
?GetYieldChangePerTradePartner@CvTraitEntry@@QBEHH@Z PROC ; CvTraitEntry::GetYieldChangePerTradePartner, COMDAT
; _this$ = ecx

; 893  : 	return m_paiYieldChangePerTradePartner ? m_paiYieldChangePerTradePartner[i] : -1;

	mov	eax, DWORD PTR [ecx+656]
	test	eax, eax
	je	SHORT $LN3@GetYieldCh@5
	mov	ecx, DWORD PTR _i$[esp-4]
	mov	eax, DWORD PTR [eax+ecx*4]

; 894  : }

	ret	4
$LN3@GetYieldCh@5:

; 893  : 	return m_paiYieldChangePerTradePartner ? m_paiYieldChangePerTradePartner[i] : -1;

	or	eax, -1

; 894  : }

	ret	4
?GetYieldChangePerTradePartner@CvTraitEntry@@QBEHH@Z ENDP ; CvTraitEntry::GetYieldChangePerTradePartner
_TEXT	ENDS
PUBLIC	?GetYieldChangeIncomingTradeRoute@CvTraitEntry@@QBEHH@Z ; CvTraitEntry::GetYieldChangeIncomingTradeRoute
; Function compile flags: /Ogtpy
;	COMDAT ?GetYieldChangeIncomingTradeRoute@CvTraitEntry@@QBEHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
?GetYieldChangeIncomingTradeRoute@CvTraitEntry@@QBEHH@Z PROC ; CvTraitEntry::GetYieldChangeIncomingTradeRoute, COMDAT
; _this$ = ecx

; 899  : 	return m_paiYieldChangeIncomingTradeRoute ? m_paiYieldChangeIncomingTradeRoute[i] : -1;

	mov	eax, DWORD PTR [ecx+660]
	test	eax, eax
	je	SHORT $LN3@GetYieldCh@6
	mov	ecx, DWORD PTR _i$[esp-4]
	mov	eax, DWORD PTR [eax+ecx*4]

; 900  : }

	ret	4
$LN3@GetYieldCh@6:

; 899  : 	return m_paiYieldChangeIncomingTradeRoute ? m_paiYieldChangeIncomingTradeRoute[i] : -1;

	or	eax, -1

; 900  : }

	ret	4
?GetYieldChangeIncomingTradeRoute@CvTraitEntry@@QBEHH@Z ENDP ; CvTraitEntry::GetYieldChangeIncomingTradeRoute
_TEXT	ENDS
PUBLIC	?GetYieldModifier@CvTraitEntry@@QBEHH@Z		; CvTraitEntry::GetYieldModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetYieldModifier@CvTraitEntry@@QBEHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
?GetYieldModifier@CvTraitEntry@@QBEHH@Z PROC		; CvTraitEntry::GetYieldModifier, COMDAT
; _this$ = ecx

; 905  : 	return m_paiYieldModifier ? m_paiYieldModifier[i] : -1;

	mov	eax, DWORD PTR [ecx+664]
	test	eax, eax
	je	SHORT $LN3@GetYieldMo
	mov	ecx, DWORD PTR _i$[esp-4]
	mov	eax, DWORD PTR [eax+ecx*4]

; 906  : }

	ret	4
$LN3@GetYieldMo:

; 905  : 	return m_paiYieldModifier ? m_paiYieldModifier[i] : -1;

	or	eax, -1

; 906  : }

	ret	4
?GetYieldModifier@CvTraitEntry@@QBEHH@Z ENDP		; CvTraitEntry::GetYieldModifier
_TEXT	ENDS
PUBLIC	?GetStrategicResourceQuantityModifier@CvTraitEntry@@QBEHH@Z ; CvTraitEntry::GetStrategicResourceQuantityModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetStrategicResourceQuantityModifier@CvTraitEntry@@QBEHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
?GetStrategicResourceQuantityModifier@CvTraitEntry@@QBEHH@Z PROC ; CvTraitEntry::GetStrategicResourceQuantityModifier, COMDAT
; _this$ = ecx

; 911  : 	return m_piStrategicResourceQuantityModifier ? m_piStrategicResourceQuantityModifier[i] : -1;

	mov	eax, DWORD PTR [ecx+668]
	test	eax, eax
	je	SHORT $LN3@GetStrateg
	mov	ecx, DWORD PTR _i$[esp-4]
	mov	eax, DWORD PTR [eax+ecx*4]

; 912  : }

	ret	4
$LN3@GetStrateg:

; 911  : 	return m_piStrategicResourceQuantityModifier ? m_piStrategicResourceQuantityModifier[i] : -1;

	or	eax, -1

; 912  : }

	ret	4
?GetStrategicResourceQuantityModifier@CvTraitEntry@@QBEHH@Z ENDP ; CvTraitEntry::GetStrategicResourceQuantityModifier
_TEXT	ENDS
PUBLIC	?GetResourceQuantityModifier@CvTraitEntry@@QBEHH@Z ; CvTraitEntry::GetResourceQuantityModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetResourceQuantityModifier@CvTraitEntry@@QBEHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
?GetResourceQuantityModifier@CvTraitEntry@@QBEHH@Z PROC	; CvTraitEntry::GetResourceQuantityModifier, COMDAT
; _this$ = ecx

; 917  : 	CvAssertMsg(i < GC.getNumResourceInfos(), "Index out of bounds");
; 918  : 	CvAssertMsg(i > -1, "Index out of bounds");
; 919  : 	return m_piResourceQuantityModifiers ? m_piResourceQuantityModifiers[i] : -1;

	mov	eax, DWORD PTR [ecx+672]
	test	eax, eax
	je	SHORT $LN3@GetResourc
	mov	ecx, DWORD PTR _i$[esp-4]
	mov	eax, DWORD PTR [eax+ecx*4]

; 920  : }

	ret	4
$LN3@GetResourc:

; 917  : 	CvAssertMsg(i < GC.getNumResourceInfos(), "Index out of bounds");
; 918  : 	CvAssertMsg(i > -1, "Index out of bounds");
; 919  : 	return m_piResourceQuantityModifiers ? m_piResourceQuantityModifiers[i] : -1;

	or	eax, -1

; 920  : }

	ret	4
?GetResourceQuantityModifier@CvTraitEntry@@QBEHH@Z ENDP	; CvTraitEntry::GetResourceQuantityModifier
_TEXT	ENDS
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
PUBLIC	??_R4length_error@std@@6B@			; std::length_error::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	??_R3length_error@std@@8			; std::length_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2length_error@std@@8			; std::length_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@length_error@std@@8		; std::length_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:PROC		; std::length_error::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@length_error@std@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
rdata$r	SEGMENT
??_R1A@?0A@EA@length_error@std@@8 DD FLAT:??_R0?AVlength_error@std@@@8 ; std::length_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2length_error@std@@8
rdata$r	SEGMENT
??_R2length_error@std@@8 DD FLAT:??_R1A@?0A@EA@length_error@std@@8 ; std::length_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3length_error@std@@8
rdata$r	SEGMENT
??_R3length_error@std@@8 DD 00H				; std::length_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4length_error@std@@6B@
rdata$r	SEGMENT
??_R4length_error@std@@6B@ DD 00H			; std::length_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	FLAT:??_R3length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_R4length_error@std@@6B@ ; std::length_error::`vftable'
	DD	FLAT:??_Elength_error@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::length_error::length_error, COMDAT
; _this$ = ecx

; 105  : 		{	// construct from message string

	mov	eax, DWORD PTR __Message$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	mov	DWORD PTR [esi], OFFSET ??_7length_error@std@@6B@

; 106  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::length_error::length_error
_TEXT	ENDS
PUBLIC	?GetImprovementYieldChanges@CvTraitEntry@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z ; CvTraitEntry::GetImprovementYieldChanges
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
;	COMDAT ?GetImprovementYieldChanges@CvTraitEntry@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z
_TEXT	SEGMENT
_eIndex1$ = 8						; size = 4
_eIndex2$ = 12						; size = 4
?GetImprovementYieldChanges@CvTraitEntry@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z PROC ; CvTraitEntry::GetImprovementYieldChanges, COMDAT
; _this$ = ecx

; 925  : 	CvAssertMsg(eIndex1 < GC.getNumImprovementInfos(), "Index out of bounds");
; 926  : 	CvAssertMsg(eIndex1 > -1, "Index out of bounds");
; 927  : 	CvAssertMsg(eIndex2 < NUM_YIELD_TYPES, "Index out of bounds");
; 928  : 	CvAssertMsg(eIndex2 > -1, "Index out of bounds");
; 929  : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 930  : 	return m_ppiImprovementYieldChanges.first ? m_ppiImprovementYieldChanges.first[eIndex1][eIndex2] : 0;
; 931  : #else
; 932  : 	return m_ppiImprovementYieldChanges ? m_ppiImprovementYieldChanges[eIndex1][eIndex2] : 0;

	mov	eax, DWORD PTR [ecx+684]
	test	eax, eax
	je	SHORT $LN3@GetImprove
	mov	ecx, DWORD PTR _eIndex1$[esp-4]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _eIndex2$[esp-4]
	mov	eax, DWORD PTR [edx+eax*4]

; 933  : #endif
; 934  : }

	ret	8
$LN3@GetImprove:

; 925  : 	CvAssertMsg(eIndex1 < GC.getNumImprovementInfos(), "Index out of bounds");
; 926  : 	CvAssertMsg(eIndex1 > -1, "Index out of bounds");
; 927  : 	CvAssertMsg(eIndex2 < NUM_YIELD_TYPES, "Index out of bounds");
; 928  : 	CvAssertMsg(eIndex2 > -1, "Index out of bounds");
; 929  : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 930  : 	return m_ppiImprovementYieldChanges.first ? m_ppiImprovementYieldChanges.first[eIndex1][eIndex2] : 0;
; 931  : #else
; 932  : 	return m_ppiImprovementYieldChanges ? m_ppiImprovementYieldChanges[eIndex1][eIndex2] : 0;

	xor	eax, eax

; 933  : #endif
; 934  : }

	ret	8
?GetImprovementYieldChanges@CvTraitEntry@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z ENDP ; CvTraitEntry::GetImprovementYieldChanges
_TEXT	ENDS
PUBLIC	?GetSpecialistYieldChanges@CvTraitEntry@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z ; CvTraitEntry::GetSpecialistYieldChanges
; Function compile flags: /Ogtpy
;	COMDAT ?GetSpecialistYieldChanges@CvTraitEntry@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z
_TEXT	SEGMENT
_eIndex1$ = 8						; size = 4
_eIndex2$ = 12						; size = 4
?GetSpecialistYieldChanges@CvTraitEntry@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z PROC ; CvTraitEntry::GetSpecialistYieldChanges, COMDAT
; _this$ = ecx

; 939  : 	CvAssertMsg(eIndex1 < GC.getNumSpecialistInfos(), "Index out of bounds");
; 940  : 	CvAssertMsg(eIndex1 > -1, "Index out of bounds");
; 941  : 	CvAssertMsg(eIndex2 < NUM_YIELD_TYPES, "Index out of bounds");
; 942  : 	CvAssertMsg(eIndex2 > -1, "Index out of bounds");
; 943  : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 944  : 	return m_ppiSpecialistYieldChanges.first ? m_ppiSpecialistYieldChanges.first[eIndex1][eIndex2] : 0;
; 945  : #else
; 946  : 	return m_ppiSpecialistYieldChanges ? m_ppiSpecialistYieldChanges[eIndex1][eIndex2] : 0;

	mov	eax, DWORD PTR [ecx+688]
	test	eax, eax
	je	SHORT $LN3@GetSpecial
	mov	ecx, DWORD PTR _eIndex1$[esp-4]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _eIndex2$[esp-4]
	mov	eax, DWORD PTR [edx+eax*4]

; 947  : #endif
; 948  : }

	ret	8
$LN3@GetSpecial:

; 939  : 	CvAssertMsg(eIndex1 < GC.getNumSpecialistInfos(), "Index out of bounds");
; 940  : 	CvAssertMsg(eIndex1 > -1, "Index out of bounds");
; 941  : 	CvAssertMsg(eIndex2 < NUM_YIELD_TYPES, "Index out of bounds");
; 942  : 	CvAssertMsg(eIndex2 > -1, "Index out of bounds");
; 943  : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 944  : 	return m_ppiSpecialistYieldChanges.first ? m_ppiSpecialistYieldChanges.first[eIndex1][eIndex2] : 0;
; 945  : #else
; 946  : 	return m_ppiSpecialistYieldChanges ? m_ppiSpecialistYieldChanges[eIndex1][eIndex2] : 0;

	xor	eax, eax

; 947  : #endif
; 948  : }

	ret	8
?GetSpecialistYieldChanges@CvTraitEntry@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z ENDP ; CvTraitEntry::GetSpecialistYieldChanges
_TEXT	ENDS
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
??1length_error@std@@UAE@XZ PROC			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 109  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 110  : 		}

	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	pop	esi
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC			; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN8@scalar@3
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@3:
	mov	eax, esi
	pop	esi
	ret	4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?GetUnimprovedFeatureYieldChanges@CvTraitEntry@@QBEHW4FeatureTypes@@W4YieldTypes@@@Z ; CvTraitEntry::GetUnimprovedFeatureYieldChanges
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
;	COMDAT ?GetUnimprovedFeatureYieldChanges@CvTraitEntry@@QBEHW4FeatureTypes@@W4YieldTypes@@@Z
_TEXT	SEGMENT
_eIndex1$ = 8						; size = 4
_eIndex2$ = 12						; size = 4
?GetUnimprovedFeatureYieldChanges@CvTraitEntry@@QBEHW4FeatureTypes@@W4YieldTypes@@@Z PROC ; CvTraitEntry::GetUnimprovedFeatureYieldChanges, COMDAT
; _this$ = ecx

; 967  : 	CvAssertMsg(eIndex1 < GC.getNumFeatureInfos(), "Index out of bounds");
; 968  : 	CvAssertMsg(eIndex1 > -1, "Index out of bounds");
; 969  : 	CvAssertMsg(eIndex2 < NUM_YIELD_TYPES, "Index out of bounds");
; 970  : 	CvAssertMsg(eIndex2 > -1, "Index out of bounds");
; 971  : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 972  : 	return m_ppiUnimprovedFeatureYieldChanges.first ? m_ppiUnimprovedFeatureYieldChanges.first[eIndex1][eIndex2] : 0;
; 973  : #else
; 974  : 	return m_ppiUnimprovedFeatureYieldChanges ? m_ppiUnimprovedFeatureYieldChanges[eIndex1][eIndex2] : 0;

	mov	eax, DWORD PTR [ecx+692]
	test	eax, eax
	je	SHORT $LN3@GetUnimpro
	mov	ecx, DWORD PTR _eIndex1$[esp-4]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _eIndex2$[esp-4]
	mov	eax, DWORD PTR [edx+eax*4]

; 975  : #endif
; 976  : }

	ret	8
$LN3@GetUnimpro:

; 967  : 	CvAssertMsg(eIndex1 < GC.getNumFeatureInfos(), "Index out of bounds");
; 968  : 	CvAssertMsg(eIndex1 > -1, "Index out of bounds");
; 969  : 	CvAssertMsg(eIndex2 < NUM_YIELD_TYPES, "Index out of bounds");
; 970  : 	CvAssertMsg(eIndex2 > -1, "Index out of bounds");
; 971  : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 972  : 	return m_ppiUnimprovedFeatureYieldChanges.first ? m_ppiUnimprovedFeatureYieldChanges.first[eIndex1][eIndex2] : 0;
; 973  : #else
; 974  : 	return m_ppiUnimprovedFeatureYieldChanges ? m_ppiUnimprovedFeatureYieldChanges[eIndex1][eIndex2] : 0;

	xor	eax, eax

; 975  : #endif
; 976  : }

	ret	8
?GetUnimprovedFeatureYieldChanges@CvTraitEntry@@QBEHW4FeatureTypes@@W4YieldTypes@@@Z ENDP ; CvTraitEntry::GetUnimprovedFeatureYieldChanges
_TEXT	ENDS
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
PUBLIC	??_R4out_of_range@std@@6B@			; std::out_of_range::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	??_R3out_of_range@std@@8			; std::out_of_range::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2out_of_range@std@@8			; std::out_of_range::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@out_of_range@std@@8		; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:PROC		; std::out_of_range::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@out_of_range@std@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
rdata$r	SEGMENT
??_R1A@?0A@EA@out_of_range@std@@8 DD FLAT:??_R0?AVout_of_range@std@@@8 ; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R2out_of_range@std@@8
rdata$r	SEGMENT
??_R2out_of_range@std@@8 DD FLAT:??_R1A@?0A@EA@out_of_range@std@@8 ; std::out_of_range::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3out_of_range@std@@8
rdata$r	SEGMENT
??_R3out_of_range@std@@8 DD 00H				; std::out_of_range::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4out_of_range@std@@6B@
rdata$r	SEGMENT
??_R4out_of_range@std@@6B@ DD 00H			; std::out_of_range::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_R4out_of_range@std@@6B@ ; std::out_of_range::`vftable'
	DD	FLAT:??_Eout_of_range@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx

; 129  : 		{	// construct from message string

	mov	eax, DWORD PTR __Message$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	mov	DWORD PTR [esi], OFFSET ??_7out_of_range@std@@6B@

; 130  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	?GetMovesChangeUnitCombat@CvTraitEntry@@QBEHH@Z	; CvTraitEntry::GetMovesChangeUnitCombat
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
;	COMDAT ?GetMovesChangeUnitCombat@CvTraitEntry@@QBEHH@Z
_TEXT	SEGMENT
_unitCombatID$ = 8					; size = 4
?GetMovesChangeUnitCombat@CvTraitEntry@@QBEHH@Z PROC	; CvTraitEntry::GetMovesChangeUnitCombat, COMDAT
; _this$ = ecx

; 981  : 	CvAssertMsg((unitCombatID >= 0), "unitCombatID is less than zero");
; 982  : 	CvAssertMsg((unitCombatID < GC.getNumUnitCombatClassInfos()), "unitCombatID exceeds number of combat classes");
; 983  : 
; 984  : 	return m_piMovesChangeUnitCombats[unitCombatID];

	mov	eax, DWORD PTR [ecx+676]
	mov	ecx, DWORD PTR _unitCombatID$[esp-4]
	mov	eax, DWORD PTR [eax+ecx*4]

; 985  : }

	ret	4
?GetMovesChangeUnitCombat@CvTraitEntry@@QBEHH@Z ENDP	; CvTraitEntry::GetMovesChangeUnitCombat
_TEXT	ENDS
PUBLIC	?GetMaintenanceModifierUnitCombat@CvTraitEntry@@QBEHH@Z ; CvTraitEntry::GetMaintenanceModifierUnitCombat
; Function compile flags: /Ogtpy
;	COMDAT ?GetMaintenanceModifierUnitCombat@CvTraitEntry@@QBEHH@Z
_TEXT	SEGMENT
_unitCombatID$ = 8					; size = 4
?GetMaintenanceModifierUnitCombat@CvTraitEntry@@QBEHH@Z PROC ; CvTraitEntry::GetMaintenanceModifierUnitCombat, COMDAT
; _this$ = ecx

; 990  : 	CvAssertMsg((unitCombatID >= 0), "unitCombatID is less than zero");
; 991  : 	CvAssertMsg((unitCombatID < GC.getNumUnitCombatClassInfos()), "unitCombatID exceeds number of combat classes");
; 992  : 
; 993  : 	return m_piMaintenanceModifierUnitCombats[unitCombatID];

	mov	eax, DWORD PTR [ecx+680]
	mov	ecx, DWORD PTR _unitCombatID$[esp-4]
	mov	eax, DWORD PTR [eax+ecx*4]

; 994  : }

	ret	4
?GetMaintenanceModifierUnitCombat@CvTraitEntry@@QBEHH@Z ENDP ; CvTraitEntry::GetMaintenanceModifierUnitCombat
_TEXT	ENDS
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
??1out_of_range@std@@UAE@XZ PROC			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx

; 133  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 134  : 		}

	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	pop	esi
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC			; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN8@scalar@4
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@4:
	mov	eax, esi
	pop	esi
	ret	4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?GetObsoleteTech@CvTraitEntry@@QBEHXZ		; CvTraitEntry::GetObsoleteTech
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
;	COMDAT ?GetObsoleteTech@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetObsoleteTech@CvTraitEntry@@QBEHXZ PROC		; CvTraitEntry::GetObsoleteTech, COMDAT
; _this$ = ecx

; 1005 : 	return m_iObsoleteTech;

	mov	eax, DWORD PTR [ecx+416]

; 1006 : }

	ret	0
?GetObsoleteTech@CvTraitEntry@@QBEHXZ ENDP		; CvTraitEntry::GetObsoleteTech
_TEXT	ENDS
PUBLIC	?GetPrereqTech@CvTraitEntry@@QBEHXZ		; CvTraitEntry::GetPrereqTech
; Function compile flags: /Ogtpy
;	COMDAT ?GetPrereqTech@CvTraitEntry@@QBEHXZ
_TEXT	SEGMENT
?GetPrereqTech@CvTraitEntry@@QBEHXZ PROC		; CvTraitEntry::GetPrereqTech, COMDAT
; _this$ = ecx

; 1011 : 	return m_iPrereqTech;

	mov	eax, DWORD PTR [ecx+420]

; 1012 : }

	ret	0
?GetPrereqTech@CvTraitEntry@@QBEHXZ ENDP		; CvTraitEntry::GetPrereqTech
_TEXT	ENDS
PUBLIC	?GetTraitEntries@CvTraitXMLEntries@@QAEAAV?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@XZ ; CvTraitXMLEntries::GetTraitEntries
; Function compile flags: /Ogtpy
;	COMDAT ?GetTraitEntries@CvTraitXMLEntries@@QAEAAV?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@XZ
_TEXT	SEGMENT
?GetTraitEntries@CvTraitXMLEntries@@QAEAAV?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@XZ PROC ; CvTraitXMLEntries::GetTraitEntries, COMDAT
; _this$ = ecx

; 1635 : {

	mov	eax, ecx

; 1636 : 	return m_paTraitEntries;
; 1637 : }

	ret	0
?GetTraitEntries@CvTraitXMLEntries@@QAEAAV?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@XZ ENDP ; CvTraitXMLEntries::GetTraitEntries
_TEXT	ENDS
PUBLIC	?GetCapitalBuildingDiscount@CvPlayerTraits@@QAEHW4BuildingTypes@@@Z ; CvPlayerTraits::GetCapitalBuildingDiscount
EXTRN	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetNumBuilding
EXTRN	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ:PROC ; CvCity::GetCityBuildings
EXTRN	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ:PROC	; CvPlayer::getCapitalCity
; Function compile flags: /Ogtpy
;	COMDAT ?GetCapitalBuildingDiscount@CvPlayerTraits@@QAEHW4BuildingTypes@@@Z
_TEXT	SEGMENT
_eBuilding$ = 8						; size = 4
?GetCapitalBuildingDiscount@CvPlayerTraits@@QAEHW4BuildingTypes@@@Z PROC ; CvPlayerTraits::GetCapitalBuildingDiscount, COMDAT
; _this$ = ecx

; 2704 : {

	push	esi
	mov	esi, ecx

; 2705 : 	if(m_iCapitalBuildingModifier > 0)

	cmp	DWORD PTR [esi+112], 0
	jle	SHORT $LN1@GetCapital

; 2706 : 	{
; 2707 : 		// Find this player's capital
; 2708 : 		CvCity* pCapital = m_pPlayer->getCapitalCity();

	mov	ecx, DWORD PTR [esi+4]
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity

; 2709 : 		if(pCapital)

	test	eax, eax
	je	SHORT $LN1@GetCapital

; 2710 : 		{
; 2711 : 			if(pCapital->GetCityBuildings()->GetNumBuilding(eBuilding) > 0)

	mov	ecx, DWORD PTR _eBuilding$[esp]
	push	ecx
	mov	ecx, eax
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	SHORT $LN1@GetCapital

; 2712 : 			{
; 2713 : 				return m_iCapitalBuildingModifier;

	mov	eax, DWORD PTR [esi+112]
	pop	esi

; 2718 : }

	ret	4
$LN1@GetCapital:

; 2714 : 			}
; 2715 : 		}
; 2716 : 	}
; 2717 : 	return 0;

	xor	eax, eax
	pop	esi

; 2718 : }

	ret	4
?GetCapitalBuildingDiscount@CvPlayerTraits@@QAEHW4BuildingTypes@@@Z ENDP ; CvPlayerTraits::GetCapitalBuildingDiscount
_TEXT	ENDS
PUBLIC	?IsAbleToCrossMountains@CvPlayerTraits@@QBE_NXZ	; CvPlayerTraits::IsAbleToCrossMountains
; Function compile flags: /Ogtpy
;	COMDAT ?IsAbleToCrossMountains@CvPlayerTraits@@QBE_NXZ
_TEXT	SEGMENT
?IsAbleToCrossMountains@CvPlayerTraits@@QBE_NXZ PROC	; CvPlayerTraits::IsAbleToCrossMountains, COMDAT
; _this$ = ecx

; 2793 : 	return (m_bCrossesMountainsAfterGreatGeneral /*&& m_pPlayer->getGreatGeneralsCreated() > 0*/); // NQMP GJS - new Carthage UA no longer needs Great General

	mov	al, BYTE PTR [ecx+349]

; 2794 : }

	ret	0
?IsAbleToCrossMountains@CvPlayerTraits@@QBE_NXZ ENDP	; CvPlayerTraits::IsAbleToCrossMountains
_TEXT	ENDS
PUBLIC	??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z ; std::vector<int,std::allocator<int> >::operator[]
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z PROC	; std::vector<int,std::allocator<int> >::operator[], COMDAT
; _this$ = ecx

; 775  : 
; 776  :  #if _HAS_ITERATOR_DEBUGGING
; 777  : 		if (size() <= _Pos)
; 778  : 			{
; 779  : 			_DEBUG_ERROR("vector subscript out of range");
; 780  : 			_SCL_SECURE_OUT_OF_RANGE;
; 781  : 			}
; 782  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 783  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 784  : 
; 785  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Pos$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*4]

; 786  : 		}

	ret	4
??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z ENDP	; std::vector<int,std::allocator<int> >::operator[]
_TEXT	ENDS
PUBLIC	??4?$_Container_base_aux_alloc_empty@V?$allocator@_N@std@@@std@@IAEAAV01@ABV01@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<bool> >::operator=
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??4?$_Container_base_aux_alloc_empty@V?$allocator@_N@std@@@std@@IAEAAV01@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??4?$_Container_base_aux_alloc_empty@V?$allocator@_N@std@@@std@@IAEAAV01@ABV01@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<bool> >::operator=, COMDAT
; _this$ = ecx

; 623  : 		{

	mov	eax, ecx

; 624  : 		return *this;
; 625  : 		}

	ret	4
??4?$_Container_base_aux_alloc_empty@V?$allocator@_N@std@@@std@@IAEAAV01@ABV01@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<bool> >::operator=
_TEXT	ENDS
PUBLIC	?pointer@?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ ; FObjectHandle<CvUnit>::pointer
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
;	COMDAT ?pointer@?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ
_TEXT	SEGMENT
?pointer@?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ PROC ; FObjectHandle<CvUnit>::pointer, COMDAT
; _this$ = ecx

; 78   : 		return m_target;

	mov	eax, DWORD PTR [ecx]

; 79   : 	}

	ret	0
?pointer@?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ ENDP ; FObjectHandle<CvUnit>::pointer
_TEXT	ENDS
PUBLIC	??C?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ	; FObjectHandle<CvUnit>::operator->
; Function compile flags: /Ogtpy
;	COMDAT ??C?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ
_TEXT	SEGMENT
??C?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ PROC	; FObjectHandle<CvUnit>::operator->, COMDAT
; _this$ = ecx

; 88   : 		return m_target;

	mov	eax, DWORD PTR [ecx]

; 89   : 	}

	ret	0
??C?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ ENDP	; FObjectHandle<CvUnit>::operator->
_TEXT	ENDS
PUBLIC	??B?$FObjectHandle@VCvUnit@@@@QBE_NXZ		; FObjectHandle<CvUnit>::operator bool
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FObjectHandle@VCvUnit@@@@QBE_NXZ
_TEXT	SEGMENT
??B?$FObjectHandle@VCvUnit@@@@QBE_NXZ PROC		; FObjectHandle<CvUnit>::operator bool, COMDAT
; _this$ = ecx

; 108  : 		return m_target != 0;

	xor	eax, eax
	cmp	DWORD PTR [ecx], eax
	setne	al

; 109  : 	}

	ret	0
??B?$FObjectHandle@VCvUnit@@@@QBE_NXZ ENDP		; FObjectHandle<CvUnit>::operator bool
_TEXT	ENDS
PUBLIC	??0?$FObjectHandle@VCvUnit@@@@QAE@XZ		; FObjectHandle<CvUnit>::FObjectHandle<CvUnit>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$FObjectHandle@VCvUnit@@@@QAE@XZ
_TEXT	SEGMENT
??0?$FObjectHandle@VCvUnit@@@@QAE@XZ PROC		; FObjectHandle<CvUnit>::FObjectHandle<CvUnit>, COMDAT
; _this$ = ecx

; 215  : 	{

	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	mov	BYTE PTR [eax+4], 0

; 216  : 		OBJECT_HANDLE_STACK;
; 217  : 	}

	ret	0
??0?$FObjectHandle@VCvUnit@@@@QAE@XZ ENDP		; FObjectHandle<CvUnit>::FObjectHandle<CvUnit>
_TEXT	ENDS
PUBLIC	??A?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEABV?$Array@H$05@Firaxis@@I@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator[]
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??A?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEABV?$Array@H$05@Firaxis@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEABV?$Array@H$05@Firaxis@@I@Z PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator[], COMDAT
; _this$ = ecx

; 760  : 
; 761  :  #if _HAS_ITERATOR_DEBUGGING
; 762  : 		if (size() <= _Pos)
; 763  : 			{
; 764  : 			_DEBUG_ERROR("vector subscript out of range");
; 765  : 			_SCL_SECURE_OUT_OF_RANGE;
; 766  : 			}
; 767  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 768  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 769  : 
; 770  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR __Pos$[esp-4]
	mov	ecx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]

; 771  : 		}

	ret	4
??A?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEABV?$Array@H$05@Firaxis@@I@Z ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator[]
_TEXT	ENDS
PUBLIC	??A?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEAAV?$Array@H$05@Firaxis@@I@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator[]
; Function compile flags: /Ogtpy
;	COMDAT ??A?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEAAV?$Array@H$05@Firaxis@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEAAV?$Array@H$05@Firaxis@@I@Z PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator[], COMDAT
; _this$ = ecx

; 775  : 
; 776  :  #if _HAS_ITERATOR_DEBUGGING
; 777  : 		if (size() <= _Pos)
; 778  : 			{
; 779  : 			_DEBUG_ERROR("vector subscript out of range");
; 780  : 			_SCL_SECURE_OUT_OF_RANGE;
; 781  : 			}
; 782  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 783  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 784  : 
; 785  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR __Pos$[esp-4]
	mov	ecx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]

; 786  : 		}

	ret	4
??A?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEAAV?$Array@H$05@Firaxis@@I@Z ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator[]
_TEXT	ENDS
PUBLIC	??A?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBEABUFreeResourceXCities@@I@Z ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator[]
; Function compile flags: /Ogtpy
;	COMDAT ??A?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBEABUFreeResourceXCities@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBEABUFreeResourceXCities@@I@Z PROC ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator[], COMDAT
; _this$ = ecx

; 760  : 
; 761  :  #if _HAS_ITERATOR_DEBUGGING
; 762  : 		if (size() <= _Pos)
; 763  : 			{
; 764  : 			_DEBUG_ERROR("vector subscript out of range");
; 765  : 			_SCL_SECURE_OUT_OF_RANGE;
; 766  : 			}
; 767  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 768  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 769  : 
; 770  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Pos$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*8]

; 771  : 		}

	ret	4
??A?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBEABUFreeResourceXCities@@I@Z ENDP ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator[]
_TEXT	ENDS
PUBLIC	??A?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAEAAUFreeResourceXCities@@I@Z ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator[]
; Function compile flags: /Ogtpy
;	COMDAT ??A?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAEAAUFreeResourceXCities@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAEAAUFreeResourceXCities@@I@Z PROC ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator[], COMDAT
; _this$ = ecx

; 775  : 
; 776  :  #if _HAS_ITERATOR_DEBUGGING
; 777  : 		if (size() <= _Pos)
; 778  : 			{
; 779  : 			_DEBUG_ERROR("vector subscript out of range");
; 780  : 			_SCL_SECURE_OUT_OF_RANGE;
; 781  : 			}
; 782  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 783  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 784  : 
; 785  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Pos$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*8]

; 786  : 		}

	ret	4
??A?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAEAAUFreeResourceXCities@@I@Z ENDP ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator[]
_TEXT	ENDS
PUBLIC	?size@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBEIXZ ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBEIXZ PROC ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::size, COMDAT
; _this$ = ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 727  : 		}

	ret	0
?size@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBEIXZ ENDP ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAEAAPAVCvTraitEntry@@I@Z ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::operator[]
; Function compile flags: /Ogtpy
;	COMDAT ??A?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAEAAPAVCvTraitEntry@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAEAAPAVCvTraitEntry@@I@Z PROC ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::operator[], COMDAT
; _this$ = ecx

; 775  : 
; 776  :  #if _HAS_ITERATOR_DEBUGGING
; 777  : 		if (size() <= _Pos)
; 778  : 			{
; 779  : 			_DEBUG_ERROR("vector subscript out of range");
; 780  : 			_SCL_SECURE_OUT_OF_RANGE;
; 781  : 			}
; 782  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 783  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 784  : 
; 785  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Pos$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*4]

; 786  : 		}

	ret	4
??A?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAEAAPAVCvTraitEntry@@I@Z ENDP ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::operator[]
_TEXT	ENDS
PUBLIC	??A?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBEABW4TraitTypes@@I@Z ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::operator[]
; Function compile flags: /Ogtpy
;	COMDAT ??A?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBEABW4TraitTypes@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBEABW4TraitTypes@@I@Z PROC ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::operator[], COMDAT
; _this$ = ecx

; 760  : 
; 761  :  #if _HAS_ITERATOR_DEBUGGING
; 762  : 		if (size() <= _Pos)
; 763  : 			{
; 764  : 			_DEBUG_ERROR("vector subscript out of range");
; 765  : 			_SCL_SECURE_OUT_OF_RANGE;
; 766  : 			}
; 767  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 768  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 769  : 
; 770  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Pos$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*4]

; 771  : 		}

	ret	4
??A?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBEABW4TraitTypes@@I@Z ENDP ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::operator[]
_TEXT	ENDS
PUBLIC	??A?$BaseVector@UFreeTraitUnit@@$00@@QAEAAUFreeTraitUnit@@I@Z ; BaseVector<FreeTraitUnit,1>::operator[]
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??A?$BaseVector@UFreeTraitUnit@@$00@@QAEAAUFreeTraitUnit@@I@Z
_TEXT	SEGMENT
_ui$ = 8						; size = 4
??A?$BaseVector@UFreeTraitUnit@@$00@@QAEAAUFreeTraitUnit@@I@Z PROC ; BaseVector<FreeTraitUnit,1>::operator[], COMDAT
; _this$ = ecx

; 129  : 		FAssert(ui < m_uiCurrSize);
; 130  : 		return m_pData[ui];

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ui$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*8]

; 131  : 	};

	ret	4
??A?$BaseVector@UFreeTraitUnit@@$00@@QAEAAUFreeTraitUnit@@I@Z ENDP ; BaseVector<FreeTraitUnit,1>::operator[]
_TEXT	ENDS
PUBLIC	?size@?$BaseVector@UFreeTraitUnit@@$00@@QBEIXZ	; BaseVector<FreeTraitUnit,1>::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$BaseVector@UFreeTraitUnit@@$00@@QBEIXZ
_TEXT	SEGMENT
?size@?$BaseVector@UFreeTraitUnit@@$00@@QBEIXZ PROC	; BaseVector<FreeTraitUnit,1>::size, COMDAT
; _this$ = ecx

; 169  : 		return m_uiCurrSize;

	mov	eax, DWORD PTR [ecx+4]

; 170  : 	};

	ret	0
?size@?$BaseVector@UFreeTraitUnit@@$00@@QBEIXZ ENDP	; BaseVector<FreeTraitUnit,1>::size
_TEXT	ENDS
PUBLIC	?size@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEIXZ ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?size@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEIXZ PROC ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::size, COMDAT
; _this$ = ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 3

; 727  : 		}

	ret	0
?size@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEIXZ ENDP ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::size
_TEXT	ENDS
PUBLIC	??0?$pair@HH@std@@QAE@ABH0@Z			; std::pair<int,int>::pair<int,int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
;	COMDAT ??0?$pair@HH@std@@QAE@ABH0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@HH@std@@QAE@ABH0@Z PROC			; std::pair<int,int>::pair<int,int>, COMDAT
; _this$ = ecx

; 50   : 		{	// construct from specified values

	mov	eax, ecx
	mov	ecx, DWORD PTR __Val1$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx

; 51   : 		}

	ret	8
??0?$pair@HH@std@@QAE@ABH0@Z ENDP			; std::pair<int,int>::pair<int,int>
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >, COMDAT
; _this$ = ecx

; 62   : 	_Vector_const_iterator()

	mov	eax, ecx

; 63   : 		{	// construct with null pointer
; 64   : 		_Myptr = 0;

	mov	DWORD PTR [eax], 0

; 65   : 		}

	ret	0
??0?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >
_TEXT	ENDS
PUBLIC	??0?$ArrayWrapper@H@@QAE@HPAH@Z			; ArrayWrapper<int>::ArrayWrapper<int>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ??0?$ArrayWrapper@H@@QAE@HPAH@Z
_TEXT	SEGMENT
_count$ = 8						; size = 4
_values$ = 12						; size = 4
??0?$ArrayWrapper@H@@QAE@HPAH@Z PROC			; ArrayWrapper<int>::ArrayWrapper<int>, COMDAT
; _this$ = ecx

; 378  : 		: m_values(values), m_count(count) {}

	mov	edx, DWORD PTR _count$[esp-4]
	mov	eax, ecx
	mov	ecx, DWORD PTR _values$[esp-4]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	ret	8
??0?$ArrayWrapper@H@@QAE@HPAH@Z ENDP			; ArrayWrapper<int>::ArrayWrapper<int>
_TEXT	ENDS
PUBLIC	??R?$less@H@std@@QBE_NABH0@Z			; std::less<int>::operator()
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\functional
;	COMDAT ??R?$less@H@std@@QBE_NABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@H@std@@QBE_NABH0@Z PROC			; std::less<int>::operator(), COMDAT
; _this$ = ecx

; 143  : 		return (_Left < _Right);

	mov	eax, DWORD PTR __Left$[esp-4]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	eax, eax
	cmp	ecx, DWORD PTR [edx]
	setl	al

; 144  : 		}

	ret	8
??R?$less@H@std@@QBE_NABH0@Z ENDP			; std::less<int>::operator()
_TEXT	ENDS
PUBLIC	?addTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z ; DestructionNotification<FObjectHandle<CvUnit> >::addTarget
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
;	COMDAT ?addTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
_target$ = 8						; size = 4
?addTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z PROC ; DestructionNotification<FObjectHandle<CvUnit> >::addTarget, COMDAT
; _this$ = ecx

; 52   : #ifdef TRACK_DESTRUCTION_NOTIFICATION
; 53   : 		m_targets.insert(&target);
; 54   : #endif
; 55   : 	}

	ret	4
?addTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z ENDP ; DestructionNotification<FObjectHandle<CvUnit> >::addTarget
_TEXT	ENDS
PUBLIC	?removeTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z ; DestructionNotification<FObjectHandle<CvUnit> >::removeTarget
; Function compile flags: /Ogtpy
;	COMDAT ?removeTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
_target$ = 8						; size = 4
?removeTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z PROC ; DestructionNotification<FObjectHandle<CvUnit> >::removeTarget, COMDAT
; _this$ = ecx

; 63   : #ifdef TRACK_DESTRUCTION_NOTIFICATION
; 64   : 		m_targets.erase(&target);
; 65   : #endif
; 66   : 	}

	ret	4
?removeTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z ENDP ; DestructionNotification<FObjectHandle<CvUnit> >::removeTarget
_TEXT	ENDS
PUBLIC	?key_comp@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AU?$less@H@2@XZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::key_comp
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?key_comp@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AU?$less@H@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?key_comp@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AU?$less@H@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::key_comp, COMDAT
; _this$ = ecx

; 621  : 		return (this->comp);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 622  : 		}

	ret	4
?key_comp@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AU?$less@H@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::key_comp
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBHH@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<int const ,int> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<int const ,int> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBHH@std@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBHH@std@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<int const ,int> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<int const ,int> > >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBHH@std@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<int const ,int> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<int const ,int> > >
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBHH@std@@@std@@QAE@XZ	; std::allocator<std::pair<int const ,int> >::allocator<std::pair<int const ,int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBHH@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBHH@std@@@std@@QAE@XZ PROC	; std::allocator<std::pair<int const ,int> >::allocator<std::pair<int const ,int> >, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@U?$pair@$$CBHH@std@@@std@@QAE@XZ ENDP	; std::allocator<std::pair<int const ,int> >::allocator<std::pair<int const ,int> >
_TEXT	ENDS
PUBLIC	?capacity@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBEIXZ ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::capacity
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?capacity@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBEIXZ PROC ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::capacity, COMDAT
; _this$ = ecx

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	edx, DWORD PTR [ecx+4]
	test	edx, edx
	jne	SHORT $LN3@capacity
	xor	eax, eax

; 636  : 		}

	ret	0
$LN3@capacity:

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	eax, DWORD PTR [ecx+12]
	sub	eax, edx
	sar	eax, 3

; 636  : 		}

	ret	0
?capacity@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBEIXZ ENDP ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::capacity
_TEXT	ENDS
PUBLIC	?size@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBEIXZ ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBEIXZ PROC ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::size, COMDAT
; _this$ = ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 3

; 727  : 		}

	ret	0
?size@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBEIXZ ENDP ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::size
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<FreeResourceXCities> >::~_Container_base_aux_alloc_empty<std::allocator<FreeResourceXCities> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<FreeResourceXCities> >::~_Container_base_aux_alloc_empty<std::allocator<FreeResourceXCities> >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<FreeResourceXCities> >::~_Container_base_aux_alloc_empty<std::allocator<FreeResourceXCities> >
_TEXT	ENDS
PUBLIC	??0?$allocator@UFreeResourceXCities@@@std@@QAE@XZ ; std::allocator<FreeResourceXCities>::allocator<FreeResourceXCities>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UFreeResourceXCities@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@UFreeResourceXCities@@@std@@QAE@XZ PROC	; std::allocator<FreeResourceXCities>::allocator<FreeResourceXCities>, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@UFreeResourceXCities@@@std@@QAE@XZ ENDP	; std::allocator<FreeResourceXCities>::allocator<FreeResourceXCities>
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<CvTraitEntry *> >::~_Container_base_aux_alloc_empty<std::allocator<CvTraitEntry *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<CvTraitEntry *> >::~_Container_base_aux_alloc_empty<std::allocator<CvTraitEntry *> >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<CvTraitEntry *> >::~_Container_base_aux_alloc_empty<std::allocator<CvTraitEntry *> >
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVCvTraitEntry@@@std@@QAE@XZ	; std::allocator<CvTraitEntry *>::allocator<CvTraitEntry *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAVCvTraitEntry@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAVCvTraitEntry@@@std@@QAE@XZ PROC	; std::allocator<CvTraitEntry *>::allocator<CvTraitEntry *>, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@PAVCvTraitEntry@@@std@@QAE@XZ ENDP	; std::allocator<CvTraitEntry *>::allocator<CvTraitEntry *>
_TEXT	ENDS
PUBLIC	?capacity@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBEIXZ ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::capacity
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?capacity@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBEIXZ PROC ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::capacity, COMDAT
; _this$ = ecx

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	edx, DWORD PTR [ecx+4]
	test	edx, edx
	jne	SHORT $LN3@capacity@2
	xor	eax, eax

; 636  : 		}

	ret	0
$LN3@capacity@2:

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	eax, DWORD PTR [ecx+12]
	sub	eax, edx
	sar	eax, 2

; 636  : 		}

	ret	0
?capacity@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBEIXZ ENDP ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::capacity
_TEXT	ENDS
PUBLIC	??0?$allocator@W4TraitTypes@@@std@@QAE@XZ	; std::allocator<enum TraitTypes>::allocator<enum TraitTypes>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@W4TraitTypes@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@W4TraitTypes@@@std@@QAE@XZ PROC		; std::allocator<enum TraitTypes>::allocator<enum TraitTypes>, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@W4TraitTypes@@@std@@QAE@XZ ENDP		; std::allocator<enum TraitTypes>::allocator<enum TraitTypes>
_TEXT	ENDS
PUBLIC	??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@ ; `string'
PUBLIC	?Alloc@?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@IAEPAUFreeTraitUnit@@I@Z ; FStaticVector<FreeTraitUnit,5,1,297,0>::Alloc
EXTRN	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z:PROC ; FireMallocAlignedNoTracking
;	COMDAT ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@ DB 'c:\users\eno'
	DB	'rmousapplepie\documents\github\lekmod\lekmod_dll\fireplace\in'
	DB	'clude\fireworks\FFastVector.h', 00H		; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?Alloc@?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@IAEPAUFreeTraitUnit@@I@Z
_TEXT	SEGMENT
_uiSize$ = 8						; size = 4
?Alloc@?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@IAEPAUFreeTraitUnit@@I@Z PROC ; FStaticVector<FreeTraitUnit,5,1,297,0>::Alloc, COMDAT
; _this$ = ecx

; 795  : 	T* Alloc(unsigned int uiSize){

	push	esi
	push	edi

; 796  : 		T* pRet;
; 797  : 		if( uiSize > L ){

	mov	edi, DWORD PTR _uiSize$[esp+4]
	mov	esi, ecx
	cmp	edi, 5
	jbe	SHORT $LN2@Alloc

; 798  : 			pRet = (T*)FMALLOCALIGNED( uiSize*sizeof(T), __alignof(T), AllocPool, nSubID );

	push	798					; 0000031eH
	push	OFFSET ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
	lea	eax, DWORD PTR [edi*8]
	push	4
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H

; 799  : 			m_uiCurrMaxSize = uiSize;

	mov	DWORD PTR [esi+8], edi
	pop	edi
	pop	esi

; 803  : 		}
; 804  : 		return pRet;
; 805  : 	};

	ret	4
$LN2@Alloc:
	pop	edi

; 800  : 		}else{
; 801  : 			pRet = (T*)m_aData;

	lea	eax, DWORD PTR [esi+12]

; 802  : 			m_uiCurrMaxSize = L;

	mov	DWORD PTR [esi+8], 5
	pop	esi

; 803  : 		}
; 804  : 		return pRet;
; 805  : 	};

	ret	4
?Alloc@?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@IAEPAUFreeTraitUnit@@I@Z ENDP ; FStaticVector<FreeTraitUnit,5,1,297,0>::Alloc
_TEXT	ENDS
PUBLIC	??1?$BaseVector@UFreeTraitUnit@@$00@@QAE@XZ	; BaseVector<FreeTraitUnit,1>::~BaseVector<FreeTraitUnit,1>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$BaseVector@UFreeTraitUnit@@$00@@QAE@XZ
_TEXT	SEGMENT
??1?$BaseVector@UFreeTraitUnit@@$00@@QAE@XZ PROC	; BaseVector<FreeTraitUnit,1>::~BaseVector<FreeTraitUnit,1>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	ret	0
??1?$BaseVector@UFreeTraitUnit@@$00@@QAE@XZ ENDP	; BaseVector<FreeTraitUnit,1>::~BaseVector<FreeTraitUnit,1>
_TEXT	ENDS
PUBLIC	??0?$BaseVector@UFreeTraitUnit@@$00@@IAE@XZ	; BaseVector<FreeTraitUnit,1>::BaseVector<FreeTraitUnit,1>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$BaseVector@UFreeTraitUnit@@$00@@IAE@XZ
_TEXT	SEGMENT
??0?$BaseVector@UFreeTraitUnit@@$00@@IAE@XZ PROC	; BaseVector<FreeTraitUnit,1>::BaseVector<FreeTraitUnit,1>, COMDAT
; _this$ = ecx

; 216  : 	BaseVector() : m_uiCurrSize(0), m_uiCurrMaxSize(0), m_pData(NULL) {};

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$BaseVector@UFreeTraitUnit@@$00@@IAE@XZ ENDP	; BaseVector<FreeTraitUnit,1>::BaseVector<FreeTraitUnit,1>
_TEXT	ENDS
PUBLIC	?Destroy@?$BaseVector@UFreeTraitUnit@@$00@@IAEXPAUFreeTraitUnit@@I@Z ; BaseVector<FreeTraitUnit,1>::Destroy
; Function compile flags: /Ogtpy
;	COMDAT ?Destroy@?$BaseVector@UFreeTraitUnit@@$00@@IAEXPAUFreeTraitUnit@@I@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Destroy@?$BaseVector@UFreeTraitUnit@@$00@@IAEXPAUFreeTraitUnit@@I@Z PROC ; BaseVector<FreeTraitUnit,1>::Destroy, COMDAT
; _this$ = ecx

; 221  : 		if( !bPODType){
; 222  : 			for(unsigned int i = 0; i < uiNumElements; ++i){
; 223  : 				pVal[i].~T();
; 224  : 			}
; 225  : 		}
; 226  : 	};

	ret	8
?Destroy@?$BaseVector@UFreeTraitUnit@@$00@@IAEXPAUFreeTraitUnit@@I@Z ENDP ; BaseVector<FreeTraitUnit,1>::Destroy
_TEXT	ENDS
PUBLIC	?capacity@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEIXZ ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::capacity
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?capacity@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEIXZ PROC ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::capacity, COMDAT
; _this$ = ecx

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	edx, DWORD PTR [ecx+4]
	test	edx, edx
	jne	SHORT $LN3@capacity@3
	xor	eax, eax

; 636  : 		}

	ret	0
$LN3@capacity@3:

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	eax, DWORD PTR [ecx+12]
	sub	eax, edx
	sar	eax, 3

; 636  : 		}

	ret	0
?capacity@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEIXZ ENDP ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::capacity
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<MayaBonusChoice> >::~_Container_base_aux_alloc_empty<std::allocator<MayaBonusChoice> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<MayaBonusChoice> >::~_Container_base_aux_alloc_empty<std::allocator<MayaBonusChoice> >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<MayaBonusChoice> >::~_Container_base_aux_alloc_empty<std::allocator<MayaBonusChoice> >
_TEXT	ENDS
PUBLIC	??0?$allocator@UMayaBonusChoice@@@std@@QAE@XZ	; std::allocator<MayaBonusChoice>::allocator<MayaBonusChoice>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UMayaBonusChoice@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@UMayaBonusChoice@@@std@@QAE@XZ PROC	; std::allocator<MayaBonusChoice>::allocator<MayaBonusChoice>, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@UMayaBonusChoice@@@std@@QAE@XZ ENDP	; std::allocator<MayaBonusChoice>::allocator<MayaBonusChoice>
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::const_iterator
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 244  : 			{	// construct with node pointer _Pnode

	mov	eax, ecx
	mov	ecx, DWORD PTR __Pnode$[esp-4]
	mov	DWORD PTR [eax], ecx

; 245  : 			}

	ret	4
??0const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE_NABV012@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 300  : 
; 301  :  #if _HAS_ITERATOR_DEBUGGING
; 302  : 			if (this->_Mycont == 0 || this->_Mycont != _Right._Mycont)
; 303  : 				{
; 304  : 				_DEBUG_ERROR("map/set iterators incompatible");
; 305  : 				_SCL_SECURE_INVALID_ARGUMENT;
; 306  : 				}
; 307  :  #else
; 308  : 			_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 309  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 310  : 
; 311  : 			return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 312  : 			}

	ret	4
??8const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::_Mynode
; Function compile flags: /Ogtpy
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@3@XZ PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 410  : 			return (_Ptr);

	mov	eax, DWORD PTR [ecx]

; 411  : 			}

	ret	0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBEABQAVCvTraitEntry@@XZ ; std::_Vector_const_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::operator*
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBEABQAVCvTraitEntry@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBEABQAVCvTraitEntry@@XZ PROC ; std::_Vector_const_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::operator*, COMDAT
; _this$ = ecx

; 92   : 
; 93   :  #if _HAS_ITERATOR_DEBUGGING
; 94   : 		if (this->_Mycont == 0
; 95   : 			|| _Myptr < ((_Myvec *)this->_Mycont)->_Myfirst
; 96   : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 97   : 			{
; 98   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 99   : 			_SCL_SECURE_OUT_OF_RANGE;
; 100  : 			}
; 101  :  #else
; 102  :  		_SCL_SECURE_VALIDATE(this->_Has_container());
; 103  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

	mov	eax, DWORD PTR [ecx]

; 107  : 		}

	ret	0
??D?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBEABQAVCvTraitEntry@@XZ ENDP ; std::_Vector_const_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::operator++, COMDAT
; _this$ = ecx

; 115  : 		{	// preincrement

	mov	eax, ecx

; 116  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 117  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 118  : 
; 119  :  #if _HAS_ITERATOR_DEBUGGING
; 120  : 		if (this->_Mycont == 0
; 121  : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 122  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 123  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 124  : 
; 125  : 		++_Myptr;

	add	DWORD PTR [eax], 4

; 126  : 		return (*this);
; 127  : 		}

	ret	0
??E?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::operator++
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::operator==
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@PAUMayaBonusChoice@@@Z ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@PAUMayaBonusChoice@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@PAUMayaBonusChoice@@@Z PROC ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@PAUMayaBonusChoice@@@Z ENDP ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEABUMayaBonusChoice@@XZ ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??D?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEABUMayaBonusChoice@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEABUMayaBonusChoice@@XZ PROC ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator*, COMDAT
; _this$ = ecx

; 92   : 
; 93   :  #if _HAS_ITERATOR_DEBUGGING
; 94   : 		if (this->_Mycont == 0
; 95   : 			|| _Myptr < ((_Myvec *)this->_Mycont)->_Myfirst
; 96   : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 97   : 			{
; 98   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 99   : 			_SCL_SECURE_OUT_OF_RANGE;
; 100  : 			}
; 101  :  #else
; 102  :  		_SCL_SECURE_VALIDATE(this->_Has_container());
; 103  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

	mov	eax, DWORD PTR [ecx]

; 107  : 		}

	ret	0
??D?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEABUMayaBonusChoice@@XZ ENDP ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator++, COMDAT
; _this$ = ecx

; 115  : 		{	// preincrement

	mov	eax, ecx

; 116  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 117  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 118  : 
; 119  :  #if _HAS_ITERATOR_DEBUGGING
; 120  : 		if (this->_Mycont == 0
; 121  : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 122  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 123  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 124  : 
; 125  : 		++_Myptr;

	add	DWORD PTR [eax], 8

; 126  : 		return (*this);
; 127  : 		}

	ret	0
??E?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator++
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator==
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@PAUMayaBonusChoice@@@Z ; std::_Vector_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Vector_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@PAUMayaBonusChoice@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@PAUMayaBonusChoice@@@Z PROC ; std::_Vector_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Vector_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@PAUMayaBonusChoice@@@Z ENDP ; std::_Vector_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Vector_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Isnil
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Isnil, COMDAT

; 157  : 		return ((_Charref)(*_Pnode)._Isnil);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 21					; 00000015H

; 158  : 		}

	ret	0
?_Isnil@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Left
; Function compile flags: /Ogtpy
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Left, COMDAT

; 167  : 		return ((_Nodepref)(*_Pnode)._Left);

	mov	eax, DWORD PTR __Pnode$[esp-4]

; 168  : 		}

	ret	0
?_Left@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Parent
; Function compile flags: /Ogtpy
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Parent, COMDAT

; 172  : 		return ((_Nodepref)(*_Pnode)._Parent);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 4

; 173  : 		}

	ret	0
?_Parent@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Right
; Function compile flags: /Ogtpy
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Right, COMDAT

; 177  : 		return ((_Nodepref)(*_Pnode)._Right);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 8

; 178  : 		}

	ret	0
?_Right@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Right
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAAU?$pair@$$CBHH@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Myval
; Function compile flags: /Ogtpy
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAAU?$pair@$$CBHH@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAAU?$pair@$$CBHH@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Myval, COMDAT

; 182  : 		return ((_Vref)(*_Pnode)._Myval);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 12					; 0000000cH

; 183  : 		}

	ret	0
?_Myval@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAAU?$pair@$$CBHH@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Myval
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::size, COMDAT
; _this$ = ecx

; 601  : 		return (_Mysize);

	mov	eax, DWORD PTR [ecx+8]

; 602  : 		}

	ret	0
?size@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::size
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Lmost
; Function compile flags: /Ogtpy
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Lmost, COMDAT
; _this$ = ecx

; 1281 : 		return (_Left(_Myhead));

	mov	eax, DWORD PTR [ecx+4]

; 1282 : 		}

	ret	0
?_Lmost@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Max
; Function compile flags: /Ogtpy
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Max, COMDAT

; 1306 : 		while (!_Isnil(_Right(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN1@Max
	npad	3
$LL2@Max:

; 1307 : 			_Pnode = _Right(_Pnode);

	mov	eax, ecx
	mov	ecx, DWORD PTR [eax+8]
	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LL2@Max
$LN1@Max:

; 1308 : 		return (_Pnode);
; 1309 : 		}

	ret	0
?_Max@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Min
; Function compile flags: /Ogtpy
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Min, COMDAT

; 1313 : 		while (!_Isnil(_Left(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[esp-4]
	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN1@Min
	npad	4
$LL2@Min:

; 1314 : 			_Pnode = _Left(_Pnode);

	mov	eax, ecx
	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LL2@Min
$LN1@Min:

; 1315 : 		return (_Pnode);
; 1316 : 		}

	ret	0
?_Min@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Min
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Rmost
; Function compile flags: /Ogtpy
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Rmost, COMDAT
; _this$ = ecx

; 1320 : 		return (_Right(_Myhead));

	mov	eax, DWORD PTR [ecx+4]
	add	eax, 8

; 1321 : 		}

	ret	0
?_Rmost@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Root
; Function compile flags: /Ogtpy
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Root, COMDAT
; _this$ = ecx

; 1325 : 		return (_Parent(_Myhead));

	mov	eax, DWORD PTR [ecx+4]
	add	eax, 4

; 1326 : 		}

	ret	0
?_Root@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Root
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@SAABHABU?$pair@$$CBHH@2@@Z ; std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1>::_Kfn
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@SAABHABU?$pair@$$CBHH@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@SAABHABU?$pair@$$CBHH@2@@Z PROC ; std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1>::_Kfn, COMDAT

; 65   : 		return (_Val.first);

	mov	eax, DWORD PTR __Val$[esp-4]

; 66   : 		}

	ret	0
?_Kfn@?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@SAABHABU?$pair@$$CBHH@2@@Z ENDP ; std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBHH@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<int const ,int> >::allocator<std::pair<int const ,int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBHH@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBHH@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<int const ,int> >::allocator<std::pair<int const ,int> >, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@U?$pair@$$CBHH@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<int const ,int> >::allocator<std::pair<int const ,int> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node>::deallocate
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@KAXXZ ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Xlen
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T229398 = -80						; size = 28
$T229397 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@KAXXZ PROC ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	-1
	push	__ehhandler$?_Xlen@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 68					; 00000044H

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T229398[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T229397[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T229398[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T229397[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T229397[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T229397[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T229397[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN13@Xlen:
$LN12@Xlen:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T229398[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T229397[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@KAXXZ:
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@KAXXZ ENDP ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Xlen
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAE@V?$allocator@UFreeResourceXCities@@@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<FreeResourceXCities> >::_Container_base_aux_alloc_empty<std::allocator<FreeResourceXCities> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAE@V?$allocator@UFreeResourceXCities@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAE@V?$allocator@UFreeResourceXCities@@@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<FreeResourceXCities> >::_Container_base_aux_alloc_empty<std::allocator<FreeResourceXCities> >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAE@V?$allocator@UFreeResourceXCities@@@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<FreeResourceXCities> >::_Container_base_aux_alloc_empty<std::allocator<FreeResourceXCities> >
_TEXT	ENDS
PUBLIC	??0?$allocator@UFreeResourceXCities@@@std@@QAE@ABV01@@Z ; std::allocator<FreeResourceXCities>::allocator<FreeResourceXCities>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UFreeResourceXCities@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@UFreeResourceXCities@@@std@@QAE@ABV01@@Z PROC ; std::allocator<FreeResourceXCities>::allocator<FreeResourceXCities>, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@UFreeResourceXCities@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<FreeResourceXCities>::allocator<FreeResourceXCities>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@UFreeResourceXCities@@@std@@QAEXPAUFreeResourceXCities@@I@Z ; std::allocator<FreeResourceXCities>::deallocate
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@UFreeResourceXCities@@@std@@QAEXPAUFreeResourceXCities@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UFreeResourceXCities@@@std@@QAEXPAUFreeResourceXCities@@I@Z PROC ; std::allocator<FreeResourceXCities>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@UFreeResourceXCities@@@std@@QAEXPAUFreeResourceXCities@@I@Z ENDP ; std::allocator<FreeResourceXCities>::deallocate
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@KAXXZ ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T229433 = -80						; size = 28
$T229432 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@KAXXZ PROC ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	-1
	push	__ehhandler$?_Xlen@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 68					; 00000044H

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T229433[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T229432[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T229433[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T229432[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T229432[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T229432[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T229432[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN13@Xlen@2:
$LN12@Xlen@2:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T229433[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T229432[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@KAXXZ:
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@KAXXZ ENDP ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Xlen
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAE@V?$allocator@PAVCvTraitEntry@@@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<CvTraitEntry *> >::_Container_base_aux_alloc_empty<std::allocator<CvTraitEntry *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAE@V?$allocator@PAVCvTraitEntry@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAE@V?$allocator@PAVCvTraitEntry@@@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<CvTraitEntry *> >::_Container_base_aux_alloc_empty<std::allocator<CvTraitEntry *> >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAE@V?$allocator@PAVCvTraitEntry@@@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<CvTraitEntry *> >::_Container_base_aux_alloc_empty<std::allocator<CvTraitEntry *> >
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVCvTraitEntry@@@std@@QAE@ABV01@@Z ; std::allocator<CvTraitEntry *>::allocator<CvTraitEntry *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAVCvTraitEntry@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@PAVCvTraitEntry@@@std@@QAE@ABV01@@Z PROC	; std::allocator<CvTraitEntry *>::allocator<CvTraitEntry *>, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@PAVCvTraitEntry@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<CvTraitEntry *>::allocator<CvTraitEntry *>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVCvTraitEntry@@@std@@QAEXPAPAVCvTraitEntry@@I@Z ; std::allocator<CvTraitEntry *>::deallocate
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@PAVCvTraitEntry@@@std@@QAEXPAPAVCvTraitEntry@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVCvTraitEntry@@@std@@QAEXPAPAVCvTraitEntry@@I@Z PROC ; std::allocator<CvTraitEntry *>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@PAVCvTraitEntry@@@std@@QAEXPAPAVCvTraitEntry@@I@Z ENDP ; std::allocator<CvTraitEntry *>::deallocate
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE?AV?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@V?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@@Z ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Make_iter
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Make_iter@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE?AV?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@V?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE?AV?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@V?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@@Z PROC ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Make_iter, COMDAT
; _this$ = ecx

; 687  : 		return (iterator(_Where._Myptr));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR __Where$[esp-4]
	mov	DWORD PTR [eax], ecx

; 688  : 		}

	ret	8
?_Make_iter@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE?AV?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@V?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@@Z ENDP ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Make_iter
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@KAXXZ ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T229478 = -80						; size = 28
$T229477 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@KAXXZ PROC ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	-1
	push	__ehhandler$?_Xlen@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 68					; 00000044H

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T229478[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T229477[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T229478[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T229477[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T229477[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T229477[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T229477[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN13@Xlen@3:
$LN12@Xlen@3:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T229478[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T229477[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@KAXXZ:
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@KAXXZ ENDP ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Xlen
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAE@V?$allocator@UMayaBonusChoice@@@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<MayaBonusChoice> >::_Container_base_aux_alloc_empty<std::allocator<MayaBonusChoice> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAE@V?$allocator@UMayaBonusChoice@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAE@V?$allocator@UMayaBonusChoice@@@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<MayaBonusChoice> >::_Container_base_aux_alloc_empty<std::allocator<MayaBonusChoice> >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAE@V?$allocator@UMayaBonusChoice@@@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<MayaBonusChoice> >::_Container_base_aux_alloc_empty<std::allocator<MayaBonusChoice> >
_TEXT	ENDS
PUBLIC	??0?$allocator@UMayaBonusChoice@@@std@@QAE@ABV01@@Z ; std::allocator<MayaBonusChoice>::allocator<MayaBonusChoice>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UMayaBonusChoice@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@UMayaBonusChoice@@@std@@QAE@ABV01@@Z PROC ; std::allocator<MayaBonusChoice>::allocator<MayaBonusChoice>, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@UMayaBonusChoice@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<MayaBonusChoice>::allocator<MayaBonusChoice>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@UMayaBonusChoice@@@std@@QAEXPAUMayaBonusChoice@@I@Z ; std::allocator<MayaBonusChoice>::deallocate
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@UMayaBonusChoice@@@std@@QAEXPAUMayaBonusChoice@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UMayaBonusChoice@@@std@@QAEXPAUMayaBonusChoice@@I@Z PROC ; std::allocator<MayaBonusChoice>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@UMayaBonusChoice@@@std@@QAEXPAUMayaBonusChoice@@I@Z ENDP ; std::allocator<MayaBonusChoice>::deallocate
_TEXT	ENDS
PUBLIC	??G?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBEHABV01@@Z ; std::_Vector_const_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::operator-
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??G?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??G?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBEHABV01@@Z PROC ; std::_Vector_const_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::operator-, COMDAT
; _this$ = ecx

; 187  : 
; 188  :  #if _HAS_ITERATOR_DEBUGGING
; 189  : 		_Compat(_Right);
; 190  :  #else
; 191  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 192  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 193  : 
; 194  : 		return (_Myptr - _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Right$[esp-4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 195  : 		}

	ret	4
??G?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBEHABV01@@Z ENDP ; std::_Vector_const_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::operator-
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::iterator::iterator
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::iterator::iterator, COMDAT
; _this$ = ecx

; 459  : 			{	// construct with node pointer _Pnode

	mov	eax, ecx
	mov	ecx, DWORD PTR __Pnode$[esp-4]
	mov	DWORD PTR [eax], ecx

; 460  : 			}

	ret	4
??0iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE@PAPAVCvTraitEntry@@@Z ; std::_Vector_const_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Vector_const_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE@PAPAVCvTraitEntry@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE@PAPAVCvTraitEntry@@@Z PROC ; std::_Vector_const_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Vector_const_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE@PAPAVCvTraitEntry@@@Z ENDP ; std::_Vector_const_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Vector_const_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >
_TEXT	ENDS
PUBLIC	??G?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEHABV01@@Z ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator-
; Function compile flags: /Ogtpy
;	COMDAT ??G?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??G?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEHABV01@@Z PROC ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator-, COMDAT
; _this$ = ecx

; 187  : 
; 188  :  #if _HAS_ITERATOR_DEBUGGING
; 189  : 		_Compat(_Right);
; 190  :  #else
; 191  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 192  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 193  : 
; 194  : 		return (_Myptr - _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Right$[esp-4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 3

; 195  : 		}

	ret	4
??G?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEHABV01@@Z ENDP ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator-
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::iterator,bool>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@1@AB_N@Z PROC ; std::pair<std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::iterator,bool>, COMDAT
; _this$ = ecx

; 50   : 		{	// construct from specified values

	mov	eax, ecx
	mov	ecx, DWORD PTR __Val1$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax+4], dl

; 51   : 		}

	ret	8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??G?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBEHABV01@@Z ; std::_Vector_const_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator-
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??G?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??G?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBEHABV01@@Z PROC ; std::_Vector_const_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator-, COMDAT
; _this$ = ecx

; 187  : 
; 188  :  #if _HAS_ITERATOR_DEBUGGING
; 189  : 		_Compat(_Right);
; 190  :  #else
; 191  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 192  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 193  : 
; 194  : 		return (_Myptr - _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Right$[esp-4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 3

; 195  : 		}

	ret	4
??G?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBEHABV01@@Z ENDP ; std::_Vector_const_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator-
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Color
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Color, COMDAT

; 152  : 		return ((_Charref)(*_Pnode)._Color);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 20					; 00000014H

; 153  : 		}

	ret	0
?_Color@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Color
_TEXT	ENDS
PUBLIC	?_Make_iter@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AViterator@12@Vconst_iterator@12@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Make_iter
; Function compile flags: /Ogtpy
;	COMDAT ?_Make_iter@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AViterator@12@Vconst_iterator@12@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AViterator@12@Vconst_iterator@12@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Make_iter, COMDAT
; _this$ = ecx

; 576  : 		return (iterator(_TREE_ITERATOR(_Where._Ptr)));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR __Where$[esp-4]
	mov	DWORD PTR [eax], ecx

; 577  : 		}

	ret	8
?_Make_iter@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AViterator@12@Vconst_iterator@12@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Make_iter
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Lrotate
; Function compile flags: /Ogtpy
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Lrotate, COMDAT
; _this$ = ecx

; 1286 : 		_Nodeptr _Pnode = _Right(_Wherenode);

	mov	edx, DWORD PTR __Wherenode$[esp-4]
	mov	eax, DWORD PTR [edx+8]
	push	esi

; 1287 : 		_Right(_Wherenode) = _Left(_Pnode);

	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], esi

; 1288 : 
; 1289 : 		if (!_Isnil(_Left(_Pnode)))

	mov	esi, DWORD PTR [eax]
	cmp	BYTE PTR [esi+21], 0
	jne	SHORT $LN5@Lrotate

; 1290 : 			_Parent(_Left(_Pnode)) = _Wherenode;

	mov	DWORD PTR [esi+4], edx
$LN5@Lrotate:

; 1291 : 		_Parent(_Pnode) = _Parent(_Wherenode);

	mov	esi, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], esi

; 1292 : 
; 1293 : 		if (_Wherenode == _Root())

	mov	ecx, DWORD PTR [ecx+4]
	pop	esi
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN4@Lrotate

; 1294 : 			_Root() = _Pnode;

	mov	DWORD PTR [ecx+4], eax

; 1299 : 
; 1300 : 		_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax], edx

; 1301 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1302 : 		}

	ret	4
$LN4@Lrotate:

; 1295 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

	mov	ecx, DWORD PTR [edx+4]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN2@Lrotate

; 1296 : 			_Left(_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [ecx], eax

; 1299 : 
; 1300 : 		_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax], edx

; 1301 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1302 : 		}

	ret	4
$LN2@Lrotate:

; 1297 : 		else
; 1298 : 			_Right(_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [ecx+8], eax

; 1299 : 
; 1300 : 		_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax], edx

; 1301 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1302 : 		}

	ret	4
?_Lrotate@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Rrotate
; Function compile flags: /Ogtpy
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Rrotate, COMDAT
; _this$ = ecx

; 1330 : 		_Nodeptr _Pnode = _Left(_Wherenode);

	mov	edx, DWORD PTR __Wherenode$[esp-4]
	mov	eax, DWORD PTR [edx]
	push	esi

; 1331 : 		_Left(_Wherenode) = _Right(_Pnode);

	mov	esi, DWORD PTR [eax+8]
	mov	DWORD PTR [edx], esi

; 1332 : 
; 1333 : 		if (!_Isnil(_Right(_Pnode)))

	mov	esi, DWORD PTR [eax+8]
	cmp	BYTE PTR [esi+21], 0
	jne	SHORT $LN5@Rrotate

; 1334 : 			_Parent(_Right(_Pnode)) = _Wherenode;

	mov	DWORD PTR [esi+4], edx
$LN5@Rrotate:

; 1335 : 		_Parent(_Pnode) = _Parent(_Wherenode);

	mov	esi, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], esi

; 1336 : 
; 1337 : 		if (_Wherenode == _Root())

	mov	ecx, DWORD PTR [ecx+4]
	pop	esi
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN4@Rrotate

; 1338 : 			_Root() = _Pnode;

	mov	DWORD PTR [ecx+4], eax

; 1343 : 
; 1344 : 		_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax+8], edx

; 1345 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1346 : 		}

	ret	4
$LN4@Rrotate:

; 1339 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

	mov	ecx, DWORD PTR [edx+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN2@Rrotate

; 1340 : 			_Right(_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [ecx+8], eax

; 1343 : 
; 1344 : 		_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax+8], edx

; 1345 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1346 : 		}

	ret	4
$LN2@Rrotate:

; 1341 : 		else
; 1342 : 			_Left(_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [ecx], eax

; 1343 : 
; 1344 : 		_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax+8], edx

; 1345 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1346 : 		}

	ret	4
?_Rrotate@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Rrotate
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	push	edi
	mov	edi, DWORD PTR ___that$[esp+20]
	mov	esi, ecx
	push	edi
	mov	DWORD PTR _this$[esp+28], esi
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	add	edi, 12					; 0000000cH
	push	edi
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR __$EHRec$[esp+36], 0
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
PUBLIC	?max_size@?$allocator@UFreeResourceXCities@@@std@@QBEIXZ ; std::allocator<FreeResourceXCities>::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@UFreeResourceXCities@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@UFreeResourceXCities@@@std@@QBEIXZ PROC ; std::allocator<FreeResourceXCities>::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 536870911				; 1fffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@UFreeResourceXCities@@@std@@QBEIXZ ENDP ; std::allocator<FreeResourceXCities>::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAVCvTraitEntry@@@std@@QBEIXZ ; std::allocator<CvTraitEntry *>::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$allocator@PAVCvTraitEntry@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@PAVCvTraitEntry@@@std@@QBEIXZ PROC ; std::allocator<CvTraitEntry *>::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 1073741823				; 3fffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@PAVCvTraitEntry@@@std@@QBEIXZ ENDP ; std::allocator<CvTraitEntry *>::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@UMayaBonusChoice@@@std@@QBEIXZ ; std::allocator<MayaBonusChoice>::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$allocator@UMayaBonusChoice@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@UMayaBonusChoice@@@std@@QBEIXZ PROC ; std::allocator<MayaBonusChoice>::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 536870911				; 1fffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@UMayaBonusChoice@@@std@@QBEIXZ ENDP ; std::allocator<MayaBonusChoice>::max_size
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE@PAUFreeResourceXCities@@@Z ; std::_Vector_const_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Vector_const_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE@PAUFreeResourceXCities@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE@PAUFreeResourceXCities@@@Z PROC ; std::_Vector_const_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Vector_const_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE@PAUFreeResourceXCities@@@Z ENDP ; std::_Vector_const_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Vector_const_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator==
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBHH@std@@@std@@QBEIXZ ; std::allocator<std::pair<int const ,int> >::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBHH@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBHH@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<int const ,int> >::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 536870911				; 1fffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@U?$pair@$$CBHH@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<int const ,int> >::max_size
_TEXT	ENDS
PUBLIC	??Y?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::operator+=
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??Y?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::operator+=, COMDAT
; _this$ = ecx

; 159  : 		{	// increment by integer

	mov	eax, ecx

; 160  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 161  : 		_SCL_SECURE_VALIDATE_RANGE(
; 162  : 			_Myptr + _Off <= ((_Myvec *)(this->_Getmycont()))->_Mylast &&
; 163  : 			_Myptr + _Off >= ((_Myvec *)(this->_Getmycont()))->_Myfirst);
; 164  : 		_Myptr += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [ecx*4]
	add	DWORD PTR [eax], edx

; 165  : 		return (*this);
; 166  : 		}

	ret	4
??Y?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::operator+=
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::_Dec
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 321  : 
; 322  :  #if _HAS_ITERATOR_DEBUGGING
; 323  : 			if (this->_Mycont == 0
; 324  : 				|| _Ptr == 0)
; 325  : 				{
; 326  : 				_DEBUG_ERROR("map/set iterator not decrementable");
; 327  : 				_SCL_SECURE_INVALID_ARGUMENT;
; 328  : 				}
; 329  :  #else
; 330  : 			_SCL_SECURE_VALIDATE(this->_Has_container());
; 331  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 332  : 
; 333  : 			if (_Isnil(_Ptr))

	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LN9@Dec

; 334  : 			{
; 335  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

	mov	eax, DWORD PTR [eax+8]

; 359  :  #if _HAS_ITERATOR_DEBUGGING
; 360  :  					{
; 361  : 					_DEBUG_ERROR("map/set iterator not decrementable");
; 362  : 					_SCL_SECURE_OUT_OF_RANGE;
; 363  : 					}
; 364  :  #elif _SECURE_SCL
; 365  : 					{
; 366  : 					_SCL_SECURE_OUT_OF_RANGE;
; 367  : 					}
; 368  :  #else
; 369  : 					return;	// begin() shouldn't be incremented, don't move
; 370  :  #endif
; 371  : 				else
; 372  : 					_Ptr = _Pnode;	// ==> parent if not head

	mov	DWORD PTR [ecx], eax

; 373  : 				}
; 374  : 			}

	ret	0
$LN9@Dec:

; 336  :    				if (_Isnil(_Ptr))
; 337  : #if _HAS_ITERATOR_DEBUGGING
; 338  : 				{
; 339  : 					_DEBUG_ERROR("map/set iterator not decrementable");
; 340  : 					_SCL_SECURE_OUT_OF_RANGE;
; 341  : 				}
; 342  : #elif _SECURE_SCL
; 343  : 				{
; 344  :     				_SCL_SECURE_OUT_OF_RANGE;
; 345  : 				}
; 346  : #else
; 347  : 				return;	// begin() shouldn't be incremented, don't move
; 348  : #endif
; 349  : 			}
; 350  : 			else if (!_Isnil(_Left(_Ptr)))

	mov	edx, DWORD PTR [eax]
	cmp	BYTE PTR [edx+21], 0
	jne	SHORT $LN43@Dec

; 351  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

	mov	eax, DWORD PTR [edx+8]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN24@Dec
	npad	1
$LL25@Dec:
	mov	edx, eax
	mov	eax, DWORD PTR [edx+8]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL25@Dec
$LN24@Dec:
	mov	DWORD PTR [ecx], edx

; 373  : 				}
; 374  : 			}

	ret	0
$LN43@Dec:

; 352  : 			else
; 353  : 				{	// climb looking for left subtree
; 354  : 				_Nodeptr _Pnode;
; 355  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 356  : 					&& _Ptr == _Left(_Pnode))

	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN3@Dec
$LL4@Dec:
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN3@Dec

; 357  : 					_Ptr = _Pnode;	// ==> parent while left subtree

	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL4@Dec
$LN3@Dec:

; 358  : 				if (_Isnil(_Ptr))

	mov	edx, DWORD PTR [ecx]
	cmp	BYTE PTR [edx+21], 0
	jne	SHORT $LN1@Dec

; 359  :  #if _HAS_ITERATOR_DEBUGGING
; 360  :  					{
; 361  : 					_DEBUG_ERROR("map/set iterator not decrementable");
; 362  : 					_SCL_SECURE_OUT_OF_RANGE;
; 363  : 					}
; 364  :  #elif _SECURE_SCL
; 365  : 					{
; 366  : 					_SCL_SECURE_OUT_OF_RANGE;
; 367  : 					}
; 368  :  #else
; 369  : 					return;	// begin() shouldn't be incremented, don't move
; 370  :  #endif
; 371  : 				else
; 372  : 					_Ptr = _Pnode;	// ==> parent if not head

	mov	DWORD PTR [ecx], eax
$LN1@Dec:

; 373  : 				}
; 374  : 			}

	ret	0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	??Y?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator+=
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??Y?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator+=, COMDAT
; _this$ = ecx

; 159  : 		{	// increment by integer

	mov	eax, ecx

; 160  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 161  : 		_SCL_SECURE_VALIDATE_RANGE(
; 162  : 			_Myptr + _Off <= ((_Myvec *)(this->_Getmycont()))->_Mylast &&
; 163  : 			_Myptr + _Off >= ((_Myvec *)(this->_Getmycont()))->_Myfirst);
; 164  : 		_Myptr += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [ecx*8]
	add	DWORD PTR [eax], edx

; 165  : 		return (*this);
; 166  : 		}

	ret	4
??Y?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator+=
_TEXT	ENDS
PUBLIC	??Y?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator+=
; Function compile flags: /Ogtpy
;	COMDAT ??Y?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator+=, COMDAT
; _this$ = ecx

; 159  : 		{	// increment by integer

	mov	eax, ecx

; 160  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 161  : 		_SCL_SECURE_VALIDATE_RANGE(
; 162  : 			_Myptr + _Off <= ((_Myvec *)(this->_Getmycont()))->_Mylast &&
; 163  : 			_Myptr + _Off >= ((_Myvec *)(this->_Getmycont()))->_Myfirst);
; 164  : 		_Myptr += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [ecx*8]
	add	DWORD PTR [eax], edx

; 165  : 		return (*this);
; 166  : 		}

	ret	4
??Y?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator+=
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBHH@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node::_Node
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBHH@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBHH@2@D@Z PROC ; std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node::_Node, COMDAT
; _this$ = ecx

; 38   : 			{	// construct a node with value

	mov	edx, DWORD PTR __Parg$[esp-4]
	mov	eax, ecx
	mov	ecx, DWORD PTR __Larg$[esp-4]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR __Rarg$[esp-4]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	dl, BYTE PTR __Carg$[esp-4]
	mov	DWORD PTR [eax+16], ecx
	mov	BYTE PTR [eax+20], dl
	mov	BYTE PTR [eax+21], 0

; 39   : 			}

	ret	20					; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBHH@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBHH@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBHH@std@@@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<int const ,int> > >::_Container_base_aux_alloc_empty<std::allocator<std::pair<int const ,int> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBHH@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBHH@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBHH@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBHH@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<int const ,int> > >::_Container_base_aux_alloc_empty<std::allocator<std::pair<int const ,int> > >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBHH@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBHH@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<int const ,int> > >::_Container_base_aux_alloc_empty<std::allocator<std::pair<int const ,int> > >
_TEXT	ENDS
PUBLIC	??$?0HH@?$pair@$$CBHH@std@@QAE@ABU?$pair@HH@1@@Z ; std::pair<int const ,int>::pair<int const ,int><int,int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
;	COMDAT ??$?0HH@?$pair@$$CBHH@std@@QAE@ABU?$pair@HH@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0HH@?$pair@$$CBHH@std@@QAE@ABU?$pair@HH@1@@Z PROC	; std::pair<int const ,int>::pair<int const ,int><int,int>, COMDAT
; _this$ = ecx

; 57   : 		{	// construct from compatible pair

	mov	eax, ecx
	mov	ecx, DWORD PTR __Right$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx

; 58   : 		}

	ret	4
??$?0HH@?$pair@$$CBHH@std@@QAE@ABU?$pair@HH@1@@Z ENDP	; std::pair<int const ,int>::pair<int const ,int><int,int>
_TEXT	ENDS
PUBLIC	??$?8U?$pair@$$CBHH@std@@U01@@std@@YA_NABV?$allocator@U?$pair@$$CBHH@std@@@0@0@Z ; std::operator==<std::pair<int const ,int>,std::pair<int const ,int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$?8U?$pair@$$CBHH@std@@U01@@std@@YA_NABV?$allocator@U?$pair@$$CBHH@std@@@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8U?$pair@$$CBHH@std@@U01@@std@@YA_NABV?$allocator@U?$pair@$$CBHH@std@@@0@0@Z PROC ; std::operator==<std::pair<int const ,int>,std::pair<int const ,int> >, COMDAT

; 175  : 	return (true);

	mov	al, 1

; 176  : 	}

	ret	0
??$?8U?$pair@$$CBHH@std@@U01@@std@@YA_NABV?$allocator@U?$pair@$$CBHH@std@@@0@0@Z ENDP ; std::operator==<std::pair<int const ,int>,std::pair<int const ,int> >
_TEXT	ENDS
PUBLIC	??$swap@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@YAXAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@0@0@Z ; std::swap<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
;	COMDAT ??$swap@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@YAXAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@YAXAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@0@0@Z PROC ; std::swap<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *>, COMDAT

; 18   : 	if (&_Left != &_Right)

	mov	eax, DWORD PTR __Left$[esp-4]
	mov	ecx, DWORD PTR __Right$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN1@swap

; 19   : 		{	// different, worth swapping
; 20   : 		_Ty _Tmp = _Left;

	mov	edx, DWORD PTR [eax]
	push	esi

; 21   : 
; 22   : 		_Left = _Right;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi

; 23   : 		_Right = _Tmp;

	mov	DWORD PTR [ecx], edx
	pop	esi
$LN1@swap:

; 24   : 		}
; 25   : 	}

	ret	0
??$swap@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@YAXAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@0@0@Z ENDP ; std::swap<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *>
_TEXT	ENDS
PUBLIC	??$swap@I@std@@YAXAAI0@Z			; std::swap<unsigned int>
; Function compile flags: /Ogtpy
;	COMDAT ??$swap@I@std@@YAXAAI0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@I@std@@YAXAAI0@Z PROC				; std::swap<unsigned int>, COMDAT

; 18   : 	if (&_Left != &_Right)

	mov	eax, DWORD PTR __Left$[esp-4]
	mov	ecx, DWORD PTR __Right$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN1@swap@2

; 19   : 		{	// different, worth swapping
; 20   : 		_Ty _Tmp = _Left;

	mov	edx, DWORD PTR [eax]
	push	esi

; 21   : 
; 22   : 		_Left = _Right;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi

; 23   : 		_Right = _Tmp;

	mov	DWORD PTR [ecx], edx
	pop	esi
$LN1@swap@2:

; 24   : 		}
; 25   : 	}

	ret	0
??$swap@I@std@@YAXAAI0@Z ENDP				; std::swap<unsigned int>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBHH@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHH@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *><std::pair<int const ,int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$?0U?$pair@$$CBHH@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHH@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBHH@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHH@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *><std::pair<int const ,int> >, COMDAT
; _this$ = ecx

; 128  : 		allocator(const allocator<_Other>&) _THROW0()

	mov	eax, ecx

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	4
??$?0U?$pair@$$CBHH@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHH@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *><std::pair<int const ,int> >
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@0@@Z PROC ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@UFreeResourceXCities@@@std@@YAPAUFreeResourceXCities@@IPAU1@@Z ; std::_Allocate<FreeResourceXCities>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@UFreeResourceXCities@@@std@@YAPAUFreeResourceXCities@@IPAU1@@Z
_TEXT	SEGMENT
$T229823 = -12						; size = 12
$T229827 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UFreeResourceXCities@@@std@@YAPAUFreeResourceXCities@@IPAU1@@Z PROC ; std::_Allocate<FreeResourceXCities>, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx*8]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 8
	jae	SHORT $LN1@Allocate

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T229827[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T229823[esp+16]
	mov	DWORD PTR $T229827[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T229823[esp+16]
	push	ecx
	mov	DWORD PTR $T229823[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate:
$LN8@Allocate:
	int	3
??$_Allocate@UFreeResourceXCities@@@std@@YAPAUFreeResourceXCities@@IPAU1@@Z ENDP ; std::_Allocate<FreeResourceXCities>
_TEXT	ENDS
PUBLIC	??$_Allocate@PAVCvTraitEntry@@@std@@YAPAPAVCvTraitEntry@@IPAPAV1@@Z ; std::_Allocate<CvTraitEntry *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Allocate@PAVCvTraitEntry@@@std@@YAPAPAVCvTraitEntry@@IPAPAV1@@Z
_TEXT	SEGMENT
$T229833 = -12						; size = 12
$T229837 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVCvTraitEntry@@@std@@YAPAPAVCvTraitEntry@@IPAPAV1@@Z PROC ; std::_Allocate<CvTraitEntry *>, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate@2

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate@2:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx*4]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate@2:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 4
	jae	SHORT $LN1@Allocate@2

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T229837[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T229833[esp+16]
	mov	DWORD PTR $T229837[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T229833[esp+16]
	push	ecx
	mov	DWORD PTR $T229833[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate@2:
$LN8@Allocate@2:
	int	3
??$_Allocate@PAVCvTraitEntry@@@std@@YAPAPAVCvTraitEntry@@IPAPAV1@@Z ENDP ; std::_Allocate<CvTraitEntry *>
_TEXT	ENDS
PUBLIC	??$_Allocate@UMayaBonusChoice@@@std@@YAPAUMayaBonusChoice@@IPAU1@@Z ; std::_Allocate<MayaBonusChoice>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Allocate@UMayaBonusChoice@@@std@@YAPAUMayaBonusChoice@@IPAU1@@Z
_TEXT	SEGMENT
$T229843 = -12						; size = 12
$T229847 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UMayaBonusChoice@@@std@@YAPAUMayaBonusChoice@@IPAU1@@Z PROC ; std::_Allocate<MayaBonusChoice>, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate@3

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate@3:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx*8]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate@3:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 8
	jae	SHORT $LN1@Allocate@3

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T229847[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T229843[esp+16]
	mov	DWORD PTR $T229847[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T229843[esp+16]
	push	ecx
	mov	DWORD PTR $T229843[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate@3:
$LN8@Allocate@3:
	int	3
??$_Allocate@UMayaBonusChoice@@@std@@YAPAUMayaBonusChoice@@IPAU1@@Z ENDP ; std::_Allocate<MayaBonusChoice>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBHH@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHH@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node><std::pair<int const ,int> >
; Function compile flags: /Ogtpy
;	COMDAT ??$?0U?$pair@$$CBHH@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHH@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBHH@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHH@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node><std::pair<int const ,int> >, COMDAT
; _this$ = ecx

; 128  : 		allocator(const allocator<_Other>&) _THROW0()

	mov	eax, ecx

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	4
??$?0U?$pair@$$CBHH@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHH@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node><std::pair<int const ,int> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T229856 = -12						; size = 12
$T229860 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node>, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate@4

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate@4:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx+ecx*2]
	add	edx, edx
	add	edx, edx
	add	edx, edx
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate@4:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 24					; 00000018H
	jae	SHORT $LN1@Allocate@4

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T229860[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T229856[esp+16]
	mov	DWORD PTR $T229860[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T229856[esp+16]
	push	ecx
	mov	DWORD PTR $T229856[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate@4:
$LN8@Allocate@4:
	int	3
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *,std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@0@ABQAU120@@Z PROC ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *,std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *>, COMDAT

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN3@Construct
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN3@Construct:

; 53   : 	}

	ret	0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *,std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@0@@Z PROC ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node>
_TEXT	ENDS
PUBLIC	?getArray@?$ArrayWrapper@H@@QAEPAHXZ		; ArrayWrapper<int>::getArray
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ?getArray@?$ArrayWrapper@H@@QAEPAHXZ
_TEXT	SEGMENT
?getArray@?$ArrayWrapper@H@@QAEPAHXZ PROC		; ArrayWrapper<int>::getArray, COMDAT
; _this$ = ecx

; 382  : 		return m_values;

	mov	eax, DWORD PTR [ecx]

; 383  : 	}

	ret	0
?getArray@?$ArrayWrapper@H@@QAEPAHXZ ENDP		; ArrayWrapper<int>::getArray
_TEXT	ENDS
PUBLIC	?getArray@?$ArrayWrapper@H@@QBEPBHXZ		; ArrayWrapper<int>::getArray
; Function compile flags: /Ogtpy
;	COMDAT ?getArray@?$ArrayWrapper@H@@QBEPBHXZ
_TEXT	SEGMENT
?getArray@?$ArrayWrapper@H@@QBEPBHXZ PROC		; ArrayWrapper<int>::getArray, COMDAT
; _this$ = ecx

; 386  : 		return m_values;

	mov	eax, DWORD PTR [ecx]

; 387  : 	}

	ret	0
?getArray@?$ArrayWrapper@H@@QBEPBHXZ ENDP		; ArrayWrapper<int>::getArray
_TEXT	ENDS
PUBLIC	?getCount@?$ArrayWrapper@H@@QBEHXZ		; ArrayWrapper<int>::getCount
; Function compile flags: /Ogtpy
;	COMDAT ?getCount@?$ArrayWrapper@H@@QBEHXZ
_TEXT	SEGMENT
?getCount@?$ArrayWrapper@H@@QBEHXZ PROC			; ArrayWrapper<int>::getCount, COMDAT
; _this$ = ecx

; 391  : 		return m_count;

	mov	eax, DWORD PTR [ecx+4]

; 392  : 	}

	ret	0
?getCount@?$ArrayWrapper@H@@QBEHXZ ENDP			; ArrayWrapper<int>::getCount
_TEXT	ENDS
PUBLIC	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z	; operator<<<int>
EXTRN	__imp_?PushArgument@String@Localization@@QAE_NH@Z:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvlocalization\include\cvlocalization.h
;	COMDAT ??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z PROC	; operator<<<int>, COMDAT

; 491  : 	s.PushArgument(val);

	mov	eax, DWORD PTR _val$[esp-4]
	mov	ecx, DWORD PTR [eax]
	push	esi
	mov	esi, DWORD PTR _s$[esp]
	push	ecx
	mov	ecx, esi
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 492  : 	return s;

	mov	eax, esi
	pop	esi

; 493  : }

	ret	0
??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ENDP	; operator<<<int>
_TEXT	ENDS
PUBLIC	??$swap@U?$less@H@std@@@std@@YAXAAU?$less@H@0@0@Z ; std::swap<std::less<int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
;	COMDAT ??$swap@U?$less@H@std@@@std@@YAXAAU?$less@H@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@U?$less@H@std@@@std@@YAXAAU?$less@H@0@0@Z PROC	; std::swap<std::less<int> >, COMDAT

; 18   : 	if (&_Left != &_Right)
; 19   : 		{	// different, worth swapping
; 20   : 		_Ty _Tmp = _Left;
; 21   : 
; 22   : 		_Left = _Right;
; 23   : 		_Right = _Tmp;
; 24   : 		}
; 25   : 	}

	ret	0
??$swap@U?$less@H@std@@@std@@YAXAAU?$less@H@0@0@Z ENDP	; std::swap<std::less<int> >
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAUFreeResourceXCities@@PAU1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUFreeResourceXCities@@0@Z ; std::_Iter_random<FreeResourceXCities *,FreeResourceXCities *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Iter_random@PAUFreeResourceXCities@@PAU1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUFreeResourceXCities@@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAUFreeResourceXCities@@PAU1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUFreeResourceXCities@@0@Z PROC ; std::_Iter_random<FreeResourceXCities *,FreeResourceXCities *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAUFreeResourceXCities@@PAU1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUFreeResourceXCities@@0@Z ENDP ; std::_Iter_random<FreeResourceXCities *,FreeResourceXCities *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAUFreeResourceXCities@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUFreeResourceXCities@@0@Z ; std::_Ptr_cat<FreeResourceXCities *,FreeResourceXCities *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@PAUFreeResourceXCities@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUFreeResourceXCities@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAUFreeResourceXCities@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUFreeResourceXCities@@0@Z PROC ; std::_Ptr_cat<FreeResourceXCities *,FreeResourceXCities *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAUFreeResourceXCities@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUFreeResourceXCities@@0@Z ENDP ; std::_Ptr_cat<FreeResourceXCities *,FreeResourceXCities *>
_TEXT	ENDS
PUBLIC	??$_Copy_opt@PAUFreeResourceXCities@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUFreeResourceXCities@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<FreeResourceXCities *,FreeResourceXCities *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_opt@PAUFreeResourceXCities@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUFreeResourceXCities@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAUFreeResourceXCities@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUFreeResourceXCities@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<FreeResourceXCities *,FreeResourceXCities *,std::random_access_iterator_tag>, COMDAT

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN1@Copy_opt
	push	esi
$LL3@Copy_opt:

; 2472 : 		*_Dest = *_First;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	add	ecx, 8
	add	eax, 8
	cmp	ecx, edx
	jne	SHORT $LL3@Copy_opt
	pop	esi
$LN1@Copy_opt:

; 2473 : 	return (_Dest);
; 2474 : 	}

	ret	0
??$_Copy_opt@PAUFreeResourceXCities@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUFreeResourceXCities@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<FreeResourceXCities *,FreeResourceXCities *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAPAVCvTraitEntry@@PAPAV1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVCvTraitEntry@@0@Z ; std::_Iter_random<CvTraitEntry * *,CvTraitEntry * *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Iter_random@PAPAVCvTraitEntry@@PAPAV1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVCvTraitEntry@@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAPAVCvTraitEntry@@PAPAV1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVCvTraitEntry@@0@Z PROC ; std::_Iter_random<CvTraitEntry * *,CvTraitEntry * *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAPAVCvTraitEntry@@PAPAV1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVCvTraitEntry@@0@Z ENDP ; std::_Iter_random<CvTraitEntry * *,CvTraitEntry * *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAPAVCvTraitEntry@@PAPAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAPAVCvTraitEntry@@0@Z ; std::_Ptr_cat<CvTraitEntry * *,CvTraitEntry * *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@PAPAVCvTraitEntry@@PAPAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAPAVCvTraitEntry@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAPAVCvTraitEntry@@PAPAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAPAVCvTraitEntry@@0@Z PROC ; std::_Ptr_cat<CvTraitEntry * *,CvTraitEntry * *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAPAVCvTraitEntry@@PAPAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAPAVCvTraitEntry@@0@Z ENDP ; std::_Ptr_cat<CvTraitEntry * *,CvTraitEntry * *>
_TEXT	ENDS
PUBLIC	??$_Copy_opt@PAPAVCvTraitEntry@@PAPAV1@Urandom_access_iterator_tag@std@@@std@@YAPAPAVCvTraitEntry@@PAPAV1@00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<CvTraitEntry * *,CvTraitEntry * *,std::random_access_iterator_tag>
EXTRN	__imp__memmove_s:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_opt@PAPAVCvTraitEntry@@PAPAV1@Urandom_access_iterator_tag@std@@@std@@YAPAPAVCvTraitEntry@@PAPAV1@00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAPAVCvTraitEntry@@PAPAV1@Urandom_access_iterator_tag@std@@@std@@YAPAPAVCvTraitEntry@@PAPAV1@00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<CvTraitEntry * *,CvTraitEntry * *,std::random_access_iterator_tag>, COMDAT

; 2495 : 
; 2496 :  #if _HAS_ITERATOR_DEBUGGING
; 2497 : 	_DEBUG_RANGE(_First, _Last);
; 2498 : 	if (_First != _Last)
; 2499 : 		_DEBUG_POINTER(_Dest);
; 2500 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 2501 : 
; 2502 : 	ptrdiff_t _Off = _Last - _First;	// NB: non-overlapping move

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi

; 2503 : 	// if _OutIt is range checked, this will make sure there is enough space for the memmove
; 2504 : 	_OutIt _Result = _Dest + _Off;

	mov	edi, DWORD PTR __Dest$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]

; 2505 : 	if (_Off > 0)

	test	eax, eax
	jle	SHORT $LN4@Copy_opt@2

; 2506 : 		_CRT_SECURE_MEMMOVE(&*_Dest, _Off * sizeof (*_First), &*_First, _Off * sizeof (*_First));

	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN4@Copy_opt@2:
	pop	edi

; 2507 : 	return _Result;

	mov	eax, esi
	pop	esi

; 2508 : 	}

	ret	0
??$_Copy_opt@PAPAVCvTraitEntry@@PAPAV1@Urandom_access_iterator_tag@std@@@std@@YAPAPAVCvTraitEntry@@PAPAV1@00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<CvTraitEntry * *,CvTraitEntry * *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAW4TraitTypes@@PAW41@@std@@YA?AUrandom_access_iterator_tag@0@ABQAW4TraitTypes@@0@Z ; std::_Iter_random<enum TraitTypes *,enum TraitTypes *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Iter_random@PAW4TraitTypes@@PAW41@@std@@YA?AUrandom_access_iterator_tag@0@ABQAW4TraitTypes@@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAW4TraitTypes@@PAW41@@std@@YA?AUrandom_access_iterator_tag@0@ABQAW4TraitTypes@@0@Z PROC ; std::_Iter_random<enum TraitTypes *,enum TraitTypes *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAW4TraitTypes@@PAW41@@std@@YA?AUrandom_access_iterator_tag@0@ABQAW4TraitTypes@@0@Z ENDP ; std::_Iter_random<enum TraitTypes *,enum TraitTypes *>
_TEXT	ENDS
PUBLIC	??$_Copy_opt@PAW4TraitTypes@@PAW41@Urandom_access_iterator_tag@std@@@std@@YAPAW4TraitTypes@@PAW41@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<enum TraitTypes *,enum TraitTypes *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_opt@PAW4TraitTypes@@PAW41@Urandom_access_iterator_tag@std@@@std@@YAPAW4TraitTypes@@PAW41@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAW4TraitTypes@@PAW41@Urandom_access_iterator_tag@std@@@std@@YAPAW4TraitTypes@@PAW41@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<enum TraitTypes *,enum TraitTypes *,std::random_access_iterator_tag>, COMDAT

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN1@Copy_opt@3
	push	esi
$LL3@Copy_opt@3:

; 2472 : 		*_Dest = *_First;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	add	ecx, 4
	add	eax, 4
	cmp	ecx, edx
	jne	SHORT $LL3@Copy_opt@3
	pop	esi
$LN1@Copy_opt@3:

; 2473 : 	return (_Dest);
; 2474 : 	}

	ret	0
??$_Copy_opt@PAW4TraitTypes@@PAW41@Urandom_access_iterator_tag@std@@@std@@YAPAW4TraitTypes@@PAW41@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<enum TraitTypes *,enum TraitTypes *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAUMayaBonusChoice@@PAU1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUMayaBonusChoice@@0@Z ; std::_Iter_random<MayaBonusChoice *,MayaBonusChoice *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Iter_random@PAUMayaBonusChoice@@PAU1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUMayaBonusChoice@@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAUMayaBonusChoice@@PAU1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUMayaBonusChoice@@0@Z PROC ; std::_Iter_random<MayaBonusChoice *,MayaBonusChoice *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAUMayaBonusChoice@@PAU1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUMayaBonusChoice@@0@Z ENDP ; std::_Iter_random<MayaBonusChoice *,MayaBonusChoice *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAUMayaBonusChoice@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUMayaBonusChoice@@0@Z ; std::_Ptr_cat<MayaBonusChoice *,MayaBonusChoice *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@PAUMayaBonusChoice@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUMayaBonusChoice@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAUMayaBonusChoice@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUMayaBonusChoice@@0@Z PROC ; std::_Ptr_cat<MayaBonusChoice *,MayaBonusChoice *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAUMayaBonusChoice@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUMayaBonusChoice@@0@Z ENDP ; std::_Ptr_cat<MayaBonusChoice *,MayaBonusChoice *>
_TEXT	ENDS
PUBLIC	??$_Copy_opt@PAUMayaBonusChoice@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUMayaBonusChoice@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<MayaBonusChoice *,MayaBonusChoice *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_opt@PAUMayaBonusChoice@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUMayaBonusChoice@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAUMayaBonusChoice@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUMayaBonusChoice@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<MayaBonusChoice *,MayaBonusChoice *,std::random_access_iterator_tag>, COMDAT

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN1@Copy_opt@4
	push	esi
$LL3@Copy_opt@4:

; 2472 : 		*_Dest = *_First;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	add	ecx, 8
	add	eax, 8
	cmp	ecx, edx
	jne	SHORT $LL3@Copy_opt@4
	pop	esi
$LN1@Copy_opt@4:

; 2473 : 	return (_Dest);
; 2474 : 	}

	ret	0
??$_Copy_opt@PAUMayaBonusChoice@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUMayaBonusChoice@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<MayaBonusChoice *,MayaBonusChoice *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Fill@PAUFreeResourceXCities@@U1@@std@@YAXPAUFreeResourceXCities@@0ABU1@@Z ; std::_Fill<FreeResourceXCities *,FreeResourceXCities>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Fill@PAUFreeResourceXCities@@U1@@std@@YAXPAUFreeResourceXCities@@0ABU1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill@PAUFreeResourceXCities@@U1@@std@@YAXPAUFreeResourceXCities@@0ABU1@@Z PROC ; std::_Fill<FreeResourceXCities *,FreeResourceXCities>, COMDAT

; 3157 : 	_DEBUG_RANGE(_First, _Last);
; 3158 : 	for (; _First != _Last; ++_First)

	mov	eax, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	cmp	eax, edx
	je	SHORT $LN1@Fill
	mov	ecx, DWORD PTR __Val$[esp-4]
	push	esi
$LL3@Fill:

; 3159 : 		*_First = _Val;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	add	eax, 8
	cmp	eax, edx
	jne	SHORT $LL3@Fill
	pop	esi
$LN1@Fill:

; 3160 : 	}

	ret	0
??$_Fill@PAUFreeResourceXCities@@U1@@std@@YAXPAUFreeResourceXCities@@0ABU1@@Z ENDP ; std::_Fill<FreeResourceXCities *,FreeResourceXCities>
_TEXT	ENDS
PUBLIC	??$_Move_cat@PAUFreeResourceXCities@@@std@@YA?AU_Undefined_move_tag@0@ABQAUFreeResourceXCities@@@Z ; std::_Move_cat<FreeResourceXCities *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_cat@PAUFreeResourceXCities@@@std@@YA?AU_Undefined_move_tag@0@ABQAUFreeResourceXCities@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
??$_Move_cat@PAUFreeResourceXCities@@@std@@YA?AU_Undefined_move_tag@0@ABQAUFreeResourceXCities@@@Z PROC ; std::_Move_cat<FreeResourceXCities *>, COMDAT

; 1200 : 	{

	push	ecx

; 1201 : 		typename _Move_operation_category<typename iterator_traits<_Iter>::value_type>::_Move_cat _Cat;
; 1202 : 		return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1203 : 	}

	pop	ecx
	ret	0
??$_Move_cat@PAUFreeResourceXCities@@@std@@YA?AU_Undefined_move_tag@0@ABQAUFreeResourceXCities@@@Z ENDP ; std::_Move_cat<FreeResourceXCities *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVCvTraitEntry@@@std@@@std@@YAXPAPAVCvTraitEntry@@0AAV?$allocator@PAVCvTraitEntry@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<CvTraitEntry *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCvTraitEntry@@@std@@@std@@YAXPAPAVCvTraitEntry@@0AAV?$allocator@PAVCvTraitEntry@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAVCvTraitEntry@@@std@@@std@@YAXPAPAVCvTraitEntry@@0AAV?$allocator@PAVCvTraitEntry@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<CvTraitEntry *> >, COMDAT

; 242  : 	}

	ret	0
??$_Destroy_range@V?$allocator@PAVCvTraitEntry@@@std@@@std@@YAXPAPAVCvTraitEntry@@0AAV?$allocator@PAVCvTraitEntry@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<CvTraitEntry *> >
_TEXT	ENDS
PUBLIC	??$_Fill@PAW4TraitTypes@@W41@@std@@YAXPAW4TraitTypes@@0ABW41@@Z ; std::_Fill<enum TraitTypes *,enum TraitTypes>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Fill@PAW4TraitTypes@@W41@@std@@YAXPAW4TraitTypes@@0ABW41@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill@PAW4TraitTypes@@W41@@std@@YAXPAW4TraitTypes@@0ABW41@@Z PROC ; std::_Fill<enum TraitTypes *,enum TraitTypes>, COMDAT

; 3157 : 	_DEBUG_RANGE(_First, _Last);
; 3158 : 	for (; _First != _Last; ++_First)

	mov	eax, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN1@Fill@2
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL3@Fill@2:

; 3159 : 		*_First = _Val;

	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	add	eax, 4
	cmp	eax, ecx
	jne	SHORT $LL3@Fill@2
	pop	esi
$LN1@Fill@2:

; 3160 : 	}

	ret	0
??$_Fill@PAW4TraitTypes@@W41@@std@@YAXPAW4TraitTypes@@0ABW41@@Z ENDP ; std::_Fill<enum TraitTypes *,enum TraitTypes>
_TEXT	ENDS
PUBLIC	??$_Move_cat@PAW4TraitTypes@@@std@@YA?AU_Undefined_move_tag@0@ABQAW4TraitTypes@@@Z ; std::_Move_cat<enum TraitTypes *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_cat@PAW4TraitTypes@@@std@@YA?AU_Undefined_move_tag@0@ABQAW4TraitTypes@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
??$_Move_cat@PAW4TraitTypes@@@std@@YA?AU_Undefined_move_tag@0@ABQAW4TraitTypes@@@Z PROC ; std::_Move_cat<enum TraitTypes *>, COMDAT

; 1200 : 	{

	push	ecx

; 1201 : 		typename _Move_operation_category<typename iterator_traits<_Iter>::value_type>::_Move_cat _Cat;
; 1202 : 		return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1203 : 	}

	pop	ecx
	ret	0
??$_Move_cat@PAW4TraitTypes@@@std@@YA?AU_Undefined_move_tag@0@ABQAW4TraitTypes@@@Z ENDP ; std::_Move_cat<enum TraitTypes *>
_TEXT	ENDS
PUBLIC	??$_Fill@PAUMayaBonusChoice@@U1@@std@@YAXPAUMayaBonusChoice@@0ABU1@@Z ; std::_Fill<MayaBonusChoice *,MayaBonusChoice>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Fill@PAUMayaBonusChoice@@U1@@std@@YAXPAUMayaBonusChoice@@0ABU1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill@PAUMayaBonusChoice@@U1@@std@@YAXPAUMayaBonusChoice@@0ABU1@@Z PROC ; std::_Fill<MayaBonusChoice *,MayaBonusChoice>, COMDAT

; 3157 : 	_DEBUG_RANGE(_First, _Last);
; 3158 : 	for (; _First != _Last; ++_First)

	mov	eax, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	cmp	eax, edx
	je	SHORT $LN1@Fill@3
	mov	ecx, DWORD PTR __Val$[esp-4]
	push	esi
$LL3@Fill@3:

; 3159 : 		*_First = _Val;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	add	eax, 8
	cmp	eax, edx
	jne	SHORT $LL3@Fill@3
	pop	esi
$LN1@Fill@3:

; 3160 : 	}

	ret	0
??$_Fill@PAUMayaBonusChoice@@U1@@std@@YAXPAUMayaBonusChoice@@0ABU1@@Z ENDP ; std::_Fill<MayaBonusChoice *,MayaBonusChoice>
_TEXT	ENDS
PUBLIC	??$_Move_cat@PAUMayaBonusChoice@@@std@@YA?AU_Undefined_move_tag@0@ABQAUMayaBonusChoice@@@Z ; std::_Move_cat<MayaBonusChoice *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_cat@PAUMayaBonusChoice@@@std@@YA?AU_Undefined_move_tag@0@ABQAUMayaBonusChoice@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
??$_Move_cat@PAUMayaBonusChoice@@@std@@YA?AU_Undefined_move_tag@0@ABQAUMayaBonusChoice@@@Z PROC ; std::_Move_cat<MayaBonusChoice *>, COMDAT

; 1200 : 	{

	push	ecx

; 1201 : 		typename _Move_operation_category<typename iterator_traits<_Iter>::value_type>::_Move_cat _Cat;
; 1202 : 		return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1203 : 	}

	pop	ecx
	ret	0
??$_Move_cat@PAUMayaBonusChoice@@@std@@YA?AU_Undefined_move_tag@0@ABQAUMayaBonusChoice@@@Z ENDP ; std::_Move_cat<MayaBonusChoice *>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAUFreeResourceXCities@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUFreeResourceXCities@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<FreeResourceXCities *,FreeResourceXCities *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_backward_opt@PAUFreeResourceXCities@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUFreeResourceXCities@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_backward_opt@PAUFreeResourceXCities@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUFreeResourceXCities@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<FreeResourceXCities *,FreeResourceXCities *,std::random_access_iterator_tag>, COMDAT

; 2674 : 	_DEBUG_RANGE(_First, _Last);
; 2675 : 	while (_First != _Last)

	mov	edx, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN1@Copy_backw
	push	esi
$LL2@Copy_backw:

; 2676 : 		*--_Dest = *--_Last;

	mov	esi, DWORD PTR [ecx-8]
	sub	ecx, 8
	sub	eax, 8
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	cmp	ecx, edx
	jne	SHORT $LL2@Copy_backw
	pop	esi
$LN1@Copy_backw:

; 2677 : 	return (_Dest);
; 2678 : 	}

	ret	0
??$_Copy_backward_opt@PAUFreeResourceXCities@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUFreeResourceXCities@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<FreeResourceXCities *,FreeResourceXCities *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAW4TraitTypes@@PAW41@Urandom_access_iterator_tag@std@@@std@@YAPAW4TraitTypes@@PAW41@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<enum TraitTypes *,enum TraitTypes *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_backward_opt@PAW4TraitTypes@@PAW41@Urandom_access_iterator_tag@std@@@std@@YAPAW4TraitTypes@@PAW41@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_backward_opt@PAW4TraitTypes@@PAW41@Urandom_access_iterator_tag@std@@@std@@YAPAW4TraitTypes@@PAW41@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<enum TraitTypes *,enum TraitTypes *,std::random_access_iterator_tag>, COMDAT

; 2674 : 	_DEBUG_RANGE(_First, _Last);
; 2675 : 	while (_First != _Last)

	mov	edx, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN1@Copy_backw@2
	push	esi
$LL2@Copy_backw@2:

; 2676 : 		*--_Dest = *--_Last;

	mov	esi, DWORD PTR [ecx-4]
	sub	ecx, 4
	sub	eax, 4
	mov	DWORD PTR [eax], esi
	cmp	ecx, edx
	jne	SHORT $LL2@Copy_backw@2
	pop	esi
$LN1@Copy_backw@2:

; 2677 : 	return (_Dest);
; 2678 : 	}

	ret	0
??$_Copy_backward_opt@PAW4TraitTypes@@PAW41@Urandom_access_iterator_tag@std@@@std@@YAPAW4TraitTypes@@PAW41@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<enum TraitTypes *,enum TraitTypes *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAUMayaBonusChoice@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUMayaBonusChoice@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<MayaBonusChoice *,MayaBonusChoice *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_backward_opt@PAUMayaBonusChoice@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUMayaBonusChoice@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_backward_opt@PAUMayaBonusChoice@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUMayaBonusChoice@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<MayaBonusChoice *,MayaBonusChoice *,std::random_access_iterator_tag>, COMDAT

; 2674 : 	_DEBUG_RANGE(_First, _Last);
; 2675 : 	while (_First != _Last)

	mov	edx, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN1@Copy_backw@3
	push	esi
$LL2@Copy_backw@3:

; 2676 : 		*--_Dest = *--_Last;

	mov	esi, DWORD PTR [ecx-8]
	sub	ecx, 8
	sub	eax, 8
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	cmp	ecx, edx
	jne	SHORT $LL2@Copy_backw@3
	pop	esi
$LN1@Copy_backw@3:

; 2677 : 	return (_Dest);
; 2678 : 	}

	ret	0
??$_Copy_backward_opt@PAUMayaBonusChoice@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUMayaBonusChoice@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<MayaBonusChoice *,MayaBonusChoice *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Construct@UFreeResourceXCities@@U1@@std@@YAXPAUFreeResourceXCities@@ABU1@@Z ; std::_Construct<FreeResourceXCities,FreeResourceXCities>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Construct@UFreeResourceXCities@@U1@@std@@YAXPAUFreeResourceXCities@@ABU1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@UFreeResourceXCities@@U1@@std@@YAXPAUFreeResourceXCities@@ABU1@@Z PROC ; std::_Construct<FreeResourceXCities,FreeResourceXCities>, COMDAT

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN3@Construct@2
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
$LN3@Construct@2:

; 53   : 	}

	ret	0
??$_Construct@UFreeResourceXCities@@U1@@std@@YAXPAUFreeResourceXCities@@ABU1@@Z ENDP ; std::_Construct<FreeResourceXCities,FreeResourceXCities>
_TEXT	ENDS
PUBLIC	??$_Destroy@UFreeResourceXCities@@@std@@YAXPAUFreeResourceXCities@@@Z ; std::_Destroy<FreeResourceXCities>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@UFreeResourceXCities@@@std@@YAXPAUFreeResourceXCities@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@UFreeResourceXCities@@@std@@YAXPAUFreeResourceXCities@@@Z PROC ; std::_Destroy<FreeResourceXCities>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@UFreeResourceXCities@@@std@@YAXPAUFreeResourceXCities@@@Z ENDP ; std::_Destroy<FreeResourceXCities>
_TEXT	ENDS
PUBLIC	??$_Destroy@UMayaBonusChoice@@@std@@YAXPAUMayaBonusChoice@@@Z ; std::_Destroy<MayaBonusChoice>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@UMayaBonusChoice@@@std@@YAXPAUMayaBonusChoice@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@UMayaBonusChoice@@@std@@YAXPAUMayaBonusChoice@@@Z PROC ; std::_Destroy<MayaBonusChoice>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@UMayaBonusChoice@@@std@@YAXPAUMayaBonusChoice@@@Z ENDP ; std::_Destroy<MayaBonusChoice>
_TEXT	ENDS
PUBLIC	??0CvString@@QAE@XZ				; CvString::CvString
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
;	COMDAT ??0CvString@@QAE@XZ
_TEXT	SEGMENT
??0CvString@@QAE@XZ PROC				; CvString::CvString, COMDAT
; _this$ = ecx

; 23   : 	CvString() {}

	push	esi
	mov	esi, ecx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, esi
	pop	esi
	ret	0
??0CvString@@QAE@XZ ENDP				; CvString::CvString
_TEXT	ENDS
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
; Function compile flags: /Ogtpy
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
_TEXT	ENDS
PUBLIC	??BCvString@@QBEPBDXZ				; CvString::operator char const *
; Function compile flags: /Ogtpy
;	COMDAT ??BCvString@@QBEPBDXZ
_TEXT	SEGMENT
??BCvString@@QBEPBDXZ PROC				; CvString::operator char const *, COMDAT
; _this$ = ecx

; 31   : 	operator const char*() const 	{ return c_str(); }												

	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
??BCvString@@QBEPBDXZ ENDP				; CvString::operator char const *
_TEXT	ENDS
PUBLIC	??4CvString@@QAEAAV0@PBD@Z			; CvString::operator=
EXTRN	__imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ:PROC
EXTRN	__imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??4CvString@@QAEAAV0@PBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
??4CvString@@QAEAAV0@PBD@Z PROC				; CvString::operator=, COMDAT
; _this$ = ecx

; 37   : 	CvString& operator=( const char* s) { if (s) assign(s); else clear();	return *this; }	

	mov	eax, DWORD PTR _s$[esp-4]
	push	esi
	mov	esi, ecx
	test	eax, eax
	je	SHORT $LN2@operator
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	mov	eax, esi
	pop	esi
	ret	4
$LN2@operator:
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, esi
	pop	esi
	ret	4
??4CvString@@QAEAAV0@PBD@Z ENDP				; CvString::operator=
_TEXT	ENDS
PUBLIC	??4CvString@@QAEAAV0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvString::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4CvString@@QAEAAV0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
??4CvString@@QAEAAV0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; CvString::operator=, COMDAT
; _this$ = ecx

; 38   : 	CvString& operator=( const std::string& s) { assign(s.c_str());	return *this; }	

	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR _s$[esp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, esi
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	mov	eax, esi
	pop	esi
	ret	4
??4CvString@@QAEAAV0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CvString::operator=
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z ; CvString::formatv
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	__imp___vsnprintf:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z
_TEXT	SEGMENT
_buf$ = -2048						; size = 2048
_out$ = 8						; size = 4
_fmt$ = 12						; size = 4
_args$ = 16						; size = 4
?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z PROC ; CvString::formatv, COMDAT

; 191  : {

	sub	esp, 2048				; 00000800H
	push	ebx
	push	ebp

; 192  : 	char buf[2048];
; 193  : 	char * pbuf = buf;

	mov	ebp, DWORD PTR _args$[esp+2052]
	push	esi
	push	edi
	lea	edi, DWORD PTR _buf$[esp+2064]
	mov	esi, 2047				; 000007ffH
	npad	6
$LL10@formatv:

; 194  : 	int len = 0;
; 195  : 	int attempts = 0;
; 196  : 	bool success = false;
; 197  : 	const int kMaxAttempts = 40;
; 198  : 
; 199  : 	do
; 200  : 	{
; 201  : 		int maxlen = 2047+2048*attempts;
; 202  : 		len = _vsnprintf(pbuf,maxlen,fmt,args);

	mov	eax, DWORD PTR _fmt$[esp+2060]
	push	ebp
	push	eax
	push	esi
	push	edi
	mov	ebx, esi
	call	DWORD PTR __imp___vsnprintf
	add	esp, 16					; 00000010H

; 203  : 		attempts++;

	add	esi, 2048				; 00000800H

; 204  : 		success = (len>=0 && len<=maxlen);

	test	eax, eax
	jl	SHORT $LN13@formatv
	cmp	eax, ebx
	jle	SHORT $LN18@formatv
$LN13@formatv:

; 205  : 		if (!success)
; 206  : 		{
; 207  : 			if (pbuf!=buf)

	lea	ecx, DWORD PTR _buf$[esp+2064]
	xor	bl, bl
	cmp	edi, ecx
	je	SHORT $LN6@formatv

; 208  : 				delete [] pbuf;

	push	edi
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN6@formatv:

; 209  : 			pbuf = new char[2048+2048*attempts];

	lea	edx, DWORD PTR [esi+1]
	push	edx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4

; 210  : 		}
; 211  : 	}
; 212  : 	while (!success && attempts<kMaxAttempts);

	cmp	esi, 83967				; 000147ffH
	mov	edi, eax
	jl	SHORT $LL10@formatv

; 222  : 		out = "";

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN21@formatv:
	mov	ecx, DWORD PTR _out$[esp+2064]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 223  : 
; 224  : 	if (pbuf!=buf)

	lea	eax, DWORD PTR _buf$[esp+2064]
	cmp	edi, eax
	je	SHORT $LN20@formatv

; 225  : 		delete [] pbuf;

	push	edi
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN20@formatv:
	pop	edi
	pop	esi
	pop	ebp

; 226  : 
; 227  : 	return success;

	mov	al, bl
	pop	ebx

; 228  : }

	add	esp, 2048				; 00000800H
	ret	0
$LN18@formatv:

; 204  : 		success = (len>=0 && len<=maxlen);

	mov	bl, 1

; 213  : 
; 214  : 	if ( attempts==kMaxAttempts )
; 215  : 	{
; 216  : 		// dxPrintNL( "CvString::formatv - Max reallocs occurred while formatting string. Result is likely truncated!", 0 );
; 217  : 	}
; 218  : 
; 219  : 	if (success)
; 220  : 		out = pbuf;

	push	edi

; 221  : 	else

	jmp	SHORT $LN21@formatv
?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z ENDP ; CvString::formatv
_TEXT	ENDS
PUBLIC	?Format@CvString@@QAAXPBDZZ			; CvString::Format
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Format@CvString@@QAAXPBDZZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Format@CvString@@QAAXPBDZZ$0
__ehfuncinfo$?Format@CvString@@QAAXPBDZZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Format@CvString@@QAAXPBDZZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?Format@CvString@@QAAXPBDZZ
_TEXT	SEGMENT
_result$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_lpszFormat$ = 12					; size = 4
?Format@CvString@@QAAXPBDZZ PROC			; CvString::Format, COMDAT

; 269  : {

	push	-1
	push	__ehhandler$?Format@CvString@@QAAXPBDZZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH

; 270  : 	std::string result;

	lea	ecx, DWORD PTR _result$[esp+40]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 271  : 	va_list args;
; 272  : 	va_start(args,lpszFormat);
; 273  : 	formatv(result,lpszFormat,args);

	mov	ecx, DWORD PTR _lpszFormat$[esp+36]
	lea	eax, DWORD PTR _lpszFormat$[esp+40]
	push	eax
	push	ecx
	lea	edx, DWORD PTR _result$[esp+48]
	push	edx
	mov	DWORD PTR __$EHRec$[esp+60], 0
	call	?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z ; CvString::formatv
	add	esp, 12					; 0000000cH

; 274  : 	va_end(args);
; 275  : 	*this = result;

	lea	ecx, DWORD PTR _result$[esp+40]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	ecx, DWORD PTR _this$[esp+36]
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z

; 276  : }

	lea	ecx, DWORD PTR _result$[esp+40]
	mov	DWORD PTR __$EHRec$[esp+48], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Format@CvString@@QAAXPBDZZ$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?Format@CvString@@QAAXPBDZZ:
	mov	eax, OFFSET __ehfuncinfo$?Format@CvString@@QAAXPBDZZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Format@CvString@@QAAXPBDZZ ENDP			; CvString::Format
PUBLIC	?GetType@CvBaseInfo@@QBEPBDXZ			; CvBaseInfo::GetType
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvinfos.h
;	COMDAT ?GetType@CvBaseInfo@@QBEPBDXZ
_TEXT	SEGMENT
?GetType@CvBaseInfo@@QBEPBDXZ PROC			; CvBaseInfo::GetType, COMDAT
; _this$ = ecx

; 92   : 		return m_strType.c_str();

	add	ecx, 176				; 000000b0H
	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
?GetType@CvBaseInfo@@QBEPBDXZ ENDP			; CvBaseInfo::GetType
_TEXT	ENDS
PUBLIC	?getMap@CvGlobals@@QAEAAVCvMap@@XZ		; CvGlobals::getMap
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
;	COMDAT ?getMap@CvGlobals@@QAEAAVCvMap@@XZ
_TEXT	SEGMENT
?getMap@CvGlobals@@QAEAAVCvMap@@XZ PROC			; CvGlobals::getMap, COMDAT
; _this$ = ecx

; 175  : 		return *m_map;    // inlined for perf reasons, do not use outside of dll

	mov	eax, DWORD PTR [ecx+52]

; 176  : 	}

	ret	0
?getMap@CvGlobals@@QAEAAVCvMap@@XZ ENDP			; CvGlobals::getMap
_TEXT	ENDS
PUBLIC	?getGame@CvGlobals@@QAEAAVCvGame@@XZ		; CvGlobals::getGame
; Function compile flags: /Ogtpy
;	COMDAT ?getGame@CvGlobals@@QAEAAVCvGame@@XZ
_TEXT	SEGMENT
?getGame@CvGlobals@@QAEAAVCvGame@@XZ PROC		; CvGlobals::getGame, COMDAT
; _this$ = ecx

; 183  : 		return *m_game;    // inlined for perf reasons, do not use outside of dll

	mov	eax, DWORD PTR [ecx+48]

; 184  : 	}

	ret	0
?getGame@CvGlobals@@QAEAAVCvGame@@XZ ENDP		; CvGlobals::getGame
_TEXT	ENDS
PUBLIC	?getPlotDirectionX@CvGlobals@@QAEPAHXZ		; CvGlobals::getPlotDirectionX
; Function compile flags: /Ogtpy
;	COMDAT ?getPlotDirectionX@CvGlobals@@QAEPAHXZ
_TEXT	SEGMENT
?getPlotDirectionX@CvGlobals@@QAEPAHXZ PROC		; CvGlobals::getPlotDirectionX, COMDAT
; _this$ = ecx

; 191  : 		return m_aiPlotDirectionX;

	lea	eax, DWORD PTR [ecx+112]

; 192  : 	}

	ret	0
?getPlotDirectionX@CvGlobals@@QAEPAHXZ ENDP		; CvGlobals::getPlotDirectionX
_TEXT	ENDS
PUBLIC	?getPlotDirectionY@CvGlobals@@QAEPAHXZ		; CvGlobals::getPlotDirectionY
; Function compile flags: /Ogtpy
;	COMDAT ?getPlotDirectionY@CvGlobals@@QAEPAHXZ
_TEXT	SEGMENT
?getPlotDirectionY@CvGlobals@@QAEPAHXZ PROC		; CvGlobals::getPlotDirectionY, COMDAT
; _this$ = ecx

; 195  : 		return m_aiPlotDirectionY;

	lea	eax, DWORD PTR [ecx+136]

; 196  : 	}

	ret	0
?getPlotDirectionY@CvGlobals@@QAEPAHXZ ENDP		; CvGlobals::getPlotDirectionY
_TEXT	ENDS
PUBLIC	?getGOLD_FROM_BARBARIAN_CONVERSION@CvGlobals@@QAEHXZ ; CvGlobals::getGOLD_FROM_BARBARIAN_CONVERSION
; Function compile flags: /Ogtpy
;	COMDAT ?getGOLD_FROM_BARBARIAN_CONVERSION@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getGOLD_FROM_BARBARIAN_CONVERSION@CvGlobals@@QAEHXZ PROC ; CvGlobals::getGOLD_FROM_BARBARIAN_CONVERSION, COMDAT
; _this$ = ecx

; 6144 : 		return m_iGOLD_FROM_BARBARIAN_CONVERSION;

	mov	eax, DWORD PTR [ecx+7068]

; 6145 : 	}

	ret	0
?getGOLD_FROM_BARBARIAN_CONVERSION@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getGOLD_FROM_BARBARIAN_CONVERSION
_TEXT	ENDS
PUBLIC	?getTRAIT_WOUNDED_DAMAGE_MOD@CvGlobals@@QAEHXZ	; CvGlobals::getTRAIT_WOUNDED_DAMAGE_MOD
; Function compile flags: /Ogtpy
;	COMDAT ?getTRAIT_WOUNDED_DAMAGE_MOD@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getTRAIT_WOUNDED_DAMAGE_MOD@CvGlobals@@QAEHXZ PROC	; CvGlobals::getTRAIT_WOUNDED_DAMAGE_MOD, COMDAT
; _this$ = ecx

; 6589 : 		return m_iTRAIT_WOUNDED_DAMAGE_MOD;

	mov	eax, DWORD PTR [ecx+7460]

; 6590 : 	}

	ret	0
?getTRAIT_WOUNDED_DAMAGE_MOD@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getTRAIT_WOUNDED_DAMAGE_MOD
_TEXT	ENDS
PUBLIC	?getBARBARIAN_CAMP_IMPROVEMENT@CvGlobals@@QAEHXZ ; CvGlobals::getBARBARIAN_CAMP_IMPROVEMENT
; Function compile flags: /Ogtpy
;	COMDAT ?getBARBARIAN_CAMP_IMPROVEMENT@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getBARBARIAN_CAMP_IMPROVEMENT@CvGlobals@@QAEHXZ PROC	; CvGlobals::getBARBARIAN_CAMP_IMPROVEMENT, COMDAT
; _this$ = ecx

; 7355 : 		return m_iBARBARIAN_CAMP_IMPROVEMENT;

	mov	eax, DWORD PTR [ecx+8548]

; 7356 : 	}

	ret	0
?getBARBARIAN_CAMP_IMPROVEMENT@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getBARBARIAN_CAMP_IMPROVEMENT
_TEXT	ENDS
PUBLIC	?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ ; CvGlobals::getDLLIFace
; Function compile flags: /Ogtpy
;	COMDAT ?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ
_TEXT	SEGMENT
?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ PROC ; CvGlobals::getDLLIFace, COMDAT
; _this$ = ecx

; 7738 : 		return m_pDLL;

	mov	eax, DWORD PTR [ecx+8596]

; 7739 : 	}

	ret	0
?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ ENDP ; CvGlobals::getDLLIFace
_TEXT	ENDS
PUBLIC	??4CvString@@QAEAAV0@ABV0@@Z			; CvString::operator=
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??4CvString@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4CvString@@QAEAAV0@ABV0@@Z PROC			; CvString::operator=, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	eax, esi
	pop	esi
	ret	4
??4CvString@@QAEAAV0@ABV0@@Z ENDP			; CvString::operator=
_TEXT	ENDS
PUBLIC	?GetID@CvArea@@QBEHXZ				; CvArea::GetID
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvarea.h
;	COMDAT ?GetID@CvArea@@QBEHXZ
_TEXT	SEGMENT
?GetID@CvArea@@QBEHXZ PROC				; CvArea::GetID, COMDAT
; _this$ = ecx

; 54   : 		return m_iID;

	mov	eax, DWORD PTR [ecx+4]

; 55   : 	}

	ret	0
?GetID@CvArea@@QBEHXZ ENDP				; CvArea::GetID
_TEXT	ENDS
PUBLIC	?getX@CvPlot@@QBEHXZ				; CvPlot::getX
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplot.h
;	COMDAT ?getX@CvPlot@@QBEHXZ
_TEXT	SEGMENT
?getX@CvPlot@@QBEHXZ PROC				; CvPlot::getX, COMDAT
; _this$ = ecx

; 307  : 		return m_iX;

	movsx	eax, WORD PTR [ecx]

; 308  : 	}

	ret	0
?getX@CvPlot@@QBEHXZ ENDP				; CvPlot::getX
_TEXT	ENDS
PUBLIC	?getY@CvPlot@@QBEHXZ				; CvPlot::getY
; Function compile flags: /Ogtpy
;	COMDAT ?getY@CvPlot@@QBEHXZ
_TEXT	SEGMENT
?getY@CvPlot@@QBEHXZ PROC				; CvPlot::getY, COMDAT
; _this$ = ecx

; 312  : 		return m_iY;

	movsx	eax, WORD PTR [ecx+2]

; 313  : 	}

	ret	0
?getY@CvPlot@@QBEHXZ ENDP				; CvPlot::getY
_TEXT	ENDS
PUBLIC	?getArea@CvPlot@@QBEHXZ				; CvPlot::getArea
; Function compile flags: /Ogtpy
;	COMDAT ?getArea@CvPlot@@QBEHXZ
_TEXT	SEGMENT
?getArea@CvPlot@@QBEHXZ PROC				; CvPlot::getArea, COMDAT
; _this$ = ecx

; 324  : 		return m_iArea;

	mov	eax, DWORD PTR [ecx+356]

; 325  : 	}

	ret	0
?getArea@CvPlot@@QBEHXZ ENDP				; CvPlot::getArea
_TEXT	ENDS
PUBLIC	?isWater@CvPlot@@QBE_NXZ			; CvPlot::isWater
; Function compile flags: /Ogtpy
;	COMDAT ?isWater@CvPlot@@QBE_NXZ
_TEXT	SEGMENT
?isWater@CvPlot@@QBE_NXZ PROC				; CvPlot::isWater, COMDAT
; _this$ = ecx

; 409  : 		return (PlotTypes)m_ePlotType == PLOT_OCEAN;

	xor	eax, eax
	cmp	BYTE PTR [ecx+5], 3
	sete	al

; 410  : 	};

	ret	0
?isWater@CvPlot@@QBE_NXZ ENDP				; CvPlot::isWater
_TEXT	ENDS
PUBLIC	?coordRange@@YAHHH_N@Z				; coordRange
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
;	COMDAT ?coordRange@@YAHHH_N@Z
_TEXT	SEGMENT
_iCoord$ = 8						; size = 4
_iRange$ = 12						; size = 4
_bWrap$ = 16						; size = 1
?coordRange@@YAHHH_N@Z PROC				; coordRange, COMDAT

; 88   : 	if(bWrap)

	cmp	BYTE PTR _bWrap$[esp-4], 0
	mov	eax, DWORD PTR _iCoord$[esp-4]
	je	SHORT $LN5@coordRange

; 89   : 	{
; 90   : 		if(iCoord < 0)
; 91   : 		{
; 92   : 			return (iRange + (iCoord % iRange));

	mov	ecx, DWORD PTR _iRange$[esp-4]
	test	eax, eax
	jge	SHORT $LN3@coordRange
	cdq
	idiv	ecx
	mov	eax, edx
	add	eax, ecx

; 97   : 		}
; 98   : 	}
; 99   : 
; 100  : 	return iCoord;
; 101  : }

	ret	0
$LN3@coordRange:

; 93   : 		}
; 94   : 		else if(iCoord >= iRange)

	cmp	eax, ecx
	jl	SHORT $LN5@coordRange

; 95   : 		{
; 96   : 			return (iCoord % iRange);

	cdq
	idiv	ecx
	mov	eax, edx
$LN5@coordRange:

; 97   : 		}
; 98   : 	}
; 99   : 
; 100  : 	return iCoord;
; 101  : }

	ret	0
?coordRange@@YAHHH_N@Z ENDP				; coordRange
_TEXT	ENDS
PUBLIC	?getGridWidth@CvMap@@QBEHXZ			; CvMap::getGridWidth
; Function compile flags: /Ogtpy
;	COMDAT ?getGridWidth@CvMap@@QBEHXZ
_TEXT	SEGMENT
?getGridWidth@CvMap@@QBEHXZ PROC			; CvMap::getGridWidth, COMDAT
; _this$ = ecx

; 198  : 		return m_iGridWidth;

	mov	eax, DWORD PTR [ecx+4020]

; 199  : 	}

	ret	0
?getGridWidth@CvMap@@QBEHXZ ENDP			; CvMap::getGridWidth
_TEXT	ENDS
PUBLIC	?getGridHeight@CvMap@@QBEHXZ			; CvMap::getGridHeight
; Function compile flags: /Ogtpy
;	COMDAT ?getGridHeight@CvMap@@QBEHXZ
_TEXT	SEGMENT
?getGridHeight@CvMap@@QBEHXZ PROC			; CvMap::getGridHeight, COMDAT
; _this$ = ecx

; 206  : 		return m_iGridHeight;

	mov	eax, DWORD PTR [ecx+4024]

; 207  : 	}

	ret	0
?getGridHeight@CvMap@@QBEHXZ ENDP			; CvMap::getGridHeight
_TEXT	ENDS
PUBLIC	?isWrapX@CvMap@@QBE_NXZ				; CvMap::isWrapX
; Function compile flags: /Ogtpy
;	COMDAT ?isWrapX@CvMap@@QBE_NXZ
_TEXT	SEGMENT
?isWrapX@CvMap@@QBE_NXZ PROC				; CvMap::isWrapX, COMDAT
; _this$ = ecx

; 228  : 		return m_bWrapX;

	mov	al, BYTE PTR [ecx+4056]

; 229  : 	}

	ret	0
?isWrapX@CvMap@@QBE_NXZ ENDP				; CvMap::isWrapX
_TEXT	ENDS
PUBLIC	?isWrapY@CvMap@@QBE_NXZ				; CvMap::isWrapY
; Function compile flags: /Ogtpy
;	COMDAT ?isWrapY@CvMap@@QBE_NXZ
_TEXT	SEGMENT
?isWrapY@CvMap@@QBE_NXZ PROC				; CvMap::isWrapY, COMDAT
; _this$ = ecx

; 233  : 		return m_bWrapY;

	mov	al, BYTE PTR [ecx+4057]

; 234  : 	}

	ret	0
?isWrapY@CvMap@@QBE_NXZ ENDP				; CvMap::isWrapY
_TEXT	ENDS
PUBLIC	?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z		; CvTeam::getTeam
EXTRN	?m_aTeams@CvTeam@@1PAV1@A:DWORD			; CvTeam::m_aTeams
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvteam.h
;	COMDAT ?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z
_TEXT	SEGMENT
_eTeam$ = 8						; size = 4
?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z PROC		; CvTeam::getTeam, COMDAT

; 29   : 		CvAssertMsg(eTeam != NO_TEAM, "eTeam is not assigned a valid value");
; 30   : 		CvAssertMsg(eTeam < MAX_TEAMS, "eTeam is not assigned a valid value");
; 31   : 		return m_aTeams[eTeam];

	mov	eax, DWORD PTR _eTeam$[esp-4]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams

; 32   : 	}

	ret	0
?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z ENDP		; CvTeam::getTeam
_TEXT	ENDS
PUBLIC	?InitializeArray@CvDatabaseUtility@@QAEXAAPAHIH@Z ; CvDatabaseUtility::InitializeArray
EXTRN	_memset:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdatabaseutility.h
;	COMDAT ?InitializeArray@CvDatabaseUtility@@QAEXAAPAHIH@Z
_TEXT	SEGMENT
_pArray$ = 8						; size = 4
_count$ = 12						; size = 4
_iDefault$ = 16						; size = 4
?InitializeArray@CvDatabaseUtility@@QAEXAAPAHIH@Z PROC	; CvDatabaseUtility::InitializeArray, COMDAT
; _this$ = ecx

; 120  : {

	push	esi

; 121  : 	CvAssertMsg(count > 0, "Initializing array to 0 or less items.");
; 122  : #ifdef AUI_WARNING_FIXES
; 123  : 	delete[] pArray;
; 124  : #endif
; 125  : 	pArray = FNEW(int[count], c_eCiv5GameplayDLL, 0);

	mov	esi, DWORD PTR _count$[esp]
	xor	ecx, ecx
	mov	eax, esi
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]

; 126  : 	if(iDefault == 0)

	mov	edx, DWORD PTR _iDefault$[esp+4]
	mov	ecx, DWORD PTR _pArray$[esp+4]
	add	esp, 4
	mov	DWORD PTR [ecx], eax
	test	edx, edx
	jne	SHORT $LN5@Initialize

; 127  : 	{
; 128  : 		ZeroMemory(pArray, sizeof(int) * count);

	lea	ecx, DWORD PTR [esi*4]
	push	ecx
	push	edx
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	pop	esi

; 134  : 	}
; 135  : }

	ret	12					; 0000000cH
$LN5@Initialize:

; 129  : 	}
; 130  : 	else
; 131  : 	{
; 132  : 		for(size_t i = 0; i < count; ++i)

	xor	eax, eax
	test	esi, esi
	jbe	SHORT $LN1@Initialize
	push	edi
	npad	5
$LL3@Initialize:

; 133  : 			pArray[i] = iDefault;

	mov	edi, DWORD PTR [ecx]
	mov	DWORD PTR [edi+eax*4], edx
	inc	eax
	cmp	eax, esi
	jb	SHORT $LL3@Initialize
	pop	edi
$LN1@Initialize:
	pop	esi

; 134  : 	}
; 135  : }

	ret	12					; 0000000cH
?InitializeArray@CvDatabaseUtility@@QAEXAAPAHIH@Z ENDP	; CvDatabaseUtility::InitializeArray
_TEXT	ENDS
PUBLIC	??0CvString@@QAE@ABV0@@Z			; CvString::CvString
; Function compile flags: /Ogtpy
;	COMDAT ??0CvString@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0CvString@@QAE@ABV0@@Z PROC				; CvString::CvString, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, esi
	pop	esi
	ret	4
??0CvString@@QAE@ABV0@@Z ENDP				; CvString::CvString
_TEXT	ENDS
PUBLIC	??0FreeResourceXCities@@QAE@XZ			; FreeResourceXCities::FreeResourceXCities
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.h
;	COMDAT ??0FreeResourceXCities@@QAE@XZ
_TEXT	SEGMENT
??0FreeResourceXCities@@QAE@XZ PROC			; FreeResourceXCities::FreeResourceXCities, COMDAT
; _this$ = ecx

; 18   : 	{};

	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	ret	0
??0FreeResourceXCities@@QAE@XZ ENDP			; FreeResourceXCities::FreeResourceXCities
_TEXT	ENDS
PUBLIC	??0MayaBonusChoice@@QAE@XZ			; MayaBonusChoice::MayaBonusChoice
; Function compile flags: /Ogtpy
;	COMDAT ??0MayaBonusChoice@@QAE@XZ
_TEXT	SEGMENT
??0MayaBonusChoice@@QAE@XZ PROC				; MayaBonusChoice::MayaBonusChoice, COMDAT
; _this$ = ecx

; 29   : 	{};

	mov	eax, ecx
	mov	DWORD PTR [eax], -1
	mov	DWORD PTR [eax+4], 0
	ret	0
??0MayaBonusChoice@@QAE@XZ ENDP				; MayaBonusChoice::MayaBonusChoice
_TEXT	ENDS
PUBLIC	??0MayaBonusChoice@@QAE@ABU0@@Z			; MayaBonusChoice::MayaBonusChoice
; Function compile flags: /Ogtpy
;	COMDAT ??0MayaBonusChoice@@QAE@ABU0@@Z
_TEXT	SEGMENT
_in$ = 8						; size = 4
??0MayaBonusChoice@@QAE@ABU0@@Z PROC			; MayaBonusChoice::MayaBonusChoice, COMDAT
; _this$ = ecx

; 31   : 	MayaBonusChoice(const MayaBonusChoice& in)

	mov	eax, ecx

; 32   : 	{
; 33   : 		m_eUnitType = in.m_eUnitType;

	mov	ecx, DWORD PTR _in$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 34   : 		m_iBaktunJustFinished = in.m_iBaktunJustFinished;

	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx

; 35   : 	};

	ret	4
??0MayaBonusChoice@@QAE@ABU0@@Z ENDP			; MayaBonusChoice::MayaBonusChoice
_TEXT	ENDS
PUBLIC	?GetLandBarbarianConversionPercent@CvPlayerTraits@@QBEHXZ ; CvPlayerTraits::GetLandBarbarianConversionPercent
; Function compile flags: /Ogtpy
;	COMDAT ?GetLandBarbarianConversionPercent@CvPlayerTraits@@QBEHXZ
_TEXT	SEGMENT
?GetLandBarbarianConversionPercent@CvPlayerTraits@@QBEHXZ PROC ; CvPlayerTraits::GetLandBarbarianConversionPercent, COMDAT
; _this$ = ecx

; 503  : 		return m_iLandBarbarianConversionPercent;

	mov	eax, DWORD PTR [ecx+100]

; 504  : 	};

	ret	0
?GetLandBarbarianConversionPercent@CvPlayerTraits@@QBEHXZ ENDP ; CvPlayerTraits::GetLandBarbarianConversionPercent
_TEXT	ENDS
PUBLIC	?GetSeaBarbarianConversionPercent@CvPlayerTraits@@QBEHXZ ; CvPlayerTraits::GetSeaBarbarianConversionPercent
; Function compile flags: /Ogtpy
;	COMDAT ?GetSeaBarbarianConversionPercent@CvPlayerTraits@@QBEHXZ
_TEXT	SEGMENT
?GetSeaBarbarianConversionPercent@CvPlayerTraits@@QBEHXZ PROC ; CvPlayerTraits::GetSeaBarbarianConversionPercent, COMDAT
; _this$ = ecx

; 511  : 		return m_iSeaBarbarianConversionPercent;

	mov	eax, DWORD PTR [ecx+108]

; 512  : 	};

	ret	0
?GetSeaBarbarianConversionPercent@CvPlayerTraits@@QBEHXZ ENDP ; CvPlayerTraits::GetSeaBarbarianConversionPercent
_TEXT	ENDS
PUBLIC	?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC	; std::vector<int,std::allocator<int> >::size, COMDAT
; _this$ = ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 727  : 		}

	ret	0
?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP	; std::vector<int,std::allocator<int> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@HV?$allocator@H@std@@@std@@QBEABHI@Z ; std::vector<int,std::allocator<int> >::operator[]
; Function compile flags: /Ogtpy
;	COMDAT ??A?$vector@HV?$allocator@H@std@@@std@@QBEABHI@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@HV?$allocator@H@std@@@std@@QBEABHI@Z PROC	; std::vector<int,std::allocator<int> >::operator[], COMDAT
; _this$ = ecx

; 760  : 
; 761  :  #if _HAS_ITERATOR_DEBUGGING
; 762  : 		if (size() <= _Pos)
; 763  : 			{
; 764  : 			_DEBUG_ERROR("vector subscript out of range");
; 765  : 			_SCL_SECURE_OUT_OF_RANGE;
; 766  : 			}
; 767  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 768  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 769  : 
; 770  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Pos$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*4]

; 771  : 		}

	ret	4
??A?$vector@HV?$allocator@H@std@@@std@@QBEABHI@Z ENDP	; std::vector<int,std::allocator<int> >::operator[]
_TEXT	ENDS
PUBLIC	??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z ; std::vector<enum TeamTypes,std::allocator<enum TeamTypes> >::operator[]
; Function compile flags: /Ogtpy
;	COMDAT ??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z PROC ; std::vector<enum TeamTypes,std::allocator<enum TeamTypes> >::operator[], COMDAT
; _this$ = ecx

; 760  : 
; 761  :  #if _HAS_ITERATOR_DEBUGGING
; 762  : 		if (size() <= _Pos)
; 763  : 			{
; 764  : 			_DEBUG_ERROR("vector subscript out of range");
; 765  : 			_SCL_SECURE_OUT_OF_RANGE;
; 766  : 			}
; 767  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 768  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 769  : 
; 770  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Pos$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*4]

; 771  : 		}

	ret	4
??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z ENDP ; std::vector<enum TeamTypes,std::allocator<enum TeamTypes> >::operator[]
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@H@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<int> >::~_Container_base_aux_alloc_empty<std::allocator<int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@H@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@H@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<int> >::~_Container_base_aux_alloc_empty<std::allocator<int> >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@H@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<int> >::~_Container_base_aux_alloc_empty<std::allocator<int> >
_TEXT	ENDS
PUBLIC	??0?$allocator@H@std@@QAE@XZ			; std::allocator<int>::allocator<int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@H@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@H@std@@QAE@XZ PROC			; std::allocator<int>::allocator<int>, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@H@std@@QAE@XZ ENDP			; std::allocator<int>::allocator<int>
_TEXT	ENDS
PUBLIC	?size@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBEIXZ ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?size@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBEIXZ PROC ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::size, COMDAT
; _this$ = ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 727  : 		}

	ret	0
?size@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBEIXZ ENDP ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::size
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@W4TraitTypes@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<enum TraitTypes> >::~_Container_base_aux_alloc_empty<std::allocator<enum TraitTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@W4TraitTypes@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@W4TraitTypes@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<enum TraitTypes> >::~_Container_base_aux_alloc_empty<std::allocator<enum TraitTypes> >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@W4TraitTypes@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<enum TraitTypes> >::~_Container_base_aux_alloc_empty<std::allocator<enum TraitTypes> >
_TEXT	ENDS
PUBLIC	??0?$allocator@W4TraitTypes@@@std@@QAE@ABV01@@Z	; std::allocator<enum TraitTypes>::allocator<enum TraitTypes>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@W4TraitTypes@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@W4TraitTypes@@@std@@QAE@ABV01@@Z PROC	; std::allocator<enum TraitTypes>::allocator<enum TraitTypes>, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@W4TraitTypes@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<enum TraitTypes>::allocator<enum TraitTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC			; std::length_error::length_error, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0logic_error@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7length_error@std@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ ; std::vector<int,std::allocator<int> >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T230162 = -80						; size = 28
$T230161 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ PROC	; std::vector<int,std::allocator<int> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	-1
	push	__ehhandler$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 68					; 00000044H

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T230162[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T230161[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T230162[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T230161[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T230161[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T230161[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T230161[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN13@Xlen@4:
$LN12@Xlen@4:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T230162[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T230161[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ:
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ ENDP	; std::vector<int,std::allocator<int> >::_Xlen
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@H@std@@@std@@IAE@V?$allocator@H@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<int> >::_Container_base_aux_alloc_empty<std::allocator<int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@H@std@@@std@@IAE@V?$allocator@H@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@H@std@@@std@@IAE@V?$allocator@H@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<int> >::_Container_base_aux_alloc_empty<std::allocator<int> >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@H@std@@@std@@IAE@V?$allocator@H@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<int> >::_Container_base_aux_alloc_empty<std::allocator<int> >
_TEXT	ENDS
PUBLIC	??0?$allocator@H@std@@QAE@ABV01@@Z		; std::allocator<int>::allocator<int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@H@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@H@std@@QAE@ABV01@@Z PROC			; std::allocator<int>::allocator<int>, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@H@std@@QAE@ABV01@@Z ENDP			; std::allocator<int>::allocator<int>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@H@std@@QAEXPAHI@Z	; std::allocator<int>::deallocate
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@H@std@@QAEXPAHI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@H@std@@QAEXPAHI@Z PROC		; std::allocator<int>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@H@std@@QAEXPAHI@Z ENDP		; std::allocator<int>::deallocate
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@KAXXZ ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T230196 = -80						; size = 28
$T230195 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@KAXXZ PROC ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	-1
	push	__ehhandler$?_Xlen@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 68					; 00000044H

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T230196[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T230195[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T230196[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T230195[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T230195[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T230195[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T230195[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN13@Xlen@5:
$LN12@Xlen@5:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T230196[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T230195[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@KAXXZ:
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@KAXXZ ENDP ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Xlen
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@W4TraitTypes@@@std@@@std@@IAE@V?$allocator@W4TraitTypes@@@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<enum TraitTypes> >::_Container_base_aux_alloc_empty<std::allocator<enum TraitTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@W4TraitTypes@@@std@@@std@@IAE@V?$allocator@W4TraitTypes@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@W4TraitTypes@@@std@@@std@@IAE@V?$allocator@W4TraitTypes@@@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<enum TraitTypes> >::_Container_base_aux_alloc_empty<std::allocator<enum TraitTypes> >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@W4TraitTypes@@@std@@@std@@IAE@V?$allocator@W4TraitTypes@@@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<enum TraitTypes> >::_Container_base_aux_alloc_empty<std::allocator<enum TraitTypes> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@W4TraitTypes@@@std@@QAEXPAW4TraitTypes@@I@Z ; std::allocator<enum TraitTypes>::deallocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@W4TraitTypes@@@std@@QAEXPAW4TraitTypes@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@W4TraitTypes@@@std@@QAEXPAW4TraitTypes@@I@Z PROC ; std::allocator<enum TraitTypes>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@W4TraitTypes@@@std@@QAEXPAW4TraitTypes@@I@Z ENDP ; std::allocator<enum TraitTypes>::deallocate
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE@PAW4TraitTypes@@@Z ; std::_Vector_const_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::_Vector_const_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE@PAW4TraitTypes@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE@PAW4TraitTypes@@@Z PROC ; std::_Vector_const_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::_Vector_const_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE@PAW4TraitTypes@@@Z ENDP ; std::_Vector_const_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::_Vector_const_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@H@std@@QBEIXZ		; std::allocator<int>::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@H@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@H@std@@QBEIXZ PROC		; std::allocator<int>::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 1073741823				; 3fffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@H@std@@QBEIXZ ENDP		; std::allocator<int>::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@W4TraitTypes@@@std@@QBEIXZ ; std::allocator<enum TraitTypes>::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$allocator@W4TraitTypes@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@W4TraitTypes@@@std@@QBEIXZ PROC	; std::allocator<enum TraitTypes>::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 1073741823				; 3fffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@W4TraitTypes@@@std@@QBEIXZ ENDP	; std::allocator<enum TraitTypes>::max_size
_TEXT	ENDS
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC				; std::swap<char>, COMDAT

; 18   : 	if (&_Left != &_Right)

	mov	eax, DWORD PTR __Left$[esp-4]
	mov	ecx, DWORD PTR __Right$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN1@swap@3

; 19   : 		{	// different, worth swapping
; 20   : 		_Ty _Tmp = _Left;

	mov	dl, BYTE PTR [eax]
	push	ebx

; 21   : 
; 22   : 		_Left = _Right;

	mov	bl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], bl

; 23   : 		_Right = _Tmp;

	mov	BYTE PTR [ecx], dl
	pop	ebx
$LN1@swap@3:

; 24   : 		}
; 25   : 	}

	ret	0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ	; FAutoVariable<int,CvUnit>::get
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fautovariable.h
;	COMDAT ?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ
_TEXT	SEGMENT
?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ PROC		; FAutoVariable<int,CvUnit>::get, COMDAT
; _this$ = ecx

; 177  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 178  : }

	ret	0
?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ ENDP		; FAutoVariable<int,CvUnit>::get
_TEXT	ENDS
PUBLIC	??$?6H@FDataStream@@QAEAAV0@ABH@Z		; FDataStream::operator<<<int>
EXTRN	?Write@FDataStream@@IAEXABH@Z:PROC		; FDataStream::Write
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ??$?6H@FDataStream@@QAEAAV0@ABH@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?6H@FDataStream@@QAEAAV0@ABH@Z PROC			; FDataStream::operator<<<int>, COMDAT
; _this$ = ecx

; 246  : 	// If the compiler produces an error here complaining about 
; 247  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 248  : 	// it could not find a specialization for the type supplied
; 249  : 	// in scope. If a specialization exists, be sure to include
; 250  : 	// the header (FStlContainerSerialization.h, for example), 
; 251  : 	// if not, implement :
; 252  : 	// FDataStream & operator<<(FDataStream &, YourCustomType &)
; 253  : 	Write( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 254  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 255  : }

	ret	4
??$?6H@FDataStream@@QAEAAV0@ABH@Z ENDP			; FDataStream::operator<<<int>
_TEXT	ENDS
PUBLIC	??$?5H@FDataStream@@QAEAAV0@AAH@Z		; FDataStream::operator>><int>
EXTRN	?Read@FDataStream@@IAEXAAH@Z:PROC		; FDataStream::Read
; Function compile flags: /Ogtpy
;	COMDAT ??$?5H@FDataStream@@QAEAAV0@AAH@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?5H@FDataStream@@QAEAAV0@AAH@Z PROC			; FDataStream::operator>><int>, COMDAT
; _this$ = ecx

; 260  : 	// If the compiler produces an error here complaining about 
; 261  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 262  : 	// it could not find a specialization for the type supplied
; 263  : 	// in scope. If a specialization exists, be sure to include
; 264  : 	// the header (FStlContainerSerialization.h, for example), 
; 265  : 	// if not, implement :
; 266  : 	// FDataStream & operator>>(FDataStream &, YourCustomType &)
; 267  : 	Read( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 268  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 269  : }

	ret	4
??$?5H@FDataStream@@QAEAAV0@AAH@Z ENDP			; FDataStream::operator>><int>
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fautovariable.h
;	COMDAT ??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ
_TEXT	SEGMENT
??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ PROC ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ ENDP ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ	; FAutoVariable<bool,CvPlayer>::operator bool const &
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ
_TEXT	SEGMENT
??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ PROC	; FAutoVariable<bool,CvPlayer>::operator bool const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ ENDP	; FAutoVariable<bool,CvPlayer>::operator bool const &
_TEXT	ENDS
PUBLIC	??$_Allocate@H@std@@YAPAHIPAH@Z			; std::_Allocate<int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Allocate@H@std@@YAPAHIPAH@Z
_TEXT	SEGMENT
$T230257 = -12						; size = 12
$T230261 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@H@std@@YAPAHIPAH@Z PROC			; std::_Allocate<int>, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate@5

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate@5:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx*4]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate@5:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 4
	jae	SHORT $LN1@Allocate@5

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T230261[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T230257[esp+16]
	mov	DWORD PTR $T230261[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T230257[esp+16]
	push	ecx
	mov	DWORD PTR $T230257[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate@5:
$LN8@Allocate@5:
	int	3
??$_Allocate@H@std@@YAPAHIPAH@Z ENDP			; std::_Allocate<int>
_TEXT	ENDS
PUBLIC	??$_Allocate@W4TraitTypes@@@std@@YAPAW4TraitTypes@@IPAW41@@Z ; std::_Allocate<enum TraitTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Allocate@W4TraitTypes@@@std@@YAPAW4TraitTypes@@IPAW41@@Z
_TEXT	SEGMENT
$T230267 = -12						; size = 12
$T230271 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@W4TraitTypes@@@std@@YAPAW4TraitTypes@@IPAW41@@Z PROC ; std::_Allocate<enum TraitTypes>, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate@6

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate@6:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx*4]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate@6:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 4
	jae	SHORT $LN1@Allocate@6

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T230271[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T230267[esp+16]
	mov	DWORD PTR $T230271[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T230267[esp+16]
	push	ecx
	mov	DWORD PTR $T230267[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate@6:
$LN8@Allocate@6:
	int	3
??$_Allocate@W4TraitTypes@@@std@@YAPAW4TraitTypes@@IPAW41@@Z ENDP ; std::_Allocate<enum TraitTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@_N@std@@@std@@IAE@V?$allocator@_N@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<bool> >::_Container_base_aux_alloc_empty<std::allocator<bool> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@_N@std@@@std@@IAE@V?$allocator@_N@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@_N@std@@@std@@IAE@V?$allocator@_N@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<bool> >::_Container_base_aux_alloc_empty<std::allocator<bool> >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@_N@std@@@std@@IAE@V?$allocator@_N@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<bool> >::_Container_base_aux_alloc_empty<std::allocator<bool> >
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@_N@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<bool> >::~_Container_base_aux_alloc_empty<std::allocator<bool> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@_N@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@_N@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<bool> >::~_Container_base_aux_alloc_empty<std::allocator<bool> >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@_N@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<bool> >::~_Container_base_aux_alloc_empty<std::allocator<bool> >
_TEXT	ENDS
PUBLIC	??0?$allocator@_N@std@@QAE@XZ			; std::allocator<bool>::allocator<bool>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@_N@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@_N@std@@QAE@XZ PROC			; std::allocator<bool>::allocator<bool>, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@_N@std@@QAE@XZ ENDP			; std::allocator<bool>::allocator<bool>
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<Firaxis::Array<int,6> > >::~_Container_base_aux_alloc_empty<std::allocator<Firaxis::Array<int,6> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<Firaxis::Array<int,6> > >::~_Container_base_aux_alloc_empty<std::allocator<Firaxis::Array<int,6> > >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<Firaxis::Array<int,6> > >::~_Container_base_aux_alloc_empty<std::allocator<Firaxis::Array<int,6> > >
_TEXT	ENDS
PUBLIC	??0?$allocator@V?$Array@H$05@Firaxis@@@std@@QAE@XZ ; std::allocator<Firaxis::Array<int,6> >::allocator<Firaxis::Array<int,6> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@V?$Array@H$05@Firaxis@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@V?$Array@H$05@Firaxis@@@std@@QAE@XZ PROC	; std::allocator<Firaxis::Array<int,6> >::allocator<Firaxis::Array<int,6> >, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@V?$Array@H$05@Firaxis@@@std@@QAE@XZ ENDP	; std::allocator<Firaxis::Array<int,6> >::allocator<Firaxis::Array<int,6> >
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@I@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<unsigned int> >::~_Container_base_aux_alloc_empty<std::allocator<unsigned int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@I@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@I@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<unsigned int> >::~_Container_base_aux_alloc_empty<std::allocator<unsigned int> >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@I@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<unsigned int> >::~_Container_base_aux_alloc_empty<std::allocator<unsigned int> >
_TEXT	ENDS
PUBLIC	??0?$allocator@I@std@@QAE@XZ			; std::allocator<unsigned int>::allocator<unsigned int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@I@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@I@std@@QAE@XZ PROC			; std::allocator<unsigned int>::allocator<unsigned int>, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@I@std@@QAE@XZ ENDP			; std::allocator<unsigned int>::allocator<unsigned int>
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@KAXXZ ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T230303 = -80						; size = 28
$T230302 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@KAXXZ PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	-1
	push	__ehhandler$?_Xlen@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 68					; 00000044H

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T230303[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T230302[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T230303[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T230302[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T230302[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T230302[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T230302[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN13@Xlen@6:
$LN12@Xlen@6:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T230303[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T230302[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@KAXXZ:
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@KAXXZ ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Xlen
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAE@V?$allocator@V?$Array@H$05@Firaxis@@@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<Firaxis::Array<int,6> > >::_Container_base_aux_alloc_empty<std::allocator<Firaxis::Array<int,6> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAE@V?$allocator@V?$Array@H$05@Firaxis@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAE@V?$allocator@V?$Array@H$05@Firaxis@@@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<Firaxis::Array<int,6> > >::_Container_base_aux_alloc_empty<std::allocator<Firaxis::Array<int,6> > >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAE@V?$allocator@V?$Array@H$05@Firaxis@@@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<Firaxis::Array<int,6> > >::_Container_base_aux_alloc_empty<std::allocator<Firaxis::Array<int,6> > >
_TEXT	ENDS
PUBLIC	??0?$allocator@V?$Array@H$05@Firaxis@@@std@@QAE@ABV01@@Z ; std::allocator<Firaxis::Array<int,6> >::allocator<Firaxis::Array<int,6> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@V?$Array@H$05@Firaxis@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@V?$Array@H$05@Firaxis@@@std@@QAE@ABV01@@Z PROC ; std::allocator<Firaxis::Array<int,6> >::allocator<Firaxis::Array<int,6> >, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@V?$Array@H$05@Firaxis@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<Firaxis::Array<int,6> >::allocator<Firaxis::Array<int,6> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@V?$Array@H$05@Firaxis@@@std@@QAEXPAV?$Array@H$05@Firaxis@@I@Z ; std::allocator<Firaxis::Array<int,6> >::deallocate
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@V?$Array@H$05@Firaxis@@@std@@QAEXPAV?$Array@H$05@Firaxis@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$Array@H$05@Firaxis@@@std@@QAEXPAV?$Array@H$05@Firaxis@@I@Z PROC ; std::allocator<Firaxis::Array<int,6> >::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@V?$Array@H$05@Firaxis@@@std@@QAEXPAV?$Array@H$05@Firaxis@@I@Z ENDP ; std::allocator<Firaxis::Array<int,6> >::deallocate
_TEXT	ENDS
PUBLIC	?_Nw@?$vector@_NV?$allocator@_N@std@@@std@@KAII@Z ; std::vector<bool,std::allocator<bool> >::_Nw
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Nw@?$vector@_NV?$allocator@_N@std@@@std@@KAII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Nw@?$vector@_NV?$allocator@_N@std@@@std@@KAII@Z PROC	; std::vector<bool,std::allocator<bool> >::_Nw, COMDAT

; 2331 : 		return ((_Count + _VBITS - 1) / _VBITS);

	mov	eax, DWORD PTR __Count$[esp-4]
	add	eax, 31					; 0000001fH
	shr	eax, 5

; 2332 : 		}

	ret	0
?_Nw@?$vector@_NV?$allocator@_N@std@@@std@@KAII@Z ENDP	; std::vector<bool,std::allocator<bool> >::_Nw
_TEXT	ENDS
PUBLIC	??_C@_0BG@EOMJEIFA@vector?$DMbool?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@IBEXXZ ; std::vector<bool,std::allocator<bool> >::_Xlen
;	COMDAT ??_C@_0BG@EOMJEIFA@vector?$DMbool?$DO?5too?5long?$AA@
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
CONST	SEGMENT
??_C@_0BG@EOMJEIFA@vector?$DMbool?$DO?5too?5long?$AA@ DB 'vector<bool> to'
	DB	'o long', 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@IBEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@IBEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@IBEXXZ$2
__ehfuncinfo$?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@IBEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@IBEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@IBEXXZ
_TEXT	SEGMENT
$T230340 = -80						; size = 28
$T230339 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@IBEXXZ PROC ; std::vector<bool,std::allocator<bool> >::_Xlen, COMDAT
; _this$ = ecx

; 2374 : 		{	// report a length_error

	push	-1
	push	__ehhandler$?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@IBEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 68					; 00000044H

; 2375 : 		_THROW(length_error, "vector<bool> too long");

	push	OFFSET ??_C@_0BG@EOMJEIFA@vector?$DMbool?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T230340[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T230339[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T230340[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T230339[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T230339[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T230339[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T230339[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN13@Xlen@7:
$LN12@Xlen@7:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@IBEXXZ$0:
	lea	ecx, DWORD PTR $T230340[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@IBEXXZ$2:
	lea	ecx, DWORD PTR $T230339[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@IBEXXZ:
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@IBEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@IBEXXZ ENDP ; std::vector<bool,std::allocator<bool> >::_Xlen
PUBLIC	?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ PROC	; std::vector<unsigned int,std::allocator<unsigned int> >::size, COMDAT
; _this$ = ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 727  : 		}

	ret	0
?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ENDP	; std::vector<unsigned int,std::allocator<unsigned int> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::operator[]
; Function compile flags: /Ogtpy
;	COMDAT ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z PROC	; std::vector<unsigned int,std::allocator<unsigned int> >::operator[], COMDAT
; _this$ = ecx

; 775  : 
; 776  :  #if _HAS_ITERATOR_DEBUGGING
; 777  : 		if (size() <= _Pos)
; 778  : 			{
; 779  : 			_DEBUG_ERROR("vector subscript out of range");
; 780  : 			_SCL_SECURE_OUT_OF_RANGE;
; 781  : 			}
; 782  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 783  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 784  : 
; 785  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Pos$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*4]

; 786  : 		}

	ret	4
??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z ENDP	; std::vector<unsigned int,std::allocator<unsigned int> >::operator[]
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@IV?$allocator@I@std@@@std@@KAXXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@IV?$allocator@I@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@IV?$allocator@I@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@IV?$allocator@I@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@IV?$allocator@I@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@IV?$allocator@I@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@IV?$allocator@I@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T230371 = -80						; size = 28
$T230370 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@IV?$allocator@I@std@@@std@@KAXXZ PROC	; std::vector<unsigned int,std::allocator<unsigned int> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	-1
	push	__ehhandler$?_Xlen@?$vector@IV?$allocator@I@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 68					; 00000044H

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T230371[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T230370[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T230371[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T230370[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T230370[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T230370[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T230370[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN13@Xlen@8:
$LN12@Xlen@8:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@IV?$allocator@I@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T230371[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@IV?$allocator@I@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T230370[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@IV?$allocator@I@std@@@std@@KAXXZ:
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@IV?$allocator@I@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@IV?$allocator@I@std@@@std@@KAXXZ ENDP	; std::vector<unsigned int,std::allocator<unsigned int> >::_Xlen
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<unsigned int> >::_Container_base_aux_alloc_empty<std::allocator<unsigned int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<unsigned int> >::_Container_base_aux_alloc_empty<std::allocator<unsigned int> >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<unsigned int> >::_Container_base_aux_alloc_empty<std::allocator<unsigned int> >
_TEXT	ENDS
PUBLIC	??0?$allocator@I@std@@QAE@ABV01@@Z		; std::allocator<unsigned int>::allocator<unsigned int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@I@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@I@std@@QAE@ABV01@@Z PROC			; std::allocator<unsigned int>::allocator<unsigned int>, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@I@std@@QAE@ABV01@@Z ENDP			; std::allocator<unsigned int>::allocator<unsigned int>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@I@std@@QAEXPAII@Z	; std::allocator<unsigned int>::deallocate
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@I@std@@QAEXPAII@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@I@std@@QAEXPAII@Z PROC		; std::allocator<unsigned int>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@I@std@@QAEXPAII@Z ENDP		; std::allocator<unsigned int>::deallocate
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@V?$Array@H$05@Firaxis@@@std@@QBEIXZ ; std::allocator<Firaxis::Array<int,6> >::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$allocator@V?$Array@H$05@Firaxis@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@V?$Array@H$05@Firaxis@@@std@@QBEIXZ PROC ; std::allocator<Firaxis::Array<int,6> >::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 178956970				; 0aaaaaaaH

; 167  : 		}

	ret	0
?max_size@?$allocator@V?$Array@H$05@Firaxis@@@std@@QBEIXZ ENDP ; std::allocator<Firaxis::Array<int,6> >::max_size
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z ; std::_Vector_const_iterator<int,std::allocator<int> >::_Vector_const_iterator<int,std::allocator<int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z PROC ; std::_Vector_const_iterator<int,std::allocator<int> >::_Vector_const_iterator<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z ENDP ; std::_Vector_const_iterator<int,std::allocator<int> >::_Vector_const_iterator<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<int,std::allocator<int> >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<int,std::allocator<int> >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<int,std::allocator<int> >::operator==
_TEXT	ENDS
PUBLIC	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
; Function compile flags: /Ogtpy
;	COMDAT ??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=, COMDAT
; _this$ = ecx

; 1602 : 		{	// increment by integer

	mov	eax, ecx

; 1603 : 		if (_Off == 0)

	mov	ecx, DWORD PTR __Off$[esp-4]
	test	ecx, ecx

; 1604 : 			return (*this); // early out

	je	SHORT $LN6@operator@2
	push	esi

; 1605 : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Myptr != NULL);
; 1606 : 		if (_Off < 0)
; 1607 : 			{
; 1608 : 			_SCL_SECURE_VALIDATE_RANGE(this->_My_actual_offset() >= ((size_type)-_Off));
; 1609 : 			}
; 1610 : 		else
; 1611 : 			{
; 1612 : 			_SCL_SECURE_VALIDATE_RANGE((this->_My_actual_offset() + _Off) <= ((_MycontTy *)this->_Getmycont())->_Mysize);
; 1613 : 			}
; 1614 : 		if (_Off < 0 && this->_Myoff < 0 - (size_type)_Off)

	jge	SHORT $LN2@operator@2
	mov	edx, DWORD PTR [eax+4]
	mov	esi, ecx
	neg	esi
	cmp	edx, esi
	jae	SHORT $LN2@operator@2

; 1615 : 			{	/* add negative increment */
; 1616 : 			this->_Myoff += _Off;

	add	ecx, edx

; 1617 : 			this->_Myptr -= 1 + ((size_type)(-1) - this->_Myoff) / _VBITS;

	or	edx, -1
	sub	edx, ecx
	shr	edx, 5
	add	edx, edx
	add	edx, edx
	mov	esi, -4					; fffffffcH
	sub	esi, edx
	add	DWORD PTR [eax], esi

; 1624 : 			this->_Myoff %= _VBITS;

	and	ecx, 31					; 0000001fH
	mov	DWORD PTR [eax+4], ecx
	pop	esi

; 1625 : 			}
; 1626 : 		return (*this);
; 1627 : 		}

	ret	4
$LN2@operator@2:

; 1618 : 			this->_Myoff %= _VBITS;
; 1619 : 			}
; 1620 : 		else
; 1621 : 			{	/* add non-negative increment */
; 1622 : 			this->_Myoff += _Off;

	mov	edx, DWORD PTR [eax+4]
	add	ecx, edx

; 1623 : 			this->_Myptr += this->_Myoff / _VBITS;

	mov	edx, ecx
	shr	edx, 5
	add	edx, edx
	add	edx, edx
	add	DWORD PTR [eax], edx

; 1624 : 			this->_Myoff %= _VBITS;

	and	ecx, 31					; 0000001fH
	mov	DWORD PTR [eax+4], ecx
	pop	esi
$LN6@operator@2:

; 1625 : 			}
; 1626 : 		return (*this);
; 1627 : 		}

	ret	4
??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
_TEXT	ENDS
PUBLIC	??G?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBEHABV01@@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator-
; Function compile flags: /Ogtpy
;	COMDAT ??G?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??G?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBEHABV01@@Z PROC ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator-, COMDAT
; _this$ = ecx

; 1649 : 
; 1650 :  #if _HAS_ITERATOR_DEBUGGING
; 1651 : 		_Compat(_Right);
; 1652 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1653 : 
; 1654 : 		return (_VBITS * (this->_Myptr - _Right._Myptr)
; 1655 : 			+ (difference_type)this->_Myoff
; 1656 : 			- (difference_type)_Right._Myoff);

	mov	edx, DWORD PTR __Right$[esp-4]
	mov	eax, DWORD PTR [ecx]
	sub	eax, DWORD PTR [edx]
	sar	eax, 2
	shl	eax, 5
	sub	eax, DWORD PTR [edx+4]
	add	eax, DWORD PTR [ecx+4]

; 1657 : 		}

	ret	4
??G?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBEHABV01@@Z ENDP ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator-
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@PAV?$Array@H$05@Firaxis@@@Z ; std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@PAV?$Array@H$05@Firaxis@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@PAV?$Array@H$05@Firaxis@@@Z PROC ; std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@PAV?$Array@H$05@Firaxis@@@Z ENDP ; std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator==
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@I@std@@QBEIXZ		; std::allocator<unsigned int>::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@I@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@I@std@@QBEIXZ PROC		; std::allocator<unsigned int>::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 1073741823				; 3fffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@I@std@@QBEIXZ ENDP		; std::allocator<unsigned int>::max_size
_TEXT	ENDS
PUBLIC	??0?$_Vb_iter_base@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAE@PAII@Z ; std::_Vb_iter_base<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Vb_iter_base<unsigned int,int,std::vector<bool,std::allocator<bool> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vb_iter_base@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAE@PAII@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Off$ = 12						; size = 4
??0?$_Vb_iter_base@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAE@PAII@Z PROC ; std::_Vb_iter_base<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Vb_iter_base<unsigned int,int,std::vector<bool,std::allocator<bool> > >, COMDAT
; _this$ = ecx

; 1403 : 		{	// construct with offset and pointer

	mov	edx, DWORD PTR __Off$[esp-4]
	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 1404 : 		}

	ret	8
??0?$_Vb_iter_base@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAE@PAII@Z ENDP ; std::_Vb_iter_base<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Vb_iter_base<unsigned int,int,std::vector<bool,std::allocator<bool> > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@IV?$allocator@I@std@@@std@@QAE@PAI@Z ; std::_Vector_const_iterator<unsigned int,std::allocator<unsigned int> >::_Vector_const_iterator<unsigned int,std::allocator<unsigned int> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_const_iterator@IV?$allocator@I@std@@@std@@QAE@PAI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@IV?$allocator@I@std@@@std@@QAE@PAI@Z PROC ; std::_Vector_const_iterator<unsigned int,std::allocator<unsigned int> >::_Vector_const_iterator<unsigned int,std::allocator<unsigned int> >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@IV?$allocator@I@std@@@std@@QAE@PAI@Z ENDP ; std::_Vector_const_iterator<unsigned int,std::allocator<unsigned int> >::_Vector_const_iterator<unsigned int,std::allocator<unsigned int> >
_TEXT	ENDS
PUBLIC	??Y?$_Vector_const_iterator@IV?$allocator@I@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<unsigned int,std::allocator<unsigned int> >::operator+=
; Function compile flags: /Ogtpy
;	COMDAT ??Y?$_Vector_const_iterator@IV?$allocator@I@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@IV?$allocator@I@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<unsigned int,std::allocator<unsigned int> >::operator+=, COMDAT
; _this$ = ecx

; 159  : 		{	// increment by integer

	mov	eax, ecx

; 160  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 161  : 		_SCL_SECURE_VALIDATE_RANGE(
; 162  : 			_Myptr + _Off <= ((_Myvec *)(this->_Getmycont()))->_Mylast &&
; 163  : 			_Myptr + _Off >= ((_Myvec *)(this->_Getmycont()))->_Myfirst);
; 164  : 		_Myptr += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [ecx*4]
	add	DWORD PTR [eax], edx

; 165  : 		return (*this);
; 166  : 		}

	ret	4
??Y?$_Vector_const_iterator@IV?$allocator@I@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<unsigned int,std::allocator<unsigned int> >::operator+=
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@IV?$allocator@I@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<unsigned int,std::allocator<unsigned int> >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@IV?$allocator@I@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@IV?$allocator@I@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<unsigned int,std::allocator<unsigned int> >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@IV?$allocator@I@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<unsigned int,std::allocator<unsigned int> >::operator==
_TEXT	ENDS
PUBLIC	??$?5_N@FDataStream@@QAEAAV0@AA_N@Z		; FDataStream::operator>><bool>
EXTRN	?Read@FDataStream@@IAEXAA_N@Z:PROC		; FDataStream::Read
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ??$?5_N@FDataStream@@QAEAAV0@AA_N@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?5_N@FDataStream@@QAEAAV0@AA_N@Z PROC		; FDataStream::operator>><bool>, COMDAT
; _this$ = ecx

; 260  : 	// If the compiler produces an error here complaining about 
; 261  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 262  : 	// it could not find a specialization for the type supplied
; 263  : 	// in scope. If a specialization exists, be sure to include
; 264  : 	// the header (FStlContainerSerialization.h, for example), 
; 265  : 	// if not, implement :
; 266  : 	// FDataStream & operator>>(FDataStream &, YourCustomType &)
; 267  : 	Read( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 268  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 269  : }

	ret	4
??$?5_N@FDataStream@@QAEAAV0@AA_N@Z ENDP		; FDataStream::operator>><bool>
_TEXT	ENDS
PUBLIC	??$?6_N@FDataStream@@QAEAAV0@AB_N@Z		; FDataStream::operator<<<bool>
EXTRN	?Write@FDataStream@@IAEXAB_N@Z:PROC		; FDataStream::Write
; Function compile flags: /Ogtpy
;	COMDAT ??$?6_N@FDataStream@@QAEAAV0@AB_N@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?6_N@FDataStream@@QAEAAV0@AB_N@Z PROC		; FDataStream::operator<<<bool>, COMDAT
; _this$ = ecx

; 246  : 	// If the compiler produces an error here complaining about 
; 247  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 248  : 	// it could not find a specialization for the type supplied
; 249  : 	// in scope. If a specialization exists, be sure to include
; 250  : 	// the header (FStlContainerSerialization.h, for example), 
; 251  : 	// if not, implement :
; 252  : 	// FDataStream & operator<<(FDataStream &, YourCustomType &)
; 253  : 	Write( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 254  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 255  : }

	ret	4
??$?6_N@FDataStream@@QAEAAV0@AB_N@Z ENDP		; FDataStream::operator<<<bool>
_TEXT	ENDS
PUBLIC	??$?5I@FDataStream@@QAEAAV0@AAI@Z		; FDataStream::operator>><unsigned int>
EXTRN	?Read@FDataStream@@IAEXAAI@Z:PROC		; FDataStream::Read
; Function compile flags: /Ogtpy
;	COMDAT ??$?5I@FDataStream@@QAEAAV0@AAI@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?5I@FDataStream@@QAEAAV0@AAI@Z PROC			; FDataStream::operator>><unsigned int>, COMDAT
; _this$ = ecx

; 260  : 	// If the compiler produces an error here complaining about 
; 261  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 262  : 	// it could not find a specialization for the type supplied
; 263  : 	// in scope. If a specialization exists, be sure to include
; 264  : 	// the header (FStlContainerSerialization.h, for example), 
; 265  : 	// if not, implement :
; 266  : 	// FDataStream & operator>>(FDataStream &, YourCustomType &)
; 267  : 	Read( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 268  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 269  : }

	ret	4
??$?5I@FDataStream@@QAEAAV0@AAI@Z ENDP			; FDataStream::operator>><unsigned int>
_TEXT	ENDS
PUBLIC	??$?6I@FDataStream@@QAEAAV0@ABI@Z		; FDataStream::operator<<<unsigned int>
EXTRN	?Write@FDataStream@@IAEXABI@Z:PROC		; FDataStream::Write
; Function compile flags: /Ogtpy
;	COMDAT ??$?6I@FDataStream@@QAEAAV0@ABI@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?6I@FDataStream@@QAEAAV0@ABI@Z PROC			; FDataStream::operator<<<unsigned int>, COMDAT
; _this$ = ecx

; 246  : 	// If the compiler produces an error here complaining about 
; 247  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 248  : 	// it could not find a specialization for the type supplied
; 249  : 	// in scope. If a specialization exists, be sure to include
; 250  : 	// the header (FStlContainerSerialization.h, for example), 
; 251  : 	// if not, implement :
; 252  : 	// FDataStream & operator<<(FDataStream &, YourCustomType &)
; 253  : 	Write( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 254  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 255  : }

	ret	4
??$?6I@FDataStream@@QAEAAV0@ABI@Z ENDP			; FDataStream::operator<<<unsigned int>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAHPAH@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAH0@Z ; std::_Ptr_cat<int *,int *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@PAHPAH@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAH0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAHPAH@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAH0@Z PROC ; std::_Ptr_cat<int *,int *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAHPAH@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAH0@Z ENDP ; std::_Ptr_cat<int *,int *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<int> >, COMDAT

; 242  : 	}

	ret	0
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<int> >
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAW4TraitTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4TraitTypes@@0@Z ; std::_Ptr_cat<enum TraitTypes *,enum TraitTypes *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@PAW4TraitTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4TraitTypes@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAW4TraitTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4TraitTypes@@0@Z PROC ; std::_Ptr_cat<enum TraitTypes *,enum TraitTypes *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAW4TraitTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4TraitTypes@@0@Z ENDP ; std::_Ptr_cat<enum TraitTypes *,enum TraitTypes *>
_TEXT	ENDS
PUBLIC	??$_Allocate@V?$Array@H$05@Firaxis@@@std@@YAPAV?$Array@H$05@Firaxis@@IPAV12@@Z ; std::_Allocate<Firaxis::Array<int,6> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Allocate@V?$Array@H$05@Firaxis@@@std@@YAPAV?$Array@H$05@Firaxis@@IPAV12@@Z
_TEXT	SEGMENT
$T230466 = -12						; size = 12
$T230470 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$Array@H$05@Firaxis@@@std@@YAPAV?$Array@H$05@Firaxis@@IPAV12@@Z PROC ; std::_Allocate<Firaxis::Array<int,6> >, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate@7

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate@7:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx+ecx*2]
	add	edx, edx
	add	edx, edx
	add	edx, edx
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate@7:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 24					; 00000018H
	jae	SHORT $LN1@Allocate@7

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T230470[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T230466[esp+16]
	mov	DWORD PTR $T230470[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T230466[esp+16]
	push	ecx
	mov	DWORD PTR $T230466[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate@7:
$LN8@Allocate@7:
	int	3
??$_Allocate@V?$Array@H$05@Firaxis@@@std@@YAPAV?$Array@H$05@Firaxis@@IPAV12@@Z ENDP ; std::_Allocate<Firaxis::Array<int,6> >
_TEXT	ENDS
PUBLIC	??$_Allocate@I@std@@YAPAIIPAI@Z			; std::_Allocate<unsigned int>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Allocate@I@std@@YAPAIIPAI@Z
_TEXT	SEGMENT
$T230476 = -12						; size = 12
$T230480 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@I@std@@YAPAIIPAI@Z PROC			; std::_Allocate<unsigned int>, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate@8

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate@8:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx*4]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate@8:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 4
	jae	SHORT $LN1@Allocate@8

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T230480[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T230476[esp+16]
	mov	DWORD PTR $T230480[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T230476[esp+16]
	push	ecx
	mov	DWORD PTR $T230476[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate@8:
$LN8@Allocate@8:
	int	3
??$_Allocate@I@std@@YAPAIIPAI@Z ENDP			; std::_Allocate<unsigned int>
_TEXT	ENDS
PUBLIC	?begin@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@XZ ; std::vector<int,std::allocator<int> >::begin
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?begin@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@XZ PROC ; std::vector<int,std::allocator<int> >::begin, COMDAT
; _this$ = ecx

; 672  : 		return (const_iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 673  : 		}

	ret	4
?begin@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@XZ ENDP ; std::vector<int,std::allocator<int> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@XZ ; std::vector<int,std::allocator<int> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@XZ PROC ; std::vector<int,std::allocator<int> >::end, COMDAT
; _this$ = ecx

; 682  : 		return (const_iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 683  : 		}

	ret	4
?end@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@XZ ENDP ; std::vector<int,std::allocator<int> >::end
_TEXT	ENDS
PUBLIC	?size@?$vector@_NV?$allocator@_N@std@@@std@@QBEIXZ ; std::vector<bool,std::allocator<bool> >::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$vector@_NV?$allocator@_N@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@_NV?$allocator@_N@std@@@std@@QBEIXZ PROC	; std::vector<bool,std::allocator<bool> >::size, COMDAT
; _this$ = ecx

; 2048 : 		return (_Mysize);

	mov	eax, DWORD PTR [ecx]

; 2049 : 		}

	ret	0
?size@?$vector@_NV?$allocator@_N@std@@@std@@QBEIXZ ENDP	; std::vector<bool,std::allocator<bool> >::size
_TEXT	ENDS
PUBLIC	?begin@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@XZ ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@XZ PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::begin, COMDAT
; _this$ = ecx

; 672  : 		return (const_iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 673  : 		}

	ret	4
?begin@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@XZ ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@XZ ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@XZ PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::end, COMDAT
; _this$ = ecx

; 682  : 		return (const_iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 683  : 		}

	ret	4
?end@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@XZ ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::end
_TEXT	ENDS
PUBLIC	?size@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEIXZ ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEIXZ PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::size, COMDAT
; _this$ = ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	edx, DWORD PTR [ecx+8]
	sub	edx, DWORD PTR [ecx+4]
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 727  : 		}

	ret	0
?size@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEIXZ ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::size
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBEABHXZ ; std::_Vector_const_iterator<int,std::allocator<int> >::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??D?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBEABHXZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBEABHXZ PROC ; std::_Vector_const_iterator<int,std::allocator<int> >::operator*, COMDAT
; _this$ = ecx

; 92   : 
; 93   :  #if _HAS_ITERATOR_DEBUGGING
; 94   : 		if (this->_Mycont == 0
; 95   : 			|| _Myptr < ((_Myvec *)this->_Mycont)->_Myfirst
; 96   : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 97   : 			{
; 98   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 99   : 			_SCL_SECURE_OUT_OF_RANGE;
; 100  : 			}
; 101  :  #else
; 102  :  		_SCL_SECURE_VALIDATE(this->_Has_container());
; 103  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

	mov	eax, DWORD PTR [ecx]

; 107  : 		}

	ret	0
??D?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBEABHXZ ENDP ; std::_Vector_const_iterator<int,std::allocator<int> >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<int,std::allocator<int> >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<int,std::allocator<int> >::operator++, COMDAT
; _this$ = ecx

; 115  : 		{	// preincrement

	mov	eax, ecx

; 116  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 117  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 118  : 
; 119  :  #if _HAS_ITERATOR_DEBUGGING
; 120  : 		if (this->_Mycont == 0
; 121  : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 122  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 123  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 124  : 
; 125  : 		++_Myptr;

	add	DWORD PTR [eax], 4

; 126  : 		return (*this);
; 127  : 		}

	ret	0
??E?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<int,std::allocator<int> >::operator++
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEABV?$Array@H$05@Firaxis@@XZ ; std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??D?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEABV?$Array@H$05@Firaxis@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEABV?$Array@H$05@Firaxis@@XZ PROC ; std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator*, COMDAT
; _this$ = ecx

; 92   : 
; 93   :  #if _HAS_ITERATOR_DEBUGGING
; 94   : 		if (this->_Mycont == 0
; 95   : 			|| _Myptr < ((_Myvec *)this->_Mycont)->_Myfirst
; 96   : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 97   : 			{
; 98   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 99   : 			_SCL_SECURE_OUT_OF_RANGE;
; 100  : 			}
; 101  :  #else
; 102  :  		_SCL_SECURE_VALIDATE(this->_Has_container());
; 103  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

	mov	eax, DWORD PTR [ecx]

; 107  : 		}

	ret	0
??D?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEABV?$Array@H$05@Firaxis@@XZ ENDP ; std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator++, COMDAT
; _this$ = ecx

; 115  : 		{	// preincrement

	mov	eax, ecx

; 116  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 117  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 118  : 
; 119  :  #if _HAS_ITERATOR_DEBUGGING
; 120  : 		if (this->_Mycont == 0
; 121  : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 122  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 123  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 124  : 
; 125  : 		++_Myptr;

	add	DWORD PTR [eax], 24			; 00000018H

; 126  : 		return (*this);
; 127  : 		}

	ret	0
??E?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator++
_TEXT	ENDS
PUBLIC	??0?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@QAE@AAVFDataStream@@ABV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@Z ; SerializeFromSequenceContainer<Firaxis::Array<int,6> const ,std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > > const >::SerializeFromSequenceContainer<Firaxis::Array<int,6> const ,std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > > const >
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fstlcontainerserialization.h
;	COMDAT ??0?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@QAE@AAVFDataStream@@ABV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@Z
_TEXT	SEGMENT
$T230532 = 8						; size = 4
_saveTo$ = 8						; size = 4
_container$ = 12					; size = 4
??0?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@QAE@AAVFDataStream@@ABV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@Z PROC ; SerializeFromSequenceContainer<Firaxis::Array<int,6> const ,std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > > const >::SerializeFromSequenceContainer<Firaxis::Array<int,6> const ,std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > > const >, COMDAT
; _this$ = ecx

; 69   : 	{

	mov	eax, DWORD PTR _container$[esp-4]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR _saveTo$[esp]
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi], ecx

; 70   : 		m_saveTo << container.size();

	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [eax+4]
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	lea	edx, DWORD PTR $T230532[esp]
	push	edx
	mov	DWORD PTR $T230532[esp+4], eax
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 71   : 	}

	mov	eax, esi
	pop	esi
	ret	8
??0?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@QAE@AAVFDataStream@@ABV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@Z ENDP ; SerializeFromSequenceContainer<Firaxis::Array<int,6> const ,std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > > const >::SerializeFromSequenceContainer<Firaxis::Array<int,6> const ,std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > > const >
_TEXT	ENDS
PUBLIC	??8?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator==
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??8?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator==, COMDAT
; _this$ = ecx

; 1666 : 
; 1667 :  #if _HAS_ITERATOR_DEBUGGING
; 1668 : 		_Compat(_Right);
; 1669 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1670 : 
; 1671 : 		return (this->_Myptr == _Right._Myptr
; 1672 : 			&& this->_Myoff == _Right._Myoff);

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Right$[esp-4]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN3@operator@3
	mov	ecx, DWORD PTR [ecx+4]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN3@operator@3
	mov	eax, 1

; 1673 : 		}

	ret	4
$LN3@operator@3:

; 1666 : 
; 1667 :  #if _HAS_ITERATOR_DEBUGGING
; 1668 : 		_Compat(_Right);
; 1669 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1670 : 
; 1671 : 		return (this->_Myptr == _Right._Myptr
; 1672 : 			&& this->_Myoff == _Right._Myoff);

	xor	eax, eax

; 1673 : 		}

	ret	4
??8?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator==
_TEXT	ENDS
PUBLIC	?_Inc@?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@IAEXXZ ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Inc
; Function compile flags: /Ogtpy
;	COMDAT ?_Inc@?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Inc@?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@IAEXXZ PROC ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Inc, COMDAT
; _this$ = ecx

; 1734 : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Myptr != NULL);
; 1735 : 		_SCL_SECURE_VALIDATE_RANGE((this->_My_actual_offset() + 1) <= ((_MycontTy *)this->_Getmycont())->_Mysize);
; 1736 : 		if (this->_Myoff < _VBITS - 1)

	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, 31					; 0000001fH
	jae	SHORT $LN2@Inc

; 1737 : 			++this->_Myoff;

	inc	eax
	mov	DWORD PTR [ecx+4], eax

; 1740 : 		}

	ret	0
$LN2@Inc:

; 1738 : 		else
; 1739 : 			this->_Myoff = 0, ++this->_Myptr;

	add	DWORD PTR [ecx], 4
	mov	DWORD PTR [ecx+4], 0

; 1740 : 		}

	ret	0
?_Inc@?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@IAEXXZ ENDP ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Inc
_TEXT	ENDS
PUBLIC	??0?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAE@ABV?$_Vb_iter_base@IHV?$vector@_NV?$allocator@_N@std@@@std@@@1@@Z ; std::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAE@ABV?$_Vb_iter_base@IHV?$vector@_NV?$allocator@_N@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAE@ABV?$_Vb_iter_base@IHV?$vector@_NV?$allocator@_N@std@@@std@@@1@@Z PROC ; std::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > >, COMDAT
; _this$ = ecx

; 1465 : 		{	// construct with base

	mov	eax, ecx
	mov	ecx, DWORD PTR __Right$[esp-4]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 1466 : 		}

	ret	4
??0?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAE@ABV?$_Vb_iter_base@IHV?$vector@_NV?$allocator@_N@std@@@std@@@1@@Z ENDP ; std::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > >
_TEXT	ENDS
PUBLIC	?_Getptr@?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBEPAIXZ ; std::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Getptr
; Function compile flags: /Ogtpy
;	COMDAT ?_Getptr@?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBEPAIXZ
_TEXT	SEGMENT
?_Getptr@?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBEPAIXZ PROC ; std::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Getptr, COMDAT
; _this$ = ecx

; 1500 : 
; 1501 :  #if _HAS_ITERATOR_DEBUGGING
; 1502 : 		if (this->_Mycont == 0 || this->_Myptr == 0)
; 1503 : 			{
; 1504 : 			_DEBUG_ERROR("vector<bool> iterator not dereferencable");
; 1505 : 			_SCL_SECURE_OUT_OF_RANGE;
; 1506 : 			}
; 1507 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1508 :  		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Myptr != NULL);
; 1509 : 		_SCL_SECURE_VALIDATE_RANGE(this->_My_actual_offset() < ((_MycontTy *)this->_Getmycont())->_Mysize);
; 1510 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1511 : 
; 1512 : 		return (this->_Myptr);

	mov	eax, DWORD PTR [ecx]

; 1513 : 		}

	ret	0
?_Getptr@?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBEPAIXZ ENDP ; std::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Getptr
_TEXT	ENDS
PUBLIC	?_Mask@?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@IBEIXZ ; std::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Mask
; Function compile flags: /Ogtpy
;	COMDAT ?_Mask@?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@IBEIXZ
_TEXT	SEGMENT
?_Mask@?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@IBEIXZ PROC ; std::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Mask, COMDAT
; _this$ = ecx

; 1518 : 		return ((_Vbase)(1 << this->_Myoff));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, 1
	shl	eax, cl

; 1519 : 		}

	ret	0
?_Mask@?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@IBEIXZ ENDP ; std::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Mask
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAHPAH@std@@YA?AUrandom_access_iterator_tag@0@ABQAH0@Z ; std::_Iter_random<int *,int *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Iter_random@PAHPAH@std@@YA?AUrandom_access_iterator_tag@0@ABQAH0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAHPAH@std@@YA?AUrandom_access_iterator_tag@0@ABQAH0@Z PROC ; std::_Iter_random<int *,int *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAHPAH@std@@YA?AUrandom_access_iterator_tag@0@ABQAH0@Z ENDP ; std::_Iter_random<int *,int *>
_TEXT	ENDS
PUBLIC	??$_Copy_opt@PAHPAHUrandom_access_iterator_tag@std@@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<int *,int *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_opt@PAHPAHUrandom_access_iterator_tag@std@@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAHPAHUrandom_access_iterator_tag@std@@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<int *,int *,std::random_access_iterator_tag>, COMDAT

; 2495 : 
; 2496 :  #if _HAS_ITERATOR_DEBUGGING
; 2497 : 	_DEBUG_RANGE(_First, _Last);
; 2498 : 	if (_First != _Last)
; 2499 : 		_DEBUG_POINTER(_Dest);
; 2500 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 2501 : 
; 2502 : 	ptrdiff_t _Off = _Last - _First;	// NB: non-overlapping move

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi

; 2503 : 	// if _OutIt is range checked, this will make sure there is enough space for the memmove
; 2504 : 	_OutIt _Result = _Dest + _Off;

	mov	edi, DWORD PTR __Dest$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]

; 2505 : 	if (_Off > 0)

	test	eax, eax
	jle	SHORT $LN4@Copy_opt@5

; 2506 : 		_CRT_SECURE_MEMMOVE(&*_Dest, _Off * sizeof (*_First), &*_First, _Off * sizeof (*_First));

	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN4@Copy_opt@5:
	pop	edi

; 2507 : 	return _Result;

	mov	eax, esi
	pop	esi

; 2508 : 	}

	ret	0
??$_Copy_opt@PAHPAHUrandom_access_iterator_tag@std@@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<int *,int *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Iter_random@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@0@Z ; std::_Iter_random<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Iter_random@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@0@Z PROC ; std::_Iter_random<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > > >, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@0@Z ENDP ; std::_Iter_random<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > > >
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@0@Z ; std::_Ptr_cat<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@0@Z PROC ; std::_Ptr_cat<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > > >, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@0@Z ENDP ; std::_Ptr_cat<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > > >
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAV?$Array@H$05@Firaxis@@PAV12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$Array@H$05@Firaxis@@0@Z ; std::_Iter_random<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Iter_random@PAV?$Array@H$05@Firaxis@@PAV12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$Array@H$05@Firaxis@@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAV?$Array@H$05@Firaxis@@PAV12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$Array@H$05@Firaxis@@0@Z PROC ; std::_Iter_random<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAV?$Array@H$05@Firaxis@@PAV12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$Array@H$05@Firaxis@@0@Z ENDP ; std::_Iter_random<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAV?$Array@H$05@Firaxis@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$Array@H$05@Firaxis@@0@Z ; std::_Ptr_cat<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@PAV?$Array@H$05@Firaxis@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$Array@H$05@Firaxis@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAV?$Array@H$05@Firaxis@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$Array@H$05@Firaxis@@0@Z PROC ; std::_Ptr_cat<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAV?$Array@H$05@Firaxis@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$Array@H$05@Firaxis@@0@Z ENDP ; std::_Ptr_cat<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *>
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAIPAI@std@@YA?AUrandom_access_iterator_tag@0@ABQAI0@Z ; std::_Iter_random<unsigned int *,unsigned int *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Iter_random@PAIPAI@std@@YA?AUrandom_access_iterator_tag@0@ABQAI0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAIPAI@std@@YA?AUrandom_access_iterator_tag@0@ABQAI0@Z PROC ; std::_Iter_random<unsigned int *,unsigned int *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAIPAI@std@@YA?AUrandom_access_iterator_tag@0@ABQAI0@Z ENDP ; std::_Iter_random<unsigned int *,unsigned int *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAIPAI@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAI0@Z ; std::_Ptr_cat<unsigned int *,unsigned int *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@PAIPAI@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAI0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAIPAI@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAI0@Z PROC ; std::_Ptr_cat<unsigned int *,unsigned int *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAIPAI@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAI0@Z ENDP ; std::_Ptr_cat<unsigned int *,unsigned int *>
_TEXT	ENDS
PUBLIC	??$_Copy_opt@PAIPAIUrandom_access_iterator_tag@std@@@std@@YAPAIPAI00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<unsigned int *,unsigned int *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_opt@PAIPAIUrandom_access_iterator_tag@std@@@std@@YAPAIPAI00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAIPAIUrandom_access_iterator_tag@std@@@std@@YAPAIPAI00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<unsigned int *,unsigned int *,std::random_access_iterator_tag>, COMDAT

; 2495 : 
; 2496 :  #if _HAS_ITERATOR_DEBUGGING
; 2497 : 	_DEBUG_RANGE(_First, _Last);
; 2498 : 	if (_First != _Last)
; 2499 : 		_DEBUG_POINTER(_Dest);
; 2500 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 2501 : 
; 2502 : 	ptrdiff_t _Off = _Last - _First;	// NB: non-overlapping move

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi

; 2503 : 	// if _OutIt is range checked, this will make sure there is enough space for the memmove
; 2504 : 	_OutIt _Result = _Dest + _Off;

	mov	edi, DWORD PTR __Dest$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]

; 2505 : 	if (_Off > 0)

	test	eax, eax
	jle	SHORT $LN4@Copy_opt@6

; 2506 : 		_CRT_SECURE_MEMMOVE(&*_Dest, _Off * sizeof (*_First), &*_First, _Off * sizeof (*_First));

	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN4@Copy_opt@6:
	pop	edi

; 2507 : 	return _Result;

	mov	eax, esi
	pop	esi

; 2508 : 	}

	ret	0
??$_Copy_opt@PAIPAIUrandom_access_iterator_tag@std@@@std@@YAPAIPAI00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<unsigned int *,unsigned int *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@I@std@@@std@@YAXPAI0AAV?$allocator@I@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<unsigned int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@I@std@@@std@@YAXPAI0AAV?$allocator@I@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@I@std@@@std@@YAXPAI0AAV?$allocator@I@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<unsigned int> >, COMDAT

; 242  : 	}

	ret	0
??$_Destroy_range@V?$allocator@I@std@@@std@@YAXPAI0AAV?$allocator@I@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<unsigned int> >
_TEXT	ENDS
PUBLIC	??$_Destroy@W4TraitTypes@@@std@@YAXPAW4TraitTypes@@@Z ; std::_Destroy<enum TraitTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@W4TraitTypes@@@std@@YAXPAW4TraitTypes@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@W4TraitTypes@@@std@@YAXPAW4TraitTypes@@@Z PROC ; std::_Destroy<enum TraitTypes>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@W4TraitTypes@@@std@@YAXPAW4TraitTypes@@@Z ENDP ; std::_Destroy<enum TraitTypes>
_TEXT	ENDS
PUBLIC	??D?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBE?AV?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@1@XZ ; std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator*
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??D?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBE?AV?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@1@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
??D?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBE?AV?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@1@XZ PROC ; std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator*, COMDAT
; _this$ = ecx

; 1791 : 		return (_Reft(*this));

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx

; 1792 : 		}

	ret	4
??D?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBE?AV?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@1@XZ ENDP ; std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator*
_TEXT	ENDS
PUBLIC	??4?$Array@H$05@Firaxis@@QAEABV01@ABV01@@Z	; Firaxis::Array<int,6>::operator=
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\farray.h
;	COMDAT ??4?$Array@H$05@Firaxis@@QAEABV01@ABV01@@Z
_TEXT	SEGMENT
_akItems$ = 8						; size = 4
??4?$Array@H$05@Firaxis@@QAEABV01@ABV01@@Z PROC		; Firaxis::Array<int,6>::operator=, COMDAT
; _this$ = ecx

; 184  : 	    {

	mov	eax, ecx

; 185  : 		    for ( uint i = 0; i < ARRAY_SIZE; i++ )
; 186  : 		    {
; 187  : 			    m_akItems[ i ] = akItems.m_akItems[ i ];

	mov	ecx, DWORD PTR _akItems$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	ecx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], ecx

; 188  : 		    }
; 189  : 
; 190  : 		    return ( *this );
; 191  : 	    }

	ret	4
??4?$Array@H$05@Firaxis@@QAEABV01@ABV01@@Z ENDP		; Firaxis::Array<int,6>::operator=
_TEXT	ENDS
PUBLIC	?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::capacity
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC ; std::vector<int,std::allocator<int> >::capacity, COMDAT
; _this$ = ecx

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	edx, DWORD PTR [ecx+4]
	test	edx, edx
	jne	SHORT $LN3@capacity@4
	xor	eax, eax

; 636  : 		}

	ret	0
$LN3@capacity@4:

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	eax, DWORD PTR [ecx+12]
	sub	eax, edx
	sar	eax, 2

; 636  : 		}

	ret	0
?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP ; std::vector<int,std::allocator<int> >::capacity
_TEXT	ENDS
PUBLIC	?capacity@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEIXZ ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::capacity
; Function compile flags: /Ogtpy
;	COMDAT ?capacity@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEIXZ PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::capacity, COMDAT
; _this$ = ecx

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	eax, DWORD PTR [ecx+4]
	test	eax, eax
	jne	SHORT $LN3@capacity@5

; 636  : 		}

	ret	0
$LN3@capacity@5:

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	ecx, DWORD PTR [ecx+12]
	sub	ecx, eax
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 636  : 		}

	ret	0
?capacity@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEIXZ ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::capacity
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::operator==
_TEXT	ENDS
PUBLIC	??4?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@_N@Z ; std::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@_N@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 1
??4?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@_N@Z PROC ; std::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator=, COMDAT
; _this$ = ecx

; 1475 : 		{	// assign _Val to bit

	mov	eax, ecx

; 1476 : 		if (_Val)
; 1477 : 			*_Getptr() |= _Mask();

	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [eax]
	push	esi
	mov	esi, 1
	shl	esi, cl
	cmp	BYTE PTR __Val$[esp], 0
	je	SHORT $LN2@operator@4
	or	DWORD PTR [edx], esi
	pop	esi

; 1480 : 		return (*this);
; 1481 : 		}

	ret	4
$LN2@operator@4:

; 1478 : 		else
; 1479 : 			*_Getptr() &= ~_Mask();

	not	esi
	and	DWORD PTR [edx], esi
	pop	esi

; 1480 : 		return (*this);
; 1481 : 		}

	ret	4
??4?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@_N@Z ENDP ; std::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator=
_TEXT	ENDS
PUBLIC	??G?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBEHABV01@@Z ; std::_Vector_const_iterator<int,std::allocator<int> >::operator-
; Function compile flags: /Ogtpy
;	COMDAT ??G?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??G?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBEHABV01@@Z PROC ; std::_Vector_const_iterator<int,std::allocator<int> >::operator-, COMDAT
; _this$ = ecx

; 187  : 
; 188  :  #if _HAS_ITERATOR_DEBUGGING
; 189  : 		_Compat(_Right);
; 190  :  #else
; 191  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 192  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 193  : 
; 194  : 		return (_Myptr - _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Right$[esp-4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 195  : 		}

	ret	4
??G?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBEHABV01@@Z ENDP ; std::_Vector_const_iterator<int,std::allocator<int> >::operator-
_TEXT	ENDS
PUBLIC	??G?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEHABV01@@Z ; std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator-
; Function compile flags: /Ogtpy
;	COMDAT ??G?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??G?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEHABV01@@Z PROC ; std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator-, COMDAT
; _this$ = ecx

; 187  : 
; 188  :  #if _HAS_ITERATOR_DEBUGGING
; 189  : 		_Compat(_Right);
; 190  :  #else
; 191  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 192  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 193  : 
; 194  : 		return (_Myptr - _Right._Myptr);

	mov	eax, DWORD PTR __Right$[esp-4]
	mov	ecx, DWORD PTR [ecx]
	sub	ecx, DWORD PTR [eax]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 195  : 		}

	ret	4
??G?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEHABV01@@Z ENDP ; std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator-
_TEXT	ENDS
PUBLIC	??Y?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<int,std::allocator<int> >::operator+=
; Function compile flags: /Ogtpy
;	COMDAT ??Y?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<int,std::allocator<int> >::operator+=, COMDAT
; _this$ = ecx

; 159  : 		{	// increment by integer

	mov	eax, ecx

; 160  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 161  : 		_SCL_SECURE_VALIDATE_RANGE(
; 162  : 			_Myptr + _Off <= ((_Myvec *)(this->_Getmycont()))->_Mylast &&
; 163  : 			_Myptr + _Off >= ((_Myvec *)(this->_Getmycont()))->_Myfirst);
; 164  : 		_Myptr += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [ecx*4]
	add	DWORD PTR [eax], edx

; 165  : 		return (*this);
; 166  : 		}

	ret	4
??Y?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<int,std::allocator<int> >::operator+=
_TEXT	ENDS
PUBLIC	??Y?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator+=
; Function compile flags: /Ogtpy
;	COMDAT ??Y?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator+=, COMDAT
; _this$ = ecx

; 159  : 		{	// increment by integer

	mov	eax, ecx

; 160  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 161  : 		_SCL_SECURE_VALIDATE_RANGE(
; 162  : 			_Myptr + _Off <= ((_Myvec *)(this->_Getmycont()))->_Mylast &&
; 163  : 			_Myptr + _Off >= ((_Myvec *)(this->_Getmycont()))->_Myfirst);
; 164  : 		_Myptr += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	add	ecx, ecx
	add	ecx, ecx
	add	ecx, ecx
	add	DWORD PTR [eax], ecx

; 165  : 		return (*this);
; 166  : 		}

	ret	4
??Y?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator+=
_TEXT	ENDS
PUBLIC	?capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::capacity
; Function compile flags: /Ogtpy
;	COMDAT ?capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::capacity, COMDAT
; _this$ = ecx

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	edx, DWORD PTR [ecx+4]
	test	edx, edx
	jne	SHORT $LN3@capacity@6
	xor	eax, eax

; 636  : 		}

	ret	0
$LN3@capacity@6:

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	eax, DWORD PTR [ecx+12]
	sub	eax, edx
	sar	eax, 2

; 636  : 		}

	ret	0
?capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::capacity
_TEXT	ENDS
PUBLIC	??$_Destroy@V?$Array@H$05@Firaxis@@@std@@YAXPAV?$Array@H$05@Firaxis@@@Z ; std::_Destroy<Firaxis::Array<int,6> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy@V?$Array@H$05@Firaxis@@@std@@YAXPAV?$Array@H$05@Firaxis@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@V?$Array@H$05@Firaxis@@@std@@YAXPAV?$Array@H$05@Firaxis@@@Z PROC ; std::_Destroy<Firaxis::Array<int,6> >, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@V?$Array@H$05@Firaxis@@@std@@YAXPAV?$Array@H$05@Firaxis@@@Z ENDP ; std::_Destroy<Firaxis::Array<int,6> >
_TEXT	ENDS
PUBLIC	??$_Construct@W4TraitTypes@@W41@@std@@YAXPAW4TraitTypes@@ABW41@@Z ; std::_Construct<enum TraitTypes,enum TraitTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Construct@W4TraitTypes@@W41@@std@@YAXPAW4TraitTypes@@ABW41@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@W4TraitTypes@@W41@@std@@YAXPAW4TraitTypes@@ABW41@@Z PROC ; std::_Construct<enum TraitTypes,enum TraitTypes>, COMDAT

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN3@Construct@3
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN3@Construct@3:

; 53   : 	}

	ret	0
??$_Construct@W4TraitTypes@@W41@@std@@YAXPAW4TraitTypes@@ABW41@@Z ENDP ; std::_Construct<enum TraitTypes,enum TraitTypes>
_TEXT	ENDS
PUBLIC	??A?$Array@H$05@Firaxis@@QBEABHI@Z		; Firaxis::Array<int,6>::operator[]
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\farray.h
;	COMDAT ??A?$Array@H$05@Firaxis@@QBEABHI@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$Array@H$05@Firaxis@@QBEABHI@Z PROC			; Firaxis::Array<int,6>::operator[], COMDAT
; _this$ = ecx

; 144  : #		ifdef _MSC_VER
; 145  : #			pragma warning ( push )
; 146  : #			pragma warning ( disable : 6385 ) //  Invalid data: accessing 'm_akItems' the readable size is X but X+N bytes might be read
; 147  : 			// sad day. 
; 148  : #		endif//_MSC_VER
; 149  : 		    assert( i < ARRAY_SIZE );
; 150  : 		    return ( m_akItems[ i ] );

	mov	eax, DWORD PTR _i$[esp-4]
	lea	eax, DWORD PTR [ecx+eax*4]

; 151  : #		ifdef _MSC_VER
; 152  : #		pragma warning ( pop )
; 153  : #		endif//_MSC_VER
; 154  : 	    }

	ret	4
??A?$Array@H$05@Firaxis@@QBEABHI@Z ENDP			; Firaxis::Array<int,6>::operator[]
_TEXT	ENDS
PUBLIC	??A?$Array@H$05@Firaxis@@QAEAAHI@Z		; Firaxis::Array<int,6>::operator[]
; Function compile flags: /Ogtpy
;	COMDAT ??A?$Array@H$05@Firaxis@@QAEAAHI@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$Array@H$05@Firaxis@@QAEAAHI@Z PROC			; Firaxis::Array<int,6>::operator[], COMDAT
; _this$ = ecx

; 157  : #		ifdef _MSC_VER
; 158  : #			pragma warning ( push )
; 159  : #			pragma warning ( disable : 6385 ) //  Invalid data: accessing 'm_akItems' the readable size is X but X+N bytes might be read
; 160  : 			// sad day. 
; 161  : #		endif//_MSC_VER
; 162  : 		    assert( i < ARRAY_SIZE );
; 163  : 		    return ( m_akItems[ i ] );

	mov	eax, DWORD PTR _i$[esp-4]
	lea	eax, DWORD PTR [ecx+eax*4]

; 164  : #		ifdef _MSC_VER
; 165  : #		pragma warning ( pop )
; 166  : #		endif//_MSC_VER
; 167  : 		}

	ret	4
??A?$Array@H$05@Firaxis@@QAEAAHI@Z ENDP			; Firaxis::Array<int,6>::operator[]
_TEXT	ENDS
PUBLIC	?size@?$Array@H$05@Firaxis@@QBEIXZ		; Firaxis::Array<int,6>::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$Array@H$05@Firaxis@@QBEIXZ
_TEXT	SEGMENT
?size@?$Array@H$05@Firaxis@@QBEIXZ PROC			; Firaxis::Array<int,6>::size, COMDAT
; _this$ = ecx

; 195  : 			return ARRAY_SIZE;

	mov	eax, 6

; 196  : 		}

	ret	0
?size@?$Array@H$05@Firaxis@@QBEIXZ ENDP			; Firaxis::Array<int,6>::size
_TEXT	ENDS
PUBLIC	??$_Fill@PAHH@std@@YAXPAH0ABH@Z			; std::_Fill<int *,int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Fill@PAHH@std@@YAXPAH0ABH@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill@PAHH@std@@YAXPAH0ABH@Z PROC			; std::_Fill<int *,int>, COMDAT

; 3157 : 	_DEBUG_RANGE(_First, _Last);
; 3158 : 	for (; _First != _Last; ++_First)

	mov	eax, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN1@Fill@4
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL3@Fill@4:

; 3159 : 		*_First = _Val;

	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	add	eax, 4
	cmp	eax, ecx
	jne	SHORT $LL3@Fill@4
	pop	esi
$LN1@Fill@4:

; 3160 : 	}

	ret	0
??$_Fill@PAHH@std@@YAXPAH0ABH@Z ENDP			; std::_Fill<int *,int>
_TEXT	ENDS
PUBLIC	??$_Move_cat@PAH@std@@YA?AU_Undefined_move_tag@0@ABQAH@Z ; std::_Move_cat<int *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_cat@PAH@std@@YA?AU_Undefined_move_tag@0@ABQAH@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
??$_Move_cat@PAH@std@@YA?AU_Undefined_move_tag@0@ABQAH@Z PROC ; std::_Move_cat<int *>, COMDAT

; 1200 : 	{

	push	ecx

; 1201 : 		typename _Move_operation_category<typename iterator_traits<_Iter>::value_type>::_Move_cat _Cat;
; 1202 : 		return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1203 : 	}

	pop	ecx
	ret	0
??$_Move_cat@PAH@std@@YA?AU_Undefined_move_tag@0@ABQAH@Z ENDP ; std::_Move_cat<int *>
_TEXT	ENDS
PUBLIC	??$_Fill@PAV?$Array@H$05@Firaxis@@V12@@std@@YAXPAV?$Array@H$05@Firaxis@@0ABV12@@Z ; std::_Fill<Firaxis::Array<int,6> *,Firaxis::Array<int,6> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Fill@PAV?$Array@H$05@Firaxis@@V12@@std@@YAXPAV?$Array@H$05@Firaxis@@0ABV12@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill@PAV?$Array@H$05@Firaxis@@V12@@std@@YAXPAV?$Array@H$05@Firaxis@@0ABV12@@Z PROC ; std::_Fill<Firaxis::Array<int,6> *,Firaxis::Array<int,6> >, COMDAT

; 3157 : 	_DEBUG_RANGE(_First, _Last);
; 3158 : 	for (; _First != _Last; ++_First)

	mov	eax, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	cmp	eax, edx
	je	SHORT $LN1@Fill@5
	mov	ecx, DWORD PTR __Val$[esp-4]
	push	esi
$LL3@Fill@5:

; 3159 : 		*_First = _Val;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	mov	esi, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], esi
	mov	esi, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], esi
	mov	esi, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], esi
	mov	esi, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], esi
	add	eax, 24					; 00000018H
	cmp	eax, edx
	jne	SHORT $LL3@Fill@5
	pop	esi
$LN1@Fill@5:

; 3160 : 	}

	ret	0
??$_Fill@PAV?$Array@H$05@Firaxis@@V12@@std@@YAXPAV?$Array@H$05@Firaxis@@0ABV12@@Z ENDP ; std::_Fill<Firaxis::Array<int,6> *,Firaxis::Array<int,6> >
_TEXT	ENDS
PUBLIC	??$_Move_cat@PAV?$Array@H$05@Firaxis@@@std@@YA?AU_Undefined_move_tag@0@ABQAV?$Array@H$05@Firaxis@@@Z ; std::_Move_cat<Firaxis::Array<int,6> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_cat@PAV?$Array@H$05@Firaxis@@@std@@YA?AU_Undefined_move_tag@0@ABQAV?$Array@H$05@Firaxis@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
??$_Move_cat@PAV?$Array@H$05@Firaxis@@@std@@YA?AU_Undefined_move_tag@0@ABQAV?$Array@H$05@Firaxis@@@Z PROC ; std::_Move_cat<Firaxis::Array<int,6> *>, COMDAT

; 1200 : 	{

	push	ecx

; 1201 : 		typename _Move_operation_category<typename iterator_traits<_Iter>::value_type>::_Move_cat _Cat;
; 1202 : 		return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1203 : 	}

	pop	ecx
	ret	0
??$_Move_cat@PAV?$Array@H$05@Firaxis@@@std@@YA?AU_Undefined_move_tag@0@ABQAV?$Array@H$05@Firaxis@@@Z ENDP ; std::_Move_cat<Firaxis::Array<int,6> *>
_TEXT	ENDS
PUBLIC	??$_Fill@PAII@std@@YAXPAI0ABI@Z			; std::_Fill<unsigned int *,unsigned int>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Fill@PAII@std@@YAXPAI0ABI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill@PAII@std@@YAXPAI0ABI@Z PROC			; std::_Fill<unsigned int *,unsigned int>, COMDAT

; 3157 : 	_DEBUG_RANGE(_First, _Last);
; 3158 : 	for (; _First != _Last; ++_First)

	mov	eax, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN1@Fill@6
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL3@Fill@6:

; 3159 : 		*_First = _Val;

	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	add	eax, 4
	cmp	eax, ecx
	jne	SHORT $LL3@Fill@6
	pop	esi
$LN1@Fill@6:

; 3160 : 	}

	ret	0
??$_Fill@PAII@std@@YAXPAI0ABI@Z ENDP			; std::_Fill<unsigned int *,unsigned int>
_TEXT	ENDS
PUBLIC	??$_Move_cat@PAI@std@@YA?AU_Undefined_move_tag@0@ABQAI@Z ; std::_Move_cat<unsigned int *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_cat@PAI@std@@YA?AU_Undefined_move_tag@0@ABQAI@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
??$_Move_cat@PAI@std@@YA?AU_Undefined_move_tag@0@ABQAI@Z PROC ; std::_Move_cat<unsigned int *>, COMDAT

; 1200 : 	{

	push	ecx

; 1201 : 		typename _Move_operation_category<typename iterator_traits<_Iter>::value_type>::_Move_cat _Cat;
; 1202 : 		return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1203 : 	}

	pop	ecx
	ret	0
??$_Move_cat@PAI@std@@YA?AU_Undefined_move_tag@0@ABQAI@Z ENDP ; std::_Move_cat<unsigned int *>
_TEXT	ENDS
PUBLIC	?_Dec@?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@IAEXXZ ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Dec
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Dec@?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Dec@?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@IAEXXZ PROC ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Dec, COMDAT
; _this$ = ecx

; 1719 : 		if (this->_Myoff != 0)

	mov	eax, DWORD PTR [ecx+4]
	test	eax, eax
	je	SHORT $LN2@Dec@2

; 1720 : 			{
; 1721 : 			--this->_Myoff;

	dec	eax
	mov	DWORD PTR [ecx+4], eax

; 1729 : 			}
; 1730 : 		}

	ret	0
$LN2@Dec@2:

; 1722 : 			}
; 1723 : 		else
; 1724 : 			{
; 1725 : 			_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Myptr != NULL);
; 1726 : 			_SCL_SECURE_VALIDATE_RANGE(this->_Myptr > this->_My_cont_begin());
; 1727 : 			--this->_Myptr;

	add	DWORD PTR [ecx], -4			; fffffffcH

; 1728 : 			this->_Myoff = _VBITS - 1;

	mov	DWORD PTR [ecx+4], 31			; 0000001fH

; 1729 : 			}
; 1730 : 		}

	ret	0
?_Dec@?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@IAEXXZ ENDP ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Dec
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAHPAHUrandom_access_iterator_tag@std@@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<int *,int *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Copy_backward_opt@PAHPAHUrandom_access_iterator_tag@std@@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_backward_opt@PAHPAHUrandom_access_iterator_tag@std@@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<int *,int *,std::random_access_iterator_tag>, COMDAT

; 2699 : 
; 2700 :  #if _HAS_ITERATOR_DEBUGGING
; 2701 : 	_DEBUG_RANGE(_First, _Last);
; 2702 : 	if (_First != _Last)
; 2703 : 		_DEBUG_POINTER(_Dest);
; 2704 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 2705 : 
; 2706 : 	ptrdiff_t _Off = _Last - _First;	// NB: non-overlapping move

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	sar	eax, 2
	push	esi

; 2707 : 	/* if _OutIt is range checked, this will make sure there is enough space for 
; 2708 : 	 * the memmove
; 2709 : 	 */
; 2710 : 	_OutIt _Result = _Dest - _Off;

	mov	esi, DWORD PTR __Dest$[esp]
	lea	ecx, DWORD PTR [eax*4]
	sub	esi, ecx

; 2711 : 	if (_Off > 0)

	test	eax, eax
	jle	SHORT $LN4@Copy_backw@4

; 2712 : 		_CRT_SECURE_MEMMOVE(&*_Result, _Off * sizeof (*_First), &*_First, _Off * sizeof (*_First));

	push	ecx
	push	edx
	push	ecx
	push	esi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN4@Copy_backw@4:

; 2713 : 	return _Result;

	mov	eax, esi
	pop	esi

; 2714 : 	}

	ret	0
??$_Copy_backward_opt@PAHPAHUrandom_access_iterator_tag@std@@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<int *,int *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_backward_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_backward_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::random_access_iterator_tag>, COMDAT

; 2674 : 	_DEBUG_RANGE(_First, _Last);
; 2675 : 	while (_First != _Last)

	mov	edx, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN1@Copy_backw@5
	push	esi
$LL2@Copy_backw@5:

; 2676 : 		*--_Dest = *--_Last;

	mov	esi, DWORD PTR [ecx-24]
	sub	ecx, 24					; 00000018H
	sub	eax, 24					; 00000018H
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	mov	esi, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], esi
	mov	esi, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], esi
	mov	esi, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], esi
	mov	esi, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], esi
	cmp	ecx, edx
	jne	SHORT $LL2@Copy_backw@5
	pop	esi
$LN1@Copy_backw@5:

; 2677 : 	return (_Dest);
; 2678 : 	}

	ret	0
??$_Copy_backward_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAIPAIUrandom_access_iterator_tag@std@@@std@@YAPAIPAI00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<unsigned int *,unsigned int *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_backward_opt@PAIPAIUrandom_access_iterator_tag@std@@@std@@YAPAIPAI00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_backward_opt@PAIPAIUrandom_access_iterator_tag@std@@@std@@YAPAIPAI00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<unsigned int *,unsigned int *,std::random_access_iterator_tag>, COMDAT

; 2699 : 
; 2700 :  #if _HAS_ITERATOR_DEBUGGING
; 2701 : 	_DEBUG_RANGE(_First, _Last);
; 2702 : 	if (_First != _Last)
; 2703 : 		_DEBUG_POINTER(_Dest);
; 2704 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 2705 : 
; 2706 : 	ptrdiff_t _Off = _Last - _First;	// NB: non-overlapping move

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	sar	eax, 2
	push	esi

; 2707 : 	/* if _OutIt is range checked, this will make sure there is enough space for 
; 2708 : 	 * the memmove
; 2709 : 	 */
; 2710 : 	_OutIt _Result = _Dest - _Off;

	mov	esi, DWORD PTR __Dest$[esp]
	lea	ecx, DWORD PTR [eax*4]
	sub	esi, ecx

; 2711 : 	if (_Off > 0)

	test	eax, eax
	jle	SHORT $LN4@Copy_backw@6

; 2712 : 		_CRT_SECURE_MEMMOVE(&*_Result, _Off * sizeof (*_First), &*_First, _Off * sizeof (*_First));

	push	ecx
	push	edx
	push	ecx
	push	esi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN4@Copy_backw@6:

; 2713 : 	return _Result;

	mov	eax, esi
	pop	esi

; 2714 : 	}

	ret	0
??$_Copy_backward_opt@PAIPAIUrandom_access_iterator_tag@std@@@std@@YAPAIPAI00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<unsigned int *,unsigned int *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Construct@V?$Array@H$05@Firaxis@@V12@@std@@YAXPAV?$Array@H$05@Firaxis@@ABV12@@Z ; std::_Construct<Firaxis::Array<int,6>,Firaxis::Array<int,6> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Construct@V?$Array@H$05@Firaxis@@V12@@std@@YAXPAV?$Array@H$05@Firaxis@@ABV12@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@V?$Array@H$05@Firaxis@@V12@@std@@YAXPAV?$Array@H$05@Firaxis@@ABV12@@Z PROC ; std::_Construct<Firaxis::Array<int,6>,Firaxis::Array<int,6> >, COMDAT

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN3@Construct@4
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	ecx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], ecx
$LN3@Construct@4:

; 53   : 	}

	ret	0
??$_Construct@V?$Array@H$05@Firaxis@@V12@@std@@YAXPAV?$Array@H$05@Firaxis@@ABV12@@Z ENDP ; std::_Construct<Firaxis::Array<int,6>,Firaxis::Array<int,6> >
_TEXT	ENDS
PUBLIC	??$_Iter_cat@PAH@std@@YA?AUrandom_access_iterator_tag@0@ABQAH@Z ; std::_Iter_cat<int *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Iter_cat@PAH@std@@YA?AUrandom_access_iterator_tag@0@ABQAH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAH@std@@YA?AUrandom_access_iterator_tag@0@ABQAH@Z PROC ; std::_Iter_cat<int *>, COMDAT

; 953  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 954  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 955  : 	}

	ret	0
??$_Iter_cat@PAH@std@@YA?AUrandom_access_iterator_tag@0@ABQAH@Z ENDP ; std::_Iter_cat<int *>
_TEXT	ENDS
PUBLIC	??$_Iter_cat@PAI@std@@YA?AUrandom_access_iterator_tag@0@ABQAI@Z ; std::_Iter_cat<unsigned int *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Iter_cat@PAI@std@@YA?AUrandom_access_iterator_tag@0@ABQAI@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAI@std@@YA?AUrandom_access_iterator_tag@0@ABQAI@Z PROC ; std::_Iter_cat<unsigned int *>, COMDAT

; 953  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 954  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 955  : 	}

	ret	0
??$_Iter_cat@PAI@std@@YA?AUrandom_access_iterator_tag@0@ABQAI@Z ENDP ; std::_Iter_cat<unsigned int *>
_TEXT	ENDS
PUBLIC	??$_Fill_n@PAHIH@std@@YAXPAHIABHU_Range_checked_iterator_tag@0@@Z ; std::_Fill_n<int *,unsigned int,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Fill_n@PAHIH@std@@YAXPAHIABHU_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Fill_n@PAHIH@std@@YAXPAHIABHU_Range_checked_iterator_tag@0@@Z PROC ; std::_Fill_n<int *,unsigned int,int>, COMDAT

; 3197 : 	for (; 0 < _Count; --_Count, ++_First)

	mov	eax, DWORD PTR __Count$[esp-4]
	test	eax, eax
	jbe	SHORT $LN1@Fill_n
	mov	edx, DWORD PTR __Val$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	push	esi
$LL3@Fill_n:

; 3198 : 		*_First = _Val;

	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [ecx], esi
	dec	eax
	add	ecx, 4
	test	eax, eax
	ja	SHORT $LL3@Fill_n
	pop	esi
$LN1@Fill_n:

; 3199 : 	}

	ret	0
??$_Fill_n@PAHIH@std@@YAXPAHIABHU_Range_checked_iterator_tag@0@@Z ENDP ; std::_Fill_n<int *,unsigned int,int>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<int *,int *,std::allocator<int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Uninit_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<int *,int *,std::allocator<int> >, COMDAT

; 146  : 	_DEBUG_RANGE(_First, _Last);
; 147  : 	_DEBUG_POINTER(_Dest);
; 148  : 	size_t _Count = (size_t)(_Last - _First);

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi

; 149  : 	_FwdIt _Result = _Dest + _Count;

	mov	edi, DWORD PTR __Dest$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]

; 150  : 	if (_Count > 0)

	test	eax, eax
	jbe	SHORT $LN4@Uninit_cop

; 151  : 		_CRT_SECURE_MEMMOVE(&*_Dest, _Count * sizeof (*_First), &*_First, _Count * sizeof (*_First));	// NB: non-overlapping move

	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN4@Uninit_cop:
	pop	edi

; 152  : 	return (_Result);

	mov	eax, esi
	pop	esi

; 153  : 	}

	ret	0
??$_Uninit_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<int *,int *,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAIPAIV?$allocator@I@std@@@std@@YAPAIPAI00AAV?$allocator@I@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<unsigned int *,unsigned int *,std::allocator<unsigned int> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_copy@PAIPAIV?$allocator@I@std@@@std@@YAPAIPAI00AAV?$allocator@I@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAIPAIV?$allocator@I@std@@@std@@YAPAIPAI00AAV?$allocator@I@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<unsigned int *,unsigned int *,std::allocator<unsigned int> >, COMDAT

; 146  : 	_DEBUG_RANGE(_First, _Last);
; 147  : 	_DEBUG_POINTER(_Dest);
; 148  : 	size_t _Count = (size_t)(_Last - _First);

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi

; 149  : 	_FwdIt _Result = _Dest + _Count;

	mov	edi, DWORD PTR __Dest$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]

; 150  : 	if (_Count > 0)

	test	eax, eax
	jbe	SHORT $LN4@Uninit_cop@2

; 151  : 		_CRT_SECURE_MEMMOVE(&*_Dest, _Count * sizeof (*_First), &*_First, _Count * sizeof (*_First));	// NB: non-overlapping move

	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN4@Uninit_cop@2:
	pop	edi

; 152  : 	return (_Result);

	mov	eax, esi
	pop	esi

; 153  : 	}

	ret	0
??$_Uninit_copy@PAIPAIV?$allocator@I@std@@@std@@YAPAIPAI00AAV?$allocator@I@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<unsigned int *,unsigned int *,std::allocator<unsigned int> >
_TEXT	ENDS
PUBLIC	??$_Fill_n@PAIII@std@@YAXPAIIABIU_Range_checked_iterator_tag@0@@Z ; std::_Fill_n<unsigned int *,unsigned int,unsigned int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Fill_n@PAIII@std@@YAXPAIIABIU_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Fill_n@PAIII@std@@YAXPAIIABIU_Range_checked_iterator_tag@0@@Z PROC ; std::_Fill_n<unsigned int *,unsigned int,unsigned int>, COMDAT

; 3197 : 	for (; 0 < _Count; --_Count, ++_First)

	mov	eax, DWORD PTR __Count$[esp-4]
	test	eax, eax
	jbe	SHORT $LN1@Fill_n@2
	mov	edx, DWORD PTR __Val$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	push	esi
$LL3@Fill_n@2:

; 3198 : 		*_First = _Val;

	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [ecx], esi
	dec	eax
	add	ecx, 4
	test	eax, eax
	ja	SHORT $LL3@Fill_n@2
	pop	esi
$LN1@Fill_n@2:

; 3199 : 	}

	ret	0
??$_Fill_n@PAIII@std@@YAXPAIIABIU_Range_checked_iterator_tag@0@@Z ENDP ; std::_Fill_n<unsigned int *,unsigned int,unsigned int>
_TEXT	ENDS
PUBLIC	?GetLocalizedText@@YA?AVCvString@@PBD@Z		; GetLocalizedText
EXTRN	__imp_??1String@Localization@@UAE@XZ:PROC
EXTRN	__imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z:PROC
EXTRN	__imp_?toUTF8@String@Localization@@QAEPBDAAIH@Z:PROC
EXTRN	__imp_?Lookup@Localization@@YA?AVString@1@PBD@Z:PROC
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?GetLocalizedText@@YA?AVCvString@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$0
__ehfuncinfo$?GetLocalizedText@@YA?AVCvString@@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetLocalizedText@@YA?AVCvString@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
xdata$x	ENDS
;	COMDAT ?GetLocalizedText@@YA?AVCvString@@PBD@Z
_TEXT	SEGMENT
_bytes$ = -100						; size = 4
$T230797 = -96						; size = 4
_text$ = -92						; size = 80
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_szString$ = 12						; size = 4
?GetLocalizedText@@YA?AVCvString@@PBD@Z PROC		; GetLocalizedText, COMDAT

; 514  : {

	push	-1
	push	__ehhandler$?GetLocalizedText@@YA?AVCvString@@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 88					; 00000058H

; 515  : 	Localization::String text = Localization::Lookup(szString);

	mov	eax, DWORD PTR _szString$[esp+96]
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	ecx, DWORD PTR _text$[esp+116]
	xor	ebx, ebx
	push	ecx
	mov	DWORD PTR __$EHRec$[esp+128], ebx
	mov	DWORD PTR $T230797[esp+120], ebx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8

; 516  : 
; 517  : 	size_t bytes = 0;
; 518  : 	const char* szComposedString = text.toUTF8(bytes);

	push	1
	lea	edx, DWORD PTR _bytes$[esp+116]
	push	edx
	lea	ecx, DWORD PTR _text$[esp+120]
	mov	DWORD PTR __$EHRec$[esp+128], 1
	mov	DWORD PTR _bytes$[esp+120], ebx
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDAAIH@Z

; 519  : 	CvString str;

	mov	esi, DWORD PTR ___$ReturnUdt$[esp+108]
	mov	ecx, esi
	mov	edi, eax
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 520  : 	str.assign(szComposedString, bytes);
; 521  : 	return str;

	mov	eax, DWORD PTR _bytes$[esp+112]
	push	eax
	push	edi
	mov	ecx, esi
	mov	DWORD PTR $T230797[esp+120], 1
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
	lea	ecx, DWORD PTR _text$[esp+112]
	mov	BYTE PTR __$EHRec$[esp+120], bl
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 522  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+112]
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 100				; 00000064H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$0:
	lea	ecx, DWORD PTR _text$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$1:
	mov	eax, DWORD PTR $T230797[ebp]
	and	eax, 1
	je	$LN5@GetLocaliz
	and	DWORD PTR $T230797[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
$LN5@GetLocaliz:
	ret	0
__ehhandler$?GetLocalizedText@@YA?AVCvString@@PBD@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetLocalizedText@@YA?AVCvString@@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetLocalizedText@@YA?AVCvString@@PBD@Z ENDP		; GetLocalizedText
PUBLIC	??1CvBaseInfo@@QAE@XZ				; CvBaseInfo::~CvBaseInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CvBaseInfo@@QAE@XZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$??1CvBaseInfo@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1CvBaseInfo@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$7
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??1CvBaseInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CvBaseInfo@@QAE@XZ PROC				; CvBaseInfo::~CvBaseInfo, COMDAT
; _this$ = ecx
	push	-1
	push	__ehhandler$??1CvBaseInfo@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+20], esi
	lea	ecx, DWORD PTR [esi+232]
	mov	DWORD PTR __$EHRec$[esp+28], 7
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR [esi+204]
	mov	BYTE PTR __$EHRec$[esp+28], 6
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR [esi+176]
	mov	BYTE PTR __$EHRec$[esp+28], 5
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR [esi+148]
	mov	BYTE PTR __$EHRec$[esp+28], 4
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR [esi+120]
	mov	BYTE PTR __$EHRec$[esp+28], 3
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR [esi+92]
	mov	BYTE PTR __$EHRec$[esp+28], 2
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR [esi+64]
	mov	BYTE PTR __$EHRec$[esp+28], 1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR [esi+36]
	mov	BYTE PTR __$EHRec$[esp+28], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR __$EHRec$[esp+28], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 176				; 000000b0H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$??1CvBaseInfo@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1CvBaseInfo@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CvBaseInfo@@QAE@XZ ENDP				; CvBaseInfo::~CvBaseInfo
PUBLIC	?getShortDescription@CvTraitEntry@@QBEPBDXZ	; CvTraitEntry::getShortDescription
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
;	COMDAT ?getShortDescription@CvTraitEntry@@QBEPBDXZ
_TEXT	SEGMENT
?getShortDescription@CvTraitEntry@@QBEPBDXZ PROC	; CvTraitEntry::getShortDescription, COMDAT
; _this$ = ecx

; 849  : 	return m_strShortDescription;

	add	ecx, 608				; 00000260H
	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
?getShortDescription@CvTraitEntry@@QBEPBDXZ ENDP	; CvTraitEntry::getShortDescription
_TEXT	ENDS
PUBLIC	?setShortDescription@CvTraitEntry@@QAEXPBD@Z	; CvTraitEntry::setShortDescription
; Function compile flags: /Ogtpy
;	COMDAT ?setShortDescription@CvTraitEntry@@QAEXPBD@Z
_TEXT	SEGMENT
_szVal$ = 8						; size = 4
?setShortDescription@CvTraitEntry@@QAEXPBD@Z PROC	; CvTraitEntry::setShortDescription, COMDAT
; _this$ = ecx

; 855  : 	m_strShortDescription = szVal;

	mov	eax, DWORD PTR _szVal$[esp-4]
	add	ecx, 608				; 00000260H
	test	eax, eax
	je	SHORT $LN4@setShortDe
	mov	DWORD PTR _szVal$[esp-4], eax
	jmp	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
$LN4@setShortDe:
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ

; 856  : }

	ret	4
?setShortDescription@CvTraitEntry@@QAEXPBD@Z ENDP	; CvTraitEntry::setShortDescription
_TEXT	ENDS
PUBLIC	?GetFreeResourceXCities@CvTraitEntry@@QBE?AUFreeResourceXCities@@W4ResourceTypes@@@Z ; CvTraitEntry::GetFreeResourceXCities
; Function compile flags: /Ogtpy
;	COMDAT ?GetFreeResourceXCities@CvTraitEntry@@QBE?AUFreeResourceXCities@@W4ResourceTypes@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_eResource$ = 12					; size = 4
?GetFreeResourceXCities@CvTraitEntry@@QBE?AUFreeResourceXCities@@W4ResourceTypes@@@Z PROC ; CvTraitEntry::GetFreeResourceXCities, COMDAT
; _this$ = ecx

; 999  : 	return m_aFreeResourceXCities[(int)eResource];

	mov	ecx, DWORD PTR [ecx+712]
	mov	edx, DWORD PTR _eResource$[esp-4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	push	esi
	mov	esi, DWORD PTR [ecx+edx*8]
	mov	ecx, DWORD PTR [ecx+edx*8+4]
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [eax+4], ecx
	pop	esi

; 1000 : }

	ret	8
?GetFreeResourceXCities@CvTraitEntry@@QBE?AUFreeResourceXCities@@W4ResourceTypes@@@Z ENDP ; CvTraitEntry::GetFreeResourceXCities
_TEXT	ENDS
PUBLIC	?IsObsoleteByTech@CvTraitEntry@@QAE_NW4TeamTypes@@@Z ; CvTraitEntry::IsObsoleteByTech
EXTRN	?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z:PROC	; CvTeamTechs::HasTech
EXTRN	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ:PROC ; CvTeam::GetTeamTechs
; Function compile flags: /Ogtpy
;	COMDAT ?IsObsoleteByTech@CvTraitEntry@@QAE_NW4TeamTypes@@@Z
_TEXT	SEGMENT
_eTeam$ = 8						; size = 4
?IsObsoleteByTech@CvTraitEntry@@QAE_NW4TeamTypes@@@Z PROC ; CvTraitEntry::IsObsoleteByTech, COMDAT
; _this$ = ecx

; 1039 : 	if(m_iObsoleteTech != NO_TECH)

	mov	eax, DWORD PTR [ecx+416]
	cmp	eax, -1
	je	SHORT $LN1@IsObsolete

; 1040 : 	{
; 1041 : 		if(GET_TEAM(eTeam).GetTeamTechs()->HasTech((TechTypes)m_iObsoleteTech))

	mov	ecx, DWORD PTR _eTeam$[esp-4]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	push	eax
	call	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ ; CvTeam::GetTeamTechs
	mov	ecx, eax
	call	?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z ; CvTeamTechs::HasTech
	test	al, al
	je	SHORT $LN1@IsObsolete

; 1042 : 		{
; 1043 : 			return true;

	mov	al, 1

; 1047 : }

	ret	4
$LN1@IsObsolete:

; 1044 : 		}
; 1045 : 	}
; 1046 : 	return false;

	xor	al, al

; 1047 : }

	ret	4
?IsObsoleteByTech@CvTraitEntry@@QAE_NW4TeamTypes@@@Z ENDP ; CvTraitEntry::IsObsoleteByTech
_TEXT	ENDS
PUBLIC	?IsEnabledByTech@CvTraitEntry@@QAE_NW4TeamTypes@@@Z ; CvTraitEntry::IsEnabledByTech
; Function compile flags: /Ogtpy
;	COMDAT ?IsEnabledByTech@CvTraitEntry@@QAE_NW4TeamTypes@@@Z
_TEXT	SEGMENT
_eTeam$ = 8						; size = 4
?IsEnabledByTech@CvTraitEntry@@QAE_NW4TeamTypes@@@Z PROC ; CvTraitEntry::IsEnabledByTech, COMDAT
; _this$ = ecx

; 1052 : 	if(m_iPrereqTech != NO_TECH)

	mov	eax, DWORD PTR [ecx+420]
	cmp	eax, -1
	je	SHORT $LN1@IsEnabledB

; 1053 : 	{
; 1054 : 		if(GET_TEAM(eTeam).GetTeamTechs()->HasTech((TechTypes)m_iPrereqTech))

	mov	ecx, DWORD PTR _eTeam$[esp-4]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	push	eax
	call	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ ; CvTeam::GetTeamTechs
	mov	ecx, eax
	call	?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z ; CvTeamTechs::HasTech
	test	al, al
	setne	al

; 1064 : }

	ret	4
$LN1@IsEnabledB:

; 1055 : 		{
; 1056 : 			return true;
; 1057 : 		}
; 1058 : 		else
; 1059 : 		{
; 1060 : 			return false;
; 1061 : 		}
; 1062 : 	}
; 1063 : 	return true;

	mov	al, 1

; 1064 : }

	ret	4
?IsEnabledByTech@CvTraitEntry@@QAE_NW4TeamTypes@@@Z ENDP ; CvTraitEntry::IsEnabledByTech
_TEXT	ENDS
PUBLIC	?GetNumTraits@CvTraitXMLEntries@@QAEHXZ		; CvTraitXMLEntries::GetNumTraits
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumTraits@CvTraitXMLEntries@@QAEHXZ
_TEXT	SEGMENT
?GetNumTraits@CvTraitXMLEntries@@QAEHXZ PROC		; CvTraitXMLEntries::GetNumTraits, COMDAT
; _this$ = ecx

; 1642 : 	return m_paTraitEntries.size();

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 1643 : }

	ret	0
?GetNumTraits@CvTraitXMLEntries@@QAEHXZ ENDP		; CvTraitXMLEntries::GetNumTraits
_TEXT	ENDS
PUBLIC	?GetEntry@CvTraitXMLEntries@@QAEPAVCvTraitEntry@@H@Z ; CvTraitXMLEntries::GetEntry
; Function compile flags: /Ogtpy
;	COMDAT ?GetEntry@CvTraitXMLEntries@@QAEPAVCvTraitEntry@@H@Z
_TEXT	SEGMENT
_index$ = 8						; size = 4
?GetEntry@CvTraitXMLEntries@@QAEPAVCvTraitEntry@@H@Z PROC ; CvTraitXMLEntries::GetEntry, COMDAT
; _this$ = ecx

; 1659 : 	return m_paTraitEntries[index];

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _index$[esp-4]
	mov	eax, DWORD PTR [eax+ecx*4]

; 1660 : }

	ret	4
?GetEntry@CvTraitXMLEntries@@QAEPAVCvTraitEntry@@H@Z ENDP ; CvTraitXMLEntries::GetEntry
_TEXT	ENDS
PUBLIC	?GetMovesChangeUnitCombat@CvPlayerTraits@@QBEHH@Z ; CvPlayerTraits::GetMovesChangeUnitCombat
; Function compile flags: /Ogtpy
;	COMDAT ?GetMovesChangeUnitCombat@CvPlayerTraits@@QBEHH@Z
_TEXT	SEGMENT
_unitCombatID$ = 8					; size = 4
?GetMovesChangeUnitCombat@CvPlayerTraits@@QBEHH@Z PROC	; CvPlayerTraits::GetMovesChangeUnitCombat, COMDAT
; _this$ = ecx

; 2418 : 	CvAssertMsg(unitCombatID < GC.getNumUnitCombatClassInfos(),  "Invalid unitCombatID parameter in call to CvPlayerTraits::GetMovesChangeUnitCombat()");
; 2419 : 
; 2420 : 	if(unitCombatID == NO_UNITCLASS)

	mov	eax, DWORD PTR _unitCombatID$[esp-4]
	cmp	eax, -1
	jne	SHORT $LN1@GetMovesCh

; 2421 : 	{
; 2422 : 		return 0;

	xor	eax, eax

; 2426 : }

	ret	4
$LN1@GetMovesCh:

; 2423 : 	}
; 2424 : 
; 2425 : 	return m_paiMovesChangeUnitCombat[unitCombatID];

	mov	ecx, DWORD PTR [ecx+784]
	mov	eax, DWORD PTR [ecx+eax*4]

; 2426 : }

	ret	4
?GetMovesChangeUnitCombat@CvPlayerTraits@@QBEHH@Z ENDP	; CvPlayerTraits::GetMovesChangeUnitCombat
_TEXT	ENDS
PUBLIC	?GetMaintenanceModifierUnitCombat@CvPlayerTraits@@QBEHH@Z ; CvPlayerTraits::GetMaintenanceModifierUnitCombat
; Function compile flags: /Ogtpy
;	COMDAT ?GetMaintenanceModifierUnitCombat@CvPlayerTraits@@QBEHH@Z
_TEXT	SEGMENT
_unitCombatID$ = 8					; size = 4
?GetMaintenanceModifierUnitCombat@CvPlayerTraits@@QBEHH@Z PROC ; CvPlayerTraits::GetMaintenanceModifierUnitCombat, COMDAT
; _this$ = ecx

; 2431 : 	CvAssertMsg(unitCombatID < GC.getNumUnitCombatClassInfos(),  "Invalid unitCombatID parameter in call to CvPlayerTraits::GetMaintenanceModifierUnitCombat()");
; 2432 : 
; 2433 : 	if(unitCombatID == NO_UNITCLASS)

	mov	eax, DWORD PTR _unitCombatID$[esp-4]
	cmp	eax, -1
	jne	SHORT $LN1@GetMainten

; 2434 : 	{
; 2435 : 		return 0;

	xor	eax, eax

; 2439 : }

	ret	4
$LN1@GetMainten:

; 2436 : 	}
; 2437 : 
; 2438 : 	return m_paiMaintenanceModifierUnitCombat[unitCombatID];

	mov	ecx, DWORD PTR [ecx+800]
	mov	eax, DWORD PTR [ecx+eax*4]

; 2439 : }

	ret	4
?GetMaintenanceModifierUnitCombat@CvPlayerTraits@@QBEHH@Z ENDP ; CvPlayerTraits::GetMaintenanceModifierUnitCombat
_TEXT	ENDS
PUBLIC	?GetImprovementYieldChange@CvPlayerTraits@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z ; CvPlayerTraits::GetImprovementYieldChange
; Function compile flags: /Ogtpy
;	COMDAT ?GetImprovementYieldChange@CvPlayerTraits@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z
_TEXT	SEGMENT
_eImprovement$ = 8					; size = 4
_eYield$ = 12						; size = 4
?GetImprovementYieldChange@CvPlayerTraits@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z PROC ; CvPlayerTraits::GetImprovementYieldChange, COMDAT
; _this$ = ecx

; 2444 : 	CvAssertMsg(eImprovement < GC.getNumImprovementInfos(),  "Invalid eImprovement parameter in call to CvPlayerTraits::GetImprovementYieldChange()");
; 2445 : 	CvAssertMsg(eYield < NUM_YIELD_TYPES,  "Invalid eYield parameter in call to CvPlayerTraits::GetImprovementYieldChange()");
; 2446 : 
; 2447 : 	if(eImprovement == NO_IMPROVEMENT)

	mov	eax, DWORD PTR _eImprovement$[esp-4]
	cmp	eax, -1
	jne	SHORT $LN1@GetImprove@2

; 2448 : 	{
; 2449 : 		return 0;

	xor	eax, eax

; 2453 : }

	ret	8
$LN1@GetImprove@2:

; 2450 : 	}
; 2451 : 
; 2452 : 	return m_ppaaiImprovementYieldChange[(int)eImprovement][(int)eYield];

	mov	edx, DWORD PTR _eYield$[esp-4]
	mov	ecx, DWORD PTR [ecx+816]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [edx+eax*2]
	mov	eax, DWORD PTR [ecx+eax*4]

; 2453 : }

	ret	8
?GetImprovementYieldChange@CvPlayerTraits@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z ENDP ; CvPlayerTraits::GetImprovementYieldChange
_TEXT	ENDS
PUBLIC	?GetSpecialistYieldChange@CvPlayerTraits@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z ; CvPlayerTraits::GetSpecialistYieldChange
; Function compile flags: /Ogtpy
;	COMDAT ?GetSpecialistYieldChange@CvPlayerTraits@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z
_TEXT	SEGMENT
_eSpecialist$ = 8					; size = 4
_eYield$ = 12						; size = 4
?GetSpecialistYieldChange@CvPlayerTraits@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z PROC ; CvPlayerTraits::GetSpecialistYieldChange, COMDAT
; _this$ = ecx

; 2458 : 	CvAssertMsg(eSpecialist < GC.getNumSpecialistInfos(),  "Invalid eSpecialist parameter in call to CvPlayerTraits::GetSpecialistYieldChange()");
; 2459 : 	CvAssertMsg(eYield < NUM_YIELD_TYPES,  "Invalid eYield parameter in call to CvPlayerTraits::GetSpecialistYieldChange()");
; 2460 : 
; 2461 : 	if(eSpecialist == NO_SPECIALIST)

	mov	eax, DWORD PTR _eSpecialist$[esp-4]
	cmp	eax, -1
	jne	SHORT $LN1@GetSpecial@2

; 2462 : 	{
; 2463 : 		return 0;

	xor	eax, eax

; 2467 : }

	ret	8
$LN1@GetSpecial@2:

; 2464 : 	}
; 2465 : 
; 2466 : 	return m_ppaaiSpecialistYieldChange[(int)eSpecialist][(int)eYield];

	mov	edx, DWORD PTR _eYield$[esp-4]
	mov	ecx, DWORD PTR [ecx+832]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [edx+eax*2]
	mov	eax, DWORD PTR [ecx+eax*4]

; 2467 : }

	ret	8
?GetSpecialistYieldChange@CvPlayerTraits@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z ENDP ; CvPlayerTraits::GetSpecialistYieldChange
_TEXT	ENDS
PUBLIC	?GetUnimprovedFeatureYieldChange@CvPlayerTraits@@QBEHW4FeatureTypes@@W4YieldTypes@@@Z ; CvPlayerTraits::GetUnimprovedFeatureYieldChange
; Function compile flags: /Ogtpy
;	COMDAT ?GetUnimprovedFeatureYieldChange@CvPlayerTraits@@QBEHW4FeatureTypes@@W4YieldTypes@@@Z
_TEXT	SEGMENT
_eFeature$ = 8						; size = 4
_eYield$ = 12						; size = 4
?GetUnimprovedFeatureYieldChange@CvPlayerTraits@@QBEHW4FeatureTypes@@W4YieldTypes@@@Z PROC ; CvPlayerTraits::GetUnimprovedFeatureYieldChange, COMDAT
; _this$ = ecx

; 2486 : 	CvAssertMsg(eFeature < GC.getNumFeatureInfos(),  "Invalid eImprovement parameter in call to CvPlayerTraits::GetUnimprovedFeatureYieldChange()");
; 2487 : 	CvAssertMsg(eYield < NUM_YIELD_TYPES,  "Invalid eYield parameter in call to CvPlayerTraits::GetUnimprovedFeatureYieldChange()");
; 2488 : 
; 2489 : 	if(eFeature == NO_FEATURE)

	mov	eax, DWORD PTR _eFeature$[esp-4]
	cmp	eax, -1
	jne	SHORT $LN1@GetUnimpro@2

; 2490 : 	{
; 2491 : 		return 0;

	xor	eax, eax

; 2495 : }

	ret	8
$LN1@GetUnimpro@2:

; 2492 : 	}
; 2493 : 
; 2494 : 	return m_ppaaiUnimprovedFeatureYieldChange[(int)eFeature][(int)eYield];

	mov	edx, DWORD PTR _eYield$[esp-4]
	mov	ecx, DWORD PTR [ecx+848]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [edx+eax*2]
	mov	eax, DWORD PTR [ecx+eax*4]

; 2495 : }

	ret	8
?GetUnimprovedFeatureYieldChange@CvPlayerTraits@@QBEHW4FeatureTypes@@W4YieldTypes@@@Z ENDP ; CvPlayerTraits::GetUnimprovedFeatureYieldChange
_TEXT	ENDS
PUBLIC	?GetFirstFreeUnit@CvPlayerTraits@@QAEHW4TechTypes@@@Z ; CvPlayerTraits::GetFirstFreeUnit
; Function compile flags: /Ogtpy
;	COMDAT ?GetFirstFreeUnit@CvPlayerTraits@@QAEHW4TechTypes@@@Z
_TEXT	SEGMENT
_eTech$ = 8						; size = 4
?GetFirstFreeUnit@CvPlayerTraits@@QAEHW4TechTypes@@@Z PROC ; CvPlayerTraits::GetFirstFreeUnit, COMDAT
; _this$ = ecx

; 2750 : 	m_uiFreeUnitIndex = 0;
; 2751 : 	m_eFreeUnitPrereqTech = eTech;
; 2752 : 
; 2753 : 	while(m_uiFreeUnitIndex < m_aFreeTraitUnits.size())

	cmp	DWORD PTR [ecx+672], 0
	push	esi
	mov	esi, DWORD PTR _eTech$[esp]
	mov	DWORD PTR [ecx+360], 0
	mov	DWORD PTR [ecx+364], esi
	jbe	SHORT $LN2@GetFirstFr
	mov	edx, DWORD PTR [ecx+668]
$LL3@GetFirstFr:

; 2754 : 	{
; 2755 : 		if(eTech == m_aFreeTraitUnits[m_uiFreeUnitIndex].m_ePrereqTech)

	mov	eax, DWORD PTR [ecx+360]
	cmp	esi, DWORD PTR [edx+eax*8+4]
	je	SHORT $LN13@GetFirstFr

; 2758 : 		}
; 2759 : 
; 2760 : 		m_uiFreeUnitIndex++;

	inc	eax
	mov	DWORD PTR [ecx+360], eax
	cmp	eax, DWORD PTR [ecx+672]
	jb	SHORT $LL3@GetFirstFr
$LN2@GetFirstFr:

; 2761 : 	}
; 2762 : 
; 2763 : 	return NO_UNITCLASS;

	or	eax, -1
	pop	esi

; 2764 : }

	ret	4
$LN13@GetFirstFr:

; 2756 : 		{
; 2757 : 			return m_aFreeTraitUnits[m_uiFreeUnitIndex].m_iFreeUnit;

	mov	ecx, eax
	mov	eax, DWORD PTR [edx+ecx*8]
	pop	esi

; 2764 : }

	ret	4
?GetFirstFreeUnit@CvPlayerTraits@@QAEHW4TechTypes@@@Z ENDP ; CvPlayerTraits::GetFirstFreeUnit
_TEXT	ENDS
PUBLIC	?GetNextFreeUnit@CvPlayerTraits@@QAEHXZ		; CvPlayerTraits::GetNextFreeUnit
; Function compile flags: /Ogtpy
;	COMDAT ?GetNextFreeUnit@CvPlayerTraits@@QAEHXZ
_TEXT	SEGMENT
?GetNextFreeUnit@CvPlayerTraits@@QAEHXZ PROC		; CvPlayerTraits::GetNextFreeUnit, COMDAT
; _this$ = ecx

; 2769 : 	m_uiFreeUnitIndex++;

	inc	DWORD PTR [ecx+360]
	mov	eax, DWORD PTR [ecx+360]
	push	esi
	push	edi

; 2770 : 
; 2771 : 	while(m_uiFreeUnitIndex < m_aFreeTraitUnits.size())

	cmp	eax, DWORD PTR [ecx+672]
	jae	SHORT $LN2@GetNextFre
	mov	edx, DWORD PTR [ecx+668]
	mov	esi, DWORD PTR [ecx+364]
$LL3@GetNextFre:

; 2772 : 	{
; 2773 : 		if(m_eFreeUnitPrereqTech == m_aFreeTraitUnits[m_uiFreeUnitIndex].m_ePrereqTech)

	cmp	esi, DWORD PTR [edx+eax*8+4]
	je	SHORT $LN13@GetNextFre

; 2776 : 		}
; 2777 : 
; 2778 : 		m_uiFreeUnitIndex++;

	inc	eax
	mov	edi, eax
	mov	DWORD PTR [ecx+360], eax
	cmp	edi, DWORD PTR [ecx+672]
	jb	SHORT $LL3@GetNextFre
$LN2@GetNextFre:
	pop	edi

; 2779 : 	}
; 2780 : 
; 2781 : 	return NO_UNITCLASS;

	or	eax, -1
	pop	esi

; 2782 : }

	ret	0
$LN13@GetNextFre:

; 2774 : 		{
; 2775 : 			return m_aFreeTraitUnits[m_uiFreeUnitIndex].m_iFreeUnit;

	mov	eax, DWORD PTR [edx+eax*8]
	pop	edi
	pop	esi

; 2782 : }

	ret	0
?GetNextFreeUnit@CvPlayerTraits@@QAEHXZ ENDP		; CvPlayerTraits::GetNextFreeUnit
_TEXT	ENDS
PUBLIC	?GetFreeResourceXCities@CvPlayerTraits@@QBE?AUFreeResourceXCities@@W4ResourceTypes@@@Z ; CvPlayerTraits::GetFreeResourceXCities
; Function compile flags: /Ogtpy
;	COMDAT ?GetFreeResourceXCities@CvPlayerTraits@@QBE?AUFreeResourceXCities@@W4ResourceTypes@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_eResource$ = 12					; size = 4
?GetFreeResourceXCities@CvPlayerTraits@@QBE?AUFreeResourceXCities@@W4ResourceTypes@@@Z PROC ; CvPlayerTraits::GetFreeResourceXCities, COMDAT
; _this$ = ecx

; 2787 : 	return m_aFreeResourceXCities[(int)eResource];

	mov	ecx, DWORD PTR [ecx+864]
	mov	edx, DWORD PTR _eResource$[esp-4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	push	esi
	mov	esi, DWORD PTR [ecx+edx*8]
	mov	ecx, DWORD PTR [ecx+edx*8+4]
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [eax+4], ecx
	pop	esi

; 2788 : }

	ret	8
?GetFreeResourceXCities@CvPlayerTraits@@QBE?AUFreeResourceXCities@@W4ResourceTypes@@@Z ENDP ; CvPlayerTraits::GetFreeResourceXCities
_TEXT	ENDS
PUBLIC	?ComputeMayaDate@CvPlayerTraits@@QAEXXZ		; CvPlayerTraits::ComputeMayaDate
EXTRN	?getGameTurnYear@CvGame@@QAEHXZ:PROC		; CvGame::getGameTurnYear
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
EXTRN	__fltused:DWORD
EXTRN	__ftol2_sse_excpt:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?ComputeMayaDate@CvPlayerTraits@@QAEXXZ
_TEXT	SEGMENT
tv331 = -4						; size = 4
tv272 = -4						; size = 4
tv260 = -4						; size = 4
tv248 = -4						; size = 4
tv236 = -4						; size = 4
_fDays$224163 = -4					; size = 4
_fYear$ = -4						; size = 4
?ComputeMayaDate@CvPlayerTraits@@QAEXXZ PROC		; CvPlayerTraits::ComputeMayaDate, COMDAT
; _this$ = ecx

; 3080 : {

	push	ecx
	push	esi
	mov	esi, ecx

; 3081 : 	float fCalendarStart = CALENDAR_START;
; 3082 : 	int iYear = GC.getGame().getGameTurnYear();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getGameTurnYear@CvGame@@QAEHXZ		; CvGame::getGameTurnYear

; 3083 : 	float fYear = (float)iYear;

	mov	DWORD PTR tv331[esp+8], eax
	fild	DWORD PTR tv331[esp+8]
	fstp	DWORD PTR _fYear$[esp+8]

; 3084 : 
; 3085 : 	if(fYear >= fCalendarStart)

	fld	DWORD PTR _fYear$[esp+8]
	fld	DWORD PTR _CALENDAR_START
	fcom	ST(1)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	$LN7@ComputeMay

; 3086 : 	{
; 3087 : 		// Days since calendar start
; 3088 : 		float fDays = (fYear - fCalendarStart) * DAYS_IN_YEAR;

	fsubp	ST(1), ST(0)
	fmul	DWORD PTR _DAYS_IN_YEAR
	fstp	DWORD PTR _fDays$224163[esp+8]

; 3089 : 		m_iBaktun = (int)(fDays / DAYS_IN_BAKTUN);

	fld	DWORD PTR _fDays$224163[esp+8]
	fld	ST(0)
	fld	DWORD PTR _DAYS_IN_BAKTUN
	fld	ST(0)
	fdivp	ST(2), ST(0)
	fxch	ST(1)
	call	__ftol2_sse_excpt
	mov	DWORD PTR tv236[esp+8], eax

; 3090 : 		fDays = fDays - ((float)m_iBaktun * DAYS_IN_BAKTUN);

	fimul	DWORD PTR tv236[esp+8]
	mov	DWORD PTR [esi+744], eax
	fsubp	ST(1), ST(0)
	fstp	DWORD PTR _fDays$224163[esp+8]

; 3091 : 		m_iKatun = (int)(fDays / DAYS_IN_KATUN);

	fld	DWORD PTR _fDays$224163[esp+8]
	fld	ST(0)
	fld	DWORD PTR _DAYS_IN_KATUN
	fld	ST(0)
	fdivp	ST(2), ST(0)
	fxch	ST(1)
	call	__ftol2_sse_excpt
	mov	DWORD PTR tv248[esp+8], eax

; 3092 : 		fDays = fDays - ((float)m_iKatun * DAYS_IN_KATUN);

	fimul	DWORD PTR tv248[esp+8]
	mov	DWORD PTR [esi+748], eax
	fsubp	ST(1), ST(0)
	fstp	DWORD PTR _fDays$224163[esp+8]

; 3093 : 		m_iTun = (int)(fDays / DAYS_IN_TUN);

	fld	DWORD PTR _fDays$224163[esp+8]
	fld	ST(0)
	fld	DWORD PTR _DAYS_IN_TUN
	fld	ST(0)
	fdivp	ST(2), ST(0)
	fxch	ST(1)
	call	__ftol2_sse_excpt
	mov	DWORD PTR tv260[esp+8], eax

; 3094 : 		fDays = fDays - ((float)m_iTun * DAYS_IN_TUN);

	fimul	DWORD PTR tv260[esp+8]
	mov	DWORD PTR [esi+752], eax
	fsubp	ST(1), ST(0)
	fstp	DWORD PTR _fDays$224163[esp+8]

; 3095 : 		m_iWinal = (int)(fDays / DAYS_IN_WINAL);

	fld	DWORD PTR _fDays$224163[esp+8]
	fld	ST(0)
	fld	DWORD PTR _DAYS_IN_WINAL
	fld	ST(0)
	fdivp	ST(2), ST(0)
	fxch	ST(1)
	call	__ftol2_sse_excpt
	mov	DWORD PTR tv272[esp+8], eax

; 3096 : 		fDays = fDays - ((float)m_iWinal * DAYS_IN_WINAL);

	fimul	DWORD PTR tv272[esp+8]
	mov	DWORD PTR [esi+756], eax
	fsubp	ST(1), ST(0)
	fstp	DWORD PTR _fDays$224163[esp+8]

; 3097 : 		m_iKin = (int)fDays;

	fld	DWORD PTR _fDays$224163[esp+8]
	call	__ftol2_sse_excpt
	mov	DWORD PTR [esi+760], eax
	pop	esi

; 3098 : 	}
; 3099 : }

	pop	ecx
	ret	0
$LN7@ComputeMay:

; 3084 : 
; 3085 : 	if(fYear >= fCalendarStart)

	fstp	ST(1)
	pop	esi
	fstp	ST(0)

; 3098 : 	}
; 3099 : }

	pop	ecx
	ret	0
?ComputeMayaDate@CvPlayerTraits@@QAEXXZ ENDP		; CvPlayerTraits::ComputeMayaDate
_TEXT	ENDS
PUBLIC	?IsFreeMayaGreatPersonChoice@CvPlayerTraits@@QBE_NXZ ; CvPlayerTraits::IsFreeMayaGreatPersonChoice
EXTRN	?GetSpecialUnitType@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetSpecialUnitType
EXTRN	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z:PROC ; CvGlobals::getUnitInfo
EXTRN	?getCivilizationUnits@CvCivilizationInfo@@QBEHH@Z:PROC ; CvCivilizationInfo::getCivilizationUnits
EXTRN	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ:PROC ; CvPlayer::getCivilizationInfo
EXTRN	?getUnitClassInfo@CvGlobals@@QAEPAVCvUnitClassInfo@@W4UnitClassTypes@@@Z:PROC ; CvGlobals::getUnitClassInfo
EXTRN	?getNumUnitClassInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumUnitClassInfos
EXTRN	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z:PROC ; CvGlobals::getInfoTypeForString
; Function compile flags: /Ogtpy
;	COMDAT ?IsFreeMayaGreatPersonChoice@CvPlayerTraits@@QBE_NXZ
_TEXT	SEGMENT
?IsFreeMayaGreatPersonChoice@CvPlayerTraits@@QBE_NXZ PROC ; CvPlayerTraits::IsFreeMayaGreatPersonChoice, COMDAT
; _this$ = ecx

; 3133 : {

	push	ebx
	push	ebp
	push	esi
	push	edi

; 3134 : 	// True if have already selected each GP type once
; 3135 : 	int iNumGreatPeopleTypes = 0;

	xor	ebx, ebx

; 3136 : 	SpecialUnitTypes eSpecialUnitGreatPerson = (SpecialUnitTypes) GC.getInfoTypeForString("SPECIALUNIT_PEOPLE");

	push	ebx
	mov	edi, ecx
	push	OFFSET $SG224304
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 3137 : 
; 3138 : 	// Loop through adding the available units
; 3139 : #ifdef AUI_WARNING_FIXES
; 3140 : 	for (uint iI = 0; iI < GC.getNumUnitClassInfos(); iI++)
; 3141 : #else
; 3142 : 	for(int iI = 0; iI < GC.getNumUnitClassInfos(); iI++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	ebp, eax
	xor	esi, esi
	call	?getNumUnitClassInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitClassInfos
	test	eax, eax
	jle	SHORT $LN5@IsFreeMaya
	npad	6
$LL7@IsFreeMaya:

; 3143 : #endif
; 3144 : 	{
; 3145 : 		const UnitClassTypes eUnitClass = static_cast<UnitClassTypes>(iI);
; 3146 : 		CvUnitClassInfo* pkUnitClassInfo = GC.getUnitClassInfo(eUnitClass);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitClassInfo@CvGlobals@@QAEPAVCvUnitClassInfo@@W4UnitClassTypes@@@Z ; CvGlobals::getUnitClassInfo

; 3147 : 		if(pkUnitClassInfo)

	test	eax, eax
	je	SHORT $LN6@IsFreeMaya

; 3148 : 		{
; 3149 : 			const UnitTypes eUnit = (UnitTypes)m_pPlayer->getCivilizationInfo().getCivilizationUnits(eUnitClass);

	mov	ecx, DWORD PTR [edi+4]
	push	esi
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getCivilizationUnits@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationUnits

; 3150 : 			if (eUnit != NO_UNIT)

	cmp	eax, -1
	je	SHORT $LN6@IsFreeMaya

; 3151 : 			{
; 3152 : 				CvUnitEntry* pUnitEntry = GC.getUnitInfo(eUnit);

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo

; 3153 : 				if (pUnitEntry)

	test	eax, eax
	je	SHORT $LN6@IsFreeMaya

; 3154 : 				{
; 3155 : 					if (pUnitEntry->GetSpecialUnitType() == eSpecialUnitGreatPerson)

	mov	ecx, eax
	call	?GetSpecialUnitType@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetSpecialUnitType
	cmp	eax, ebp
	jne	SHORT $LN6@IsFreeMaya

; 3156 : 					{
; 3157 : 						iNumGreatPeopleTypes++;

	inc	ebx
$LN6@IsFreeMaya:

; 3137 : 
; 3138 : 	// Loop through adding the available units
; 3139 : #ifdef AUI_WARNING_FIXES
; 3140 : 	for (uint iI = 0; iI < GC.getNumUnitClassInfos(); iI++)
; 3141 : #else
; 3142 : 	for(int iI = 0; iI < GC.getNumUnitClassInfos(); iI++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	esi
	call	?getNumUnitClassInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitClassInfos
	cmp	esi, eax
	jl	SHORT $LL7@IsFreeMaya
$LN5@IsFreeMaya:

; 3158 : 					}
; 3159 : 				}
; 3160 : 			}	
; 3161 : 		}
; 3162 : 	}
; 3163 : 
; 3164 : 	return ((int)m_aMayaBonusChoices.size() >= iNumGreatPeopleTypes);

	mov	eax, DWORD PTR [edi+772]
	sub	eax, DWORD PTR [edi+768]
	pop	edi
	sar	eax, 3
	xor	ecx, ecx
	cmp	eax, ebx
	pop	esi
	setge	cl
	pop	ebp
	mov	al, cl
	pop	ebx

; 3165 : }

	ret	0
?IsFreeMayaGreatPersonChoice@CvPlayerTraits@@QBE_NXZ ENDP ; CvPlayerTraits::IsFreeMayaGreatPersonChoice
_TEXT	ENDS
PUBLIC	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
EXTRN	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ:PROC ; CvUnit::getDestructionNotification
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
;	COMDAT ??1?$FObjectHandle@VCvUnit@@@@QAE@XZ
_TEXT	SEGMENT
??1?$FObjectHandle@VCvUnit@@@@QAE@XZ PROC		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>, COMDAT
; _this$ = ecx

; 147  : 		if(m_target) 

	mov	ecx, DWORD PTR [ecx]
	test	ecx, ecx
	je	SHORT $LN4@FObjectHan

; 148  : 		{
; 149  : 			m_target->getDestructionNotification().removeTarget(*this);

	jmp	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN4@FObjectHan:

; 150  : 		}
; 151  : 	}

	ret	0
??1?$FObjectHandle@VCvUnit@@@@QAE@XZ ENDP		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
_TEXT	ENDS
PUBLIC	??4?$FObjectHandle@VCvUnit@@@@QAEAAV0@PAVCvUnit@@@Z ; FObjectHandle<CvUnit>::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4?$FObjectHandle@VCvUnit@@@@QAEAAV0@PAVCvUnit@@@Z
_TEXT	SEGMENT
_target$ = 8						; size = 4
??4?$FObjectHandle@VCvUnit@@@@QAEAAV0@PAVCvUnit@@@Z PROC ; FObjectHandle<CvUnit>::operator=, COMDAT
; _this$ = ecx

; 165  : 	{

	push	esi
	mov	esi, ecx

; 166  : 		OBJECT_HANDLE_STACK;
; 167  : 		if(m_target)

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN5@operator@5

; 168  : 		{
; 169  : 			m_target->getDestructionNotification().removeTarget(*this);

	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN5@operator@5:

; 170  : 		}
; 171  : 		m_target = target;

	mov	ecx, DWORD PTR _target$[esp]
	mov	DWORD PTR [esi], ecx

; 172  : 		if(m_target)

	test	ecx, ecx
	je	SHORT $LN9@operator@5

; 173  : 		{
; 174  : 			m_target->getDestructionNotification().addTarget(*this);

	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN9@operator@5:

; 175  : 		}
; 176  : 		return *this;

	mov	eax, esi
	pop	esi

; 177  : 	}

	ret	4
??4?$FObjectHandle@VCvUnit@@@@QAEAAV0@PAVCvUnit@@@Z ENDP ; FObjectHandle<CvUnit>::operator=
_TEXT	ENDS
PUBLIC	??0?$FObjectHandle@VCvUnit@@@@QAE@ABV0@@Z	; FObjectHandle<CvUnit>::FObjectHandle<CvUnit>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$FObjectHandle@VCvUnit@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
_source$ = 8						; size = 4
??0?$FObjectHandle@VCvUnit@@@@QAE@ABV0@@Z PROC		; FObjectHandle<CvUnit>::FObjectHandle<CvUnit>, COMDAT
; _this$ = ecx

; 222  : 	{

	mov	eax, DWORD PTR _source$[esp-4]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi], ecx
	mov	dl, BYTE PTR [eax+4]
	mov	BYTE PTR [esi+4], dl

; 223  : 		OBJECT_HANDLE_STACK;
; 224  : 		if(m_target)

	test	ecx, ecx
	je	SHORT $LN6@FObjectHan@2

; 225  : 		{
; 226  : 			m_target->getDestructionNotification().addTarget(*this);

	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN6@FObjectHan@2:

; 227  : 		}
; 228  : 	}

	mov	eax, esi
	pop	esi
	ret	4
??0?$FObjectHandle@VCvUnit@@@@QAE@ABV0@@Z ENDP		; FObjectHandle<CvUnit>::FObjectHandle<CvUnit>
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AVconst_iterator@12@XZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::end
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AVconst_iterator@12@XZ PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::end, COMDAT
; _this$ = ecx

; 571  : 		return (_TREE_CONST_ITERATOR(_Myhead));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 572  : 		}

	ret	4
?end@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AVconst_iterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::end
_TEXT	ENDS
PUBLIC	??0?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<FreeTraitUnit,5,1,297,0>::FStaticVector<FreeTraitUnit,5,1,297,0>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??0?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
??0?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<FreeTraitUnit,5,1,297,0>::FStaticVector<FreeTraitUnit,5,1,297,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	mov	eax, ecx

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;
; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	lea	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+8], 5
	mov	DWORD PTR [eax], ecx

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	ret	0
??0?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<FreeTraitUnit,5,1,297,0>::FStaticVector<FreeTraitUnit,5,1,297,0>
_TEXT	ENDS
PUBLIC	?clear@?$BaseVector@UFreeTraitUnit@@$00@@QAEXXZ	; BaseVector<FreeTraitUnit,1>::clear
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$BaseVector@UFreeTraitUnit@@$00@@QAEXXZ
_TEXT	SEGMENT
?clear@?$BaseVector@UFreeTraitUnit@@$00@@QAEXXZ PROC	; BaseVector<FreeTraitUnit,1>::clear, COMDAT
; _this$ = ecx

; 121  : 		Destroy(m_pData, m_uiCurrSize);
; 122  : 		m_uiCurrSize = 0;

	mov	DWORD PTR [ecx+4], 0

; 123  : 	};

	ret	0
?clear@?$BaseVector@UFreeTraitUnit@@$00@@QAEXXZ ENDP	; BaseVector<FreeTraitUnit,1>::clear
_TEXT	ENDS
PUBLIC	?begin@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE?AV?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@XZ ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::begin
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?begin@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE?AV?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE?AV?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@XZ PROC ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE?AV?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@XZ ENDP ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::begin
_TEXT	ENDS
PUBLIC	?begin@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE?AV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@XZ ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE?AV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE?AV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@XZ PROC ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::begin, COMDAT
; _this$ = ecx

; 672  : 		return (const_iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 673  : 		}

	ret	4
?begin@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE?AV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@XZ ENDP ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE?AV?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@XZ ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE?AV?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE?AV?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@XZ PROC ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE?AV?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@XZ ENDP ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::end
_TEXT	ENDS
PUBLIC	?end@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE?AV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@XZ ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE?AV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE?AV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@XZ PROC ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::end, COMDAT
; _this$ = ecx

; 682  : 		return (const_iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 683  : 		}

	ret	4
?end@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE?AV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@XZ ENDP ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::end
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::operator!=
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE_NABV012@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 316  : 			return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 317  : 			}

	ret	4
??9const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBEAAPAVCvTraitEntry@@XZ ; std::_Vector_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::operator*
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBEAAPAVCvTraitEntry@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBEAAPAVCvTraitEntry@@XZ PROC ; std::_Vector_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::operator*, COMDAT
; _this$ = ecx

; 339  : 		return ((reference)**(_Mybase *)this);

	mov	eax, DWORD PTR [ecx]

; 340  : 		}

	ret	0
??D?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBEAAPAVCvTraitEntry@@XZ ENDP ; std::_Vector_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::operator++, COMDAT
; _this$ = ecx

; 348  : 		{	// preincrement

	mov	eax, ecx

; 349  : 		++(*(_Mybase *)this);

	add	DWORD PTR [eax], 4

; 350  : 		return (*this);
; 351  : 		}

	ret	0
??E?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::operator++
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::operator!=
_TEXT	ENDS
PUBLIC	??C?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEPBUMayaBonusChoice@@XZ ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator->
; Function compile flags: /Ogtpy
;	COMDAT ??C?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEPBUMayaBonusChoice@@XZ
_TEXT	SEGMENT
??C?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEPBUMayaBonusChoice@@XZ PROC ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator->, COMDAT
; _this$ = ecx

; 111  : 		return (&**this);

	mov	eax, DWORD PTR [ecx]

; 112  : 		}

	ret	0
??C?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEPBUMayaBonusChoice@@XZ ENDP ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator->
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE?AV01@H@Z ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator++, COMDAT
; _this$ = ecx

; 131  : 		_Myt _Tmp = *this;

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], edx

; 132  : 		++*this;

	add	edx, 8
	mov	DWORD PTR [ecx], edx

; 133  : 		return (_Tmp);
; 134  : 		}

	ret	8
??E?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator++
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator!=
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE@XZ ; std::_Vector_val<FreeResourceXCities,std::allocator<FreeResourceXCities> >::~_Vector_val<FreeResourceXCities,std::allocator<FreeResourceXCities> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<FreeResourceXCities,std::allocator<FreeResourceXCities> >::~_Vector_val<FreeResourceXCities,std::allocator<FreeResourceXCities> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<FreeResourceXCities,std::allocator<FreeResourceXCities> >::~_Vector_val<FreeResourceXCities,std::allocator<FreeResourceXCities> >
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE@XZ ; std::_Vector_val<CvTraitEntry *,std::allocator<CvTraitEntry *> >::~_Vector_val<CvTraitEntry *,std::allocator<CvTraitEntry *> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<CvTraitEntry *,std::allocator<CvTraitEntry *> >::~_Vector_val<CvTraitEntry *,std::allocator<CvTraitEntry *> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<CvTraitEntry *,std::allocator<CvTraitEntry *> >::~_Vector_val<CvTraitEntry *,std::allocator<CvTraitEntry *> >
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@XZ ; std::_Vector_val<MayaBonusChoice,std::allocator<MayaBonusChoice> >::~_Vector_val<MayaBonusChoice,std::allocator<MayaBonusChoice> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<MayaBonusChoice,std::allocator<MayaBonusChoice> >::~_Vector_val<MayaBonusChoice,std::allocator<MayaBonusChoice> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<MayaBonusChoice,std::allocator<MayaBonusChoice> >::~_Vector_val<MayaBonusChoice,std::allocator<MayaBonusChoice> >
_TEXT	ENDS
PUBLIC	??1?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@QAE@XZ ; std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1>::~_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@QAE@XZ PROC ; std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1>::~_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1>, COMDAT
; _this$ = ecx
	ret	0
??1?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1>::~_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1>
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAABHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Key
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAABHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAABHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Key, COMDAT

; 162  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 12					; 0000000cH

; 163  : 		}

	ret	0
?_Key@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAABHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Key
_TEXT	ENDS
PUBLIC	?get_allocator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AV?$allocator@U?$pair@$$CBHH@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::get_allocator
; Function compile flags: /Ogtpy
;	COMDAT ?get_allocator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AV?$allocator@U?$pair@$$CBHH@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?get_allocator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AV?$allocator@U?$pair@$$CBHH@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::get_allocator, COMDAT
; _this$ = ecx

; 616  : 		return (this->_Alval);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 617  : 		}

	ret	4
?get_allocator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AV?$allocator@U?$pair@$$CBHH@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::get_allocator
_TEXT	ENDS
PUBLIC	?_Ubound@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Ubound
; Function compile flags: /Ogtpy
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABH@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Ubound@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Ubound, COMDAT
; _this$ = ecx

; 1350 : 		_Nodeptr _Pnode = _Root();

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [eax+4]

; 1351 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1352 : 
; 1353 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN3@Ubound
	mov	edx, DWORD PTR __Keyval$[esp-4]
	mov	edx, DWORD PTR [edx]
$LL4@Ubound:

; 1354 : 			if (_DEBUG_LT_PRED(this->comp, _Keyval, _Key(_Pnode)))

	cmp	edx, DWORD PTR [ecx+12]
	jge	SHORT $LN2@Ubound

; 1355 : 				{	// _Pnode greater than _Keyval, remember it
; 1356 : 				_Wherenode = _Pnode;

	mov	eax, ecx

; 1357 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	ecx, DWORD PTR [ecx]

; 1358 : 				}
; 1359 : 			else

	jmp	SHORT $LN1@Ubound
$LN2@Ubound:

; 1360 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	ecx, DWORD PTR [ecx+8]
$LN1@Ubound:

; 1351 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1352 : 
; 1353 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LL4@Ubound
$LN3@Ubound:

; 1361 : 
; 1362 : 		return (_Wherenode);	// return best remembered candidate
; 1363 : 		}

	ret	4
?_Ubound@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Ubound
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAE@V?$allocator@UFreeResourceXCities@@@1@@Z ; std::_Vector_val<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Vector_val<FreeResourceXCities,std::allocator<FreeResourceXCities> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAE@V?$allocator@UFreeResourceXCities@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAE@V?$allocator@UFreeResourceXCities@@@1@@Z PROC ; std::_Vector_val<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Vector_val<FreeResourceXCities,std::allocator<FreeResourceXCities> >, COMDAT
; _this$ = ecx

; 425  : 		{	// construct allocator from _Al

	mov	eax, ecx

; 426  : 		}

	ret	4
??0?$_Vector_val@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAE@V?$allocator@UFreeResourceXCities@@@1@@Z ENDP ; std::_Vector_val<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Vector_val<FreeResourceXCities,std::allocator<FreeResourceXCities> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAE@V?$allocator@PAVCvTraitEntry@@@1@@Z ; std::_Vector_val<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Vector_val<CvTraitEntry *,std::allocator<CvTraitEntry *> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_val@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAE@V?$allocator@PAVCvTraitEntry@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAE@V?$allocator@PAVCvTraitEntry@@@1@@Z PROC ; std::_Vector_val<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Vector_val<CvTraitEntry *,std::allocator<CvTraitEntry *> >, COMDAT
; _this$ = ecx

; 425  : 		{	// construct allocator from _Al

	mov	eax, ecx

; 426  : 		}

	ret	4
??0?$_Vector_val@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAE@V?$allocator@PAVCvTraitEntry@@@1@@Z ENDP ; std::_Vector_val<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Vector_val<CvTraitEntry *,std::allocator<CvTraitEntry *> >
_TEXT	ENDS
PUBLIC	?Free@?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@IAEXPAUFreeTraitUnit@@I@Z ; FStaticVector<FreeTraitUnit,5,1,297,0>::Free
EXTRN	?FireFreeAlignedNoTracking@@YAXPAX@Z:PROC	; FireFreeAlignedNoTracking
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?Free@?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@IAEXPAUFreeTraitUnit@@I@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Free@?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@IAEXPAUFreeTraitUnit@@I@Z PROC ; FStaticVector<FreeTraitUnit,5,1,297,0>::Free, COMDAT
; _this$ = ecx

; 810  : 		if( !bPODType) Destroy(pVal, uiNumElements);
; 811  : 		if( pVal != (T*)m_aData )

	mov	eax, DWORD PTR _pVal$[esp-4]
	add	ecx, 12					; 0000000cH
	cmp	eax, ecx
	je	SHORT $LN1@Free

; 812  : 			FFREEALIGNED( (unsigned char*)pVal );

	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	pop	ecx
$LN1@Free:

; 813  : 	};

	ret	8
?Free@?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@IAEXPAUFreeTraitUnit@@I@Z ENDP ; FStaticVector<FreeTraitUnit,5,1,297,0>::Free
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAE@V?$allocator@UMayaBonusChoice@@@1@@Z ; std::_Vector_val<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Vector_val<MayaBonusChoice,std::allocator<MayaBonusChoice> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAE@V?$allocator@UMayaBonusChoice@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAE@V?$allocator@UMayaBonusChoice@@@1@@Z PROC ; std::_Vector_val<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Vector_val<MayaBonusChoice,std::allocator<MayaBonusChoice> >, COMDAT
; _this$ = ecx

; 425  : 		{	// construct allocator from _Al

	mov	eax, ecx

; 426  : 		}

	ret	4
??0?$_Vector_val@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAE@V?$allocator@UMayaBonusChoice@@@1@@Z ENDP ; std::_Vector_val<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Vector_val<MayaBonusChoice,std::allocator<MayaBonusChoice> >
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBEABU?$pair@$$CBHH@2@XZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::operator*
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBEABU?$pair@$$CBHH@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBEABU?$pair@$$CBHH@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 250  : 
; 251  :  #if _HAS_ITERATOR_DEBUGGING
; 252  : 			if (this->_Mycont == 0
; 253  : 				|| _Ptr == 0
; 254  : 				|| _Ptr == ((_Myt *)this->_Mycont)->_Myhead)
; 255  : 				{
; 256  : 				_DEBUG_ERROR("map/set iterator not dereferencable");
; 257  : 				_SCL_SECURE_OUT_OF_RANGE;
; 258  : 				}
; 259  :  #else
; 260  : 			_SCL_SECURE_VALIDATE(this->_Has_container());
; 261  : 			_SCL_SECURE_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);
; 262  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 263  : 
; 264  : 			return (_Myval(_Ptr));

	mov	eax, DWORD PTR [ecx]
	add	eax, 12					; 0000000cH

; 265  : 			}

	ret	0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBEABU?$pair@$$CBHH@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::_Inc
; Function compile flags: /Ogtpy
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 378  : 
; 379  :  #if _HAS_ITERATOR_DEBUGGING
; 380  : 			if (this->_Mycont == 0
; 381  : 				|| _Ptr == 0
; 382  : 				|| _Isnil(_Ptr))
; 383  : 				{
; 384  : 				_DEBUG_ERROR("map/set iterator not incrementable");
; 385  : 				_SCL_SECURE_OUT_OF_RANGE;
; 386  : 				}
; 387  :  #else
; 388  : 			_SCL_SECURE_VALIDATE(this->_Has_container());
; 389  : 			if (_Isnil(_Ptr))

	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN3@Inc@2

; 390  : 				{
; 391  : 				_SCL_SECURE_OUT_OF_RANGE;
; 392  : 				// end() shouldn't be incremented, don't move if _SCL_SECURE is not turned on
; 393  : 				}
; 394  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 395  : 
; 396  : 			else if (!_Isnil(_Right(_Ptr)))

	mov	edx, DWORD PTR [eax+8]
	cmp	BYTE PTR [edx+21], 0
	jne	SHORT $LN34@Inc@2

; 397  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

	mov	eax, DWORD PTR [edx]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN17@Inc@2
	npad	7
$LL18@Inc@2:
	mov	edx, eax
	mov	eax, DWORD PTR [edx]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL18@Inc@2
$LN17@Inc@2:
	mov	DWORD PTR [ecx], edx

; 405  : 				}
; 406  : 			}

	ret	0
$LN34@Inc@2:

; 398  : 			else
; 399  : 				{	// climb looking for right subtree
; 400  : 				_Nodeptr _Pnode;
; 401  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 402  : 					&& _Ptr == _Right(_Pnode))

	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN1@Inc@2
$LL2@Inc@2:
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR [eax+8]
	jne	SHORT $LN1@Inc@2

; 403  : 					_Ptr = _Pnode;	// ==> parent while right subtree

	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL2@Inc@2
$LN1@Inc@2:

; 404  : 				_Ptr = _Pnode;	// ==> parent (head if end())

	mov	DWORD PTR [ecx], eax
$LN3@Inc@2:

; 405  : 				}
; 406  : 			}

	ret	0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE@PAPAVCvTraitEntry@@@Z ; std::_Vector_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Vector_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE@PAPAVCvTraitEntry@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE@PAPAVCvTraitEntry@@@Z PROC ; std::_Vector_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Vector_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE@PAPAVCvTraitEntry@@@Z ENDP ; std::_Vector_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Vector_iterator<CvTraitEntry *,std::allocator<CvTraitEntry *> >
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::begin
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@XZ PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::begin, COMDAT
; _this$ = ecx

; 556  : 		return (_TREE_ITERATOR(_Lmost()));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 557  : 		}

	ret	4
?begin@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@XZ PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::end, COMDAT
; _this$ = ecx

; 566  : 		return (_TREE_ITERATOR(_Myhead));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 567  : 		}

	ret	4
?end@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::end
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Lbound
; Function compile flags: /Ogtpy
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABH@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Lbound, COMDAT
; _this$ = ecx

; 1264 : 		_Nodeptr _Pnode = _Root();

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [eax+4]

; 1265 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1266 : 
; 1267 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN3@Lbound
	mov	edx, DWORD PTR __Keyval$[esp-4]
	mov	edx, DWORD PTR [edx]
$LL4@Lbound:

; 1268 : 			if (_DEBUG_LT_PRED(this->comp, _Key(_Pnode), _Keyval))

	cmp	DWORD PTR [ecx+12], edx
	jge	SHORT $LN2@Lbound

; 1269 : 				_Pnode = _Right(_Pnode);	// descend right subtree

	mov	ecx, DWORD PTR [ecx+8]

; 1270 : 			else

	jmp	SHORT $LN1@Lbound
$LN2@Lbound:

; 1271 : 				{	// _Pnode not less than _Keyval, remember it
; 1272 : 				_Wherenode = _Pnode;

	mov	eax, ecx

; 1273 : 				_Pnode = _Left(_Pnode);	// descend left subtree

	mov	ecx, DWORD PTR [ecx]
$LN1@Lbound:

; 1265 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1266 : 
; 1267 : 		while (!_Isnil(_Pnode))

	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LL4@Lbound
$LN3@Lbound:

; 1274 : 				}
; 1275 : 
; 1276 : 		return (_Wherenode);	// return best remembered candidate
; 1277 : 		}

	ret	4
?_Lbound@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Lbound
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *>::destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBEIXZ ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?max_size@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBEIXZ PROC ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::max_size, COMDAT
; _this$ = ecx

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 536870911				; 1fffffffH

; 732  : 		}

	ret	0
?max_size@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBEIXZ ENDP ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@UFreeResourceXCities@@@std@@QAEPAUFreeResourceXCities@@I@Z ; std::allocator<FreeResourceXCities>::allocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@UFreeResourceXCities@@@std@@QAEPAUFreeResourceXCities@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@UFreeResourceXCities@@@std@@QAEPAUFreeResourceXCities@@I@Z PROC ; std::allocator<FreeResourceXCities>::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@UFreeResourceXCities@@@std@@YAPAUFreeResourceXCities@@IPAU1@@Z ; std::_Allocate<FreeResourceXCities>
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@UFreeResourceXCities@@@std@@QAEPAUFreeResourceXCities@@I@Z ENDP ; std::allocator<FreeResourceXCities>::allocate
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBE?AV?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@@Z ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Make_iter
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Make_iter@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBE?AV?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBE?AV?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@@Z PROC ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Make_iter, COMDAT
; _this$ = ecx

; 687  : 		return (iterator(_Where._Myptr));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR __Where$[esp-4]
	mov	DWORD PTR [eax], ecx

; 688  : 		}

	ret	8
?_Make_iter@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBE?AV?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@@Z ENDP ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Make_iter
_TEXT	ENDS
PUBLIC	?max_size@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBEIXZ ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBEIXZ PROC ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::max_size, COMDAT
; _this$ = ecx

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 1073741823				; 3fffffffH

; 732  : 		}

	ret	0
?max_size@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QBEIXZ ENDP ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAVCvTraitEntry@@@std@@QAEPAPAVCvTraitEntry@@I@Z ; std::allocator<CvTraitEntry *>::allocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@PAVCvTraitEntry@@@std@@QAEPAPAVCvTraitEntry@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVCvTraitEntry@@@std@@QAEPAPAVCvTraitEntry@@I@Z PROC ; std::allocator<CvTraitEntry *>::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@PAVCvTraitEntry@@@std@@YAPAPAVCvTraitEntry@@IPAPAV1@@Z ; std::_Allocate<CvTraitEntry *>
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@PAVCvTraitEntry@@@std@@QAEPAPAVCvTraitEntry@@I@Z ENDP ; std::allocator<CvTraitEntry *>::allocate
_TEXT	ENDS
PUBLIC	?max_size@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEIXZ ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?max_size@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEIXZ PROC ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::max_size, COMDAT
; _this$ = ecx

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 536870911				; 1fffffffH

; 732  : 		}

	ret	0
?max_size@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBEIXZ ENDP ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@UMayaBonusChoice@@@std@@QAEPAUMayaBonusChoice@@I@Z ; std::allocator<MayaBonusChoice>::allocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@UMayaBonusChoice@@@std@@QAEPAUMayaBonusChoice@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@UMayaBonusChoice@@@std@@QAEPAUMayaBonusChoice@@I@Z PROC ; std::allocator<MayaBonusChoice>::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@UMayaBonusChoice@@@std@@YAPAUMayaBonusChoice@@IPAU1@@Z ; std::_Allocate<MayaBonusChoice>
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@UMayaBonusChoice@@@std@@QAEPAUMayaBonusChoice@@I@Z ENDP ; std::allocator<MayaBonusChoice>::allocate
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE@PAUFreeResourceXCities@@@Z ; std::_Vector_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Vector_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE@PAUFreeResourceXCities@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE@PAUFreeResourceXCities@@@Z PROC ; std::_Vector_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Vector_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE@PAUFreeResourceXCities@@@Z ENDP ; std::_Vector_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Vector_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator!=
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE@PAW4TraitTypes@@@Z ; std::_Vector_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::_Vector_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE@PAW4TraitTypes@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE@PAW4TraitTypes@@@Z PROC ; std::_Vector_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::_Vector_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE@PAW4TraitTypes@@@Z ENDP ; std::_Vector_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::_Vector_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::max_size, COMDAT
; _this$ = ecx

; 606  : 		return (this->_Alval.max_size());

	mov	eax, 536870911				; 1fffffffH

; 607  : 		}

	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node>::allocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node>
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *>::construct
; Function compile flags: /Ogtpy
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABQAU342@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN5@construct
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN5@construct:

; 156  : 		}

	ret	8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::operator--
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 286  : 			{	// predecrement

	push	esi
	mov	esi, ecx

; 287  : 			_Dec();

	call	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::_Dec

; 288  : 			return (*this);

	mov	eax, esi
	pop	esi

; 289  : 			}

	ret	0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	??Y?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator+=
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??Y?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator+=, COMDAT
; _this$ = ecx

; 374  : 		{	// increment by integer

	mov	eax, ecx

; 375  : 		(*(_Mybase *)this) += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [ecx*8]
	add	DWORD PTR [eax], edx

; 376  : 		return (*this);
; 377  : 		}

	ret	4
??Y?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator+=
_TEXT	ENDS
PUBLIC	??Y?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator+=
; Function compile flags: /Ogtpy
;	COMDAT ??Y?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator+=, COMDAT
; _this$ = ecx

; 374  : 		{	// increment by integer

	mov	eax, ecx

; 375  : 		(*(_Mybase *)this) += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [ecx*8]
	add	DWORD PTR [eax], edx

; 376  : 		return (*this);
; 377  : 		}

	ret	4
??Y?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator+=
_TEXT	ENDS
PUBLIC	??Y?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::operator+=
; Function compile flags: /Ogtpy
;	COMDAT ??Y?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::operator+=, COMDAT
; _this$ = ecx

; 374  : 		{	// increment by integer

	mov	eax, ecx

; 375  : 		(*(_Mybase *)this) += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [ecx*4]
	add	DWORD PTR [eax], edx

; 376  : 		return (*this);
; 377  : 		}

	ret	4
??Y?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::operator+=
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@QAE@U?$less@H@1@V?$allocator@U?$pair@$$CBHH@std@@@1@@Z ; std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1>::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\map
;	COMDAT ??0?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@QAE@U?$less@H@1@V?$allocator@U?$pair@$$CBHH@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
__Al$ = 12						; size = 1
??0?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@QAE@U?$less@H@1@V?$allocator@U?$pair@$$CBHH@std@@@1@@Z PROC ; std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1>::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1>, COMDAT
; _this$ = ecx

; 39   : 		{	// construct with specified comparator

	mov	eax, ecx

; 40   : 		}

	ret	8
??0?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@QAE@U?$less@H@1@V?$allocator@U?$pair@$$CBHH@std@@@1@@Z ENDP ; std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1>::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node>::destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	??$GetLocalizedText@HHHHH@@YA?AVCvString@@PBDABH1111@Z ; GetLocalizedText<int,int,int,int,int>
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$??$GetLocalizedText@HHHHH@@YA?AVCvString@@PBDABH1111@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$GetLocalizedText@HHHHH@@YA?AVCvString@@PBDABH1111@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$GetLocalizedText@HHHHH@@YA?AVCvString@@PBDABH1111@Z$0
__ehfuncinfo$??$GetLocalizedText@HHHHH@@YA?AVCvString@@PBDABH1111@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$GetLocalizedText@HHHHH@@YA?AVCvString@@PBDABH1111@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
xdata$x	ENDS
;	COMDAT ??$GetLocalizedText@HHHHH@@YA?AVCvString@@PBDABH1111@Z
_TEXT	SEGMENT
_bytes$ = -100						; size = 4
$T231574 = -96						; size = 4
_text$ = -92						; size = 80
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_szString$ = 12						; size = 4
_arg1$ = 16						; size = 4
_arg2$ = 20						; size = 4
_arg3$ = 24						; size = 4
_arg4$ = 28						; size = 4
_arg5$ = 32						; size = 4
??$GetLocalizedText@HHHHH@@YA?AVCvString@@PBDABH1111@Z PROC ; GetLocalizedText<int,int,int,int,int>, COMDAT

; 578  : {

	push	-1
	push	__ehhandler$??$GetLocalizedText@HHHHH@@YA?AVCvString@@PBDABH1111@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 88					; 00000058H

; 579  : 	Localization::String text = Localization::Lookup(szString);

	mov	eax, DWORD PTR _szString$[esp+96]
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	ecx, DWORD PTR _text$[esp+116]
	xor	ebx, ebx
	push	ecx
	mov	DWORD PTR __$EHRec$[esp+128], ebx
	mov	DWORD PTR $T231574[esp+120], ebx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8

; 580  : 	text << arg1 << arg2 << arg3 << arg4 << arg5;

	mov	edx, DWORD PTR _arg1$[esp+108]
	mov	eax, DWORD PTR [edx]
	mov	esi, DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z
	push	eax
	lea	ecx, DWORD PTR _text$[esp+116]
	mov	DWORD PTR __$EHRec$[esp+124], 1
	call	esi
	mov	ecx, DWORD PTR _arg2$[esp+108]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	ecx, DWORD PTR _text$[esp+116]
	call	esi
	mov	eax, DWORD PTR _arg3$[esp+108]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR _text$[esp+116]
	call	esi
	mov	edx, DWORD PTR _arg4$[esp+108]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR _text$[esp+116]
	call	esi
	mov	ecx, DWORD PTR _arg5$[esp+108]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	ecx, DWORD PTR _text$[esp+116]
	call	esi

; 581  : 
; 582  : 	size_t bytes = 0;
; 583  : 	const char* szComposedString = text.toUTF8(bytes);

	push	1
	lea	eax, DWORD PTR _bytes$[esp+116]
	push	eax
	lea	ecx, DWORD PTR _text$[esp+120]
	mov	DWORD PTR _bytes$[esp+120], ebx
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDAAIH@Z

; 584  : 	CvString str;

	mov	esi, DWORD PTR ___$ReturnUdt$[esp+108]
	mov	ecx, esi
	mov	edi, eax
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 585  : 	str.assign(szComposedString, bytes);
; 586  : 	return str;

	mov	ecx, DWORD PTR _bytes$[esp+112]
	push	ecx
	push	edi
	mov	ecx, esi
	mov	DWORD PTR $T231574[esp+120], 1
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
	lea	ecx, DWORD PTR _text$[esp+112]
	mov	BYTE PTR __$EHRec$[esp+120], bl
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 587  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+112]
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 100				; 00000064H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$GetLocalizedText@HHHHH@@YA?AVCvString@@PBDABH1111@Z$0:
	lea	ecx, DWORD PTR _text$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$??$GetLocalizedText@HHHHH@@YA?AVCvString@@PBDABH1111@Z$1:
	mov	eax, DWORD PTR $T231574[ebp]
	and	eax, 1
	je	$LN5@GetLocaliz@2
	and	DWORD PTR $T231574[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
$LN5@GetLocaliz@2:
	ret	0
__ehhandler$??$GetLocalizedText@HHHHH@@YA?AVCvString@@PBDABH1111@Z:
	mov	eax, OFFSET __ehfuncinfo$??$GetLocalizedText@HHHHH@@YA?AVCvString@@PBDABH1111@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$GetLocalizedText@HHHHH@@YA?AVCvString@@PBDABH1111@Z ENDP ; GetLocalizedText<int,int,int,int,int>
PUBLIC	??$?5H@@YAAAVFDataStream@@AAV0@AAV?$ArrayWrapper@H@@@Z ; operator>><int>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ??$?5H@@YAAAVFDataStream@@AAV0@AAV?$ArrayWrapper@H@@@Z
_TEXT	SEGMENT
_loadFrom$ = 8						; size = 4
_v$ = 12						; size = 4
??$?5H@@YAAAVFDataStream@@AAV0@AAV?$ArrayWrapper@H@@@Z PROC ; operator>><int>, COMDAT

; 516  : 	int i = 0;
; 517  : 	int count = v.getCount();

	mov	eax, DWORD PTR _v$[esp-4]
	push	esi

; 518  : 	ValueType * values = v.getArray();

	mov	esi, DWORD PTR [eax]
	push	edi
	mov	edi, DWORD PTR [eax+4]

; 519  : 	for(i = 0; i < count; ++i)

	test	edi, edi
	jle	SHORT $LN14@operator@6
	push	ebx
	mov	ebx, DWORD PTR _loadFrom$[esp+8]
$LL3@operator@6:

; 520  : 	{
; 521  : 		loadFrom >> values[i];

	push	esi
	mov	ecx, ebx
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	add	esi, 4
	sub	edi, 1
	jne	SHORT $LL3@operator@6

; 522  : 	}
; 523  : 	return loadFrom;

	mov	eax, ebx
	pop	ebx
	pop	edi
	pop	esi

; 524  : }

	ret	0
$LN14@operator@6:

; 522  : 	}
; 523  : 	return loadFrom;

	mov	eax, DWORD PTR _loadFrom$[esp+4]
	pop	edi
	pop	esi

; 524  : }

	ret	0
??$?5H@@YAAAVFDataStream@@AAV0@AAV?$ArrayWrapper@H@@@Z ENDP ; operator>><int>
_TEXT	ENDS
PUBLIC	??$ReadHashedDataArray@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHH@Z ; CvInfosSerializationHelper::ReadHashedDataArray<int>
EXTRN	?ReadHashed@CvInfosSerializationHelper@@YAHAAVFDataStream@@PA_N@Z:PROC ; CvInfosSerializationHelper::ReadHashed
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvinfosserializationhelper.h
;	COMDAT ??$ReadHashedDataArray@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHH@Z
_TEXT	SEGMENT
_bValid$226322 = -13					; size = 1
_uiNumEntries$ = -12					; size = 4
_tValue$226325 = -8					; size = 4
_tValue$226330 = -4					; size = 4
_kStream$ = 8						; size = 4
_paArray$ = 12						; size = 4
_iArraySize$ = 16					; size = 4
??$ReadHashedDataArray@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHH@Z PROC ; CvInfosSerializationHelper::ReadHashedDataArray<int>, COMDAT

; 248  : {

	sub	esp, 16					; 00000010H
	push	ebx
	push	edi

; 249  : 	uint uiNumEntries;
; 250  : 
; 251  : 	kStream >> uiNumEntries;

	mov	edi, DWORD PTR _kStream$[esp+20]
	lea	eax, DWORD PTR _uiNumEntries$[esp+24]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 252  : 
; 253  : 	for(uint iI = 0; iI < uiNumEntries; iI++)

	xor	ebx, ebx
	cmp	DWORD PTR _uiNumEntries$[esp+24], ebx
	jbe	SHORT $LN5@ReadHashed
	push	ebp
	mov	ebp, DWORD PTR _iArraySize$[esp+24]
	push	esi
$LL7@ReadHashed:

; 254  : 	{
; 255  : 		bool bValid;
; 256  : 		int iType = ReadHashed(kStream, &bValid);

	lea	ecx, DWORD PTR _bValid$226322[esp+32]
	push	ecx
	push	edi
	call	?ReadHashed@CvInfosSerializationHelper@@YAHAAVFDataStream@@PA_N@Z ; CvInfosSerializationHelper::ReadHashed
	mov	esi, eax
	add	esp, 8

; 257  : 		if(iType != -1)

	cmp	esi, -1
	je	SHORT $LN4@ReadHashed

; 258  : 		{
; 259  : 			TData tValue;
; 260  : 			kStream >> tValue;

	lea	edx, DWORD PTR _tValue$226325[esp+32]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 261  : 			if((int)iType < iArraySize)

	cmp	esi, ebp
	jge	SHORT $LN6@ReadHashed

; 262  : 				paArray[iType] = tValue;

	mov	eax, DWORD PTR _tValue$226325[esp+32]
	mov	ecx, DWORD PTR _paArray$[esp+28]
	mov	DWORD PTR [ecx+esi*4], eax

; 263  : 		}

	jmp	SHORT $LN6@ReadHashed
$LN4@ReadHashed:

; 264  : 		else if(!bValid)

	cmp	BYTE PTR _bValid$226322[esp+32], 0
	jne	SHORT $LN6@ReadHashed

; 265  : 		{
; 266  : 			TData tValue;
; 267  : 			kStream >> tValue;

	lea	edx, DWORD PTR _tValue$226330[esp+32]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
$LN6@ReadHashed:
	inc	ebx
	cmp	ebx, DWORD PTR _uiNumEntries$[esp+32]
	jb	SHORT $LL7@ReadHashed
	pop	esi
	pop	ebp
$LN5@ReadHashed:
	pop	edi
	pop	ebx

; 268  : 		}
; 269  : 	}
; 270  : }

	add	esp, 16					; 00000010H
	ret	0
??$ReadHashedDataArray@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHH@Z ENDP ; CvInfosSerializationHelper::ReadHashedDataArray<int>
_TEXT	ENDS
PUBLIC	??$?6H@@YAAAVFDataStream@@AAV0@ABV?$ArrayWrapper@H@@@Z ; operator<<<int>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ??$?6H@@YAAAVFDataStream@@AAV0@ABV?$ArrayWrapper@H@@@Z
_TEXT	SEGMENT
_saveTo$ = 8						; size = 4
_v$ = 12						; size = 4
??$?6H@@YAAAVFDataStream@@AAV0@ABV?$ArrayWrapper@H@@@Z PROC ; operator<<<int>, COMDAT

; 503  : 	int i = 0;
; 504  : 	int count = v.getCount();

	mov	eax, DWORD PTR _v$[esp-4]
	push	esi

; 505  : 	const ValueType * values = v.getArray();

	mov	esi, DWORD PTR [eax]
	push	edi
	mov	edi, DWORD PTR [eax+4]

; 506  : 	for(i = 0; i < count; ++i)

	test	edi, edi
	jle	SHORT $LN14@operator@7
	push	ebx
	mov	ebx, DWORD PTR _saveTo$[esp+8]
$LL3@operator@7:

; 507  : 	{
; 508  : 		saveTo << values[i];

	push	esi
	mov	ecx, ebx
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	add	esi, 4
	sub	edi, 1
	jne	SHORT $LL3@operator@7

; 509  : 	}
; 510  : 	return saveTo;

	mov	eax, ebx
	pop	ebx
	pop	edi
	pop	esi

; 511  : }

	ret	0
$LN14@operator@7:

; 509  : 	}
; 510  : 	return saveTo;

	mov	eax, DWORD PTR _saveTo$[esp+4]
	pop	edi
	pop	esi

; 511  : }

	ret	0
??$?6H@@YAAAVFDataStream@@AAV0@ABV?$ArrayWrapper@H@@@Z ENDP ; operator<<<int>
_TEXT	ENDS
PUBLIC	??$WriteHashedDataArray@W4TerrainTypes@@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHI@Z ; CvInfosSerializationHelper::WriteHashedDataArray<enum TerrainTypes,int>
EXTRN	?WriteHashed@CvInfosSerializationHelper@@YA_NAAVFDataStream@@W4TerrainTypes@@@Z:PROC ; CvInfosSerializationHelper::WriteHashed
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvinfosserializationhelper.h
;	COMDAT ??$WriteHashedDataArray@W4TerrainTypes@@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHI@Z
_TEXT	SEGMENT
_kStream$ = 8						; size = 4
_paArray$ = 12						; size = 4
_uiArraySize$ = 16					; size = 4
??$WriteHashedDataArray@W4TerrainTypes@@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHI@Z PROC ; CvInfosSerializationHelper::WriteHashedDataArray<enum TerrainTypes,int>, COMDAT

; 559  : {

	push	ebx

; 560  : 	kStream << uiArraySize;

	mov	ebx, DWORD PTR _kStream$[esp]
	push	esi
	lea	eax, DWORD PTR _uiArraySize$[esp+4]
	push	eax
	mov	ecx, ebx
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 561  : 
; 562  : 	for(uint iI = 0; iI < uiArraySize; iI++)

	xor	esi, esi
	cmp	DWORD PTR _uiArraySize$[esp+4], esi
	jbe	SHORT $LN2@WriteHashe
	push	edi
	mov	edi, DWORD PTR _paArray$[esp+8]
	npad	1
$LL4@WriteHashe:

; 563  : 	{
; 564  : 		const TType eType = static_cast<TType>(iI);
; 565  : 		if(WriteHashed(kStream, eType))

	push	esi
	push	ebx
	call	?WriteHashed@CvInfosSerializationHelper@@YA_NAAVFDataStream@@W4TerrainTypes@@@Z ; CvInfosSerializationHelper::WriteHashed
	add	esp, 8
	test	al, al
	je	SHORT $LN3@WriteHashe

; 566  : 		{
; 567  : 			kStream << paArray[iI];

	push	edi
	mov	ecx, ebx
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
$LN3@WriteHashe:
	inc	esi
	add	edi, 4
	cmp	esi, DWORD PTR _uiArraySize$[esp+8]
	jb	SHORT $LL4@WriteHashe
	pop	edi
$LN2@WriteHashe:
	pop	esi
	pop	ebx

; 568  : 		}
; 569  : 	}
; 570  : }

	ret	0
??$WriteHashedDataArray@W4TerrainTypes@@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHI@Z ENDP ; CvInfosSerializationHelper::WriteHashedDataArray<enum TerrainTypes,int>
_TEXT	ENDS
PUBLIC	??$WriteHashedDataArray@W4ResourceTypes@@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@ABV?$vector@HV?$allocator@H@std@@@std@@@Z ; CvInfosSerializationHelper::WriteHashedDataArray<enum ResourceTypes,int>
EXTRN	?WriteHashed@CvInfosSerializationHelper@@YA_NAAVFDataStream@@W4ResourceTypes@@@Z:PROC ; CvInfosSerializationHelper::WriteHashed
; Function compile flags: /Ogtpy
;	COMDAT ??$WriteHashedDataArray@W4ResourceTypes@@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@ABV?$vector@HV?$allocator@H@std@@@std@@@Z
_TEXT	SEGMENT
_kStream$ = 8						; size = 4
$T231659 = 12						; size = 4
_aArray$ = 12						; size = 4
??$WriteHashedDataArray@W4ResourceTypes@@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@ABV?$vector@HV?$allocator@H@std@@@std@@@Z PROC ; CvInfosSerializationHelper::WriteHashedDataArray<enum ResourceTypes,int>, COMDAT

; 591  : {

	push	ebx

; 592  : 	kStream << aArray.size();

	mov	ebx, DWORD PTR _kStream$[esp]
	push	esi
	mov	esi, DWORD PTR _aArray$[esp+4]
	mov	eax, DWORD PTR [esi+8]
	sub	eax, DWORD PTR [esi+4]
	push	edi
	lea	ecx, DWORD PTR $T231659[esp+8]
	sar	eax, 2
	push	ecx
	mov	ecx, ebx
	mov	DWORD PTR $T231659[esp+12], eax
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 593  : 
; 594  : 	for(uint iI = 0; iI < aArray.size(); iI++)

	mov	edx, DWORD PTR [esi+8]
	sub	edx, DWORD PTR [esi+4]
	xor	edi, edi
	sar	edx, 2
	test	edx, edx
	jbe	SHORT $LN2@WriteHashe@2
$LL4@WriteHashe@2:

; 595  : 	{
; 596  : 		const TType eType = static_cast<TType>(iI);
; 597  : 		if(WriteHashed(kStream, eType))

	push	edi
	push	ebx
	call	?WriteHashed@CvInfosSerializationHelper@@YA_NAAVFDataStream@@W4ResourceTypes@@@Z ; CvInfosSerializationHelper::WriteHashed
	add	esp, 8
	test	al, al
	je	SHORT $LN3@WriteHashe@2
	mov	eax, DWORD PTR [esi+4]
	lea	ecx, DWORD PTR [eax+edi*4]

; 598  : 		{
; 599  : 			kStream << aArray[iI];

	push	ecx
	mov	ecx, ebx
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
$LN3@WriteHashe@2:
	mov	edx, DWORD PTR [esi+8]
	sub	edx, DWORD PTR [esi+4]
	inc	edi
	sar	edx, 2
	cmp	edi, edx
	jb	SHORT $LL4@WriteHashe@2
$LN2@WriteHashe@2:
	pop	edi
	pop	esi
	pop	ebx

; 600  : 		}
; 601  : 	}
; 602  : }

	ret	0
??$WriteHashedDataArray@W4ResourceTypes@@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@ABV?$vector@HV?$allocator@H@std@@@std@@@Z ENDP ; CvInfosSerializationHelper::WriteHashedDataArray<enum ResourceTypes,int>
_TEXT	ENDS
PUBLIC	??$_Swap_adl@U?$less@H@std@@@std@@YAXAAU?$less@H@0@0@Z ; std::_Swap_adl<std::less<int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
;	COMDAT ??$_Swap_adl@U?$less@H@std@@@std@@YAXAAU?$less@H@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Swap_adl@U?$less@H@std@@@std@@YAXAAU?$less@H@0@0@Z PROC ; std::_Swap_adl<std::less<int> >, COMDAT

; 31   : 	swap(_Left, _Right);
; 32   : 	}

	ret	0
??$_Swap_adl@U?$less@H@std@@@std@@YAXAAU?$less@H@0@0@Z ENDP ; std::_Swap_adl<std::less<int> >
_TEXT	ENDS
PUBLIC	??$unchecked_copy@PAUFreeResourceXCities@@PAU1@@stdext@@YAPAUFreeResourceXCities@@PAU1@00@Z ; stdext::unchecked_copy<FreeResourceXCities *,FreeResourceXCities *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$unchecked_copy@PAUFreeResourceXCities@@PAU1@@stdext@@YAPAUFreeResourceXCities@@PAU1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAUFreeResourceXCities@@PAU1@@stdext@@YAPAUFreeResourceXCities@@PAU1@00@Z PROC ; stdext::unchecked_copy<FreeResourceXCities *,FreeResourceXCities *>, COMDAT

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN7@unchecked_
	push	esi
$LL9@unchecked_:
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	add	ecx, 8
	add	eax, 8
	cmp	ecx, edx
	jne	SHORT $LL9@unchecked_
	pop	esi
$LN7@unchecked_:

; 3607 : 	}

	ret	0
??$unchecked_copy@PAUFreeResourceXCities@@PAU1@@stdext@@YAPAUFreeResourceXCities@@PAU1@00@Z ENDP ; stdext::unchecked_copy<FreeResourceXCities *,FreeResourceXCities *>
_TEXT	ENDS
PUBLIC	??$unchecked_copy@PAPAVCvTraitEntry@@PAPAV1@@stdext@@YAPAPAVCvTraitEntry@@PAPAV1@00@Z ; stdext::unchecked_copy<CvTraitEntry * *,CvTraitEntry * *>
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_copy@PAPAVCvTraitEntry@@PAPAV1@@stdext@@YAPAPAVCvTraitEntry@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAPAVCvTraitEntry@@PAPAV1@@stdext@@YAPAPAVCvTraitEntry@@PAPAV1@00@Z PROC ; stdext::unchecked_copy<CvTraitEntry * *,CvTraitEntry * *>, COMDAT

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]
	test	eax, eax
	jle	SHORT $LN10@unchecked_@2
	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN10@unchecked_@2:
	pop	edi
	mov	eax, esi
	pop	esi

; 3607 : 	}

	ret	0
??$unchecked_copy@PAPAVCvTraitEntry@@PAPAV1@@stdext@@YAPAPAVCvTraitEntry@@PAPAV1@00@Z ENDP ; stdext::unchecked_copy<CvTraitEntry * *,CvTraitEntry * *>
_TEXT	ENDS
PUBLIC	??$unchecked_copy@PAW4TraitTypes@@PAW41@@stdext@@YAPAW4TraitTypes@@PAW41@00@Z ; stdext::unchecked_copy<enum TraitTypes *,enum TraitTypes *>
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_copy@PAW4TraitTypes@@PAW41@@stdext@@YAPAW4TraitTypes@@PAW41@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAW4TraitTypes@@PAW41@@stdext@@YAPAW4TraitTypes@@PAW41@00@Z PROC ; stdext::unchecked_copy<enum TraitTypes *,enum TraitTypes *>, COMDAT

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN7@unchecked_@3
	push	esi
$LL9@unchecked_@3:
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	add	ecx, 4
	add	eax, 4
	cmp	ecx, edx
	jne	SHORT $LL9@unchecked_@3
	pop	esi
$LN7@unchecked_@3:

; 3607 : 	}

	ret	0
??$unchecked_copy@PAW4TraitTypes@@PAW41@@stdext@@YAPAW4TraitTypes@@PAW41@00@Z ENDP ; stdext::unchecked_copy<enum TraitTypes *,enum TraitTypes *>
_TEXT	ENDS
PUBLIC	??$unchecked_copy@PAUMayaBonusChoice@@PAU1@@stdext@@YAPAUMayaBonusChoice@@PAU1@00@Z ; stdext::unchecked_copy<MayaBonusChoice *,MayaBonusChoice *>
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_copy@PAUMayaBonusChoice@@PAU1@@stdext@@YAPAUMayaBonusChoice@@PAU1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAUMayaBonusChoice@@PAU1@@stdext@@YAPAUMayaBonusChoice@@PAU1@00@Z PROC ; stdext::unchecked_copy<MayaBonusChoice *,MayaBonusChoice *>, COMDAT

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN7@unchecked_@4
	push	esi
$LL9@unchecked_@4:
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	add	ecx, 8
	add	eax, 8
	cmp	ecx, edx
	jne	SHORT $LL9@unchecked_@4
	pop	esi
$LN7@unchecked_@4:

; 3607 : 	}

	ret	0
??$unchecked_copy@PAUMayaBonusChoice@@PAU1@@stdext@@YAPAUMayaBonusChoice@@PAU1@00@Z ENDP ; stdext::unchecked_copy<MayaBonusChoice *,MayaBonusChoice *>
_TEXT	ENDS
PUBLIC	??$fill@PAUFreeResourceXCities@@U1@@std@@YAXPAUFreeResourceXCities@@0ABU1@@Z ; std::fill<FreeResourceXCities *,FreeResourceXCities>
; Function compile flags: /Ogtpy
;	COMDAT ??$fill@PAUFreeResourceXCities@@U1@@std@@YAXPAUFreeResourceXCities@@0ABU1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAUFreeResourceXCities@@U1@@std@@YAXPAUFreeResourceXCities@@0ABU1@@Z PROC ; std::fill<FreeResourceXCities *,FreeResourceXCities>, COMDAT

; 3187 : 	_Fill(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val);

	mov	eax, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	cmp	eax, edx
	je	SHORT $LN3@fill
	mov	ecx, DWORD PTR __Val$[esp-4]
	push	esi
$LL5@fill:
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	add	eax, 8
	cmp	eax, edx
	jne	SHORT $LL5@fill
	pop	esi
$LN3@fill:

; 3188 : 	}

	ret	0
??$fill@PAUFreeResourceXCities@@U1@@std@@YAXPAUFreeResourceXCities@@0ABU1@@Z ENDP ; std::fill<FreeResourceXCities *,FreeResourceXCities>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVCvTraitEntry@@@std@@@std@@YAXPAPAVCvTraitEntry@@0AAV?$allocator@PAVCvTraitEntry@@@0@@Z ; std::_Destroy_range<std::allocator<CvTraitEntry *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCvTraitEntry@@@std@@@std@@YAXPAPAVCvTraitEntry@@0AAV?$allocator@PAVCvTraitEntry@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCvTraitEntry@@@std@@@std@@YAXPAPAVCvTraitEntry@@0AAV?$allocator@PAVCvTraitEntry@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CvTraitEntry *> >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@PAVCvTraitEntry@@@std@@@std@@YAXPAPAVCvTraitEntry@@0AAV?$allocator@PAVCvTraitEntry@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CvTraitEntry *> >
_TEXT	ENDS
PUBLIC	??$fill@PAW4TraitTypes@@W41@@std@@YAXPAW4TraitTypes@@0ABW41@@Z ; std::fill<enum TraitTypes *,enum TraitTypes>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$fill@PAW4TraitTypes@@W41@@std@@YAXPAW4TraitTypes@@0ABW41@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAW4TraitTypes@@W41@@std@@YAXPAW4TraitTypes@@0ABW41@@Z PROC ; std::fill<enum TraitTypes *,enum TraitTypes>, COMDAT

; 3187 : 	_Fill(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val);

	mov	eax, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN3@fill@2
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL5@fill@2:
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	add	eax, 4
	cmp	eax, ecx
	jne	SHORT $LL5@fill@2
	pop	esi
$LN3@fill@2:

; 3188 : 	}

	ret	0
??$fill@PAW4TraitTypes@@W41@@std@@YAXPAW4TraitTypes@@0ABW41@@Z ENDP ; std::fill<enum TraitTypes *,enum TraitTypes>
_TEXT	ENDS
PUBLIC	??$fill@PAUMayaBonusChoice@@U1@@std@@YAXPAUMayaBonusChoice@@0ABU1@@Z ; std::fill<MayaBonusChoice *,MayaBonusChoice>
; Function compile flags: /Ogtpy
;	COMDAT ??$fill@PAUMayaBonusChoice@@U1@@std@@YAXPAUMayaBonusChoice@@0ABU1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAUMayaBonusChoice@@U1@@std@@YAXPAUMayaBonusChoice@@0ABU1@@Z PROC ; std::fill<MayaBonusChoice *,MayaBonusChoice>, COMDAT

; 3187 : 	_Fill(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val);

	mov	eax, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	cmp	eax, edx
	je	SHORT $LN3@fill@3
	mov	ecx, DWORD PTR __Val$[esp-4]
	push	esi
$LL5@fill@3:
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	add	eax, 8
	cmp	eax, edx
	jne	SHORT $LL5@fill@3
	pop	esi
$LN3@fill@3:

; 3188 : 	}

	ret	0
??$fill@PAUMayaBonusChoice@@U1@@std@@YAXPAUMayaBonusChoice@@0ABU1@@Z ENDP ; std::fill<MayaBonusChoice *,MayaBonusChoice>
_TEXT	ENDS
PUBLIC	??$_Move_backward_opt@PAUFreeResourceXCities@@PAU1@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAUFreeResourceXCities@@PAU1@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<FreeResourceXCities *,FreeResourceXCities *,std::random_access_iterator_tag,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_backward_opt@PAUFreeResourceXCities@@PAU1@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAUFreeResourceXCities@@PAU1@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__First_dest_cat$ = 20					; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Move_backward_opt@PAUFreeResourceXCities@@PAU1@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAUFreeResourceXCities@@PAU1@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<FreeResourceXCities *,FreeResourceXCities *,std::random_access_iterator_tag,std::_Undefined_move_tag>, COMDAT

; 2753 : 	return _Copy_backward_opt(_First, _Last, _Dest,
; 2754 : 		_First_dest_cat, _Ptr_cat(_First, _Dest), _Range_checked_iterator_tag());

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN5@Move_backw
	push	esi
$LL6@Move_backw:
	mov	esi, DWORD PTR [ecx-8]
	sub	ecx, 8
	sub	eax, 8
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	cmp	ecx, edx
	jne	SHORT $LL6@Move_backw
	pop	esi
$LN5@Move_backw:

; 2755 : 	}

	ret	0
??$_Move_backward_opt@PAUFreeResourceXCities@@PAU1@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAUFreeResourceXCities@@PAU1@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<FreeResourceXCities *,FreeResourceXCities *,std::random_access_iterator_tag,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$_Move_backward_opt@PAW4TraitTypes@@PAW41@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAW4TraitTypes@@PAW41@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<enum TraitTypes *,enum TraitTypes *,std::random_access_iterator_tag,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_backward_opt@PAW4TraitTypes@@PAW41@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAW4TraitTypes@@PAW41@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__First_dest_cat$ = 20					; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Move_backward_opt@PAW4TraitTypes@@PAW41@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAW4TraitTypes@@PAW41@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<enum TraitTypes *,enum TraitTypes *,std::random_access_iterator_tag,std::_Undefined_move_tag>, COMDAT

; 2753 : 	return _Copy_backward_opt(_First, _Last, _Dest,
; 2754 : 		_First_dest_cat, _Ptr_cat(_First, _Dest), _Range_checked_iterator_tag());

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN5@Move_backw@2
	push	esi
$LL6@Move_backw@2:
	mov	esi, DWORD PTR [ecx-4]
	sub	ecx, 4
	sub	eax, 4
	mov	DWORD PTR [eax], esi
	cmp	ecx, edx
	jne	SHORT $LL6@Move_backw@2
	pop	esi
$LN5@Move_backw@2:

; 2755 : 	}

	ret	0
??$_Move_backward_opt@PAW4TraitTypes@@PAW41@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAW4TraitTypes@@PAW41@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<enum TraitTypes *,enum TraitTypes *,std::random_access_iterator_tag,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$_Move_backward_opt@PAUMayaBonusChoice@@PAU1@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAUMayaBonusChoice@@PAU1@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<MayaBonusChoice *,MayaBonusChoice *,std::random_access_iterator_tag,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_backward_opt@PAUMayaBonusChoice@@PAU1@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAUMayaBonusChoice@@PAU1@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__First_dest_cat$ = 20					; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Move_backward_opt@PAUMayaBonusChoice@@PAU1@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAUMayaBonusChoice@@PAU1@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<MayaBonusChoice *,MayaBonusChoice *,std::random_access_iterator_tag,std::_Undefined_move_tag>, COMDAT

; 2753 : 	return _Copy_backward_opt(_First, _Last, _Dest,
; 2754 : 		_First_dest_cat, _Ptr_cat(_First, _Dest), _Range_checked_iterator_tag());

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN5@Move_backw@3
	push	esi
$LL6@Move_backw@3:
	mov	esi, DWORD PTR [ecx-8]
	sub	ecx, 8
	sub	eax, 8
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	cmp	ecx, edx
	jne	SHORT $LL6@Move_backw@3
	pop	esi
$LN5@Move_backw@3:

; 2755 : 	}

	ret	0
??$_Move_backward_opt@PAUMayaBonusChoice@@PAU1@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAUMayaBonusChoice@@PAU1@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<MayaBonusChoice *,MayaBonusChoice *,std::random_access_iterator_tag,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UFreeResourceXCities@@@std@@QAEXPAUFreeResourceXCities@@ABU3@@Z ; std::allocator<FreeResourceXCities>::construct
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?construct@?$allocator@UFreeResourceXCities@@@std@@QAEXPAUFreeResourceXCities@@ABU3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UFreeResourceXCities@@@std@@QAEXPAUFreeResourceXCities@@ABU3@@Z PROC ; std::allocator<FreeResourceXCities>::construct, COMDAT
; _this$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN5@construct@2
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
$LN5@construct@2:

; 156  : 		}

	ret	8
?construct@?$allocator@UFreeResourceXCities@@@std@@QAEXPAUFreeResourceXCities@@ABU3@@Z ENDP ; std::allocator<FreeResourceXCities>::construct
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@UFreeResourceXCities@@@std@@QAEXPAUFreeResourceXCities@@@Z ; std::allocator<FreeResourceXCities>::destroy
; Function compile flags: /Ogtpy
;	COMDAT ?destroy@?$allocator@UFreeResourceXCities@@@std@@QAEXPAUFreeResourceXCities@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@UFreeResourceXCities@@@std@@QAEXPAUFreeResourceXCities@@@Z PROC ; std::allocator<FreeResourceXCities>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@UFreeResourceXCities@@@std@@QAEXPAUFreeResourceXCities@@@Z ENDP ; std::allocator<FreeResourceXCities>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@UMayaBonusChoice@@@std@@QAEXPAUMayaBonusChoice@@@Z ; std::allocator<MayaBonusChoice>::destroy
; Function compile flags: /Ogtpy
;	COMDAT ?destroy@?$allocator@UMayaBonusChoice@@@std@@QAEXPAUMayaBonusChoice@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@UMayaBonusChoice@@@std@@QAEXPAUMayaBonusChoice@@@Z PROC ; std::allocator<MayaBonusChoice>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@UMayaBonusChoice@@@std@@QAEXPAUMayaBonusChoice@@@Z ENDP ; std::allocator<MayaBonusChoice>::destroy
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@HV?$allocator@H@std@@@std@@QBEAAHXZ ; std::_Vector_iterator<int,std::allocator<int> >::operator*
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@HV?$allocator@H@std@@@std@@QBEAAHXZ
_TEXT	SEGMENT
??D?$_Vector_iterator@HV?$allocator@H@std@@@std@@QBEAAHXZ PROC ; std::_Vector_iterator<int,std::allocator<int> >::operator*, COMDAT
; _this$ = ecx

; 339  : 		return ((reference)**(_Mybase *)this);

	mov	eax, DWORD PTR [ecx]

; 340  : 		}

	ret	0
??D?$_Vector_iterator@HV?$allocator@H@std@@@std@@QBEAAHXZ ENDP ; std::_Vector_iterator<int,std::allocator<int> >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<int,std::allocator<int> >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<int,std::allocator<int> >::operator++, COMDAT
; _this$ = ecx

; 348  : 		{	// preincrement

	mov	eax, ecx

; 349  : 		++(*(_Mybase *)this);

	add	DWORD PTR [eax], 4

; 350  : 		return (*this);
; 351  : 		}

	ret	0
??E?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<int,std::allocator<int> >::operator++
_TEXT	ENDS
PUBLIC	??$_Construct@UMayaBonusChoice@@U1@@std@@YAXPAUMayaBonusChoice@@ABU1@@Z ; std::_Construct<MayaBonusChoice,MayaBonusChoice>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Construct@UMayaBonusChoice@@U1@@std@@YAXPAUMayaBonusChoice@@ABU1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@UMayaBonusChoice@@U1@@std@@YAXPAUMayaBonusChoice@@ABU1@@Z PROC ; std::_Construct<MayaBonusChoice,MayaBonusChoice>, COMDAT

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN3@Construct@5
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
$LN3@Construct@5:

; 53   : 	}

	ret	0
??$_Construct@UMayaBonusChoice@@U1@@std@@YAXPAUMayaBonusChoice@@ABU1@@Z ENDP ; std::_Construct<MayaBonusChoice,MayaBonusChoice>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAUFreeResourceXCities@@PAU1@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAPAUFreeResourceXCities@@PAU1@00AAV?$allocator@UFreeResourceXCities@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<FreeResourceXCities *,FreeResourceXCities *,std::allocator<FreeResourceXCities> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Uninit_copy@PAUFreeResourceXCities@@PAU1@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAPAUFreeResourceXCities@@PAU1@00AAV?$allocator@UFreeResourceXCities@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAUFreeResourceXCities@@PAU1@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAPAUFreeResourceXCities@@PAU1@00AAV?$allocator@UFreeResourceXCities@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<FreeResourceXCities *,FreeResourceXCities *,std::allocator<FreeResourceXCities> >, COMDAT

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;
; 128  : 
; 129  : 	_TRY_BEGIN
; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN4@Uninit_cop@3
	push	esi
$LL6@Uninit_cop@3:

; 131  : 		_Al.construct(_Dest, *_First);

	test	eax, eax
	je	SHORT $LN5@Uninit_cop@3
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
$LN5@Uninit_cop@3:
	add	ecx, 8
	add	eax, 8
	cmp	ecx, edx
	jne	SHORT $LL6@Uninit_cop@3
	pop	esi
$LN4@Uninit_cop@3:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)
; 134  : 		_Al.destroy(_Next);
; 135  : 	_RERAISE;
; 136  : 	_CATCH_END
; 137  : 	return (_Dest);
; 138  : 	}

	ret	0
??$_Uninit_copy@PAUFreeResourceXCities@@PAU1@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAPAUFreeResourceXCities@@PAU1@00AAV?$allocator@UFreeResourceXCities@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<FreeResourceXCities *,FreeResourceXCities *,std::allocator<FreeResourceXCities> >
_TEXT	ENDS
PUBLIC	?getX@CvUnit@@QBEHXZ				; CvUnit::getX
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvunit.h
;	COMDAT ?getX@CvUnit@@QBEHXZ
_TEXT	SEGMENT
?getX@CvUnit@@QBEHXZ PROC				; CvUnit::getX, COMDAT
; _this$ = ecx

; 673  : 		return m_iX.get();

	mov	eax, DWORD PTR [ecx+76]

; 674  : 	}

	ret	0
?getX@CvUnit@@QBEHXZ ENDP				; CvUnit::getX
_TEXT	ENDS
PUBLIC	?getY@CvUnit@@QBEHXZ				; CvUnit::getY
; Function compile flags: /Ogtpy
;	COMDAT ?getY@CvUnit@@QBEHXZ
_TEXT	SEGMENT
?getY@CvUnit@@QBEHXZ PROC				; CvUnit::getY, COMDAT
; _this$ = ecx

; 678  : 		return m_iY.get();

	mov	eax, DWORD PTR [ecx+88]

; 679  : 	}

	ret	0
?getY@CvUnit@@QBEHXZ ENDP				; CvUnit::getY
_TEXT	ENDS
EXTRN	?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B:DWORD ; CvPreGame::sr_TeamTypes
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvpregame.h
;	COMDAT ?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z PROC ; CvPreGame::teamType, COMDAT
; _p$ = eax

; 299  : 	if(p >= 0 && p < MAX_PLAYERS)

	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN1@teamType

; 300  : 		return sr_TeamTypes[p];

	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]

; 302  : }

	ret	0
$LN1@teamType:

; 301  : 	return NO_TEAM;

	or	eax, -1

; 302  : }

	ret	0
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ENDP ; CvPreGame::teamType
_TEXT	ENDS
PUBLIC	?isAlive@CvPlayer@@QBE_NXZ			; CvPlayer::isAlive
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplayer.h
;	COMDAT ?isAlive@CvPlayer@@QBE_NXZ
_TEXT	SEGMENT
?isAlive@CvPlayer@@QBE_NXZ PROC				; CvPlayer::isAlive, COMDAT
; _this$ = ecx

; 1096 : 		return m_bAlive;

	mov	al, BYTE PTR [ecx+2256]

; 1097 : 	}

	ret	0
?isAlive@CvPlayer@@QBE_NXZ ENDP				; CvPlayer::isAlive
_TEXT	ENDS
PUBLIC	?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ		; CvPlayer::GetID
; Function compile flags: /Ogtpy
;	COMDAT ?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ PROC		; CvPlayer::GetID, COMDAT
; _this$ = ecx

; 1172 : 		return m_eID;

	mov	eax, DWORD PTR [ecx+44]

; 1173 : 	}

	ret	0
?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ ENDP		; CvPlayer::GetID
_TEXT	ENDS
PUBLIC	?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ		; CvPlayer::getTeam
; Function compile flags: /Ogtpy
;	COMDAT ?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ
_TEXT	SEGMENT
?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ PROC		; CvPlayer::getTeam, COMDAT
; _this$ = ecx

; 1182 : 		return CvPreGame::teamType(m_eID);

	mov	eax, DWORD PTR [ecx+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN5@getTeam
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]

; 1183 : 	}

	ret	0

; 1182 : 		return CvPreGame::teamType(m_eID);

$LN5@getTeam:
	or	eax, -1

; 1183 : 	}

	ret	0
?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ ENDP		; CvPlayer::getTeam
_TEXT	ENDS
PUBLIC	?isPlot@CvMap@@QBEHHH@Z				; CvMap::isPlot
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
;	COMDAT ?isPlot@CvMap@@QBEHHH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?isPlot@CvMap@@QBEHHH@Z PROC				; CvMap::isPlot, COMDAT
; _this$ = ecx

; 157  : #ifdef AUI_WARNING_FIXES
; 158  : 		return ((iX >= 0) && (uint(iX) < getGridWidth()) && (iY >= 0) && (uint(iY) < getGridHeight()));
; 159  : #else
; 160  : 		return ((iX >= 0) && (iX < getGridWidth()) && (iY >= 0) && (iY < getGridHeight()));

	mov	eax, DWORD PTR _iX$[esp-4]
	test	eax, eax
	jl	SHORT $LN3@isPlot
	cmp	eax, DWORD PTR [ecx+4020]
	jge	SHORT $LN3@isPlot
	mov	eax, DWORD PTR _iY$[esp-4]
	test	eax, eax
	jl	SHORT $LN3@isPlot
	cmp	eax, DWORD PTR [ecx+4024]
	jge	SHORT $LN3@isPlot
	mov	eax, 1

; 161  : #endif
; 162  : 	}

	ret	8
$LN3@isPlot:

; 157  : #ifdef AUI_WARNING_FIXES
; 158  : 		return ((iX >= 0) && (uint(iX) < getGridWidth()) && (iY >= 0) && (uint(iY) < getGridHeight()));
; 159  : #else
; 160  : 		return ((iX >= 0) && (iX < getGridWidth()) && (iY >= 0) && (iY < getGridHeight()));

	xor	eax, eax

; 161  : #endif
; 162  : 	}

	ret	8
?isPlot@CvMap@@QBEHHH@Z ENDP				; CvMap::isPlot
_TEXT	ENDS
PUBLIC	?plotNum@CvMap@@QBEHHH@Z			; CvMap::plotNum
; Function compile flags: /Ogtpy
;	COMDAT ?plotNum@CvMap@@QBEHHH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?plotNum@CvMap@@QBEHHH@Z PROC				; CvMap::plotNum, COMDAT
; _this$ = ecx

; 183  : 		return ((iY * getGridWidth()) + iX);

	mov	eax, DWORD PTR [ecx+4020]
	imul	eax, DWORD PTR _iY$[esp-4]
	add	eax, DWORD PTR _iX$[esp-4]

; 184  : #endif
; 185  : 	}

	ret	8
?plotNum@CvMap@@QBEHHH@Z ENDP				; CvMap::plotNum
_TEXT	ENDS
PUBLIC	?plot@CvMap@@QBEPAVCvPlot@@HH@Z			; CvMap::plot
; Function compile flags: /Ogtpy
;	COMDAT ?plot@CvMap@@QBEPAVCvPlot@@HH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?plot@CvMap@@QBEPAVCvPlot@@HH@Z PROC			; CvMap::plot, COMDAT
; _this$ = ecx

; 273  : 		if((iX == INVALID_PLOT_COORD) || (iY == INVALID_PLOT_COORD))

	mov	eax, DWORD PTR _iX$[esp-4]
	push	ebp
	cmp	eax, -2147483647			; 80000001H
	je	$LN1@plot
	mov	ebp, DWORD PTR _iY$[esp]
	cmp	ebp, -2147483647			; 80000001H
	je	$LN1@plot

; 276  : 		}
; 277  : 		int iMapX = coordRange(iX, getGridWidth(), isWrapX());

	cmp	BYTE PTR [ecx+4056], 0
	push	ebx
	push	esi
	mov	esi, DWORD PTR [ecx+4020]
	push	edi
	je	SHORT $LN11@plot
	test	eax, eax
	jge	SHORT $LN13@plot
	cdq
	idiv	esi
	mov	edi, edx
	add	edi, esi
	jmp	SHORT $LN15@plot
$LN13@plot:
	cmp	eax, esi
	jl	SHORT $LN11@plot
	cdq
	idiv	esi
	mov	edi, edx
	jmp	SHORT $LN15@plot
$LN11@plot:
	mov	edi, eax
$LN15@plot:

; 278  : 		int iMapY = coordRange(iY, getGridHeight(), isWrapY());

	cmp	BYTE PTR [ecx+4057], 0
	mov	ebx, DWORD PTR [ecx+4024]
	je	SHORT $LN40@plot
	test	ebp, ebp
	jge	SHORT $LN23@plot
	mov	eax, ebp
	cdq
	idiv	ebx
	add	edx, ebx
	jmp	SHORT $LN25@plot
$LN23@plot:
	cmp	ebp, ebx
	jl	SHORT $LN40@plot
	mov	eax, ebp
	cdq
	idiv	ebx
	jmp	SHORT $LN25@plot
$LN40@plot:
	mov	edx, ebp
$LN25@plot:

; 279  : 		return ((isPlot(iMapX, iMapY)) ? &(m_pMapPlots[plotNum(iMapX, iMapY)]) : NULL);

	test	edi, edi
	jl	SHORT $LN5@plot
	cmp	edi, esi
	jge	SHORT $LN5@plot
	test	edx, edx
	jl	SHORT $LN5@plot
	cmp	edx, ebx
	jge	SHORT $LN5@plot
	imul	esi, edx
	add	esi, edi
	imul	esi, 484				; 000001e4H
	add	esi, DWORD PTR [ecx+4068]
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	pop	ebp

; 280  : 	}

	ret	8
$LN5@plot:
	pop	edi
	pop	esi
	pop	ebx

; 279  : 		return ((isPlot(iMapX, iMapY)) ? &(m_pMapPlots[plotNum(iMapX, iMapY)]) : NULL);

	xor	eax, eax
	pop	ebp

; 280  : 	}

	ret	8
$LN1@plot:

; 274  : 		{
; 275  : 			return NULL;

	xor	eax, eax
	pop	ebp

; 280  : 	}

	ret	8
?plot@CvMap@@QBEPAVCvPlot@@HH@Z ENDP			; CvMap::plot
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ ; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE@XZ ; std::_Vector_val<enum TraitTypes,std::allocator<enum TraitTypes> >::~_Vector_val<enum TraitTypes,std::allocator<enum TraitTypes> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<enum TraitTypes,std::allocator<enum TraitTypes> >::~_Vector_val<enum TraitTypes,std::allocator<enum TraitTypes> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<enum TraitTypes,std::allocator<enum TraitTypes> >::~_Vector_val<enum TraitTypes,std::allocator<enum TraitTypes> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@HV?$allocator@H@std@@@std@@IAE@V?$allocator@H@1@@Z ; std::_Vector_val<int,std::allocator<int> >::_Vector_val<int,std::allocator<int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@HV?$allocator@H@std@@@std@@IAE@V?$allocator@H@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@HV?$allocator@H@std@@@std@@IAE@V?$allocator@H@1@@Z PROC ; std::_Vector_val<int,std::allocator<int> >::_Vector_val<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 425  : 		{	// construct allocator from _Al

	mov	eax, ecx

; 426  : 		}

	ret	4
??0?$_Vector_val@HV?$allocator@H@std@@@std@@IAE@V?$allocator@H@1@@Z ENDP ; std::_Vector_val<int,std::allocator<int> >::_Vector_val<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAE@V?$allocator@W4TraitTypes@@@1@@Z ; std::_Vector_val<enum TraitTypes,std::allocator<enum TraitTypes> >::_Vector_val<enum TraitTypes,std::allocator<enum TraitTypes> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_val@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAE@V?$allocator@W4TraitTypes@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAE@V?$allocator@W4TraitTypes@@@1@@Z PROC ; std::_Vector_val<enum TraitTypes,std::allocator<enum TraitTypes> >::_Vector_val<enum TraitTypes,std::allocator<enum TraitTypes> >, COMDAT
; _this$ = ecx

; 425  : 		{	// construct allocator from _Al

	mov	eax, ecx

; 426  : 		}

	ret	4
??0?$_Vector_val@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAE@V?$allocator@W4TraitTypes@@@1@@Z ENDP ; std::_Vector_val<enum TraitTypes,std::allocator<enum TraitTypes> >::_Vector_val<enum TraitTypes,std::allocator<enum TraitTypes> >
_TEXT	ENDS
PUBLIC	?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC ; std::vector<int,std::allocator<int> >::max_size, COMDAT
; _this$ = ecx

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 1073741823				; 3fffffffH

; 732  : 		}

	ret	0
?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP ; std::vector<int,std::allocator<int> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@H@std@@QAEPAHI@Z		; std::allocator<int>::allocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@H@std@@QAEPAHI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@H@std@@QAEPAHI@Z PROC		; std::allocator<int>::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@H@std@@YAPAHIPAH@Z		; std::_Allocate<int>
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@H@std@@QAEPAHI@Z ENDP		; std::allocator<int>::allocate
_TEXT	ENDS
PUBLIC	?max_size@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBEIXZ ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?max_size@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBEIXZ PROC ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::max_size, COMDAT
; _this$ = ecx

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 1073741823				; 3fffffffH

; 732  : 		}

	ret	0
?max_size@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBEIXZ ENDP ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@W4TraitTypes@@@std@@QAEPAW4TraitTypes@@I@Z ; std::allocator<enum TraitTypes>::allocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@W4TraitTypes@@@std@@QAEPAW4TraitTypes@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@W4TraitTypes@@@std@@QAEPAW4TraitTypes@@I@Z PROC ; std::allocator<enum TraitTypes>::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@W4TraitTypes@@@std@@YAPAW4TraitTypes@@IPAW41@@Z ; std::_Allocate<enum TraitTypes>
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@W4TraitTypes@@@std@@QAEPAW4TraitTypes@@I@Z ENDP ; std::allocator<enum TraitTypes>::allocate
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z PROC ; std::_Destroy_range<std::allocator<int> >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z ENDP ; std::_Destroy_range<std::allocator<int> >
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@XZ ; std::_Vector_val<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::~_Vector_val<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::~_Vector_val<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::~_Vector_val<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAE@V?$allocator@V?$Array@H$05@Firaxis@@@1@@Z ; std::_Vector_val<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Vector_val<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAE@V?$allocator@V?$Array@H$05@Firaxis@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAE@V?$allocator@V?$Array@H$05@Firaxis@@@1@@Z PROC ; std::_Vector_val<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Vector_val<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >, COMDAT
; _this$ = ecx

; 425  : 		{	// construct allocator from _Al

	mov	eax, ecx

; 426  : 		}

	ret	4
??0?$_Vector_val@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAE@V?$allocator@V?$Array@H$05@Firaxis@@@1@@Z ENDP ; std::_Vector_val<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Vector_val<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@IV?$allocator@I@std@@@std@@QAE@XZ ; std::_Vector_val<unsigned int,std::allocator<unsigned int> >::~_Vector_val<unsigned int,std::allocator<unsigned int> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@IV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@IV?$allocator@I@std@@@std@@QAE@XZ PROC	; std::_Vector_val<unsigned int,std::allocator<unsigned int> >::~_Vector_val<unsigned int,std::allocator<unsigned int> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@IV?$allocator@I@std@@@std@@QAE@XZ ENDP	; std::_Vector_val<unsigned int,std::allocator<unsigned int> >::~_Vector_val<unsigned int,std::allocator<unsigned int> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z ; std::_Vector_val<unsigned int,std::allocator<unsigned int> >::_Vector_val<unsigned int,std::allocator<unsigned int> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_val@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z PROC ; std::_Vector_val<unsigned int,std::allocator<unsigned int> >::_Vector_val<unsigned int,std::allocator<unsigned int> >, COMDAT
; _this$ = ecx

; 425  : 		{	// construct allocator from _Al

	mov	eax, ecx

; 426  : 		}

	ret	4
??0?$_Vector_val@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z ENDP ; std::_Vector_val<unsigned int,std::allocator<unsigned int> >::_Vector_val<unsigned int,std::allocator<unsigned int> >
_TEXT	ENDS
PUBLIC	?max_size@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEIXZ ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEIXZ PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::max_size, COMDAT
; _this$ = ecx

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 178956970				; 0aaaaaaaH

; 732  : 		}

	ret	0
?max_size@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBEIXZ ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@V?$Array@H$05@Firaxis@@@std@@QAEPAV?$Array@H$05@Firaxis@@I@Z ; std::allocator<Firaxis::Array<int,6> >::allocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@V?$Array@H$05@Firaxis@@@std@@QAEPAV?$Array@H$05@Firaxis@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$Array@H$05@Firaxis@@@std@@QAEPAV?$Array@H$05@Firaxis@@I@Z PROC ; std::allocator<Firaxis::Array<int,6> >::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@V?$Array@H$05@Firaxis@@@std@@YAPAV?$Array@H$05@Firaxis@@IPAV12@@Z ; std::_Allocate<Firaxis::Array<int,6> >
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@V?$Array@H$05@Firaxis@@@std@@QAEPAV?$Array@H$05@Firaxis@@I@Z ENDP ; std::allocator<Firaxis::Array<int,6> >::allocate
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z ; std::_Vector_iterator<int,std::allocator<int> >::_Vector_iterator<int,std::allocator<int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z PROC ; std::_Vector_iterator<int,std::allocator<int> >::_Vector_iterator<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z ENDP ; std::_Vector_iterator<int,std::allocator<int> >::_Vector_iterator<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<int,std::allocator<int> >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<int,std::allocator<int> >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<int,std::allocator<int> >::operator!=
_TEXT	ENDS
PUBLIC	??Y?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
; Function compile flags: /Ogtpy
;	COMDAT ??Y?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=, COMDAT
; _this$ = ecx

; 1822 : 		*(_Mybase *)this += _Off;

	mov	eax, DWORD PTR __Off$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=

; 1823 : 		return (*this);

	mov	eax, esi
	pop	esi

; 1824 : 		}

	ret	4
??Y?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
_TEXT	ENDS
PUBLIC	??H?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+
; Function compile flags: /Ogtpy
;	COMDAT ??H?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+, COMDAT
; _this$ = ecx

; 1827 : 		{	// return this + integer

	sub	esp, 8

; 1828 : 		_Mytype _Tmp = *this;

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]

; 1829 : 		return (_Tmp += _Off);

	mov	edx, DWORD PTR __Off$[esp+4]
	mov	DWORD PTR __Tmp$[esp+12], ecx
	push	edx
	lea	ecx, DWORD PTR __Tmp$[esp+12]
	mov	DWORD PTR __Tmp$[esp+12], eax
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	ecx, DWORD PTR __Tmp$[esp+8]
	mov	edx, DWORD PTR __Tmp$[esp+12]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 1830 : 		}

	add	esp, 8
	ret	8
??H?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+
_TEXT	ENDS
PUBLIC	??G?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBEHABV?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@1@@Z ; std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator-
; Function compile flags: /Ogtpy
;	COMDAT ??G?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBEHABV?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??G?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBEHABV?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@1@@Z PROC ; std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator-, COMDAT
; _this$ = ecx

; 1845 : 		return (*(_Mybase *)this - _Right);

	mov	edx, DWORD PTR __Right$[esp-4]
	mov	eax, DWORD PTR [ecx]
	sub	eax, DWORD PTR [edx]
	sar	eax, 2
	shl	eax, 5
	sub	eax, DWORD PTR [edx+4]
	add	eax, DWORD PTR [ecx+4]

; 1846 : 		}

	ret	4
??G?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBEHABV?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@1@@Z ENDP ; std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator-
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@PAV?$Array@H$05@Firaxis@@@Z ; std::_Vector_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Vector_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@PAV?$Array@H$05@Firaxis@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@PAV?$Array@H$05@Firaxis@@@Z PROC ; std::_Vector_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Vector_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@PAV?$Array@H$05@Firaxis@@@Z ENDP ; std::_Vector_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Vector_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator!=
_TEXT	ENDS
PUBLIC	?max_size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::max_size, COMDAT
; _this$ = ecx

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 1073741823				; 3fffffffH

; 732  : 		}

	ret	0
?max_size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@I@std@@QAEPAII@Z		; std::allocator<unsigned int>::allocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@I@std@@QAEPAII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@I@std@@QAEPAII@Z PROC		; std::allocator<unsigned int>::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@I@std@@YAPAIIPAI@Z		; std::_Allocate<unsigned int>
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@I@std@@QAEPAII@Z ENDP		; std::allocator<unsigned int>::allocate
_TEXT	ENDS
PUBLIC	??0?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAE@PBI@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAE@PBI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAE@PBI@Z PROC ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >, COMDAT
; _this$ = ecx

; 1567 : 		{	// construct with offset and pointer

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], 0

; 1568 : 		}

	ret	4
??0?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAE@PBI@Z ENDP ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@IV?$allocator@I@std@@@std@@QAE@PAI@Z ; std::_Vector_iterator<unsigned int,std::allocator<unsigned int> >::_Vector_iterator<unsigned int,std::allocator<unsigned int> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_iterator@IV?$allocator@I@std@@@std@@QAE@PAI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@IV?$allocator@I@std@@@std@@QAE@PAI@Z PROC ; std::_Vector_iterator<unsigned int,std::allocator<unsigned int> >::_Vector_iterator<unsigned int,std::allocator<unsigned int> >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@IV?$allocator@I@std@@@std@@QAE@PAI@Z ENDP ; std::_Vector_iterator<unsigned int,std::allocator<unsigned int> >::_Vector_iterator<unsigned int,std::allocator<unsigned int> >
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@IV?$allocator@I@std@@@std@@QBE?AV?$_Vector_iterator@IV?$allocator@I@std@@@2@V?$_Vector_const_iterator@IV?$allocator@I@std@@@2@@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Make_iter
; Function compile flags: /Ogtpy
;	COMDAT ?_Make_iter@?$vector@IV?$allocator@I@std@@@std@@QBE?AV?$_Vector_iterator@IV?$allocator@I@std@@@2@V?$_Vector_const_iterator@IV?$allocator@I@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@IV?$allocator@I@std@@@std@@QBE?AV?$_Vector_iterator@IV?$allocator@I@std@@@2@V?$_Vector_const_iterator@IV?$allocator@I@std@@@2@@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Make_iter, COMDAT
; _this$ = ecx

; 687  : 		return (iterator(_Where._Myptr));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR __Where$[esp-4]
	mov	DWORD PTR [eax], ecx

; 688  : 		}

	ret	8
?_Make_iter@?$vector@IV?$allocator@I@std@@@std@@QBE?AV?$_Vector_iterator@IV?$allocator@I@std@@@2@V?$_Vector_const_iterator@IV?$allocator@I@std@@@2@@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Make_iter
_TEXT	ENDS
PUBLIC	??Y?$_Vector_iterator@IV?$allocator@I@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<unsigned int,std::allocator<unsigned int> >::operator+=
; Function compile flags: /Ogtpy
;	COMDAT ??Y?$_Vector_iterator@IV?$allocator@I@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@IV?$allocator@I@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<unsigned int,std::allocator<unsigned int> >::operator+=, COMDAT
; _this$ = ecx

; 374  : 		{	// increment by integer

	mov	eax, ecx

; 375  : 		(*(_Mybase *)this) += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [ecx*4]
	add	DWORD PTR [eax], edx

; 376  : 		return (*this);
; 377  : 		}

	ret	4
??Y?$_Vector_iterator@IV?$allocator@I@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<unsigned int,std::allocator<unsigned int> >::operator+=
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@IV?$allocator@I@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<unsigned int,std::allocator<unsigned int> >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vector_const_iterator@IV?$allocator@I@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@IV?$allocator@I@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<unsigned int,std::allocator<unsigned int> >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@IV?$allocator@I@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<unsigned int,std::allocator<unsigned int> >::operator!=
_TEXT	ENDS
PUBLIC	??$unchecked_copy@PAHPAH@stdext@@YAPAHPAH00@Z	; stdext::unchecked_copy<int *,int *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$unchecked_copy@PAHPAH@stdext@@YAPAHPAH00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAHPAH@stdext@@YAPAHPAH00@Z PROC	; stdext::unchecked_copy<int *,int *>, COMDAT

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]
	test	eax, eax
	jle	SHORT $LN10@unchecked_@5
	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN10@unchecked_@5:
	pop	edi
	mov	eax, esi
	pop	esi

; 3607 : 	}

	ret	0
??$unchecked_copy@PAHPAH@stdext@@YAPAHPAH00@Z ENDP	; stdext::unchecked_copy<int *,int *>
_TEXT	ENDS
PUBLIC	??$unchecked_copy@PAIPAI@stdext@@YAPAIPAI00@Z	; stdext::unchecked_copy<unsigned int *,unsigned int *>
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_copy@PAIPAI@stdext@@YAPAIPAI00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAIPAI@stdext@@YAPAIPAI00@Z PROC	; stdext::unchecked_copy<unsigned int *,unsigned int *>, COMDAT

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]
	test	eax, eax
	jle	SHORT $LN10@unchecked_@6
	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN10@unchecked_@6:
	pop	edi
	mov	eax, esi
	pop	esi

; 3607 : 	}

	ret	0
??$unchecked_copy@PAIPAI@stdext@@YAPAIPAI00@Z ENDP	; stdext::unchecked_copy<unsigned int *,unsigned int *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@I@std@@@std@@YAXPAI0AAV?$allocator@I@0@@Z ; std::_Destroy_range<std::allocator<unsigned int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@I@std@@@std@@YAXPAI0AAV?$allocator@I@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@I@std@@@std@@YAXPAI0AAV?$allocator@I@0@@Z PROC ; std::_Destroy_range<std::allocator<unsigned int> >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@I@std@@@std@@YAXPAI0AAV?$allocator@I@0@@Z ENDP ; std::_Destroy_range<std::allocator<unsigned int> >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@W4TraitTypes@@@std@@QAEXPAW4TraitTypes@@@Z ; std::allocator<enum TraitTypes>::destroy
; Function compile flags: /Ogtpy
;	COMDAT ?destroy@?$allocator@W4TraitTypes@@@std@@QAEXPAW4TraitTypes@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@W4TraitTypes@@@std@@QAEXPAW4TraitTypes@@@Z PROC ; std::allocator<enum TraitTypes>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@W4TraitTypes@@@std@@QAEXPAW4TraitTypes@@@Z ENDP ; std::allocator<enum TraitTypes>::destroy
_TEXT	ENDS
PUBLIC	??E?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator++
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??E?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator++, COMDAT
; _this$ = ecx

; 1576 : 		{	// preincrement

	mov	eax, ecx

; 1577 : 		_Inc();

	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, 31					; 0000001fH
	jae	SHORT $LN4@operator@8
	inc	ecx
	mov	DWORD PTR [eax+4], ecx

; 1578 : 		return (*this);
; 1579 : 		}

	ret	0

; 1577 : 		_Inc();

$LN4@operator@8:
	add	DWORD PTR [eax], 4
	mov	DWORD PTR [eax+4], 0

; 1578 : 		return (*this);
; 1579 : 		}

	ret	0
??E?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator++
_TEXT	ENDS
PUBLIC	??9?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator!=, COMDAT
; _this$ = ecx

; 1677 : 		return (!(*this == _Right));

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Right$[esp-4]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN5@operator@9
	mov	ecx, DWORD PTR [ecx+4]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN5@operator@9
	mov	eax, 1
	xor	edx, edx
	test	al, al
	sete	dl
	mov	al, dl

; 1678 : 		}

	ret	4

; 1677 : 		return (!(*this == _Right));

$LN5@operator@9:
	xor	eax, eax
	xor	edx, edx
	test	al, al
	sete	dl
	mov	al, dl

; 1678 : 		}

	ret	4
??9?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator!=
_TEXT	ENDS
PUBLIC	??B?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBE_NXZ ; std::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator bool
; Function compile flags: /Ogtpy
;	COMDAT ??B?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
??B?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBE_NXZ PROC ; std::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator bool, COMDAT
; _this$ = ecx

; 1494 : 		{	// test if bit is set

	mov	edx, ecx

; 1495 : 		return ((*_Getptr() & _Mask()) != 0);

	mov	ecx, DWORD PTR [edx+4]
	mov	eax, 1
	shl	eax, cl
	mov	ecx, DWORD PTR [edx]
	and	eax, DWORD PTR [ecx]
	neg	eax
	sbb	eax, eax
	neg	eax

; 1496 : 		}

	ret	0
??B?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBE_NXZ ENDP ; std::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator bool
_TEXT	ENDS
PUBLIC	??$_Copy_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Copy_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::random_access_iterator_tag>, COMDAT

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN1@Copy_opt@7
	push	esi
$LL3@Copy_opt@7:

; 2472 : 		*_Dest = *_First;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	mov	esi, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], esi
	mov	esi, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], esi
	mov	esi, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], esi
	mov	esi, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], esi
	add	ecx, 24					; 00000018H
	add	eax, 24					; 00000018H
	cmp	ecx, edx
	jne	SHORT $LL3@Copy_opt@7
	pop	esi
$LN1@Copy_opt@7:

; 2473 : 	return (_Dest);
; 2474 : 	}

	ret	0
??$_Copy_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@V?$Array@H$05@Firaxis@@@std@@QAEXPAV?$Array@H$05@Firaxis@@@Z ; std::allocator<Firaxis::Array<int,6> >::destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@V?$Array@H$05@Firaxis@@@std@@QAEXPAV?$Array@H$05@Firaxis@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@V?$Array@H$05@Firaxis@@@std@@QAEXPAV?$Array@H$05@Firaxis@@@Z PROC ; std::allocator<Firaxis::Array<int,6> >::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@V?$Array@H$05@Firaxis@@@std@@QAEXPAV?$Array@H$05@Firaxis@@@Z ENDP ; std::allocator<Firaxis::Array<int,6> >::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@W4TraitTypes@@@std@@QAEXPAW4TraitTypes@@ABW43@@Z ; std::allocator<enum TraitTypes>::construct
; Function compile flags: /Ogtpy
;	COMDAT ?construct@?$allocator@W4TraitTypes@@@std@@QAEXPAW4TraitTypes@@ABW43@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@W4TraitTypes@@@std@@QAEXPAW4TraitTypes@@ABW43@@Z PROC ; std::allocator<enum TraitTypes>::construct, COMDAT
; _this$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN5@construct@3
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN5@construct@3:

; 156  : 		}

	ret	8
?construct@?$allocator@W4TraitTypes@@@std@@QAEXPAW4TraitTypes@@ABW43@@Z ENDP ; std::allocator<enum TraitTypes>::construct
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::operator!=
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??9?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::operator!=
_TEXT	ENDS
PUBLIC	??E?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator++, COMDAT
; _this$ = ecx

; 1795 : 		{	// preincrement

	mov	eax, ecx

; 1796 : 		++*(_Mybase *)this;

	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, 31					; 0000001fH
	jae	SHORT $LN6@operator@10
	inc	ecx
	mov	DWORD PTR [eax+4], ecx

; 1797 : 		return (*this);
; 1798 : 		}

	ret	0

; 1796 : 		++*(_Mybase *)this;

$LN6@operator@10:
	add	DWORD PTR [eax], 4
	mov	DWORD PTR [eax+4], 0

; 1797 : 		return (*this);
; 1798 : 		}

	ret	0
??E?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator++
_TEXT	ENDS
PUBLIC	??4?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??4?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator=, COMDAT
; _this$ = ecx

; 1471 : 		return (*this = bool(_Right));

	mov	edx, DWORD PTR __Right$[esp-4]
	mov	eax, ecx
	mov	ecx, DWORD PTR [edx+4]
	push	esi
	mov	esi, 1
	shl	esi, cl
	mov	ecx, DWORD PTR [edx]
	mov	edx, DWORD PTR [eax]
	test	esi, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [eax+4]
	mov	esi, 1
	je	SHORT $LN10@operator@11
	shl	esi, cl
	or	DWORD PTR [edx], esi
	pop	esi

; 1472 : 		}

	ret	4

; 1471 : 		return (*this = bool(_Right));

$LN10@operator@11:
	shl	esi, cl
	not	esi
	and	DWORD PTR [edx], esi
	pop	esi

; 1472 : 		}

	ret	4
??4?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator=
_TEXT	ENDS
PUBLIC	??Y?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<int,std::allocator<int> >::operator+=
; Function compile flags: /Ogtpy
;	COMDAT ??Y?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<int,std::allocator<int> >::operator+=, COMDAT
; _this$ = ecx

; 374  : 		{	// increment by integer

	mov	eax, ecx

; 375  : 		(*(_Mybase *)this) += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [ecx*4]
	add	DWORD PTR [eax], edx

; 376  : 		return (*this);
; 377  : 		}

	ret	4
??Y?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<int,std::allocator<int> >::operator+=
_TEXT	ENDS
PUBLIC	??Y?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator+=
; Function compile flags: /Ogtpy
;	COMDAT ??Y?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator+=, COMDAT
; _this$ = ecx

; 374  : 		{	// increment by integer

	mov	eax, ecx

; 375  : 		(*(_Mybase *)this) += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	add	ecx, ecx
	add	ecx, ecx
	add	ecx, ecx
	add	DWORD PTR [eax], ecx

; 376  : 		return (*this);
; 377  : 		}

	ret	4
??Y?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator+=
_TEXT	ENDS
PUBLIC	??$?5H$05@@YAAAVFDataStream@@AAV0@AAV?$Array@H$05@Firaxis@@@Z ; operator>><int,6>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ??$?5H$05@@YAAAVFDataStream@@AAV0@AAV?$Array@H$05@Firaxis@@@Z
_TEXT	SEGMENT
_kStream$ = 8						; size = 4
_kArray$ = 12						; size = 4
??$?5H$05@@YAAAVFDataStream@@AAV0@AAV?$Array@H$05@Firaxis@@@Z PROC ; operator>><int,6>, COMDAT

; 560  : {

	push	ebx
	push	esi

; 561  : 	for( unsigned int i = 0; i < kArray.size(); ++i )

	mov	esi, DWORD PTR _kArray$[esp+4]
	push	edi
	mov	edi, DWORD PTR _kStream$[esp+8]
	mov	ebx, 6
$LL3@operator@12:

; 562  : 	{
; 563  : 		kStream >> kArray[i];

	push	esi
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	add	esi, 4
	sub	ebx, 1
	jne	SHORT $LL3@operator@12

; 564  : 	}
; 565  : 	return kStream;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 566  : }

	ret	0
??$?5H$05@@YAAAVFDataStream@@AAV0@AAV?$Array@H$05@Firaxis@@@Z ENDP ; operator>><int,6>
_TEXT	ENDS
PUBLIC	??$?6H$05@@YAAAVFDataStream@@AAV0@ABV?$Array@H$05@Firaxis@@@Z ; operator<<<int,6>
; Function compile flags: /Ogtpy
;	COMDAT ??$?6H$05@@YAAAVFDataStream@@AAV0@ABV?$Array@H$05@Firaxis@@@Z
_TEXT	SEGMENT
_kStream$ = 8						; size = 4
_kArray$ = 12						; size = 4
??$?6H$05@@YAAAVFDataStream@@AAV0@ABV?$Array@H$05@Firaxis@@@Z PROC ; operator<<<int,6>, COMDAT

; 570  : {

	push	ebx
	push	esi

; 571  : 	for( unsigned int i = 0; i < kArray.size(); ++i )

	mov	esi, DWORD PTR _kArray$[esp+4]
	push	edi
	mov	edi, DWORD PTR _kStream$[esp+8]
	mov	ebx, 6
$LL3@operator@13:

; 572  : 	{
; 573  : 		kStream << kArray[i];

	push	esi
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	add	esi, 4
	sub	ebx, 1
	jne	SHORT $LL3@operator@13

; 574  : 	}
; 575  : 	return kStream;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 576  : }

	ret	0
??$?6H$05@@YAAAVFDataStream@@AAV0@ABV?$Array@H$05@Firaxis@@@Z ENDP ; operator<<<int,6>
_TEXT	ENDS
PUBLIC	??$fill@PAHH@std@@YAXPAH0ABH@Z			; std::fill<int *,int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$fill@PAHH@std@@YAXPAH0ABH@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAHH@std@@YAXPAH0ABH@Z PROC			; std::fill<int *,int>, COMDAT

; 3187 : 	_Fill(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val);

	mov	eax, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN3@fill@4
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL5@fill@4:
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	add	eax, 4
	cmp	eax, ecx
	jne	SHORT $LL5@fill@4
	pop	esi
$LN3@fill@4:

; 3188 : 	}

	ret	0
??$fill@PAHH@std@@YAXPAH0ABH@Z ENDP			; std::fill<int *,int>
_TEXT	ENDS
PUBLIC	??$fill@PAV?$Array@H$05@Firaxis@@V12@@std@@YAXPAV?$Array@H$05@Firaxis@@0ABV12@@Z ; std::fill<Firaxis::Array<int,6> *,Firaxis::Array<int,6> >
; Function compile flags: /Ogtpy
;	COMDAT ??$fill@PAV?$Array@H$05@Firaxis@@V12@@std@@YAXPAV?$Array@H$05@Firaxis@@0ABV12@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAV?$Array@H$05@Firaxis@@V12@@std@@YAXPAV?$Array@H$05@Firaxis@@0ABV12@@Z PROC ; std::fill<Firaxis::Array<int,6> *,Firaxis::Array<int,6> >, COMDAT

; 3187 : 	_Fill(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val);

	jmp	??$_Fill@PAV?$Array@H$05@Firaxis@@V12@@std@@YAXPAV?$Array@H$05@Firaxis@@0ABV12@@Z ; std::_Fill<Firaxis::Array<int,6> *,Firaxis::Array<int,6> >
??$fill@PAV?$Array@H$05@Firaxis@@V12@@std@@YAXPAV?$Array@H$05@Firaxis@@0ABV12@@Z ENDP ; std::fill<Firaxis::Array<int,6> *,Firaxis::Array<int,6> >
_TEXT	ENDS
PUBLIC	??$fill@PAII@std@@YAXPAI0ABI@Z			; std::fill<unsigned int *,unsigned int>
; Function compile flags: /Ogtpy
;	COMDAT ??$fill@PAII@std@@YAXPAI0ABI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAII@std@@YAXPAI0ABI@Z PROC			; std::fill<unsigned int *,unsigned int>, COMDAT

; 3187 : 	_Fill(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val);

	mov	eax, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN3@fill@5
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL5@fill@5:
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	add	eax, 4
	cmp	eax, ecx
	jne	SHORT $LL5@fill@5
	pop	esi
$LN3@fill@5:

; 3188 : 	}

	ret	0
??$fill@PAII@std@@YAXPAI0ABI@Z ENDP			; std::fill<unsigned int *,unsigned int>
_TEXT	ENDS
PUBLIC	??$_Move_backward_opt@PAHPAHUrandom_access_iterator_tag@std@@U_Undefined_move_tag@2@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<int *,int *,std::random_access_iterator_tag,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_backward_opt@PAHPAHUrandom_access_iterator_tag@std@@U_Undefined_move_tag@2@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__First_dest_cat$ = 20					; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Move_backward_opt@PAHPAHUrandom_access_iterator_tag@std@@U_Undefined_move_tag@2@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<int *,int *,std::random_access_iterator_tag,std::_Undefined_move_tag>, COMDAT

; 2753 : 	return _Copy_backward_opt(_First, _Last, _Dest,
; 2754 : 		_First_dest_cat, _Ptr_cat(_First, _Dest), _Range_checked_iterator_tag());

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	sar	eax, 2
	push	esi
	mov	esi, DWORD PTR __Dest$[esp]
	lea	ecx, DWORD PTR [eax*4]
	sub	esi, ecx
	test	eax, eax
	jle	SHORT $LN8@Move_backw@4
	push	ecx
	push	edx
	push	ecx
	push	esi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN8@Move_backw@4:
	mov	eax, esi
	pop	esi

; 2755 : 	}

	ret	0
??$_Move_backward_opt@PAHPAHUrandom_access_iterator_tag@std@@U_Undefined_move_tag@2@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<int *,int *,std::random_access_iterator_tag,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$_Fill@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@_N@std@@YAXV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@0AB_N@Z ; std::_Fill<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Fill@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@_N@std@@YAXV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@0AB_N@Z
_TEXT	SEGMENT
__First$ = 8						; size = 8
__Last$ = 16						; size = 8
__Val$ = 24						; size = 4
??$_Fill@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@_N@std@@YAXV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@0AB_N@Z PROC ; std::_Fill<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,bool>, COMDAT

; 3156 : 	{	// copy _Val through [_First, _Last)

	mov	edx, DWORD PTR __Val$[esp-4]
	mov	ecx, DWORD PTR __First$[esp]
	mov	eax, DWORD PTR __First$[esp-4]
	push	esi
	npad	3

; 3157 : 	_DEBUG_RANGE(_First, _Last);
; 3158 : 	for (; _First != _Last; ++_First)

$LL10@Fill@7:
	cmp	eax, DWORD PTR __Last$[esp]
	jne	SHORT $LN18@Fill@7
	cmp	ecx, DWORD PTR __Last$[esp+4]
	je	SHORT $LN40@Fill@7
$LN18@Fill@7:

; 3159 : 		*_First = _Val;

	mov	esi, 1
	shl	esi, cl
	cmp	BYTE PTR [edx], 0
	je	SHORT $LN27@Fill@7
	or	DWORD PTR [eax], esi
	jmp	SHORT $LN2@Fill@7
$LN27@Fill@7:
	not	esi
	and	DWORD PTR [eax], esi
$LN2@Fill@7:
	mov	ecx, DWORD PTR __First$[esp+4]
	mov	eax, DWORD PTR __First$[esp]
	cmp	ecx, 31					; 0000001fH
	jae	SHORT $LN11@Fill@7
	inc	ecx
	mov	DWORD PTR __First$[esp+4], ecx
	jmp	SHORT $LL10@Fill@7

; 3157 : 	_DEBUG_RANGE(_First, _Last);
; 3158 : 	for (; _First != _Last; ++_First)

$LN11@Fill@7:
	xor	ecx, ecx
	add	eax, 4
	mov	DWORD PTR __First$[esp+4], ecx
	mov	DWORD PTR __First$[esp], eax
	jmp	SHORT $LL10@Fill@7
$LN40@Fill@7:
	pop	esi

; 3160 : 	}

	ret	0
??$_Fill@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@_N@std@@YAXV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@0AB_N@Z ENDP ; std::_Fill<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,bool>
_TEXT	ENDS
PUBLIC	??$_Move_backward_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@4@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::random_access_iterator_tag,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_backward_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@4@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T232736 = -4						; size = 1
__Cat$232741 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__First_dest_cat$ = 20					; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Move_backward_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@4@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::random_access_iterator_tag,std::_Undefined_move_tag>, COMDAT

; 2752 : 	{	// move defaults to copy if there is not a more effecient way

	push	ecx

; 2753 : 	return _Copy_backward_opt(_First, _Last, _Dest,
; 2754 : 		_First_dest_cat, _Ptr_cat(_First, _Dest), _Range_checked_iterator_tag());

	mov	edx, DWORD PTR __First_dest_cat$[esp]
	mov	BYTE PTR $T232736[esp+4], 0
	mov	eax, DWORD PTR $T232736[esp+4]
	mov	ecx, DWORD PTR __Cat$232741[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Copy_backward_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::random_access_iterator_tag>

; 2755 : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Move_backward_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@4@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::random_access_iterator_tag,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$_Move_backward_opt@PAIPAIUrandom_access_iterator_tag@std@@U_Undefined_move_tag@2@@std@@YAPAIPAI00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<unsigned int *,unsigned int *,std::random_access_iterator_tag,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_backward_opt@PAIPAIUrandom_access_iterator_tag@std@@U_Undefined_move_tag@2@@std@@YAPAIPAI00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__First_dest_cat$ = 20					; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Move_backward_opt@PAIPAIUrandom_access_iterator_tag@std@@U_Undefined_move_tag@2@@std@@YAPAIPAI00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<unsigned int *,unsigned int *,std::random_access_iterator_tag,std::_Undefined_move_tag>, COMDAT

; 2753 : 	return _Copy_backward_opt(_First, _Last, _Dest,
; 2754 : 		_First_dest_cat, _Ptr_cat(_First, _Dest), _Range_checked_iterator_tag());

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	sar	eax, 2
	push	esi
	mov	esi, DWORD PTR __Dest$[esp]
	lea	ecx, DWORD PTR [eax*4]
	sub	esi, ecx
	test	eax, eax
	jle	SHORT $LN8@Move_backw@5
	push	ecx
	push	edx
	push	ecx
	push	esi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN8@Move_backw@5:
	mov	eax, esi
	pop	esi

; 2755 : 	}

	ret	0
??$_Move_backward_opt@PAIPAIUrandom_access_iterator_tag@std@@U_Undefined_move_tag@2@@std@@YAPAIPAI00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<unsigned int *,unsigned int *,std::random_access_iterator_tag,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@V?$Array@H$05@Firaxis@@@std@@QAEXPAV?$Array@H$05@Firaxis@@ABV34@@Z ; std::allocator<Firaxis::Array<int,6> >::construct
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?construct@?$allocator@V?$Array@H$05@Firaxis@@@std@@QAEXPAV?$Array@H$05@Firaxis@@ABV34@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$Array@H$05@Firaxis@@@std@@QAEXPAV?$Array@H$05@Firaxis@@ABV34@@Z PROC ; std::allocator<Firaxis::Array<int,6> >::construct, COMDAT
; _this$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN5@construct@4
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	ecx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], ecx
$LN5@construct@4:

; 156  : 		}

	ret	8
?construct@?$allocator@V?$Array@H$05@Firaxis@@@std@@QAEXPAV?$Array@H$05@Firaxis@@ABV34@@Z ENDP ; std::allocator<Firaxis::Array<int,6> >::construct
_TEXT	ENDS
PUBLIC	??F?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator--
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??F?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator--, COMDAT
; _this$ = ecx

; 1589 : 		{	// predecrement

	mov	eax, ecx

; 1590 : 		_Dec();

	mov	ecx, DWORD PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN4@operator@14
	dec	ecx
	mov	DWORD PTR [eax+4], ecx

; 1591 : 		return (*this);
; 1592 : 		}

	ret	0

; 1590 : 		_Dec();

$LN4@operator@14:
	add	DWORD PTR [eax], -4			; fffffffcH
	mov	DWORD PTR [eax+4], 31			; 0000001fH

; 1591 : 		return (*this);
; 1592 : 		}

	ret	0
??F?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator--
_TEXT	ENDS
PUBLIC	??$_Fill_n@PAHIHUrandom_access_iterator_tag@std@@@std@@YAXPAHIABHUrandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Fill_n<int *,unsigned int,int,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Fill_n@PAHIHUrandom_access_iterator_tag@std@@@std@@YAXPAHIABHUrandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
??$_Fill_n@PAHIHUrandom_access_iterator_tag@std@@@std@@YAXPAHIABHUrandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Fill_n<int *,unsigned int,int,std::random_access_iterator_tag>, COMDAT

; 3242 : 		_Fill_n(_First, _Count, _Val, _Range_checked_iterator_tag());

	mov	eax, DWORD PTR __Count$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	test	eax, eax
	jbe	SHORT $LN3@Fill_n@3
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL5@Fill_n@3:
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [ecx], esi
	dec	eax
	add	ecx, 4
	test	eax, eax
	ja	SHORT $LL5@Fill_n@3
	pop	esi
$LN3@Fill_n@3:

; 3243 : 	}

	ret	0
??$_Fill_n@PAHIHUrandom_access_iterator_tag@std@@@std@@YAXPAHIABHUrandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Fill_n<int *,unsigned int,int,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_copy@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z ; stdext::unchecked_uninitialized_copy<int *,int *,std::allocator<int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_copy@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z PROC ; stdext::unchecked_uninitialized_copy<int *,int *,std::allocator<int> >, COMDAT

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]
	test	eax, eax
	jbe	SHORT $LN8@unchecked_@7
	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN8@unchecked_@7:
	pop	edi
	mov	eax, esi
	pop	esi

; 823  : 	}

	ret	0
??$unchecked_uninitialized_copy@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z ENDP ; stdext::unchecked_uninitialized_copy<int *,int *,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_copy@PAIPAIV?$allocator@I@std@@@stdext@@YAPAIPAI00AAV?$allocator@I@std@@@Z ; stdext::unchecked_uninitialized_copy<unsigned int *,unsigned int *,std::allocator<unsigned int> >
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_uninitialized_copy@PAIPAIV?$allocator@I@std@@@stdext@@YAPAIPAI00AAV?$allocator@I@std@@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAIPAIV?$allocator@I@std@@@stdext@@YAPAIPAI00AAV?$allocator@I@std@@@Z PROC ; stdext::unchecked_uninitialized_copy<unsigned int *,unsigned int *,std::allocator<unsigned int> >, COMDAT

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]
	test	eax, eax
	jbe	SHORT $LN8@unchecked_@8
	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN8@unchecked_@8:
	pop	edi
	mov	eax, esi
	pop	esi

; 823  : 	}

	ret	0
??$unchecked_uninitialized_copy@PAIPAIV?$allocator@I@std@@@stdext@@YAPAIPAI00AAV?$allocator@I@std@@@Z ENDP ; stdext::unchecked_uninitialized_copy<unsigned int *,unsigned int *,std::allocator<unsigned int> >
_TEXT	ENDS
PUBLIC	??$_Fill_n@PAIIIUrandom_access_iterator_tag@std@@@std@@YAXPAIIABIUrandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Fill_n<unsigned int *,unsigned int,unsigned int,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Fill_n@PAIIIUrandom_access_iterator_tag@std@@@std@@YAXPAIIABIUrandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
??$_Fill_n@PAIIIUrandom_access_iterator_tag@std@@@std@@YAXPAIIABIUrandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Fill_n<unsigned int *,unsigned int,unsigned int,std::random_access_iterator_tag>, COMDAT

; 3242 : 		_Fill_n(_First, _Count, _Val, _Range_checked_iterator_tag());

	mov	eax, DWORD PTR __Count$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	test	eax, eax
	jbe	SHORT $LN3@Fill_n@4
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL5@Fill_n@4:
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [ecx], esi
	dec	eax
	add	ecx, 4
	test	eax, eax
	ja	SHORT $LL5@Fill_n@4
	pop	esi
$LN3@Fill_n@4:

; 3243 : 	}

	ret	0
??$_Fill_n@PAIIIUrandom_access_iterator_tag@std@@@std@@YAXPAIIABIUrandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Fill_n<unsigned int *,unsigned int,unsigned int,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAV?$Array@H$05@Firaxis@@PAV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::allocator<Firaxis::Array<int,6> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Uninit_copy@PAV?$Array@H$05@Firaxis@@PAV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAV?$Array@H$05@Firaxis@@PAV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::allocator<Firaxis::Array<int,6> > >, COMDAT

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;
; 128  : 
; 129  : 	_TRY_BEGIN
; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN4@Uninit_cop@4
	push	esi
$LL6@Uninit_cop@4:

; 131  : 		_Al.construct(_Dest, *_First);

	test	eax, eax
	je	SHORT $LN5@Uninit_cop@4
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	mov	esi, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], esi
	mov	esi, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], esi
	mov	esi, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], esi
	mov	esi, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], esi
$LN5@Uninit_cop@4:
	add	ecx, 24					; 00000018H
	add	eax, 24					; 00000018H
	cmp	ecx, edx
	jne	SHORT $LL6@Uninit_cop@4
	pop	esi
$LN4@Uninit_cop@4:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)
; 134  : 		_Al.destroy(_Next);
; 135  : 	_RERAISE;
; 136  : 	_CATCH_END
; 137  : 	return (_Dest);
; 138  : 	}

	ret	0
??$_Uninit_copy@PAV?$Array@H$05@Firaxis@@PAV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::allocator<Firaxis::Array<int,6> > >
_TEXT	ENDS
PUBLIC	?plotDirection@@YAPAVCvPlot@@HHW4DirectionTypes@@@Z ; plotDirection
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
;	COMDAT ?plotDirection@@YAPAVCvPlot@@HHW4DirectionTypes@@@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
_eDirection$ = 16					; size = 4
?plotDirection@@YAPAVCvPlot@@HHW4DirectionTypes@@@Z PROC ; plotDirection, COMDAT

; 219  : 	if(eDirection == NO_DIRECTION)

	mov	ecx, DWORD PTR _eDirection$[esp-4]
	push	ebx
	push	ebp
	push	esi
	push	edi
	cmp	ecx, -1
	jne	$LN2@plotDirect

; 220  : 	{
; 221  : 		return GC.getMap().plot(iX, iY);

	mov	eax, DWORD PTR _iX$[esp+12]
	cmp	eax, -2147483647			; 80000001H
	je	$LN59@plotDirect
	mov	ebx, DWORD PTR _iY$[esp+12]
	cmp	ebx, -2147483647			; 80000001H
	je	$LN59@plotDirect
	mov	ebp, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	BYTE PTR [ebp+4056], 0
	mov	ecx, DWORD PTR [ebp+4020]
	je	SHORT $LN99@plotDirect
	test	eax, eax
	jge	SHORT $LN19@plotDirect
	cdq
	idiv	ecx
	mov	esi, edx
	add	esi, ecx
	jmp	SHORT $LN21@plotDirect
$LN19@plotDirect:
	cmp	eax, ecx
	jl	SHORT $LN99@plotDirect
	cdq
	idiv	ecx
	mov	esi, edx
	jmp	SHORT $LN21@plotDirect
$LN99@plotDirect:
	mov	esi, eax
$LN21@plotDirect:
	cmp	BYTE PTR [ebp+4057], 0
	mov	edi, DWORD PTR [ebp+4024]
	je	SHORT $LN101@plotDirect
	test	ebx, ebx
	jge	SHORT $LN29@plotDirect
	mov	eax, ebx
	cdq
	idiv	edi
	add	edx, edi
	jmp	SHORT $LN31@plotDirect
$LN29@plotDirect:
	cmp	ebx, edi
	jl	SHORT $LN101@plotDirect
	mov	eax, ebx
	cdq
	idiv	edi
	jmp	SHORT $LN31@plotDirect
$LN101@plotDirect:
	mov	edx, ebx
$LN31@plotDirect:
	test	esi, esi
	jl	$LN59@plotDirect
	cmp	esi, ecx
	jge	$LN59@plotDirect
	test	edx, edx
	jl	$LN59@plotDirect
	cmp	edx, edi
	jge	$LN59@plotDirect
	imul	ecx, edx
	add	ecx, esi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [ebp+4068]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, ecx
	pop	ebx

; 234  : 	}
; 235  : }

	ret	0
$LN2@plotDirect:

; 222  : 	}
; 223  : 	else
; 224  : 	{
; 225  : 		// convert to hex-space coordinates - the coordinate system axes are E and NE (not orthogonal)
; 226  : 		iX = xToHexspaceX(iX , iY);

	mov	esi, DWORD PTR _iY$[esp+12]
	test	esi, esi
	jl	SHORT $LN47@plotDirect
	mov	eax, esi
	jmp	SHORT $LN103@plotDirect
$LN47@plotDirect:
	lea	eax, DWORD PTR [esi-1]
	cdq
	sub	eax, edx
$LN103@plotDirect:

; 227  : 		iX += GC.getPlotDirectionX()[eDirection];

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A[ecx*4+112]
	mov	edi, DWORD PTR _iX$[esp+12]
	sar	eax, 1
	sub	edx, eax
	add	edi, edx

; 228  : 		iY += GC.getPlotDirectionY()[eDirection];

	add	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A[ecx*4+136]

; 229  : 
; 230  : 		// convert from hex-space coordinates to the storage array
; 231  : 		iX = hexspaceXToX(iX, iY);

	js	SHORT $LN55@plotDirect
	mov	eax, esi
	jmp	SHORT $LN104@plotDirect
$LN55@plotDirect:
	lea	eax, DWORD PTR [esi-1]
	cdq
	sub	eax, edx
$LN104@plotDirect:
	sar	eax, 1
	add	edi, eax

; 232  : 
; 233  : 		return GC.getMap().plot(iX, iY);

	cmp	edi, -2147483647			; 80000001H
	je	$LN59@plotDirect
	cmp	esi, -2147483647			; 80000001H
	je	$LN59@plotDirect
	mov	ebp, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	BYTE PTR [ebp+4056], 0
	mov	ecx, DWORD PTR [ebp+4020]
	je	SHORT $LN69@plotDirect
	test	edi, edi
	jge	SHORT $LN71@plotDirect
	mov	eax, edi
	cdq
	idiv	ecx
	mov	edi, edx
	add	edi, ecx
	jmp	SHORT $LN69@plotDirect
$LN71@plotDirect:
	cmp	edi, ecx
	jl	SHORT $LN69@plotDirect
	mov	eax, edi
	cdq
	idiv	ecx
	mov	edi, edx
$LN69@plotDirect:
	cmp	BYTE PTR [ebp+4057], 0
	mov	ebx, DWORD PTR [ebp+4024]
	je	SHORT $LN100@plotDirect
	test	esi, esi
	jge	SHORT $LN81@plotDirect
	mov	eax, esi
	cdq
	idiv	ebx
	add	edx, ebx
	jmp	SHORT $LN83@plotDirect
$LN81@plotDirect:
	cmp	esi, ebx
	jl	SHORT $LN100@plotDirect
	mov	eax, esi
	cdq
	idiv	ebx
	jmp	SHORT $LN83@plotDirect
$LN100@plotDirect:
	mov	edx, esi
$LN83@plotDirect:
	test	edi, edi
	jl	SHORT $LN59@plotDirect
	cmp	edi, ecx
	jge	SHORT $LN59@plotDirect
	test	edx, edx
	jl	SHORT $LN59@plotDirect
	cmp	edx, ebx
	jge	SHORT $LN59@plotDirect
	imul	ecx, edx
	add	ecx, edi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [ebp+4068]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, ecx
	pop	ebx

; 234  : 	}
; 235  : }

	ret	0

; 232  : 
; 233  : 		return GC.getMap().plot(iX, iY);

$LN59@plotDirect:
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx

; 234  : 	}
; 235  : }

	ret	0
?plotDirection@@YAPAVCvPlot@@HHW4DirectionTypes@@@Z ENDP ; plotDirection
_TEXT	ENDS
PUBLIC	?HasTrait@CvPlayerTraits@@QBE_NW4TraitTypes@@@Z	; CvPlayerTraits::HasTrait
EXTRN	?hasTrait@CvLeaderHeadInfo@@QBE_NH@Z:PROC	; CvLeaderHeadInfo::hasTrait
EXTRN	?getLeaderInfo@CvPlayer@@QBEAAVCvLeaderHeadInfo@@XZ:PROC ; CvPlayer::getLeaderInfo
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
;	COMDAT ?HasTrait@CvPlayerTraits@@QBE_NW4TraitTypes@@@Z
_TEXT	SEGMENT
_eTrait$ = 8						; size = 4
?HasTrait@CvPlayerTraits@@QBE_NW4TraitTypes@@@Z PROC	; CvPlayerTraits::HasTrait, COMDAT
; _this$ = ecx

; 2332 : {

	push	esi
	mov	esi, ecx

; 2333 : 	CvAssert(m_pPlayer);
; 2334 : 
; 2335 : 	if(m_pPlayer != NULL)

	mov	ecx, DWORD PTR [esi+4]
	test	ecx, ecx
	je	$LN2@HasTrait
	push	edi

; 2336 : 	{
; 2337 : 		CvAssertMsg((m_pPlayer->getLeaderType() >= 0), "getLeaderType() is less than zero");
; 2338 : 		CvAssertMsg((eTrait >= 0), "eTrait is less than zero");
; 2339 : 		return m_pPlayer->getLeaderInfo().hasTrait(eTrait) && !m_pTraits->GetEntry(eTrait)->IsObsoleteByTech(m_pPlayer->getTeam()) && m_pTraits->GetEntry(eTrait)->IsEnabledByTech(m_pPlayer->getTeam());

	mov	edi, DWORD PTR _eTrait$[esp+4]
	push	edi
	call	?getLeaderInfo@CvPlayer@@QBEAAVCvLeaderHeadInfo@@XZ ; CvPlayer::getLeaderInfo
	mov	ecx, eax
	call	?hasTrait@CvLeaderHeadInfo@@QBE_NH@Z	; CvLeaderHeadInfo::hasTrait
	test	al, al
	je	$LN5@HasTrait
	mov	eax, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN11@HasTrait
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN12@HasTrait
$LN11@HasTrait:
	or	eax, -1
$LN12@HasTrait:
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+edi*4]
	mov	edx, DWORD PTR [ecx+416]
	cmp	edx, -1
	je	SHORT $LN20@HasTrait
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	push	edx
	mov	ecx, eax
	call	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ ; CvTeam::GetTeamTechs
	mov	ecx, eax
	call	?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z ; CvTeamTechs::HasTech
	test	al, al
	jne	SHORT $LN5@HasTrait
$LN20@HasTrait:
	mov	eax, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN30@HasTrait
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN31@HasTrait
$LN30@HasTrait:
	or	eax, -1
$LN31@HasTrait:
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+edi*4]
	push	eax
	call	?IsEnabledByTech@CvTraitEntry@@QAE_NW4TeamTypes@@@Z ; CvTraitEntry::IsEnabledByTech
	test	al, al
	je	SHORT $LN5@HasTrait
	pop	edi
	mov	eax, 1
	pop	esi

; 2344 : 	}
; 2345 : }

	ret	4
$LN5@HasTrait:
	pop	edi

; 2336 : 	{
; 2337 : 		CvAssertMsg((m_pPlayer->getLeaderType() >= 0), "getLeaderType() is less than zero");
; 2338 : 		CvAssertMsg((eTrait >= 0), "eTrait is less than zero");
; 2339 : 		return m_pPlayer->getLeaderInfo().hasTrait(eTrait) && !m_pTraits->GetEntry(eTrait)->IsObsoleteByTech(m_pPlayer->getTeam()) && m_pTraits->GetEntry(eTrait)->IsEnabledByTech(m_pPlayer->getTeam());

	xor	eax, eax
	pop	esi

; 2344 : 	}
; 2345 : }

	ret	4
$LN2@HasTrait:

; 2340 : 	}
; 2341 : 	else
; 2342 : 	{
; 2343 : 		return false;

	xor	al, al
	pop	esi

; 2344 : 	}
; 2345 : }

	ret	4
?HasTrait@CvPlayerTraits@@QBE_NW4TraitTypes@@@Z ENDP	; CvPlayerTraits::HasTrait
_TEXT	ENDS
PUBLIC	?GetFreeBuilding@CvPlayerTraits@@QBE?AW4BuildingTypes@@XZ ; CvPlayerTraits::GetFreeBuilding
EXTRN	?getTraitInfo@CvGlobals@@QAEPAVCvTraitEntry@@W4TraitTypes@@@Z:PROC ; CvGlobals::getTraitInfo
; Function compile flags: /Ogtpy
;	COMDAT ?GetFreeBuilding@CvPlayerTraits@@QBE?AW4BuildingTypes@@XZ
_TEXT	SEGMENT
?GetFreeBuilding@CvPlayerTraits@@QBE?AW4BuildingTypes@@XZ PROC ; CvPlayerTraits::GetFreeBuilding, COMDAT
; _this$ = ecx

; 2526 : {

	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx

; 2527 : 	for(size_t iI = 0; iI < m_vPotentiallyActiveLeaderTraits.size(); iI++)

	mov	eax, DWORD PTR [esi+36]
	sub	eax, DWORD PTR [esi+32]
	xor	ebp, ebp
	sar	eax, 2
	push	edi
	test	eax, eax
	jbe	SHORT $LN3@GetFreeBui
	npad	11
$LL5@GetFreeBui:
	mov	eax, DWORD PTR [esi+32]
	lea	edi, DWORD PTR [ebp*4]

; 2528 : 	{
; 2529 : 		CvTraitEntry* pkTraitInfo = GC.getTraitInfo(m_vPotentiallyActiveLeaderTraits[iI]);

	mov	ecx, DWORD PTR [eax+edi]
	add	eax, edi
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getTraitInfo@CvGlobals@@QAEPAVCvTraitEntry@@W4TraitTypes@@@Z ; CvGlobals::getTraitInfo
	mov	ebx, eax

; 2530 : 		if(pkTraitInfo && HasTrait(m_vPotentiallyActiveLeaderTraits[iI]))

	test	ebx, ebx
	je	SHORT $LN4@GetFreeBui
	mov	eax, DWORD PTR [esi+32]
	mov	edx, DWORD PTR [eax+edi]
	add	eax, edi
	push	edx
	mov	ecx, esi
	call	?HasTrait@CvPlayerTraits@@QBE_NW4TraitTypes@@@Z ; CvPlayerTraits::HasTrait
	test	al, al
	je	SHORT $LN4@GetFreeBui

; 2531 : 		{
; 2532 : 			if(pkTraitInfo->GetFreeBuilding()!=NO_BUILDING)

	cmp	DWORD PTR [ebx+564], -1
	jne	SHORT $LN19@GetFreeBui
$LN4@GetFreeBui:

; 2527 : 	for(size_t iI = 0; iI < m_vPotentiallyActiveLeaderTraits.size(); iI++)

	mov	eax, DWORD PTR [esi+36]
	sub	eax, DWORD PTR [esi+32]
	inc	ebp
	sar	eax, 2
	cmp	ebp, eax
	jb	SHORT $LL5@GetFreeBui
$LN3@GetFreeBui:
	pop	edi
	pop	esi
	pop	ebp

; 2535 : 			}
; 2536 : 		}
; 2537 : 	}
; 2538 : 
; 2539 : 
; 2540 : 	return NO_BUILDING;

	or	eax, -1
	pop	ebx

; 2541 : }

	ret	0
$LN19@GetFreeBui:

; 2533 : 			{
; 2534 : 				return pkTraitInfo->GetFreeBuilding();

	mov	eax, DWORD PTR [ebx+564]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 2541 : }

	ret	0
?GetFreeBuilding@CvPlayerTraits@@QBE?AW4BuildingTypes@@XZ ENDP ; CvPlayerTraits::GetFreeBuilding
_TEXT	ENDS
PUBLIC	?GetFreeCapitalBuilding@CvPlayerTraits@@QBE?AW4BuildingTypes@@XZ ; CvPlayerTraits::GetFreeCapitalBuilding
; Function compile flags: /Ogtpy
;	COMDAT ?GetFreeCapitalBuilding@CvPlayerTraits@@QBE?AW4BuildingTypes@@XZ
_TEXT	SEGMENT
?GetFreeCapitalBuilding@CvPlayerTraits@@QBE?AW4BuildingTypes@@XZ PROC ; CvPlayerTraits::GetFreeCapitalBuilding, COMDAT
; _this$ = ecx

; 2544 : {

	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx

; 2545 : 	for(size_t iI = 0; iI < m_vPotentiallyActiveLeaderTraits.size(); iI++)

	mov	eax, DWORD PTR [esi+36]
	sub	eax, DWORD PTR [esi+32]
	xor	ebp, ebp
	sar	eax, 2
	push	edi
	test	eax, eax
	jbe	SHORT $LN3@GetFreeCap
	npad	11
$LL5@GetFreeCap:
	mov	eax, DWORD PTR [esi+32]
	lea	edi, DWORD PTR [ebp*4]

; 2546 : 	{
; 2547 : 		CvTraitEntry* pkTraitInfo = GC.getTraitInfo(m_vPotentiallyActiveLeaderTraits[iI]);

	mov	ecx, DWORD PTR [eax+edi]
	add	eax, edi
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getTraitInfo@CvGlobals@@QAEPAVCvTraitEntry@@W4TraitTypes@@@Z ; CvGlobals::getTraitInfo
	mov	ebx, eax

; 2548 : 		if(pkTraitInfo && HasTrait(m_vPotentiallyActiveLeaderTraits[iI]))

	test	ebx, ebx
	je	SHORT $LN4@GetFreeCap
	mov	eax, DWORD PTR [esi+32]
	mov	edx, DWORD PTR [eax+edi]
	add	eax, edi
	push	edx
	mov	ecx, esi
	call	?HasTrait@CvPlayerTraits@@QBE_NW4TraitTypes@@@Z ; CvPlayerTraits::HasTrait
	test	al, al
	je	SHORT $LN4@GetFreeCap

; 2549 : 		{
; 2550 : 			if(pkTraitInfo->GetFreeCapitalBuilding()!=NO_BUILDING)

	cmp	DWORD PTR [ebx+568], -1
	jne	SHORT $LN19@GetFreeCap
$LN4@GetFreeCap:

; 2545 : 	for(size_t iI = 0; iI < m_vPotentiallyActiveLeaderTraits.size(); iI++)

	mov	eax, DWORD PTR [esi+36]
	sub	eax, DWORD PTR [esi+32]
	inc	ebp
	sar	eax, 2
	cmp	ebp, eax
	jb	SHORT $LL5@GetFreeCap
$LN3@GetFreeCap:
	pop	edi
	pop	esi
	pop	ebp

; 2553 : 			}
; 2554 : 		}
; 2555 : 	}
; 2556 : 
; 2557 : 	return NO_BUILDING;

	or	eax, -1
	pop	ebx

; 2558 : }

	ret	0
$LN19@GetFreeCap:

; 2551 : 			{
; 2552 : 				return pkTraitInfo->GetFreeCapitalBuilding();

	mov	eax, DWORD PTR [ebx+568]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 2558 : }

	ret	0
?GetFreeCapitalBuilding@CvPlayerTraits@@QBE?AW4BuildingTypes@@XZ ENDP ; CvPlayerTraits::GetFreeCapitalBuilding
_TEXT	ENDS
PUBLIC	?GetFreeBuildingOnConquest@CvPlayerTraits@@QBE?AW4BuildingTypes@@XZ ; CvPlayerTraits::GetFreeBuildingOnConquest
; Function compile flags: /Ogtpy
;	COMDAT ?GetFreeBuildingOnConquest@CvPlayerTraits@@QBE?AW4BuildingTypes@@XZ
_TEXT	SEGMENT
?GetFreeBuildingOnConquest@CvPlayerTraits@@QBE?AW4BuildingTypes@@XZ PROC ; CvPlayerTraits::GetFreeBuildingOnConquest, COMDAT
; _this$ = ecx

; 2563 : {

	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx

; 2564 : 	for(size_t iI = 0; iI < m_vPotentiallyActiveLeaderTraits.size(); iI++)

	mov	eax, DWORD PTR [esi+36]
	sub	eax, DWORD PTR [esi+32]
	xor	ebp, ebp
	sar	eax, 2
	push	edi
	test	eax, eax
	jbe	SHORT $LN3@GetFreeBui@2
	npad	11
$LL5@GetFreeBui@2:
	mov	eax, DWORD PTR [esi+32]
	lea	edi, DWORD PTR [ebp*4]

; 2565 : 	{
; 2566 : 		CvTraitEntry* pkTraitInfo = GC.getTraitInfo(m_vPotentiallyActiveLeaderTraits[iI]);

	mov	ecx, DWORD PTR [eax+edi]
	add	eax, edi
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getTraitInfo@CvGlobals@@QAEPAVCvTraitEntry@@W4TraitTypes@@@Z ; CvGlobals::getTraitInfo
	mov	ebx, eax

; 2567 : 		if(pkTraitInfo && HasTrait(m_vPotentiallyActiveLeaderTraits[iI]))

	test	ebx, ebx
	je	SHORT $LN4@GetFreeBui@2
	mov	eax, DWORD PTR [esi+32]
	mov	edx, DWORD PTR [eax+edi]
	add	eax, edi
	push	edx
	mov	ecx, esi
	call	?HasTrait@CvPlayerTraits@@QBE_NW4TraitTypes@@@Z ; CvPlayerTraits::HasTrait
	test	al, al
	je	SHORT $LN4@GetFreeBui@2

; 2568 : 		{
; 2569 : 			if(pkTraitInfo->GetFreeBuildingOnConquest()!=NO_BUILDING)

	cmp	DWORD PTR [ebx+580], -1
	jne	SHORT $LN19@GetFreeBui@2
$LN4@GetFreeBui@2:

; 2564 : 	for(size_t iI = 0; iI < m_vPotentiallyActiveLeaderTraits.size(); iI++)

	mov	eax, DWORD PTR [esi+36]
	sub	eax, DWORD PTR [esi+32]
	inc	ebp
	sar	eax, 2
	cmp	ebp, eax
	jb	SHORT $LL5@GetFreeBui@2
$LN3@GetFreeBui@2:
	pop	edi
	pop	esi
	pop	ebp

; 2572 : 			}
; 2573 : 		}
; 2574 : 	}
; 2575 : 
; 2576 : 	return NO_BUILDING;

	or	eax, -1
	pop	ebx

; 2577 : }

	ret	0
$LN19@GetFreeBui@2:

; 2570 : 			{
; 2571 : 				return pkTraitInfo->GetFreeBuildingOnConquest();

	mov	eax, DWORD PTR [ebx+580]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 2577 : }

	ret	0
?GetFreeBuildingOnConquest@CvPlayerTraits@@QBE?AW4BuildingTypes@@XZ ENDP ; CvPlayerTraits::GetFreeBuildingOnConquest
_TEXT	ENDS
PUBLIC	?GetFreeBuildingPrereqTech@CvPlayerTraits@@QBE?AW4TechTypes@@XZ ; CvPlayerTraits::GetFreeBuildingPrereqTech
; Function compile flags: /Ogtpy
;	COMDAT ?GetFreeBuildingPrereqTech@CvPlayerTraits@@QBE?AW4TechTypes@@XZ
_TEXT	SEGMENT
?GetFreeBuildingPrereqTech@CvPlayerTraits@@QBE?AW4TechTypes@@XZ PROC ; CvPlayerTraits::GetFreeBuildingPrereqTech, COMDAT
; _this$ = ecx

; 2723 : {

	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx

; 2724 : 	for(size_t iI = 0; iI < m_vPotentiallyActiveLeaderTraits.size(); iI++)

	mov	eax, DWORD PTR [esi+36]
	sub	eax, DWORD PTR [esi+32]
	xor	ebp, ebp
	sar	eax, 2
	push	edi
	test	eax, eax
	jbe	SHORT $LN2@GetFreeBui@3
	npad	11
$LL4@GetFreeBui@3:
	mov	eax, DWORD PTR [esi+32]
	lea	edi, DWORD PTR [ebp*4]

; 2725 : 	{
; 2726 : 		CvTraitEntry* pkTraitInfo = GC.getTraitInfo(m_vPotentiallyActiveLeaderTraits[iI]);

	mov	ecx, DWORD PTR [eax+edi]
	add	eax, edi
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getTraitInfo@CvGlobals@@QAEPAVCvTraitEntry@@W4TraitTypes@@@Z ; CvGlobals::getTraitInfo
	mov	ebx, eax

; 2727 : 		if(pkTraitInfo && HasTrait(m_vPotentiallyActiveLeaderTraits[iI]) && pkTraitInfo->GetFreeBuildingPrereqTech())

	test	ebx, ebx
	je	SHORT $LN3@GetFreeBui@3
	mov	eax, DWORD PTR [esi+32]
	mov	edx, DWORD PTR [eax+edi]
	add	eax, edi
	push	edx
	mov	ecx, esi
	call	?HasTrait@CvPlayerTraits@@QBE_NW4TraitTypes@@@Z ; CvPlayerTraits::HasTrait
	test	al, al
	je	SHORT $LN3@GetFreeBui@3
	cmp	DWORD PTR [ebx+572], 0
	jne	SHORT $LN18@GetFreeBui@3
$LN3@GetFreeBui@3:

; 2724 : 	for(size_t iI = 0; iI < m_vPotentiallyActiveLeaderTraits.size(); iI++)

	mov	eax, DWORD PTR [esi+36]
	sub	eax, DWORD PTR [esi+32]
	inc	ebp
	sar	eax, 2
	cmp	ebp, eax
	jb	SHORT $LL4@GetFreeBui@3
$LN2@GetFreeBui@3:
	pop	edi
	pop	esi
	pop	ebp

; 2729 : 	}
; 2730 : 
; 2731 : 	return NO_TECH;

	or	eax, -1
	pop	ebx

; 2732 : }

	ret	0
$LN18@GetFreeBui@3:

; 2728 : 			return pkTraitInfo->GetFreeBuildingPrereqTech();

	mov	eax, DWORD PTR [ebx+572]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 2732 : }

	ret	0
?GetFreeBuildingPrereqTech@CvPlayerTraits@@QBE?AW4TechTypes@@XZ ENDP ; CvPlayerTraits::GetFreeBuildingPrereqTech
_TEXT	ENDS
PUBLIC	?GetCapitalFreeBuildingPrereqTech@CvPlayerTraits@@QBE?AW4TechTypes@@XZ ; CvPlayerTraits::GetCapitalFreeBuildingPrereqTech
; Function compile flags: /Ogtpy
;	COMDAT ?GetCapitalFreeBuildingPrereqTech@CvPlayerTraits@@QBE?AW4TechTypes@@XZ
_TEXT	SEGMENT
?GetCapitalFreeBuildingPrereqTech@CvPlayerTraits@@QBE?AW4TechTypes@@XZ PROC ; CvPlayerTraits::GetCapitalFreeBuildingPrereqTech, COMDAT
; _this$ = ecx

; 2735 : {

	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx

; 2736 : 	for(size_t iI = 0; iI < m_vPotentiallyActiveLeaderTraits.size(); iI++)

	mov	eax, DWORD PTR [esi+36]
	sub	eax, DWORD PTR [esi+32]
	xor	ebp, ebp
	sar	eax, 2
	push	edi
	test	eax, eax
	jbe	SHORT $LN2@GetCapital@2
	npad	11
$LL4@GetCapital@2:
	mov	eax, DWORD PTR [esi+32]
	lea	edi, DWORD PTR [ebp*4]

; 2737 : 	{
; 2738 : 		CvTraitEntry* pkTraitInfo = GC.getTraitInfo(m_vPotentiallyActiveLeaderTraits[iI]);

	mov	ecx, DWORD PTR [eax+edi]
	add	eax, edi
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getTraitInfo@CvGlobals@@QAEPAVCvTraitEntry@@W4TraitTypes@@@Z ; CvGlobals::getTraitInfo
	mov	ebx, eax

; 2739 : 		if(pkTraitInfo && HasTrait(m_vPotentiallyActiveLeaderTraits[iI]) && pkTraitInfo->GetCapitalFreeBuildingPrereqTech())

	test	ebx, ebx
	je	SHORT $LN3@GetCapital@2
	mov	eax, DWORD PTR [esi+32]
	mov	edx, DWORD PTR [eax+edi]
	add	eax, edi
	push	edx
	mov	ecx, esi
	call	?HasTrait@CvPlayerTraits@@QBE_NW4TraitTypes@@@Z ; CvPlayerTraits::HasTrait
	test	al, al
	je	SHORT $LN3@GetCapital@2
	cmp	DWORD PTR [ebx+576], 0
	jne	SHORT $LN18@GetCapital@2
$LN3@GetCapital@2:

; 2736 : 	for(size_t iI = 0; iI < m_vPotentiallyActiveLeaderTraits.size(); iI++)

	mov	eax, DWORD PTR [esi+36]
	sub	eax, DWORD PTR [esi+32]
	inc	ebp
	sar	eax, 2
	cmp	ebp, eax
	jb	SHORT $LL4@GetCapital@2
$LN2@GetCapital@2:
	pop	edi
	pop	esi
	pop	ebp

; 2741 : 	}
; 2742 : 
; 2743 : 	return NO_TECH;

	or	eax, -1
	pop	ebx

; 2744 : }

	ret	0
$LN18@GetCapital@2:

; 2740 : 			return pkTraitInfo->GetCapitalFreeBuildingPrereqTech();

	mov	eax, DWORD PTR [ebx+576]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 2744 : }

	ret	0
?GetCapitalFreeBuildingPrereqTech@CvPlayerTraits@@QBE?AW4TechTypes@@XZ ENDP ; CvPlayerTraits::GetCapitalFreeBuildingPrereqTech
_TEXT	ENDS
PUBLIC	?IsUsingMayaCalendar@CvPlayerTraits@@QBE_NXZ	; CvPlayerTraits::IsUsingMayaCalendar
EXTRN	?getNumTraitInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumTraitInfos
; Function compile flags: /Ogtpy
;	COMDAT ?IsUsingMayaCalendar@CvPlayerTraits@@QBE_NXZ
_TEXT	SEGMENT
?IsUsingMayaCalendar@CvPlayerTraits@@QBE_NXZ PROC	; CvPlayerTraits::IsUsingMayaCalendar, COMDAT
; _this$ = ecx

; 2834 : {

	push	ebx
	push	esi
	mov	ebx, ecx
	push	edi

; 2835 : 	int iNumTraits = GC.getNumTraitInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumTraitInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumTraitInfos
	mov	edi, eax

; 2836 : 	for(int iI = 0; iI < iNumTraits; iI++)

	xor	esi, esi
	test	edi, edi
	jle	SHORT $LN5@IsUsingMay
	npad	9
$LL7@IsUsingMay:

; 2837 : 	{
; 2838 : 		const TraitTypes eTrait = static_cast<TraitTypes>(iI);
; 2839 : 		CvTraitEntry* pkTraitInfo = GC.getTraitInfo(eTrait);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getTraitInfo@CvGlobals@@QAEPAVCvTraitEntry@@W4TraitTypes@@@Z ; CvGlobals::getTraitInfo

; 2840 : 		if(pkTraitInfo)

	test	eax, eax
	je	SHORT $LN6@IsUsingMay

; 2841 : 		{
; 2842 : 			if(pkTraitInfo->IsMayaCalendarBonuses())

	cmp	BYTE PTR [eax+602], 0
	jne	SHORT $LN13@IsUsingMay
$LN6@IsUsingMay:

; 2836 : 	for(int iI = 0; iI < iNumTraits; iI++)

	inc	esi
	cmp	esi, edi
	jl	SHORT $LL7@IsUsingMay
$LN5@IsUsingMay:
	pop	edi
	pop	esi

; 2845 : 				{
; 2846 : 					return true;
; 2847 : 				}
; 2848 : 				else
; 2849 : 				{
; 2850 : 					return false;
; 2851 : 				}
; 2852 : 			}
; 2853 : 		}
; 2854 : 	}
; 2855 : 	return false;

	xor	al, al
	pop	ebx

; 2856 : }

	ret	0
$LN13@IsUsingMay:

; 2843 : 			{
; 2844 : 				if(HasTrait(eTrait))

	push	esi
	mov	ecx, ebx
	call	?HasTrait@CvPlayerTraits@@QBE_NW4TraitTypes@@@Z ; CvPlayerTraits::HasTrait
	pop	edi
	test	al, al
	pop	esi
	setne	al
	pop	ebx

; 2856 : }

	ret	0
?IsUsingMayaCalendar@CvPlayerTraits@@QBE_NXZ ENDP	; CvPlayerTraits::IsUsingMayaCalendar
_TEXT	ENDS
PUBLIC	?IsEndOfMayaLongCount@CvPlayerTraits@@QAE_NXZ	; CvPlayerTraits::IsEndOfMayaLongCount
; Function compile flags: /Ogtpy
;	COMDAT ?IsEndOfMayaLongCount@CvPlayerTraits@@QAE_NXZ
_TEXT	SEGMENT
?IsEndOfMayaLongCount@CvPlayerTraits@@QAE_NXZ PROC	; CvPlayerTraits::IsEndOfMayaLongCount, COMDAT
; _this$ = ecx

; 2860 : {

	push	ebx
	push	esi
	mov	esi, ecx

; 2861 : 	bool bRtnValue = false;

	xor	bl, bl

; 2862 : 
; 2863 : 	if (!IsUsingMayaCalendar())

	call	?IsUsingMayaCalendar@CvPlayerTraits@@QBE_NXZ ; CvPlayerTraits::IsUsingMayaCalendar
	test	al, al
	jne	SHORT $LN2@IsEndOfMay
	pop	esi
	pop	ebx

; 2878 : }

	ret	0
$LN2@IsEndOfMay:

; 2864 : 	{
; 2865 : 		return bRtnValue;
; 2866 : 	}
; 2867 : 
; 2868 : 	ComputeMayaDate();

	mov	ecx, esi
	call	?ComputeMayaDate@CvPlayerTraits@@QAEXXZ	; CvPlayerTraits::ComputeMayaDate

; 2869 : 
; 2870 : 	if(m_iBaktunPreviousTurn + 1 == m_iBaktun)

	mov	ecx, DWORD PTR [esi+740]
	mov	eax, DWORD PTR [esi+744]
	inc	ecx
	cmp	ecx, eax
	jne	SHORT $LN1@IsEndOfMay

; 2871 : 	{
; 2872 : 		bRtnValue = true;

	mov	bl, 1
$LN1@IsEndOfMay:

; 2873 : 	}
; 2874 : 
; 2875 : 	m_iBaktunPreviousTurn = m_iBaktun;

	mov	DWORD PTR [esi+740], eax
	pop	esi

; 2876 : 
; 2877 : 	return bRtnValue;

	mov	al, bl
	pop	ebx

; 2878 : }

	ret	0
?IsEndOfMayaLongCount@CvPlayerTraits@@QAE_NXZ ENDP	; CvPlayerTraits::IsEndOfMayaLongCount
_TEXT	ENDS
PUBLIC	?GetMayaCalendarString@CvPlayerTraits@@QAE?AVCvString@@XZ ; CvPlayerTraits::GetMayaCalendarString
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?GetMayaCalendarString@CvPlayerTraits@@QAE?AVCvString@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetMayaCalendarString@CvPlayerTraits@@QAE?AVCvString@@XZ$0
__ehfuncinfo$?GetMayaCalendarString@CvPlayerTraits@@QAE?AVCvString@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetMayaCalendarString@CvPlayerTraits@@QAE?AVCvString@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetMayaCalendarString@CvPlayerTraits@@QAE?AVCvString@@XZ
_TEXT	SEGMENT
$T233368 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetMayaCalendarString@CvPlayerTraits@@QAE?AVCvString@@XZ PROC ; CvPlayerTraits::GetMayaCalendarString, COMDAT
; _this$ = ecx

; 2882 : {

	push	-1
	push	__ehhandler$?GetMayaCalendarString@CvPlayerTraits@@QAE?AVCvString@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR $T233368[esp+24], 0

; 2883 : 	CvString szRtnValue;

	mov	edi, DWORD PTR ___$ReturnUdt$[esp+20]
	mov	esi, ecx
	mov	ecx, edi
	mov	DWORD PTR __$EHRec$[esp+32], 0
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2884 : 	ComputeMayaDate();
; 2885 : 	szRtnValue.Format("%d.%d.%d.%d.%d", m_iBaktun, m_iKatun, m_iTun, m_iWinal, m_iKin);
; 2886 : 	return szRtnValue;

	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+32], 0
	mov	DWORD PTR $T233368[esp+24], 1
	call	?ComputeMayaDate@CvPlayerTraits@@QAEXXZ	; CvPlayerTraits::ComputeMayaDate
	mov	eax, DWORD PTR [esi+760]
	mov	ecx, DWORD PTR [esi+756]
	mov	edx, DWORD PTR [esi+752]
	push	eax
	mov	eax, DWORD PTR [esi+748]
	push	ecx
	mov	ecx, DWORD PTR [esi+744]
	push	edx
	push	eax
	push	ecx
	push	OFFSET $SG224046
	push	edi
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format

; 2887 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	add	esp, 28					; 0000001cH
	mov	eax, edi
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetMayaCalendarString@CvPlayerTraits@@QAE?AVCvString@@XZ$0:
	mov	eax, DWORD PTR $T233368[ebp]
	and	eax, 1
	je	$LN4@GetMayaCal
	and	DWORD PTR $T233368[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
$LN4@GetMayaCal:
	ret	0
__ehhandler$?GetMayaCalendarString@CvPlayerTraits@@QAE?AVCvString@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?GetMayaCalendarString@CvPlayerTraits@@QAE?AVCvString@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetMayaCalendarString@CvPlayerTraits@@QAE?AVCvString@@XZ ENDP ; CvPlayerTraits::GetMayaCalendarString
PUBLIC	?GetMayaCalendarLongString@CvPlayerTraits@@QAE?AVCvString@@XZ ; CvPlayerTraits::GetMayaCalendarLongString
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?GetMayaCalendarLongString@CvPlayerTraits@@QAE?AVCvString@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetMayaCalendarLongString@CvPlayerTraits@@QAE?AVCvString@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetMayaCalendarLongString@CvPlayerTraits@@QAE?AVCvString@@XZ$1
__ehfuncinfo$?GetMayaCalendarLongString@CvPlayerTraits@@QAE?AVCvString@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetMayaCalendarLongString@CvPlayerTraits@@QAE?AVCvString@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetMayaCalendarLongString@CvPlayerTraits@@QAE?AVCvString@@XZ
_TEXT	SEGMENT
$T233385 = -44						; size = 4
$T233383 = -40						; size = 28
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetMayaCalendarLongString@CvPlayerTraits@@QAE?AVCvString@@XZ PROC ; CvPlayerTraits::GetMayaCalendarLongString, COMDAT
; _this$ = ecx

; 2891 : {

	push	-1
	push	__ehhandler$?GetMayaCalendarLongString@CvPlayerTraits@@QAE?AVCvString@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	xor	ebx, ebx
	push	edi
	mov	DWORD PTR $T233385[esp+56], ebx

; 2892 : 	CvString szRtnValue;

	mov	edi, DWORD PTR ___$ReturnUdt$[esp+52]
	mov	esi, ecx
	mov	ecx, edi
	mov	DWORD PTR __$EHRec$[esp+64], ebx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2893 : 	ComputeMayaDate();
; 2894 : 	szRtnValue = GetLocalizedText("TXT_KEY_MAYA_CALENDAR_LONG_STRING", m_iBaktun, m_iKatun, m_iTun, m_iWinal, m_iKin);
; 2895 : 	return szRtnValue;

	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+64], ebx
	mov	DWORD PTR $T233385[esp+56], 1
	call	?ComputeMayaDate@CvPlayerTraits@@QAEXXZ	; CvPlayerTraits::ComputeMayaDate
	lea	eax, DWORD PTR [esi+760]
	push	eax
	lea	ecx, DWORD PTR [esi+756]
	push	ecx
	lea	edx, DWORD PTR [esi+752]
	push	edx
	lea	eax, DWORD PTR [esi+748]
	push	eax
	add	esi, 744				; 000002e8H
	push	esi
	lea	ecx, DWORD PTR $T233383[esp+76]
	push	OFFSET $SG224066
	push	ecx
	call	??$GetLocalizedText@HHHHH@@YA?AVCvString@@PBDABH1111@Z ; GetLocalizedText<int,int,int,int,int>
	add	esp, 28					; 0000001cH
	push	eax
	mov	ecx, edi
	mov	DWORD PTR __$EHRec$[esp+68], 1
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T233383[esp+56]
	mov	BYTE PTR __$EHRec$[esp+64], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2896 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 44					; 0000002cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetMayaCalendarLongString@CvPlayerTraits@@QAE?AVCvString@@XZ$0:
	mov	eax, DWORD PTR $T233385[ebp]
	and	eax, 1
	je	$LN4@GetMayaCal@2
	and	DWORD PTR $T233385[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
$LN4@GetMayaCal@2:
	ret	0
__unwindfunclet$?GetMayaCalendarLongString@CvPlayerTraits@@QAE?AVCvString@@XZ$1:
	lea	ecx, DWORD PTR $T233383[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?GetMayaCalendarLongString@CvPlayerTraits@@QAE?AVCvString@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?GetMayaCalendarLongString@CvPlayerTraits@@QAE?AVCvString@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetMayaCalendarLongString@CvPlayerTraits@@QAE?AVCvString@@XZ ENDP ; CvPlayerTraits::GetMayaCalendarLongString
PUBLIC	?GetUnitBaktun@CvPlayerTraits@@QBEHW4UnitTypes@@@Z ; CvPlayerTraits::GetUnitBaktun
; Function compile flags: /Ogtpy
;	COMDAT ?GetUnitBaktun@CvPlayerTraits@@QBEHW4UnitTypes@@@Z
_TEXT	SEGMENT
_eUnit$ = 8						; size = 4
?GetUnitBaktun@CvPlayerTraits@@QBEHW4UnitTypes@@@Z PROC	; CvPlayerTraits::GetUnitBaktun, COMDAT
; _this$ = ecx

; 3104 : 	std::vector<MayaBonusChoice>::const_iterator it;
; 3105 : 
; 3106 : 	// Loop through all units available to tactical AI this turn
; 3107 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 3108 : 	for (it = m_aMayaBonusChoices.begin(); it != m_aMayaBonusChoices.end(); ++it)
; 3109 : #else
; 3110 : 	for(it = m_aMayaBonusChoices.begin(); it != m_aMayaBonusChoices.end(); it++)

	mov	eax, DWORD PTR [ecx+768]
	mov	ecx, DWORD PTR [ecx+772]
	cmp	eax, ecx
	je	SHORT $LN2@GetUnitBak
	mov	edx, DWORD PTR _eUnit$[esp-4]
$LL15@GetUnitBak:

; 3111 : #endif
; 3112 : 	{
; 3113 : 		if(it->m_eUnitType == eUnit)

	cmp	DWORD PTR [eax], edx
	je	SHORT $LN34@GetUnitBak
	add	eax, 8
	cmp	eax, ecx
	jne	SHORT $LL15@GetUnitBak
$LN2@GetUnitBak:

; 3116 : 		}
; 3117 : 	}
; 3118 : 
; 3119 : 	return 0;

	xor	eax, eax

; 3120 : }

	ret	4
$LN34@GetUnitBak:

; 3114 : 		{
; 3115 : 			return it->m_iBaktunJustFinished;

	mov	eax, DWORD PTR [eax+4]

; 3120 : }

	ret	4
?GetUnitBaktun@CvPlayerTraits@@QBEHW4UnitTypes@@@Z ENDP	; CvPlayerTraits::GetUnitBaktun
_TEXT	ENDS
PUBLIC	?ConvertBarbarianCamp@CvPlayerTraits@@AAE_NPAVCvPlot@@@Z ; CvPlayerTraits::ConvertBarbarianCamp
EXTRN	?SetBarbarianCampNotConverting@CvPlot@@QAEX_N@Z:PROC ; CvPlot::SetBarbarianCampNotConverting
EXTRN	?isGameMultiPlayer@CvGame@@QBE_NXZ:PROC		; CvGame::isGameMultiPlayer
EXTRN	?isHuman@CvPlayer@@QBE_NXZ:PROC			; CvPlayer::isHuman
EXTRN	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z:PROC ; CvNotifications::Add
EXTRN	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ:PROC ; CvPlayer::GetNotifications
EXTRN	?LogHomelandMessage@CvHomelandAI@@QAEXAAVCvString@@@Z:PROC ; CvHomelandAI::LogHomelandMessage
EXTRN	?GetHomelandAI@CvPlayer@@QBEPAVCvHomelandAI@@XZ:PROC ; CvPlayer::GetHomelandAI
EXTRN	?getAILogging@CvGlobals@@QAE_NXZ:PROC		; CvGlobals::getAILogging
EXTRN	?getLogging@CvGlobals@@QAE_NXZ:PROC		; CvGlobals::getLogging
EXTRN	?finishMoves@CvUnit@@QAEXXZ:PROC		; CvUnit::finishMoves
EXTRN	?kill@CvUnit@@QAEX_NW4PlayerTypes@@@Z:PROC	; CvUnit::kill
EXTRN	?jumpToNearestValidPlot@CvUnit@@QAE_NXZ:PROC	; CvUnit::jumpToNearestValidPlot
EXTRN	?initUnit@CvPlayer@@QAEPAVCvUnit@@W4UnitTypes@@HHW4UnitAITypes@@W4DirectionTypes@@_N3HH@Z:PROC ; CvPlayer::initUnit
EXTRN	?SetPlayerThatClearedBarbCampHere@CvPlot@@QAEXW4PlayerTypes@@@Z:PROC ; CvPlot::SetPlayerThatClearedBarbCampHere
EXTRN	?ChangeGold@CvTreasury@@QAEXH@Z:PROC		; CvTreasury::ChangeGold
EXTRN	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ:PROC ; CvPlayer::GetTreasury
EXTRN	?setImprovementType@CvPlot@@QAEXW4ImprovementTypes@@W4PlayerTypes@@@Z:PROC ; CvPlot::setImprovementType
EXTRN	?getJonRandNum@CvGame@@QAEHHPBD@Z:PROC		; CvGame::getJonRandNum
EXTRN	?IsBarbarianCampNotConverting@CvPlot@@QBE_NXZ:PROC ; CvPlot::IsBarbarianCampNotConverting
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?ConvertBarbarianCamp@CvPlayerTraits@@AAE_NPAVCvPlot@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ConvertBarbarianCamp@CvPlayerTraits@@AAE_NPAVCvPlot@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ConvertBarbarianCamp@CvPlayerTraits@@AAE_NPAVCvPlot@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?ConvertBarbarianCamp@CvPlayerTraits@@AAE_NPAVCvPlot@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?ConvertBarbarianCamp@CvPlayerTraits@@AAE_NPAVCvPlot@@@Z$3
__ehfuncinfo$?ConvertBarbarianCamp@CvPlayerTraits@@AAE_NPAVCvPlot@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?ConvertBarbarianCamp@CvPlayerTraits@@AAE_NPAVCvPlot@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
xdata$x	ENDS
;	COMDAT ?ConvertBarbarianCamp@CvPlayerTraits@@AAE_NPAVCvPlot@@@Z
_TEXT	SEGMENT
_pGiftUnit$ = -104					; size = 8
_logMsg$224673 = -96					; size = 28
_strSummary$224678 = -68				; size = 28
_strBuffer$224675 = -40					; size = 28
__$EHRec$ = -12						; size = 12
$T233601 = 8						; size = 4
_iI$224666 = 8						; size = 4
_pPlot$ = 8						; size = 4
?ConvertBarbarianCamp@CvPlayerTraits@@AAE_NPAVCvPlot@@@Z PROC ; CvPlayerTraits::ConvertBarbarianCamp, COMDAT
; _this$ = ecx

; 3815 : {

	push	-1
	push	__ehhandler$?ConvertBarbarianCamp@CvPlayerTraits@@AAE_NPAVCvPlot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi

; 3816 : 	UnitHandle pGiftUnit;

	xor	ebx, ebx
	push	edi
	mov	esi, ecx
	mov	DWORD PTR _pGiftUnit$[esp+116], ebx
	mov	BYTE PTR _pGiftUnit$[esp+120], bl

; 3817 : 
; 3818 : 	// Has this camp already decided not to convert?
; 3819 : 	if(pPlot->IsBarbarianCampNotConverting())

	mov	edi, DWORD PTR _pPlot$[esp+112]
	mov	ecx, edi
	mov	DWORD PTR __$EHRec$[esp+124], ebx
	call	?IsBarbarianCampNotConverting@CvPlot@@QBE_NXZ ; CvPlot::IsBarbarianCampNotConverting
	test	al, al

; 3820 : 	{
; 3821 : 		return false;

	jne	$LN112@ConvertBar

; 3822 : 	}
; 3823 : 
; 3824 : 	// Roll die to see if it converts
; 3825 : 	if(GC.getGame().getJonRandNum(100, "Barbarian Camp Conversion") < m_iLandBarbarianConversionPercent)

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	OFFSET $SG224662
	push	100					; 00000064H
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	cmp	eax, DWORD PTR [esi+100]

; 3826 : 	{
; 3827 : 		pPlot->setImprovementType(NO_IMPROVEMENT);

	mov	ecx, edi
	jge	$LN11@ConvertBar
	push	ebp
	push	-1
	push	-1
	call	?setImprovementType@CvPlot@@QAEXW4ImprovementTypes@@W4PlayerTypes@@@Z ; CvPlot::setImprovementType

; 3828 : 
; 3829 : 		int iNumGold = /*25*/ GC.getGOLD_FROM_BARBARIAN_CONVERSION();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7068

; 3830 : 		m_pPlayer->GetTreasury()->ChangeGold(iNumGold);

	mov	ecx, DWORD PTR [esi+4]
	push	eax
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?ChangeGold@CvTreasury@@QAEXH@Z		; CvTreasury::ChangeGold

; 3831 : 
; 3832 : 		// Set who last cleared the camp here
; 3833 : 		pPlot->SetPlayerThatClearedBarbCampHere(m_pPlayer->GetID());

	mov	eax, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax+44]
	push	eax
	mov	ecx, edi
	call	?SetPlayerThatClearedBarbCampHere@CvPlot@@QAEXW4PlayerTypes@@@Z ; CvPlot::SetPlayerThatClearedBarbCampHere

; 3834 : 
; 3835 : 		// Convert the barbarian into our unit
; 3836 : 		FAssertMsg(m_eCampGuardType < GC.getNumUnitInfos(), "Illegal camp guard unit type");
; 3837 : 		pGiftUnit = m_pPlayer->initUnit(m_eCampGuardType, pPlot->getX(), pPlot->getY(), NO_UNITAI, NO_DIRECTION, true /*bNoMove*/);

	movsx	eax, WORD PTR [edi+2]
	movsx	ecx, WORD PTR [edi]
	push	ebx
	push	ebx
	push	1
	push	1
	push	-1
	push	-1
	push	eax
	push	ecx
	mov	ecx, DWORD PTR [esi+356]
	push	ecx
	mov	ecx, DWORD PTR [esi+4]
	call	?initUnit@CvPlayer@@QAEPAVCvUnit@@W4UnitTypes@@HHW4UnitAITypes@@W4DirectionTypes@@_N3HH@Z ; CvPlayer::initUnit
	mov	ebp, eax
	mov	ebx, ebp
	mov	DWORD PTR _pGiftUnit$[esp+120], ebx
	test	ebp, ebp
	je	SHORT $LN44@ConvertBar
	mov	ecx, ebp
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN44@ConvertBar:

; 3838 : 		if (!pGiftUnit->jumpToNearestValidPlot())

	mov	ecx, ebp
	call	?jumpToNearestValidPlot@CvUnit@@QAE_NXZ	; CvUnit::jumpToNearestValidPlot

; 3839 : 			pGiftUnit->kill(false);

	mov	ecx, ebp
	test	al, al
	jne	SHORT $LN10@ConvertBar
	push	-1
	push	0
	call	?kill@CvUnit@@QAEX_NW4PlayerTypes@@@Z	; CvUnit::kill

; 3840 : 		else

	jmp	SHORT $LN9@ConvertBar
$LN10@ConvertBar:

; 3841 : 			pGiftUnit->finishMoves();

	call	?finishMoves@CvUnit@@QAEXXZ		; CvUnit::finishMoves
$LN9@ConvertBar:

; 3842 : 
; 3843 : 		// Convert any extra units
; 3844 : 		for(int iI = 0; iI < m_iLandBarbarianConversionExtraUnits; iI++)

	cmp	DWORD PTR [esi+104], 0
	mov	DWORD PTR _iI$224666[esp+116], 0
	jle	SHORT $LN6@ConvertBar
	npad	8
$LL110@ConvertBar:

; 3845 : 		{
; 3846 : 			pGiftUnit = m_pPlayer->initUnit(m_eCampGuardType, pPlot->getX(), pPlot->getY(), NO_UNITAI, NO_DIRECTION, true /*bNoMove*/);

	movsx	eax, WORD PTR [edi+2]
	movsx	ecx, WORD PTR [edi]
	mov	edx, DWORD PTR [esi+356]
	push	0
	push	0
	push	1
	push	1
	push	-1
	push	-1
	push	eax
	push	ecx
	mov	ecx, DWORD PTR [esi+4]
	push	edx
	call	?initUnit@CvPlayer@@QAEPAVCvUnit@@W4UnitTypes@@HHW4UnitAITypes@@W4DirectionTypes@@_N3HH@Z ; CvPlayer::initUnit
	mov	ebp, eax
	test	ebx, ebx
	je	SHORT $LN60@ConvertBar
	mov	ecx, ebx
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN60@ConvertBar:
	mov	ebx, ebp
	mov	DWORD PTR _pGiftUnit$[esp+120], ebx
	test	ebp, ebp
	je	SHORT $LN62@ConvertBar
	mov	ecx, ebp
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN62@ConvertBar:

; 3847 : 			if (!pGiftUnit->jumpToNearestValidPlot())

	mov	ecx, ebp
	call	?jumpToNearestValidPlot@CvUnit@@QAE_NXZ	; CvUnit::jumpToNearestValidPlot

; 3848 : 				pGiftUnit->kill(false);

	mov	ecx, ebp
	test	al, al
	jne	SHORT $LN5@ConvertBar
	push	-1
	push	0
	call	?kill@CvUnit@@QAEX_NW4PlayerTypes@@@Z	; CvUnit::kill

; 3849 : 			else

	jmp	SHORT $LN7@ConvertBar
$LN5@ConvertBar:

; 3850 : 				pGiftUnit->finishMoves();

	call	?finishMoves@CvUnit@@QAEXXZ		; CvUnit::finishMoves
$LN7@ConvertBar:

; 3842 : 
; 3843 : 		// Convert any extra units
; 3844 : 		for(int iI = 0; iI < m_iLandBarbarianConversionExtraUnits; iI++)

	mov	eax, DWORD PTR _iI$224666[esp+116]
	inc	eax
	cmp	eax, DWORD PTR [esi+104]
	mov	DWORD PTR _iI$224666[esp+116], eax
	jl	SHORT $LL110@ConvertBar
$LN6@ConvertBar:

; 3851 : 		}
; 3852 : 
; 3853 : 		if(GC.getLogging() && GC.getAILogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	SHORT $LN3@ConvertBar
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getAILogging@CvGlobals@@QAE_NXZ	; CvGlobals::getAILogging
	test	al, al
	je	SHORT $LN3@ConvertBar

; 3854 : 		{
; 3855 : 			CvString logMsg;

	lea	ecx, DWORD PTR _logMsg$224673[esp+120]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 3856 : 			logMsg.Format("Converted barbarian camp, X: %d, Y: %d", pPlot->getX(), pPlot->getY());

	movsx	eax, WORD PTR [edi+2]
	movsx	ecx, WORD PTR [edi]
	push	eax
	push	ecx
	lea	edx, DWORD PTR _logMsg$224673[esp+128]
	push	OFFSET $SG224674
	push	edx
	mov	BYTE PTR __$EHRec$[esp+144], 1
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format

; 3857 : 			m_pPlayer->GetHomelandAI()->LogHomelandMessage(logMsg);

	mov	ecx, DWORD PTR [esi+4]
	add	esp, 16					; 00000010H
	lea	eax, DWORD PTR _logMsg$224673[esp+120]
	push	eax
	call	?GetHomelandAI@CvPlayer@@QBEPAVCvHomelandAI@@XZ ; CvPlayer::GetHomelandAI
	mov	ecx, eax
	call	?LogHomelandMessage@CvHomelandAI@@QAEXAAVCvString@@@Z ; CvHomelandAI::LogHomelandMessage

; 3858 : 		}

	lea	ecx, DWORD PTR _logMsg$224673[esp+120]
	mov	BYTE PTR __$EHRec$[esp+128], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN3@ConvertBar:

; 3859 : 
; 3860 : 		CvString strBuffer = GetLocalizedText("TXT_KEY_NOTIFICATION_BARB_CAMP_CONVERTS");

	lea	ecx, DWORD PTR _strBuffer$224675[esp+120]
	push	OFFSET $SG224677
	push	ecx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText

; 3861 : 		CvString strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_BARB_CAMP_CONVERTS");

	lea	edx, DWORD PTR _strSummary$224678[esp+128]
	push	OFFSET $SG224680
	push	edx
	mov	BYTE PTR __$EHRec$[esp+144], 2
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 16					; 00000010H

; 3862 : 		m_pPlayer->GetNotifications()->Add(NOTIFICATION_GENERIC, strBuffer, strSummary, pPlot->getX(), pPlot->getY(), -1);

	movsx	ebp, WORD PTR [edi+2]
	movsx	edi, WORD PTR [edi]
	lea	ecx, DWORD PTR _strSummary$224678[esp+120]
	mov	BYTE PTR __$EHRec$[esp+128], 3
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	lea	ecx, DWORD PTR _strBuffer$224675[esp+120]
	mov	DWORD PTR $T233601[esp+116], eax
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	ecx, DWORD PTR $T233601[esp+116]
	push	-1
	push	-1
	push	ebp
	push	edi
	push	ecx
	mov	ecx, DWORD PTR [esi+4]
	push	eax
	push	-1097390650				; be9725c6H
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 3863 : 		//Increase Stat
; 3864 : 		if(m_pPlayer->isHuman() &&!GC.getGame().isGameMultiPlayer())

	mov	ecx, DWORD PTR [esi+4]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	pop	ebp
	test	al, al
	je	SHORT $LN2@ConvertBar
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?isGameMultiPlayer@CvGame@@QBE_NXZ	; CvGame::isGameMultiPlayer
	test	al, al
	jne	SHORT $LN2@ConvertBar

; 3865 : 		{
; 3866 : 			gDLL->IncrementSteamStatAndUnlock(ESTEAMSTAT_BARBSCONVERTED, 10, ACHIEVEMENT_SPECIAL_BARBARIANWARLORD);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8596
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+848]
	push	110					; 0000006eH
	push	10					; 0000000aH
	push	128					; 00000080H
	call	eax
$LN2@ConvertBar:

; 3867 : 		}
; 3868 : 	}

	lea	ecx, DWORD PTR _strSummary$224678[esp+116]
	mov	BYTE PTR __$EHRec$[esp+124], 2
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strBuffer$224675[esp+116]
	mov	BYTE PTR __$EHRec$[esp+124], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 3874 : 		return false;
; 3875 : 	}
; 3876 : 
; 3877 : 	return true;

	mov	DWORD PTR __$EHRec$[esp+124], -1
	test	ebx, ebx
	je	SHORT $LN106@ConvertBar
	mov	ecx, ebx
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN106@ConvertBar:
	pop	edi
	pop	esi
	mov	al, 1
	pop	ebx

; 3878 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+104]
	mov	DWORD PTR fs:0, ecx
	add	esp, 104				; 00000068H
	ret	4
$LN11@ConvertBar:

; 3869 : 
; 3870 : 	// Decided not to
; 3871 : 	else
; 3872 : 	{
; 3873 : 		pPlot->SetBarbarianCampNotConverting(true);

	push	1
	call	?SetBarbarianCampNotConverting@CvPlot@@QAEX_N@Z ; CvPlot::SetBarbarianCampNotConverting
$LN112@ConvertBar:

; 3878 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+116]
	pop	edi
	pop	esi
	xor	al, al
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 104				; 00000068H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ConvertBarbarianCamp@CvPlayerTraits@@AAE_NPAVCvPlot@@@Z$0:
	lea	ecx, DWORD PTR _pGiftUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__unwindfunclet$?ConvertBarbarianCamp@CvPlayerTraits@@AAE_NPAVCvPlot@@@Z$1:
	lea	ecx, DWORD PTR _logMsg$224673[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?ConvertBarbarianCamp@CvPlayerTraits@@AAE_NPAVCvPlot@@@Z$2:
	lea	ecx, DWORD PTR _strBuffer$224675[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?ConvertBarbarianCamp@CvPlayerTraits@@AAE_NPAVCvPlot@@@Z$3:
	lea	ecx, DWORD PTR _strSummary$224678[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?ConvertBarbarianCamp@CvPlayerTraits@@AAE_NPAVCvPlot@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?ConvertBarbarianCamp@CvPlayerTraits@@AAE_NPAVCvPlot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ConvertBarbarianCamp@CvPlayerTraits@@AAE_NPAVCvPlot@@@Z ENDP ; CvPlayerTraits::ConvertBarbarianCamp
PUBLIC	?ConvertBarbarianNavalUnit@CvPlayerTraits@@AAE_NV?$FObjectHandle@VCvUnit@@@@@Z ; CvPlayerTraits::ConvertBarbarianNavalUnit
EXTRN	?SetNotConverting@CvUnit@@QAEX_N@Z:PROC		; CvUnit::SetNotConverting
EXTRN	__imp___stricmp:PROC
EXTRN	?setupGraphical@CvUnit@@QAEXXZ:PROC		; CvUnit::setupGraphical
EXTRN	?convert@CvUnit@@QAEXPAV1@_N@Z:PROC		; CvUnit::convert
EXTRN	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ:PROC	; CvUnit::getUnitType
EXTRN	?AI_getUnitAIType@CvUnit@@QBE?AW4UnitAITypes@@XZ:PROC ; CvUnit::AI_getUnitAIType
EXTRN	?IsNotConverting@CvUnit@@QBE_NXZ:PROC		; CvUnit::IsNotConverting
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__ehfuncinfo$?ConvertBarbarianNavalUnit@CvPlayerTraits@@AAE_NV?$FObjectHandle@VCvUnit@@@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?ConvertBarbarianNavalUnit@CvPlayerTraits@@AAE_NV?$FObjectHandle@VCvUnit@@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?ConvertBarbarianNavalUnit@CvPlayerTraits@@AAE_NV?$FObjectHandle@VCvUnit@@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ConvertBarbarianNavalUnit@CvPlayerTraits@@AAE_NV?$FObjectHandle@VCvUnit@@@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ConvertBarbarianNavalUnit@CvPlayerTraits@@AAE_NV?$FObjectHandle@VCvUnit@@@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?ConvertBarbarianNavalUnit@CvPlayerTraits@@AAE_NV?$FObjectHandle@VCvUnit@@@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?ConvertBarbarianNavalUnit@CvPlayerTraits@@AAE_NV?$FObjectHandle@VCvUnit@@@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?ConvertBarbarianNavalUnit@CvPlayerTraits@@AAE_NV?$FObjectHandle@VCvUnit@@@@@Z$4
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
xdata$x	ENDS
;	COMDAT ?ConvertBarbarianNavalUnit@CvPlayerTraits@@AAE_NV?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
$T233833 = -108						; size = 4
_pGiftUnit$ = -104					; size = 8
_logMsg$224698 = -96					; size = 28
_strSummary$224703 = -68				; size = 28
_strBuffer$224700 = -40					; size = 28
__$EHRec$ = -12						; size = 12
_pUnit$ = 8						; size = 8
?ConvertBarbarianNavalUnit@CvPlayerTraits@@AAE_NV?$FObjectHandle@VCvUnit@@@@@Z PROC ; CvPlayerTraits::ConvertBarbarianNavalUnit, COMDAT
; _this$ = ecx

; 3882 : {

	push	-1
	push	__ehhandler$?ConvertBarbarianNavalUnit@CvPlayerTraits@@AAE_NV?$FObjectHandle@VCvUnit@@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 96					; 00000060H
	push	esi
	push	edi
	mov	esi, ecx
	xor	edi, edi
	mov	DWORD PTR __$EHRec$[esp+124], edi

; 3883 : 	UnitHandle pGiftUnit;

	mov	DWORD PTR _pGiftUnit$[esp+116], edi
	mov	BYTE PTR _pGiftUnit$[esp+120], 0

; 3884 : 
; 3885 : 	// Has this unit already decided not to convert?
; 3886 : 	if(pUnit->IsNotConverting())

	mov	ecx, DWORD PTR _pUnit$[esp+112]
	mov	BYTE PTR __$EHRec$[esp+124], 1
	call	?IsNotConverting@CvUnit@@QBE_NXZ	; CvUnit::IsNotConverting
	test	al, al

; 3887 : 	{
; 3888 : 		return false;

	jne	$LN146@ConvertBar@2

; 3889 : 	}
; 3890 : 
; 3891 : 	// Roll die to see if it converts
; 3892 : 	if(GC.getGame().getJonRandNum(100, "Barbarian Naval Unit Conversion") < m_iSeaBarbarianConversionPercent)

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	OFFSET $SG224693
	push	100					; 00000064H
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	cmp	eax, DWORD PTR [esi+108]
	jge	$LN4@ConvertBar@2

; 3893 : 	{
; 3894 : 		int iNumGold = /*25*/ GC.getGOLD_FROM_BARBARIAN_CONVERSION();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7068

; 3895 : 		m_pPlayer->GetTreasury()->ChangeGold(iNumGold);

	mov	ecx, DWORD PTR [esi+4]
	push	ebx
	push	ebp
	push	eax
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?ChangeGold@CvTreasury@@QAEXH@Z		; CvTreasury::ChangeGold

; 3896 : 
; 3897 : 		// Convert the barbarian into our unit
; 3898 : #ifdef AUI_UNIT_FIX_GIFTED_UNITS_ARE_GIFTED_NOT_CLONED
; 3899 : 		pGiftUnit = m_pPlayer->initUnit(pUnit->getUnitType(), pUnit->getX(), pUnit->getY(), pUnit->AI_getUnitAIType(), NO_DIRECTION, true /*bNoMove*/, false, DEFAULT_UNIT_MAP_LAYER, 0, true);
; 3900 : #else
; 3901 : 		pGiftUnit = m_pPlayer->initUnit(pUnit->getUnitType(), pUnit->getX(), pUnit->getY(), pUnit->AI_getUnitAIType(), NO_DIRECTION, true /*bNoMove*/, false);

	mov	ecx, DWORD PTR _pUnit$[esp+120]
	mov	edi, DWORD PTR [ecx+88]
	mov	ebx, DWORD PTR [ecx+76]
	push	0
	push	0
	push	0
	push	1
	push	-1
	mov	ebp, ecx
	call	?AI_getUnitAIType@CvUnit@@QBE?AW4UnitAITypes@@XZ ; CvUnit::AI_getUnitAIType
	push	eax
	push	edi
	push	ebx
	mov	ecx, ebp
	call	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ ; CvUnit::getUnitType
	mov	ecx, DWORD PTR [esi+4]
	push	eax
	call	?initUnit@CvPlayer@@QAEPAVCvUnit@@W4UnitTypes@@HHW4UnitAITypes@@W4DirectionTypes@@_N3HH@Z ; CvPlayer::initUnit
	mov	edi, eax
	mov	DWORD PTR _pGiftUnit$[esp+124], edi
	test	edi, edi
	je	SHORT $LN53@ConvertBar@2
	mov	ecx, edi
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN53@ConvertBar@2:

; 3902 : #endif
; 3903 : 		CvAssertMsg(pGiftUnit, "GiftUnit is not assigned a valid value");
; 3904 : 		pGiftUnit->convert(pUnit.pointer(), false);

	mov	eax, DWORD PTR _pUnit$[esp+120]
	push	0
	push	eax
	mov	ecx, edi
	call	?convert@CvUnit@@QAEXPAV1@_N@Z		; CvUnit::convert

; 3905 : 		pGiftUnit->setupGraphical();

	mov	ecx, edi
	call	?setupGraphical@CvUnit@@QAEXXZ		; CvUnit::setupGraphical

; 3906 : 		pGiftUnit->finishMoves(); // No move first turn

	mov	ecx, edi
	call	?finishMoves@CvUnit@@QAEXXZ		; CvUnit::finishMoves

; 3907 : 
; 3908 : 		// Validate that the achievement is reached by a live human and active player at the same time
; 3909 : 		if(m_pPlayer->isHuman() && !GC.getGame().isGameMultiPlayer() && m_pPlayer->getLeaderInfo().GetType() && _stricmp(m_pPlayer->getLeaderInfo().GetType(), "LEADER_SULEIMAN") == 0)

	mov	ecx, DWORD PTR [esi+4]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	test	al, al
	je	SHORT $LN3@ConvertBar@2
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?isGameMultiPlayer@CvGame@@QBE_NXZ	; CvGame::isGameMultiPlayer
	test	al, al
	jne	SHORT $LN3@ConvertBar@2
	mov	ecx, DWORD PTR [esi+4]
	call	?getLeaderInfo@CvPlayer@@QBEAAVCvLeaderHeadInfo@@XZ ; CvPlayer::getLeaderInfo
	lea	ecx, DWORD PTR [eax+176]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	test	eax, eax
	je	SHORT $LN3@ConvertBar@2
	mov	ecx, DWORD PTR [esi+4]
	call	?getLeaderInfo@CvPlayer@@QBEAAVCvLeaderHeadInfo@@XZ ; CvPlayer::getLeaderInfo
	lea	ecx, DWORD PTR [eax+176]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	OFFSET $SG224696
	push	eax
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@ConvertBar@2

; 3910 : 		{
; 3911 : 			gDLL->IncrementSteamStatAndUnlock(ESTEAMSTAT_BARBSNAVALCONVERTED, 10, ACHIEVEMENT_SPECIAL_BARBARYPIRATE);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8596
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+848]
	push	111					; 0000006fH
	push	10					; 0000000aH
	push	130					; 00000082H
	call	eax
$LN3@ConvertBar@2:

; 3912 : 		}
; 3913 : 
; 3914 : 		if(GC.getLogging() && GC.getAILogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	SHORT $LN2@ConvertBar@2
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getAILogging@CvGlobals@@QAE_NXZ	; CvGlobals::getAILogging
	test	al, al
	je	SHORT $LN2@ConvertBar@2

; 3915 : 		{
; 3916 : 			CvString logMsg;

	lea	ecx, DWORD PTR _logMsg$224698[esp+124]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 3917 : 			logMsg.Format("Converted barbarian naval unit, X: %d, Y: %d", pUnit->getX(), pUnit->getY());

	mov	eax, DWORD PTR _pUnit$[esp+120]
	mov	ecx, DWORD PTR [eax+88]
	mov	eax, DWORD PTR [eax+76]
	push	ecx
	push	eax
	lea	ecx, DWORD PTR _logMsg$224698[esp+132]
	push	OFFSET $SG224699
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+148], 2
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format

; 3918 : 			m_pPlayer->GetHomelandAI()->LogHomelandMessage(logMsg);

	mov	ecx, DWORD PTR [esi+4]
	add	esp, 16					; 00000010H
	lea	edx, DWORD PTR _logMsg$224698[esp+124]
	push	edx
	call	?GetHomelandAI@CvPlayer@@QBEPAVCvHomelandAI@@XZ ; CvPlayer::GetHomelandAI
	mov	ecx, eax
	call	?LogHomelandMessage@CvHomelandAI@@QAEXAAVCvString@@@Z ; CvHomelandAI::LogHomelandMessage

; 3919 : 		}

	lea	ecx, DWORD PTR _logMsg$224698[esp+124]
	mov	BYTE PTR __$EHRec$[esp+132], 1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@ConvertBar@2:

; 3920 : 
; 3921 : 		CvString strBuffer = GetLocalizedText("TXT_KEY_NOTIFICATION_BARB_NAVAL_UNIT_CONVERTS");

	lea	eax, DWORD PTR _strBuffer$224700[esp+124]
	push	OFFSET $SG224702
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText

; 3922 : 		CvString strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_BARB_NAVAL_UNIT_CONVERTS");

	lea	ecx, DWORD PTR _strSummary$224703[esp+132]
	push	OFFSET $SG224705
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+148], 3
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 16					; 00000010H

; 3923 : 		m_pPlayer->GetNotifications()->Add(NOTIFICATION_GENERIC, strBuffer, strSummary, pUnit->getX(), pUnit->getY(), -1);

	mov	eax, DWORD PTR _pUnit$[esp+120]
	mov	ebp, DWORD PTR [eax+88]
	mov	ebx, DWORD PTR [eax+76]
	lea	ecx, DWORD PTR _strSummary$224703[esp+124]
	mov	BYTE PTR __$EHRec$[esp+132], 4
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	lea	ecx, DWORD PTR _strBuffer$224700[esp+124]
	mov	DWORD PTR $T233833[esp+124], eax
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	edx, DWORD PTR $T233833[esp+124]
	mov	ecx, DWORD PTR [esi+4]
	push	-1
	push	-1
	push	ebp
	push	ebx
	push	edx
	push	eax
	push	-1097390650				; be9725c6H
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 3924 : 		return true;

	lea	ecx, DWORD PTR _strSummary$224703[esp+124]
	mov	BYTE PTR __$EHRec$[esp+132], 3
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strBuffer$224700[esp+124]
	mov	BYTE PTR __$EHRec$[esp+132], 1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	pop	ebp
	mov	BYTE PTR __$EHRec$[esp+128], 0
	pop	ebx
	test	edi, edi
	je	SHORT $LN114@ConvertBar@2
	mov	ecx, edi
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN114@ConvertBar@2:
	mov	ecx, DWORD PTR _pUnit$[esp+112]
	mov	DWORD PTR __$EHRec$[esp+124], -1
	test	ecx, ecx
	je	SHORT $LN119@ConvertBar@2
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN119@ConvertBar@2:
	pop	edi
	mov	al, 1
	pop	esi

; 3932 : 	}
; 3933 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+108]
	mov	DWORD PTR fs:0, ecx
	add	esp, 108				; 0000006cH
	ret	8
$LN4@ConvertBar@2:

; 3925 : 	}
; 3926 : 
; 3927 : 	// Decided not to
; 3928 : 	else
; 3929 : 	{
; 3930 : 		pUnit->SetNotConverting(true);

	mov	ecx, DWORD PTR _pUnit$[esp+112]
	push	1
	call	?SetNotConverting@CvUnit@@QAEX_N@Z	; CvUnit::SetNotConverting
$LN146@ConvertBar@2:

; 3931 : 		return false;

	mov	ecx, DWORD PTR _pUnit$[esp+112]
	mov	DWORD PTR __$EHRec$[esp+124], -1
	cmp	ecx, edi
	je	SHORT $LN131@ConvertBar@2
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN131@ConvertBar@2:

; 3932 : 	}
; 3933 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+116]
	pop	edi
	xor	al, al
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 108				; 0000006cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ConvertBarbarianNavalUnit@CvPlayerTraits@@AAE_NV?$FObjectHandle@VCvUnit@@@@@Z$0:
	lea	ecx, DWORD PTR _pUnit$[ebp-4]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__unwindfunclet$?ConvertBarbarianNavalUnit@CvPlayerTraits@@AAE_NV?$FObjectHandle@VCvUnit@@@@@Z$1:
	lea	ecx, DWORD PTR _pGiftUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__unwindfunclet$?ConvertBarbarianNavalUnit@CvPlayerTraits@@AAE_NV?$FObjectHandle@VCvUnit@@@@@Z$2:
	lea	ecx, DWORD PTR _logMsg$224698[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?ConvertBarbarianNavalUnit@CvPlayerTraits@@AAE_NV?$FObjectHandle@VCvUnit@@@@@Z$3:
	lea	ecx, DWORD PTR _strBuffer$224700[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?ConvertBarbarianNavalUnit@CvPlayerTraits@@AAE_NV?$FObjectHandle@VCvUnit@@@@@Z$4:
	lea	ecx, DWORD PTR _strSummary$224703[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?ConvertBarbarianNavalUnit@CvPlayerTraits@@AAE_NV?$FObjectHandle@VCvUnit@@@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?ConvertBarbarianNavalUnit@CvPlayerTraits@@AAE_NV?$FObjectHandle@VCvUnit@@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ConvertBarbarianNavalUnit@CvPlayerTraits@@AAE_NV?$FObjectHandle@VCvUnit@@@@@Z ENDP ; CvPlayerTraits::ConvertBarbarianNavalUnit
PUBLIC	?upper_bound@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AVconst_iterator@12@ABH@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::upper_bound
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AVconst_iterator@12@ABH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?upper_bound@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AVconst_iterator@12@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::upper_bound, COMDAT
; _this$ = ecx

; 1019 : 		return (_TREE_CONST_ITERATOR(_Ubound(_Keyval)));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx+4]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN30@upper_boun
	mov	edx, DWORD PTR __Keyval$[esp-4]
	mov	edx, DWORD PTR [edx]
$LL6@upper_boun:
	cmp	edx, DWORD PTR [eax+12]
	jge	SHORT $LN4@upper_boun
	mov	ecx, eax
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN3@upper_boun
$LN4@upper_boun:
	mov	eax, DWORD PTR [eax+8]
$LN3@upper_boun:
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL6@upper_boun
$LN30@upper_boun:
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 1020 : 		}

	ret	8
?upper_bound@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AVconst_iterator@12@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::upper_bound
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@XZ ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::begin
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?begin@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@XZ PROC ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@XZ ENDP ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@XZ ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@XZ PROC ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@XZ ENDP ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::end
_TEXT	ENDS
PUBLIC	??1?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<FreeTraitUnit,5,1,297,0>::~FStaticVector<FreeTraitUnit,5,1,297,0>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??1?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
??1?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<FreeTraitUnit,5,1,297,0>::~FStaticVector<FreeTraitUnit,5,1,297,0>, COMDAT
; _this$ = ecx

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR [ecx]
	add	ecx, 12					; 0000000cH
	cmp	eax, ecx
	je	SHORT $LN3@FStaticVec@2
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	pop	ecx
$LN3@FStaticVec@2:

; 619  : 	};

	ret	0
??1?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<FreeTraitUnit,5,1,297,0>::~FStaticVector<FreeTraitUnit,5,1,297,0>
_TEXT	ENDS
PUBLIC	??Cconst_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBEPBU?$pair@$$CBHH@2@XZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::operator->
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ??Cconst_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBEPBU?$pair@$$CBHH@2@XZ
_TEXT	SEGMENT
??Cconst_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBEPBU?$pair@$$CBHH@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::operator->, COMDAT
; _this$ = ecx

; 269  : 			return (&**this);

	mov	eax, DWORD PTR [ecx]
	add	eax, 12					; 0000000cH

; 270  : 			}

	ret	0
??Cconst_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBEPBU?$pair@$$CBHH@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::operator->
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 273  : 			{	// preincrement

	push	esi
	mov	esi, ecx

; 274  : 			_Inc();

	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::_Inc

; 275  : 			return (*this);

	mov	eax, esi
	pop	esi

; 276  : 			}

	ret	0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??1?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@XZ ; std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::~_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@XZ PROC ; std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::~_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@XZ ENDP ; std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::~_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AVconst_iterator@12@ABH@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::lower_bound
; Function compile flags: /Ogtpy
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AVconst_iterator@12@ABH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AVconst_iterator@12@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::lower_bound, COMDAT
; _this$ = ecx

; 1009 : 		return (_TREE_CONST_ITERATOR(_Lbound(_Keyval)));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx+4]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN30@lower_boun
	mov	edx, DWORD PTR __Keyval$[esp-4]
	mov	edx, DWORD PTR [edx]
$LL6@lower_boun:
	cmp	DWORD PTR [eax+12], edx
	jge	SHORT $LN4@lower_boun
	mov	eax, DWORD PTR [eax+8]
	jmp	SHORT $LN3@lower_boun
$LN4@lower_boun:
	mov	ecx, eax
	mov	eax, DWORD PTR [eax]
$LN3@lower_boun:
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL6@lower_boun
$LN30@lower_boun:
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 1010 : 		}

	ret	8
?lower_bound@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AVconst_iterator@12@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::lower_bound
_TEXT	ENDS
PUBLIC	?begin@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE?AV?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@XZ ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::begin
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?begin@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE?AV?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE?AV?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@XZ PROC ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE?AV?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@XZ ENDP ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE?AV?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@XZ ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE?AV?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE?AV?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@XZ PROC ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE?AV?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@XZ ENDP ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::end
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAE_NI@Z ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Buy
; Function compile flags: /Ogtpy
;	COMDAT ?_Buy@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAE_NI@Z PROC ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	esi

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	xor	eax, eax
	push	edi

; 1104 : 		if (_Capacity == 0)

	mov	edi, DWORD PTR __Capacity$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	cmp	edi, eax
	jne	SHORT $LN4@Buy
	pop	edi

; 1105 : 			return (false);

	xor	al, al
	pop	esi

; 1115 : 		}

	ret	4
$LN4@Buy:

; 1106 : 		else if (max_size() < _Capacity)

	cmp	edi, 536870911				; 1fffffffH
	jbe	SHORT $LN2@Buy

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@KAXXZ ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Xlen
$LN16@Buy:
$LN2@Buy:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	push	eax
	push	edi
	call	??$_Allocate@UFreeResourceXCities@@@std@@YAPAUFreeResourceXCities@@IPAU1@@Z ; std::_Allocate<FreeResourceXCities>
	mov	DWORD PTR [esi+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	DWORD PTR [esi+8], eax
	add	esp, 8

; 1112 : 			_Myend = _Myfirst + _Capacity;

	lea	eax, DWORD PTR [eax+edi*8]
	mov	DWORD PTR [esi+12], eax
	pop	edi

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
	pop	esi

; 1115 : 		}

	ret	4
$LN15@Buy:
?_Buy@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Buy
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAE_NI@Z ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Buy
; Function compile flags: /Ogtpy
;	COMDAT ?_Buy@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAE_NI@Z PROC ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	esi

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	xor	eax, eax
	push	edi

; 1104 : 		if (_Capacity == 0)

	mov	edi, DWORD PTR __Capacity$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	cmp	edi, eax
	jne	SHORT $LN4@Buy@2
	pop	edi

; 1105 : 			return (false);

	xor	al, al
	pop	esi

; 1115 : 		}

	ret	4
$LN4@Buy@2:

; 1106 : 		else if (max_size() < _Capacity)

	cmp	edi, 1073741823				; 3fffffffH
	jbe	SHORT $LN2@Buy@2

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@KAXXZ ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Xlen
$LN16@Buy@2:
$LN2@Buy@2:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	push	eax
	push	edi
	call	??$_Allocate@PAVCvTraitEntry@@@std@@YAPAPAVCvTraitEntry@@IPAPAV1@@Z ; std::_Allocate<CvTraitEntry *>
	mov	DWORD PTR [esi+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	DWORD PTR [esi+8], eax
	add	esp, 8

; 1112 : 			_Myend = _Myfirst + _Capacity;

	lea	eax, DWORD PTR [eax+edi*4]
	mov	DWORD PTR [esi+12], eax
	pop	edi

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
	pop	esi

; 1115 : 		}

	ret	4
$LN15@Buy@2:
?_Buy@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Buy
_TEXT	ENDS
PUBLIC	?begin@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@XZ ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@XZ PROC ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@XZ ENDP ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@XZ ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@XZ PROC ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@XZ ENDP ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::end
_TEXT	ENDS
PUBLIC	?GrowSize@?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<FreeTraitUnit,5,1,297,0>::GrowSize
EXTRN	_memcpy:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?GrowSize@?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@IAEXI@Z
_TEXT	SEGMENT
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@IAEXI@Z PROC ; FStaticVector<FreeTraitUnit,5,1,297,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	push	esi
	mov	esi, ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	cmp	DWORD PTR [esi+8], 0
	push	edi
	jne	SHORT $LN30@GrowSize
	mov	DWORD PTR [esi+8], 1
$LN30@GrowSize:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _uiFit$[esp+4]
	cmp	edx, DWORD PTR [esi+8]
	jb	SHORT $LN7@GrowSize
	npad	6
$LL8@GrowSize:

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	eax, DWORD PTR [esi+8]
	lea	ecx, DWORD PTR [eax+eax]

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	cmp	ecx, eax
	jb	SHORT $LN31@GrowSize

; 754  : 				break;
; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	DWORD PTR [esi+8], ecx
	cmp	edx, ecx
	jae	SHORT $LL8@GrowSize

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	jmp	SHORT $LN7@GrowSize
$LN31@GrowSize:

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	DWORD PTR [esi+8], edx
$LN7@GrowSize:
	push	ebp

; 759  : 		}
; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	ebp, DWORD PTR [esi+8]
	cmp	ebp, 5
	jbe	SHORT $LN15@GrowSize
	push	798					; 0000031eH
	push	OFFSET ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
	lea	eax, DWORD PTR [ebp*8]
	push	4
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	edi, eax
	mov	DWORD PTR [esi+8], ebp
	jmp	SHORT $LN14@GrowSize
$LN15@GrowSize:
	lea	edi, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+8], 5
$LN14@GrowSize:

; 762  : 		if( bPODType ){
; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi]
	add	ecx, ecx
	add	ecx, ecx
	add	ecx, ecx
	push	ecx
	push	edx
	push	edi
	call	_memcpy

; 764  : 		}else{
; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)
; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);
; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR [esi]
	add	esp, 12					; 0000000cH
	lea	ecx, DWORD PTR [esi+12]
	pop	ebp
	cmp	eax, ecx
	je	SHORT $LN33@GrowSize
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN33@GrowSize:

; 769  : 		m_pData = pTemp;

	mov	DWORD PTR [esi], edi
	pop	edi

; 770  : 
; 771  : 		m_bIsResized = true;

	mov	BYTE PTR [esi+52], 1
	pop	esi

; 772  : 	};

	ret	4
?GrowSize@?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@IAEXI@Z ENDP ; FStaticVector<FreeTraitUnit,5,1,297,0>::GrowSize
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAE_NI@Z ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Buy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Buy@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAE_NI@Z PROC ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	esi

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	xor	eax, eax
	push	edi

; 1104 : 		if (_Capacity == 0)

	mov	edi, DWORD PTR __Capacity$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	cmp	edi, eax
	jne	SHORT $LN4@Buy@3
	pop	edi

; 1105 : 			return (false);

	xor	al, al
	pop	esi

; 1115 : 		}

	ret	4
$LN4@Buy@3:

; 1106 : 		else if (max_size() < _Capacity)

	cmp	edi, 536870911				; 1fffffffH
	jbe	SHORT $LN2@Buy@3

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@KAXXZ ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Xlen
$LN16@Buy@3:
$LN2@Buy@3:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	push	eax
	push	edi
	call	??$_Allocate@UMayaBonusChoice@@@std@@YAPAUMayaBonusChoice@@IPAU1@@Z ; std::_Allocate<MayaBonusChoice>
	mov	DWORD PTR [esi+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	DWORD PTR [esi+8], eax
	add	esp, 8

; 1112 : 			_Myend = _Myfirst + _Capacity;

	lea	eax, DWORD PTR [eax+edi*8]
	mov	DWORD PTR [esi+12], eax
	pop	edi

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
	pop	esi

; 1115 : 		}

	ret	4
$LN15@Buy@3:
?_Buy@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Buy
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Buynode
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Buynode, COMDAT
; _this$ = ecx

; 1384 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 1385 : 		int _Linkcnt = 0;
; 1386 : 
; 1387 : 		_TRY_BEGIN
; 1388 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

	test	eax, eax
	je	SHORT $LN27@Buynode
	mov	DWORD PTR [eax], 0
$LN27@Buynode:

; 1389 : 		++_Linkcnt;
; 1390 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

	lea	ecx, DWORD PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN37@Buynode
	mov	DWORD PTR [ecx], 0
$LN37@Buynode:

; 1391 : 		++_Linkcnt;
; 1392 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

	lea	ecx, DWORD PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN47@Buynode
	mov	DWORD PTR [ecx], 0
$LN47@Buynode:

; 1393 : 		_CATCH_ALL
; 1394 : 		if (1 < _Linkcnt)
; 1395 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1396 : 		if (0 < _Linkcnt)
; 1397 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1398 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1399 : 		_RERAISE;
; 1400 : 		_CATCH_END
; 1401 : 		_Color(_Wherenode) = _Black;

	mov	BYTE PTR [eax+20], 1

; 1402 : 		_Isnil(_Wherenode) = false;

	mov	BYTE PTR [eax+21], 0

; 1403 : 		return (_Wherenode);
; 1404 : 		}

	ret	0
?_Buynode@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBE?AV?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@V?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@@Z ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Make_iter
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Make_iter@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBE?AV?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@V?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBE?AV?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@V?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@@Z PROC ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Make_iter, COMDAT
; _this$ = ecx

; 687  : 		return (iterator(_Where._Myptr));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR __Where$[esp-4]
	mov	DWORD PTR [eax], ecx

; 688  : 		}

	ret	8
?_Make_iter@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBE?AV?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@V?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@@Z ENDP ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Make_iter
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAEXPAPAVCvTraitEntry@@0@Z ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Destroy
; Function compile flags: /Ogtpy
;	COMDAT ?_Destroy@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAEXPAPAVCvTraitEntry@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAEXPAPAVCvTraitEntry@@0@Z PROC ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	8
?_Destroy@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAEXPAPAVCvTraitEntry@@0@Z ENDP ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBE?AV?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@V?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@@Z ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Make_iter
; Function compile flags: /Ogtpy
;	COMDAT ?_Make_iter@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBE?AV?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@V?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBE?AV?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@V?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@@Z PROC ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Make_iter, COMDAT
; _this$ = ecx

; 687  : 		return (iterator(_Where._Myptr));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR __Where$[esp-4]
	mov	DWORD PTR [eax], ecx

; 688  : 		}

	ret	8
?_Make_iter@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBE?AV?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@V?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@@Z ENDP ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Make_iter
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::iterator::operator--
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::iterator::operator--, COMDAT
; _this$ = ecx

; 487  : 			{	// predecrement

	push	esi
	mov	esi, ecx

; 488  : 			--(*(const_iterator *)this);

	call	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::_Dec

; 489  : 			return (*this);

	mov	eax, esi
	pop	esi

; 490  : 			}

	ret	0
??Fiterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??H?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator+
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??H?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator+, COMDAT
; _this$ = ecx

; 381  : 		_Myt _Tmp = *this;
; 382  : 		return (_Tmp += _Off);

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [eax+ecx*8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], edx

; 383  : 		}

	ret	8
??H?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<MayaBonusChoice,std::allocator<MayaBonusChoice> >::operator+
_TEXT	ENDS
PUBLIC	??H?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator+
; Function compile flags: /Ogtpy
;	COMDAT ??H?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator+, COMDAT
; _this$ = ecx

; 381  : 		_Myt _Tmp = *this;
; 382  : 		return (_Tmp += _Off);

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [eax+ecx*8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], edx

; 383  : 		}

	ret	8
??H?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<FreeResourceXCities,std::allocator<FreeResourceXCities> >::operator+
_TEXT	ENDS
PUBLIC	??H?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::operator+
; Function compile flags: /Ogtpy
;	COMDAT ??H?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::operator+, COMDAT
; _this$ = ecx

; 381  : 		_Myt _Tmp = *this;
; 382  : 		return (_Tmp += _Off);

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], edx

; 383  : 		}

	ret	8
??H?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<enum TraitTypes,std::allocator<enum TraitTypes> >::operator+
_TEXT	ENDS
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::erase
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z$2
__ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T234492 = -80						; size = 28
$T234491 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::erase, COMDAT
; _this$ = ecx

; 764  : 		{	// erase element at _Where

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 765  : 
; 766  :  #if _HAS_ITERATOR_DEBUGGING
; 767  : 		if (_Where._Mycont != this || _Isnil(_Where._Mynode()))
; 768  : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 769  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 770  : 		++_Where;	// save successor iterator for return
; 771  : 		_Orphan_ptr(*this, _Erasednode);
; 772  : 
; 773  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 774  : 		if (_Isnil(_Where._Mynode()))

	mov	eax, DWORD PTR __Where$[esp+8]
	sub	esp, 72					; 00000048H
	cmp	BYTE PTR [eax+21], 0
	push	ebp
	mov	ebp, ecx
	je	SHORT $LN40@erase

; 775  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

	push	OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
	lea	ecx, DWORD PTR $T234492[esp+92]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T234491[esp+88]
	mov	DWORD PTR __$EHRec$[esp+96], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T234492[esp+88]
	push	eax
	lea	ecx, DWORD PTR $T234491[esp+104]
	mov	BYTE PTR __$EHRec$[esp+100], 1
	mov	DWORD PTR $T234491[esp+92], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVout_of_range@std@@
	lea	ecx, DWORD PTR $T234491[esp+92]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+104], 0
	mov	DWORD PTR $T234491[esp+96], OFFSET ??_7out_of_range@std@@6B@
	call	__CxxThrowException@8
$LN293@erase:
$LN40@erase:
	push	ebx
	push	esi

; 776  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

	mov	ebx, eax
	push	edi

; 777  : 		++_Where;	// save successor iterator for return

	lea	ecx, DWORD PTR __Where$[esp+96]
	mov	DWORD PTR __Erasednode$[esp+100], ebx
	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::_Inc

; 778  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 779  : 
; 780  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 781  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 782  : 		_Nodeptr _Pnode = _Erasednode;
; 783  : 
; 784  : 		if (_Isnil(_Left(_Pnode)))

	mov	ecx, DWORD PTR [ebx]
	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LN39@erase

; 785  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

	mov	edi, DWORD PTR [ebx+8]
	jmp	SHORT $LN288@erase
$LN39@erase:

; 786  : 		else if (_Isnil(_Right(_Pnode)))

	mov	edx, DWORD PTR [ebx+8]
	cmp	BYTE PTR [edx+21], 0
	je	SHORT $LN37@erase

; 787  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

	mov	edi, ecx

; 788  : 		else

	jmp	SHORT $LN288@erase
$LN37@erase:

; 789  : 			{	// two subtrees, must lift successor node to replace erased
; 790  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

	mov	eax, DWORD PTR __Where$[esp+96]

; 791  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

	mov	edi, DWORD PTR [eax+8]
	lea	edx, DWORD PTR [eax+8]

; 792  : 			}
; 793  : 
; 794  : 		if (_Pnode == _Erasednode)

	cmp	eax, ebx
	jne	SHORT $LN35@erase
$LN288@erase:

; 795  : 			{	// at most one subtree, relink it
; 796  : 			_Fixnodeparent = _Parent(_Erasednode);
; 797  : 			if (!_Isnil(_Fixnode))

	cmp	BYTE PTR [edi+21], 0
	mov	esi, DWORD PTR [ebx+4]
	jne	SHORT $LN34@erase

; 798  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

	mov	DWORD PTR [edi+4], esi
$LN34@erase:

; 799  : 
; 800  : 			if (_Root() == _Erasednode)

	mov	eax, DWORD PTR [ebp+4]
	cmp	DWORD PTR [eax+4], ebx
	jne	SHORT $LN33@erase

; 801  : 				_Root() = _Fixnode;	// link down from root

	mov	DWORD PTR [eax+4], edi
	jmp	SHORT $LN30@erase
$LN33@erase:

; 802  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

	cmp	DWORD PTR [esi], ebx
	jne	SHORT $LN31@erase

; 803  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

	mov	DWORD PTR [esi], edi

; 804  : 			else

	jmp	SHORT $LN30@erase
$LN31@erase:

; 805  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

	mov	DWORD PTR [esi+8], edi
$LN30@erase:

; 806  : 
; 807  : 			if (_Lmost() == _Erasednode)

	mov	ebx, DWORD PTR [ebp+4]
	mov	eax, DWORD PTR [ebx]
	cmp	eax, DWORD PTR __Erasednode$[esp+100]
	jne	SHORT $LN29@erase

; 808  : 				_Lmost() = _Isnil(_Fixnode)
; 809  : 					? _Fixnodeparent	// smallest is parent of erased node
; 810  : 					: _Min(_Fixnode);	// smallest in relinked subtree

	cmp	BYTE PTR [edi+21], 0
	je	SHORT $LN43@erase
	mov	eax, esi
	jmp	SHORT $LN44@erase
$LN43@erase:
	push	edi
	call	?_Min@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Min
	add	esp, 4
$LN44@erase:
	mov	DWORD PTR [ebx], eax
$LN29@erase:

; 811  : 
; 812  : 			if (_Rmost() == _Erasednode)

	mov	ebx, DWORD PTR [ebp+4]
	mov	ecx, DWORD PTR __Erasednode$[esp+100]
	cmp	DWORD PTR [ebx+8], ecx
	jne	SHORT $LN173@erase

; 813  : 				_Rmost() = _Isnil(_Fixnode)
; 814  : 					? _Fixnodeparent	// largest is parent of erased node
; 815  : 					: _Max(_Fixnode);	// largest in relinked subtree

	cmp	BYTE PTR [edi+21], 0
	je	SHORT $LN45@erase
	mov	eax, esi
	mov	DWORD PTR [ebx+8], eax

; 816  : 			}
; 817  : 		else

	jmp	SHORT $LN173@erase
$LN45@erase:

; 813  : 				_Rmost() = _Isnil(_Fixnode)
; 814  : 					? _Fixnodeparent	// largest is parent of erased node
; 815  : 					: _Max(_Fixnode);	// largest in relinked subtree

	push	edi
	call	?_Max@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Max
	add	esp, 4
	mov	DWORD PTR [ebx+8], eax

; 816  : 			}
; 817  : 		else

	jmp	SHORT $LN173@erase
$LN35@erase:

; 818  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 819  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

	mov	DWORD PTR [ecx+4], eax

; 820  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

	mov	ecx, DWORD PTR [ebx]
	mov	DWORD PTR [eax], ecx

; 821  : 
; 822  : 			if (_Pnode == _Right(_Erasednode))

	cmp	eax, DWORD PTR [ebx+8]
	jne	SHORT $LN26@erase

; 823  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

	mov	esi, eax

; 824  : 			else

	jmp	SHORT $LN25@erase
$LN26@erase:

; 825  : 				{	// successor further down, link in place of erased
; 826  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 827  : 				if (!_Isnil(_Fixnode))

	cmp	BYTE PTR [edi+21], 0
	mov	esi, DWORD PTR [eax+4]
	jne	SHORT $LN24@erase

; 828  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

	mov	DWORD PTR [edi+4], esi
$LN24@erase:

; 829  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

	mov	DWORD PTR [esi], edi

; 830  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

	mov	ecx, DWORD PTR [ebx+8]
	mov	DWORD PTR [edx], ecx

; 831  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

	mov	edx, DWORD PTR [ebx+8]
	mov	DWORD PTR [edx+4], eax
$LN25@erase:

; 832  : 				}
; 833  : 
; 834  : 			if (_Root() == _Erasednode)

	mov	ecx, DWORD PTR [ebp+4]
	cmp	DWORD PTR [ecx+4], ebx
	jne	SHORT $LN23@erase

; 835  : 				_Root() = _Pnode;	// link down from root

	mov	DWORD PTR [ecx+4], eax
	jmp	SHORT $LN20@erase
$LN23@erase:

; 836  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

	mov	ecx, DWORD PTR [ebx+4]
	cmp	DWORD PTR [ecx], ebx
	jne	SHORT $LN21@erase

; 837  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

	mov	DWORD PTR [ecx], eax

; 838  : 			else

	jmp	SHORT $LN20@erase
$LN21@erase:

; 839  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

	mov	DWORD PTR [ecx+8], eax
$LN20@erase:

; 840  : 
; 841  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

	mov	ecx, DWORD PTR [ebx+4]
	mov	DWORD PTR [eax+4], ecx

; 842  : 			_STD swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

	lea	ecx, DWORD PTR [ebx+20]
	add	eax, 20					; 00000014H
	cmp	eax, ecx
	je	SHORT $LN173@erase
	mov	bl, BYTE PTR [ecx]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [eax], bl
	mov	BYTE PTR [ecx], dl
$LN173@erase:

; 843  : 			}
; 844  : 
; 845  : 		if (_Color(_Erasednode) == _Black)

	mov	edx, DWORD PTR __Erasednode$[esp+100]
	mov	bl, 1
	cmp	BYTE PTR [edx+20], bl
	jne	$LN19@erase

; 846  : 			{	// erasing black link, must recolor/rebalance tree
; 847  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 848  : 				_Fixnodeparent = _Parent(_Fixnode))

	mov	eax, DWORD PTR [ebp+4]
	cmp	edi, DWORD PTR [eax+4]
	je	$LN16@erase
	npad	6
$LL18@erase:
	cmp	BYTE PTR [edi+20], bl
	jne	$LN16@erase

; 849  : 				if (_Fixnode == _Left(_Fixnodeparent))

	mov	eax, DWORD PTR [esi]
	cmp	edi, eax
	jne	SHORT $LN15@erase

; 850  : 					{	// fixup left subtree
; 851  : 					_Pnode = _Right(_Fixnodeparent);

	mov	eax, DWORD PTR [esi+8]

; 852  : 					if (_Color(_Pnode) == _Red)

	cmp	BYTE PTR [eax+20], 0
	jne	SHORT $LN14@erase

; 853  : 						{	// rotate red up from right subtree
; 854  : 						_Color(_Pnode) = _Black;

	mov	BYTE PTR [eax+20], bl

; 855  : 						_Color(_Fixnodeparent) = _Red;
; 856  : 						_Lrotate(_Fixnodeparent);

	push	esi
	mov	ecx, ebp
	mov	BYTE PTR [esi+20], 0
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Lrotate

; 857  : 						_Pnode = _Right(_Fixnodeparent);

	mov	eax, DWORD PTR [esi+8]
$LN14@erase:

; 858  : 						}
; 859  : 
; 860  : 					if (_Isnil(_Pnode))

	cmp	BYTE PTR [eax+21], 0

; 861  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 862  : 					else if (_Color(_Left(_Pnode)) == _Black

	jne	SHORT $LN291@erase

; 863  : 						&& _Color(_Right(_Pnode)) == _Black)

	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+20], bl
	jne	SHORT $LN11@erase
	mov	edx, DWORD PTR [eax+8]
	cmp	BYTE PTR [edx+20], bl
	je	SHORT $LN292@erase
$LN11@erase:

; 864  : 						{	// redden right subtree with black children
; 865  : 						_Color(_Pnode) = _Red;
; 866  : 						_Fixnode = _Fixnodeparent;
; 867  : 						}
; 868  : 					else
; 869  : 						{	// must rearrange right subtree
; 870  : 						if (_Color(_Right(_Pnode)) == _Black)

	mov	ecx, DWORD PTR [eax+8]
	cmp	BYTE PTR [ecx+20], bl
	jne	SHORT $LN9@erase

; 871  : 							{	// rotate red up from left sub-subtree
; 872  : 							_Color(_Left(_Pnode)) = _Black;

	mov	edx, DWORD PTR [eax]
	mov	BYTE PTR [edx+20], bl

; 873  : 							_Color(_Pnode) = _Red;
; 874  : 							_Rrotate(_Pnode);

	push	eax
	mov	ecx, ebp
	mov	BYTE PTR [eax+20], 0
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Rrotate

; 875  : 							_Pnode = _Right(_Fixnodeparent);

	mov	eax, DWORD PTR [esi+8]
$LN9@erase:

; 876  : 							}
; 877  : 
; 878  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

	mov	cl, BYTE PTR [esi+20]
	mov	BYTE PTR [eax+20], cl

; 879  : 						_Color(_Fixnodeparent) = _Black;

	mov	BYTE PTR [esi+20], bl

; 880  : 						_Color(_Right(_Pnode)) = _Black;

	mov	edx, DWORD PTR [eax+8]

; 881  : 						_Lrotate(_Fixnodeparent);

	push	esi
	mov	ecx, ebp
	mov	BYTE PTR [edx+20], bl
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Lrotate

; 882  : 						break;	// tree now recolored/rebalanced

	jmp	SHORT $LN16@erase
$LN15@erase:

; 883  : 						}
; 884  : 					}
; 885  : 				else
; 886  : 					{	// fixup right subtree
; 887  : 					_Pnode = _Left(_Fixnodeparent);
; 888  : 					if (_Color(_Pnode) == _Red)

	cmp	BYTE PTR [eax+20], 0
	jne	SHORT $LN7@erase

; 889  : 						{	// rotate red up from left subtree
; 890  : 						_Color(_Pnode) = _Black;

	mov	BYTE PTR [eax+20], bl

; 891  : 						_Color(_Fixnodeparent) = _Red;
; 892  : 						_Rrotate(_Fixnodeparent);

	push	esi
	mov	ecx, ebp
	mov	BYTE PTR [esi+20], 0
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Rrotate

; 893  : 						_Pnode = _Left(_Fixnodeparent);

	mov	eax, DWORD PTR [esi]
$LN7@erase:

; 894  : 						}
; 895  : 					if (_Isnil(_Pnode))

	cmp	BYTE PTR [eax+21], 0

; 896  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 897  : 					else if (_Color(_Right(_Pnode)) == _Black

	jne	SHORT $LN291@erase

; 898  : 						&& _Color(_Left(_Pnode)) == _Black)

	mov	ecx, DWORD PTR [eax+8]
	cmp	BYTE PTR [ecx+20], bl
	jne	SHORT $LN4@erase
	mov	edx, DWORD PTR [eax]
	cmp	BYTE PTR [edx+20], bl
	jne	SHORT $LN4@erase
$LN292@erase:

; 899  : 						{	// redden left subtree with black children
; 900  : 						_Color(_Pnode) = _Red;

	mov	BYTE PTR [eax+20], 0
$LN291@erase:

; 846  : 			{	// erasing black link, must recolor/rebalance tree
; 847  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 848  : 				_Fixnodeparent = _Parent(_Fixnode))

	mov	eax, DWORD PTR [ebp+4]

; 901  : 						_Fixnode = _Fixnodeparent;

	mov	edi, esi
	mov	esi, DWORD PTR [esi+4]
	cmp	edi, DWORD PTR [eax+4]
	jne	$LL18@erase

; 846  : 			{	// erasing black link, must recolor/rebalance tree
; 847  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 848  : 				_Fixnodeparent = _Parent(_Fixnode))

	jmp	SHORT $LN16@erase
$LN4@erase:

; 902  : 						}
; 903  : 					else
; 904  : 						{	// must rearrange left subtree
; 905  : 						if (_Color(_Left(_Pnode)) == _Black)

	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+20], bl
	jne	SHORT $LN2@erase

; 906  : 							{	// rotate red up from right sub-subtree
; 907  : 							_Color(_Right(_Pnode)) = _Black;

	mov	edx, DWORD PTR [eax+8]
	mov	BYTE PTR [edx+20], bl

; 908  : 							_Color(_Pnode) = _Red;
; 909  : 							_Lrotate(_Pnode);

	push	eax
	mov	ecx, ebp
	mov	BYTE PTR [eax+20], 0
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Lrotate

; 910  : 							_Pnode = _Left(_Fixnodeparent);

	mov	eax, DWORD PTR [esi]
$LN2@erase:

; 911  : 							}
; 912  : 
; 913  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

	mov	cl, BYTE PTR [esi+20]
	mov	BYTE PTR [eax+20], cl

; 914  : 						_Color(_Fixnodeparent) = _Black;

	mov	BYTE PTR [esi+20], bl

; 915  : 						_Color(_Left(_Pnode)) = _Black;

	mov	edx, DWORD PTR [eax]

; 916  : 						_Rrotate(_Fixnodeparent);

	push	esi
	mov	ecx, ebp
	mov	BYTE PTR [edx+20], bl
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Rrotate
$LN16@erase:

; 917  : 						break;	// tree now recolored/rebalanced
; 918  : 						}
; 919  : 					}
; 920  : 
; 921  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

	mov	BYTE PTR [edi+20], bl
$LN19@erase:

; 922  : 			}
; 923  : 
; 924  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 925  : 		this->_Alnod.deallocate(_Erasednode, 1);

	mov	eax, DWORD PTR __Erasednode$[esp+100]
	push	eax
	call	??3@YAXPAX@Z				; operator delete

; 926  : 
; 927  : 		if (0 < _Mysize)

	mov	eax, DWORD PTR [ebp+8]
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	test	eax, eax
	jbe	SHORT $LN1@erase

; 928  : 			--_Mysize;

	dec	eax
	mov	DWORD PTR [ebp+8], eax
$LN1@erase:

; 929  : 
; 930  : 		return (_Make_iter(_Where));	// return successor iterator

	mov	ecx, DWORD PTR __Where$[esp+84]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+84]
	mov	DWORD PTR [eax], ecx

; 931  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+88]
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	add	esp, 84					; 00000054H
	ret	8
$LN290@erase:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z$0:
	lea	ecx, DWORD PTR $T234492[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z$2:
	lea	ecx, DWORD PTR $T234491[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z:
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::erase
; Function compile flags: /Ogtpy
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC			; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0logic_error@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7out_of_range@std@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Erase
; Function compile flags: /Ogtpy
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Erase, COMDAT
; _this$ = ecx

; 1166 : 		{	// free entire subtree, recursively

	push	ebx
	push	esi
	push	edi

; 1167 : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

	mov	edi, DWORD PTR __Rootnode$[esp+8]
	cmp	BYTE PTR [edi+21], 0
	mov	ebx, ecx
	mov	esi, edi
	jne	SHORT $LN1@Erase
$LL3@Erase:

; 1168 : 			{	// free subtrees, then node
; 1169 : 			_Erase(_Right(_Pnode));

	mov	eax, DWORD PTR [esi+8]
	push	eax
	mov	ecx, ebx
	call	?_Erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Erase

; 1170 : 			_Pnode = _Left(_Pnode);

	mov	esi, DWORD PTR [esi]

; 1171 : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 1172 : 			this->_Alnod.deallocate(_Rootnode, 1);

	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	cmp	BYTE PTR [esi+21], 0
	mov	edi, esi
	je	SHORT $LL3@Erase
$LN1@Erase:
	pop	edi
	pop	esi
	pop	ebx

; 1173 : 			}
; 1174 : 		}

	ret	4
?_Erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Erase
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@00ABU?$pair@$$CBHH@2@D@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Buynode
; Function compile flags: /Ogtpy
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@00ABU?$pair@$$CBHH@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@00ABU?$pair@$$CBHH@2@D@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Buynode, COMDAT
; _this$ = ecx

; 1409 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 1410 : 		_TRY_BEGIN
; 1411 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

	test	eax, eax
	je	SHORT $LN4@Buynode@2
	mov	ecx, DWORD PTR __Larg$[esp-4]
	mov	edx, DWORD PTR __Parg$[esp-4]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR __Rarg$[esp-4]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	dl, BYTE PTR __Carg$[esp-4]
	mov	DWORD PTR [eax+16], ecx
	mov	BYTE PTR [eax+20], dl
	mov	BYTE PTR [eax+21], 0
$LN4@Buynode@2:

; 1412 : 		_CATCH_ALL
; 1413 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1414 : 		_RERAISE;
; 1415 : 		_CATCH_END
; 1416 : 		return (_Wherenode);
; 1417 : 		}

	ret	20					; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@00ABU?$pair@$$CBHH@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Buynode
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHH@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHH@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHH@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >, COMDAT
; _this$ = ecx

; 52   : 		{	// construct traits from _Parg and allocator from _Al

	mov	eax, ecx

; 53   : 		}

	ret	8
??0?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHH@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Tree_nod<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Econst_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AV012@H@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 280  : 			const_iterator _Tmp = *this;

	mov	eax, DWORD PTR [ecx]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp]
	mov	DWORD PTR [esi], eax

; 281  : 			++*this;

	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::_Inc

; 282  : 			return (_Tmp);

	mov	eax, esi
	pop	esi

; 283  : 			}

	ret	8
??Econst_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??$?6V?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@@FDataStream@@QAEAAV0@ABV?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@@Z ; FDataStream::operator<<<std::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > > >
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ??$?6V?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@@FDataStream@@QAEAAV0@ABV?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@@Z
_TEXT	SEGMENT
$T235015 = 8						; size = 1
_kData$ = 8						; size = 4
??$?6V?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@@FDataStream@@QAEAAV0@ABV?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@@Z PROC ; FDataStream::operator<<<std::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > > >, COMDAT
; _this$ = ecx

; 246  : 	// If the compiler produces an error here complaining about 
; 247  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 248  : 	// it could not find a specialization for the type supplied
; 249  : 	// in scope. If a specialization exists, be sure to include
; 250  : 	// the header (FStlContainerSerialization.h, for example), 
; 251  : 	// if not, implement :
; 252  : 	// FDataStream & operator<<(FDataStream &, YourCustomType &)
; 253  : 	Write( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [eax]
	mov	edx, 1
	shl	edx, cl
	test	edx, DWORD PTR [eax]
	lea	edx, DWORD PTR $T235015[esp]
	setne	cl
	mov	BYTE PTR $T235015[esp], cl
	push	edx
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 254  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 255  : }

	ret	4
??$?6V?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@@FDataStream@@QAEAAV0@ABV?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@@Z ENDP ; FDataStream::operator<<<std::_Vb_reference<unsigned int,int,std::vector<bool,std::allocator<bool> > > >
_TEXT	ENDS
PUBLIC	??$_Ucopy@PAI@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAI00@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Ucopy<unsigned int *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??$_Ucopy@PAI@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAI00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Ucopy@PAI@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAI00@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Ucopy<unsigned int *>, COMDAT
; _this$ = ecx

; 1139 : 		{	// copy initializing [_First, _Last), using allocator
; 1140 : 		return (_STDEXT unchecked_uninitialized_copy(_First, _Last,
; 1141 : 			_Ptr, this->_Alval));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi
	mov	edi, DWORD PTR __Ptr$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]
	test	eax, eax
	jbe	SHORT $LN10@Ucopy
	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN10@Ucopy:
	pop	edi
	mov	eax, esi
	pop	esi

; 1142 : 		}

	ret	12					; 0000000cH
??$_Ucopy@PAI@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAI00@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Ucopy<unsigned int *>
_TEXT	ENDS
PUBLIC	??$_Unchecked_move_backward@PAUFreeResourceXCities@@PAU1@@stdext@@YAPAUFreeResourceXCities@@PAU1@00@Z ; stdext::_Unchecked_move_backward<FreeResourceXCities *,FreeResourceXCities *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Unchecked_move_backward@PAUFreeResourceXCities@@PAU1@@stdext@@YAPAUFreeResourceXCities@@PAU1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAUFreeResourceXCities@@PAU1@@stdext@@YAPAUFreeResourceXCities@@PAU1@00@Z PROC ; stdext::_Unchecked_move_backward<FreeResourceXCities *,FreeResourceXCities *>, COMDAT

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN11@Unchecked_
	push	esi
$LL12@Unchecked_:
	mov	esi, DWORD PTR [ecx-8]
	sub	ecx, 8
	sub	eax, 8
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	cmp	ecx, edx
	jne	SHORT $LL12@Unchecked_
	pop	esi
$LN11@Unchecked_:

; 3697 : 	}

	ret	0
??$_Unchecked_move_backward@PAUFreeResourceXCities@@PAU1@@stdext@@YAPAUFreeResourceXCities@@PAU1@00@Z ENDP ; stdext::_Unchecked_move_backward<FreeResourceXCities *,FreeResourceXCities *>
_TEXT	ENDS
PUBLIC	??$_Unchecked_move_backward@PAW4TraitTypes@@PAW41@@stdext@@YAPAW4TraitTypes@@PAW41@00@Z ; stdext::_Unchecked_move_backward<enum TraitTypes *,enum TraitTypes *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unchecked_move_backward@PAW4TraitTypes@@PAW41@@stdext@@YAPAW4TraitTypes@@PAW41@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAW4TraitTypes@@PAW41@@stdext@@YAPAW4TraitTypes@@PAW41@00@Z PROC ; stdext::_Unchecked_move_backward<enum TraitTypes *,enum TraitTypes *>, COMDAT

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN11@Unchecked_@2
	push	esi
$LL12@Unchecked_@2:
	mov	esi, DWORD PTR [ecx-4]
	sub	ecx, 4
	sub	eax, 4
	mov	DWORD PTR [eax], esi
	cmp	ecx, edx
	jne	SHORT $LL12@Unchecked_@2
	pop	esi
$LN11@Unchecked_@2:

; 3697 : 	}

	ret	0
??$_Unchecked_move_backward@PAW4TraitTypes@@PAW41@@stdext@@YAPAW4TraitTypes@@PAW41@00@Z ENDP ; stdext::_Unchecked_move_backward<enum TraitTypes *,enum TraitTypes *>
_TEXT	ENDS
PUBLIC	??$_Unchecked_move_backward@PAUMayaBonusChoice@@PAU1@@stdext@@YAPAUMayaBonusChoice@@PAU1@00@Z ; stdext::_Unchecked_move_backward<MayaBonusChoice *,MayaBonusChoice *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unchecked_move_backward@PAUMayaBonusChoice@@PAU1@@stdext@@YAPAUMayaBonusChoice@@PAU1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAUMayaBonusChoice@@PAU1@@stdext@@YAPAUMayaBonusChoice@@PAU1@00@Z PROC ; stdext::_Unchecked_move_backward<MayaBonusChoice *,MayaBonusChoice *>, COMDAT

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN11@Unchecked_@3
	push	esi
$LL12@Unchecked_@3:
	mov	esi, DWORD PTR [ecx-8]
	sub	ecx, 8
	sub	eax, 8
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	cmp	ecx, edx
	jne	SHORT $LL12@Unchecked_@3
	pop	esi
$LN11@Unchecked_@3:

; 3697 : 	}

	ret	0
??$_Unchecked_move_backward@PAUMayaBonusChoice@@PAU1@@stdext@@YAPAUMayaBonusChoice@@PAU1@00@Z ENDP ; stdext::_Unchecked_move_backward<MayaBonusChoice *,MayaBonusChoice *>
_TEXT	ENDS
PUBLIC	??$_Find@V?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@H@std@@YA?AV?$_Vector_const_iterator@HV?$allocator@H@std@@@0@V10@0ABH@Z ; std::_Find<std::_Vector_const_iterator<int,std::allocator<int> >,int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Find@V?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@H@std@@YA?AV?$_Vector_const_iterator@HV?$allocator@H@std@@@0@V10@0ABH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Val$ = 20						; size = 4
??$_Find@V?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@H@std@@YA?AV?$_Vector_const_iterator@HV?$allocator@H@std@@@0@V10@0ABH@Z PROC ; std::_Find<std::_Vector_const_iterator<int,std::allocator<int> >,int>, COMDAT

; 38   : 	_DEBUG_RANGE(_First, _Last);
; 39   : 	for (; _First != _Last; ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Last$[esp-4]
	cmp	ecx, eax
	je	SHORT $LN19@Find
	mov	edx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [edx]
$LL7@Find:

; 40   : 		if (*_First == _Val)

	cmp	DWORD PTR [ecx], edx
	je	SHORT $LN19@Find
	add	ecx, 4
	mov	DWORD PTR __First$[esp-4], ecx
	cmp	ecx, eax
	jne	SHORT $LL7@Find
$LN19@Find:

; 41   : 			break;
; 42   : 	return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 43   : 	}

	ret	0
??$_Find@V?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@H@std@@YA?AV?$_Vector_const_iterator@HV?$allocator@H@std@@@0@V10@0ABH@Z ENDP ; std::_Find<std::_Vector_const_iterator<int,std::allocator<int> >,int>
_TEXT	ENDS
PUBLIC	??$_Find@V?$_Vector_iterator@HV?$allocator@H@std@@@std@@H@std@@YA?AV?$_Vector_iterator@HV?$allocator@H@std@@@0@V10@0ABH@Z ; std::_Find<std::_Vector_iterator<int,std::allocator<int> >,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Find@V?$_Vector_iterator@HV?$allocator@H@std@@@std@@H@std@@YA?AV?$_Vector_iterator@HV?$allocator@H@std@@@0@V10@0ABH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Val$ = 20						; size = 4
??$_Find@V?$_Vector_iterator@HV?$allocator@H@std@@@std@@H@std@@YA?AV?$_Vector_iterator@HV?$allocator@H@std@@@0@V10@0ABH@Z PROC ; std::_Find<std::_Vector_iterator<int,std::allocator<int> >,int>, COMDAT

; 38   : 	_DEBUG_RANGE(_First, _Last);
; 39   : 	for (; _First != _Last; ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Last$[esp-4]
	cmp	ecx, eax
	je	SHORT $LN23@Find@2
	mov	edx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [edx]
$LL9@Find@2:

; 40   : 		if (*_First == _Val)

	cmp	DWORD PTR [ecx], edx
	je	SHORT $LN23@Find@2
	add	ecx, 4
	mov	DWORD PTR __First$[esp-4], ecx
	cmp	ecx, eax
	jne	SHORT $LL9@Find@2
$LN23@Find@2:

; 41   : 			break;
; 42   : 	return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 43   : 	}

	ret	0
??$_Find@V?$_Vector_iterator@HV?$allocator@H@std@@@std@@H@std@@YA?AV?$_Vector_iterator@HV?$allocator@H@std@@@0@V10@0ABH@Z ENDP ; std::_Find<std::_Vector_iterator<int,std::allocator<int> >,int>
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAUFreeResourceXCities@@IU1@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAXPAUFreeResourceXCities@@IABU1@AAV?$allocator@UFreeResourceXCities@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<FreeResourceXCities *,unsigned int,FreeResourceXCities,std::allocator<FreeResourceXCities> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Uninit_fill_n@PAUFreeResourceXCities@@IU1@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAXPAUFreeResourceXCities@@IABU1@AAV?$allocator@UFreeResourceXCities@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAUFreeResourceXCities@@IU1@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAXPAUFreeResourceXCities@@IABU1@AAV?$allocator@UFreeResourceXCities@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<FreeResourceXCities *,unsigned int,FreeResourceXCities,std::allocator<FreeResourceXCities> >, COMDAT

; 394  : 
; 395  :  #if _HAS_ITERATOR_DEBUGGING
; 396  : //	if (_Count < 0)
; 397  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 398  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 399  : 
; 400  : 	_FwdIt _Next = _First;
; 401  : 
; 402  : 	_TRY_BEGIN
; 403  : 	for (; 0 < _Count; --_Count, ++_First)

	mov	ecx, DWORD PTR __Count$[esp-4]
	test	ecx, ecx
	jbe	SHORT $LN4@Uninit_fil
	mov	edx, DWORD PTR __Val$[esp-4]
	mov	eax, DWORD PTR __First$[esp-4]
	push	esi
$LL6@Uninit_fil:

; 404  : 		_Al.construct(_First, _Val);

	test	eax, eax
	je	SHORT $LN5@Uninit_fil
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], esi
$LN5@Uninit_fil:
	dec	ecx
	add	eax, 8
	test	ecx, ecx
	ja	SHORT $LL6@Uninit_fil
	pop	esi
$LN4@Uninit_fil:

; 405  : 	_CATCH_ALL
; 406  : 	for (; _Next != _First; ++_Next)
; 407  : 		_Al.destroy(_Next);
; 408  : 	_RERAISE;
; 409  : 	_CATCH_END
; 410  : 	}

	ret	0
??$_Uninit_fill_n@PAUFreeResourceXCities@@IU1@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAXPAUFreeResourceXCities@@IABU1@AAV?$allocator@UFreeResourceXCities@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<FreeResourceXCities *,unsigned int,FreeResourceXCities,std::allocator<FreeResourceXCities> >
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAW4TraitTypes@@IW41@V?$allocator@W4TraitTypes@@@std@@@std@@YAXPAW4TraitTypes@@IABW41@AAV?$allocator@W4TraitTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<enum TraitTypes *,unsigned int,enum TraitTypes,std::allocator<enum TraitTypes> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_fill_n@PAW4TraitTypes@@IW41@V?$allocator@W4TraitTypes@@@std@@@std@@YAXPAW4TraitTypes@@IABW41@AAV?$allocator@W4TraitTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAW4TraitTypes@@IW41@V?$allocator@W4TraitTypes@@@std@@@std@@YAXPAW4TraitTypes@@IABW41@AAV?$allocator@W4TraitTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<enum TraitTypes *,unsigned int,enum TraitTypes,std::allocator<enum TraitTypes> >, COMDAT

; 394  : 
; 395  :  #if _HAS_ITERATOR_DEBUGGING
; 396  : //	if (_Count < 0)
; 397  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 398  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 399  : 
; 400  : 	_FwdIt _Next = _First;
; 401  : 
; 402  : 	_TRY_BEGIN
; 403  : 	for (; 0 < _Count; --_Count, ++_First)

	mov	ecx, DWORD PTR __Count$[esp-4]
	test	ecx, ecx
	jbe	SHORT $LN4@Uninit_fil@2
	mov	edx, DWORD PTR __Val$[esp-4]
	mov	eax, DWORD PTR __First$[esp-4]
	push	esi
$LL6@Uninit_fil@2:

; 404  : 		_Al.construct(_First, _Val);

	test	eax, eax
	je	SHORT $LN5@Uninit_fil@2
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
$LN5@Uninit_fil@2:
	dec	ecx
	add	eax, 4
	test	ecx, ecx
	ja	SHORT $LL6@Uninit_fil@2
	pop	esi
$LN4@Uninit_fil@2:

; 405  : 	_CATCH_ALL
; 406  : 	for (; _Next != _First; ++_Next)
; 407  : 		_Al.destroy(_Next);
; 408  : 	_RERAISE;
; 409  : 	_CATCH_END
; 410  : 	}

	ret	0
??$_Uninit_fill_n@PAW4TraitTypes@@IW41@V?$allocator@W4TraitTypes@@@std@@@std@@YAXPAW4TraitTypes@@IABW41@AAV?$allocator@W4TraitTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<enum TraitTypes *,unsigned int,enum TraitTypes,std::allocator<enum TraitTypes> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAXPAUFreeResourceXCities@@0AAV?$allocator@UFreeResourceXCities@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<FreeResourceXCities> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAXPAUFreeResourceXCities@@0AAV?$allocator@UFreeResourceXCities@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAXPAUFreeResourceXCities@@0AAV?$allocator@UFreeResourceXCities@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<FreeResourceXCities> >, COMDAT

; 233  : 	for (; _First != _Last; ++_First)
; 234  : 		_Al.destroy(_First);
; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAXPAUFreeResourceXCities@@0AAV?$allocator@UFreeResourceXCities@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<FreeResourceXCities> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAXPAUMayaBonusChoice@@0AAV?$allocator@UMayaBonusChoice@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<MayaBonusChoice> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy_range@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAXPAUMayaBonusChoice@@0AAV?$allocator@UMayaBonusChoice@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAXPAUMayaBonusChoice@@0AAV?$allocator@UMayaBonusChoice@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<MayaBonusChoice> >, COMDAT

; 233  : 	for (; _First != _Last; ++_First)
; 234  : 		_Al.destroy(_First);
; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAXPAUMayaBonusChoice@@0AAV?$allocator@UMayaBonusChoice@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<MayaBonusChoice> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UMayaBonusChoice@@@std@@QAEXPAUMayaBonusChoice@@ABU3@@Z ; std::allocator<MayaBonusChoice>::construct
; Function compile flags: /Ogtpy
;	COMDAT ?construct@?$allocator@UMayaBonusChoice@@@std@@QAEXPAUMayaBonusChoice@@ABU3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UMayaBonusChoice@@@std@@QAEXPAUMayaBonusChoice@@ABU3@@Z PROC ; std::allocator<MayaBonusChoice>::construct, COMDAT
; _this$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN5@construct@5
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
$LN5@construct@5:

; 156  : 		}

	ret	8
?construct@?$allocator@UMayaBonusChoice@@@std@@QAEXPAUMayaBonusChoice@@ABU3@@Z ENDP ; std::allocator<MayaBonusChoice>::construct
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_copy@PAUFreeResourceXCities@@PAU1@V?$allocator@UFreeResourceXCities@@@std@@@stdext@@YAPAUFreeResourceXCities@@PAU1@00AAV?$allocator@UFreeResourceXCities@@@std@@@Z ; stdext::unchecked_uninitialized_copy<FreeResourceXCities *,FreeResourceXCities *,std::allocator<FreeResourceXCities> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_copy@PAUFreeResourceXCities@@PAU1@V?$allocator@UFreeResourceXCities@@@std@@@stdext@@YAPAUFreeResourceXCities@@PAU1@00AAV?$allocator@UFreeResourceXCities@@@std@@@Z
_TEXT	SEGMENT
$T235376 = -4						; size = 1
__Cat$235380 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAUFreeResourceXCities@@PAU1@V?$allocator@UFreeResourceXCities@@@std@@@stdext@@YAPAUFreeResourceXCities@@PAU1@00AAV?$allocator@UFreeResourceXCities@@@std@@@Z PROC ; stdext::unchecked_uninitialized_copy<FreeResourceXCities *,FreeResourceXCities *,std::allocator<FreeResourceXCities> >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T235376[esp+4], 0
	mov	eax, DWORD PTR $T235376[esp+4]
	mov	ecx, DWORD PTR __Cat$235380[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAUFreeResourceXCities@@PAU1@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAPAUFreeResourceXCities@@PAU1@00AAV?$allocator@UFreeResourceXCities@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<FreeResourceXCities *,FreeResourceXCities *,std::allocator<FreeResourceXCities> >

; 823  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_copy@PAUFreeResourceXCities@@PAU1@V?$allocator@UFreeResourceXCities@@@std@@@stdext@@YAPAUFreeResourceXCities@@PAU1@00AAV?$allocator@UFreeResourceXCities@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_copy<FreeResourceXCities *,FreeResourceXCities *,std::allocator<FreeResourceXCities> >
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAW4TraitTypes@@PAW41@V?$allocator@W4TraitTypes@@@std@@@std@@YAPAW4TraitTypes@@PAW41@00AAV?$allocator@W4TraitTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<enum TraitTypes *,enum TraitTypes *,std::allocator<enum TraitTypes> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_copy@PAW4TraitTypes@@PAW41@V?$allocator@W4TraitTypes@@@std@@@std@@YAPAW4TraitTypes@@PAW41@00AAV?$allocator@W4TraitTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAW4TraitTypes@@PAW41@V?$allocator@W4TraitTypes@@@std@@@std@@YAPAW4TraitTypes@@PAW41@00AAV?$allocator@W4TraitTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<enum TraitTypes *,enum TraitTypes *,std::allocator<enum TraitTypes> >, COMDAT

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;
; 128  : 
; 129  : 	_TRY_BEGIN
; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN4@Uninit_cop@5
	push	esi
$LL6@Uninit_cop@5:

; 131  : 		_Al.construct(_Dest, *_First);

	test	eax, eax
	je	SHORT $LN5@Uninit_cop@5
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
$LN5@Uninit_cop@5:
	add	ecx, 4
	add	eax, 4
	cmp	ecx, edx
	jne	SHORT $LL6@Uninit_cop@5
	pop	esi
$LN4@Uninit_cop@5:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)
; 134  : 		_Al.destroy(_Next);
; 135  : 	_RERAISE;
; 136  : 	_CATCH_END
; 137  : 	return (_Dest);
; 138  : 	}

	ret	0
??$_Uninit_copy@PAW4TraitTypes@@PAW41@V?$allocator@W4TraitTypes@@@std@@@std@@YAPAW4TraitTypes@@PAW41@00AAV?$allocator@W4TraitTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<enum TraitTypes *,enum TraitTypes *,std::allocator<enum TraitTypes> >
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAUMayaBonusChoice@@PAU1@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAPAUMayaBonusChoice@@PAU1@00AAV?$allocator@UMayaBonusChoice@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<MayaBonusChoice *,MayaBonusChoice *,std::allocator<MayaBonusChoice> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_copy@PAUMayaBonusChoice@@PAU1@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAPAUMayaBonusChoice@@PAU1@00AAV?$allocator@UMayaBonusChoice@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAUMayaBonusChoice@@PAU1@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAPAUMayaBonusChoice@@PAU1@00AAV?$allocator@UMayaBonusChoice@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<MayaBonusChoice *,MayaBonusChoice *,std::allocator<MayaBonusChoice> >, COMDAT

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;
; 128  : 
; 129  : 	_TRY_BEGIN
; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN4@Uninit_cop@6
	push	esi
$LL6@Uninit_cop@6:

; 131  : 		_Al.construct(_Dest, *_First);

	test	eax, eax
	je	SHORT $LN18@Uninit_cop@6
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
$LN18@Uninit_cop@6:
	add	ecx, 8
	add	eax, 8
	cmp	ecx, edx
	jne	SHORT $LL6@Uninit_cop@6
	pop	esi
$LN4@Uninit_cop@6:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)
; 134  : 		_Al.destroy(_Next);
; 135  : 	_RERAISE;
; 136  : 	_CATCH_END
; 137  : 	return (_Dest);
; 138  : 	}

	ret	0
??$_Uninit_copy@PAUMayaBonusChoice@@PAU1@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAPAUMayaBonusChoice@@PAU1@00AAV?$allocator@UMayaBonusChoice@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<MayaBonusChoice *,MayaBonusChoice *,std::allocator<MayaBonusChoice> >
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z ; std::vector<int,std::allocator<int> >::_Buy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z PROC	; std::vector<int,std::allocator<int> >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	esi

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	xor	eax, eax
	push	edi

; 1104 : 		if (_Capacity == 0)

	mov	edi, DWORD PTR __Capacity$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	cmp	edi, eax
	jne	SHORT $LN4@Buy@4
	pop	edi

; 1105 : 			return (false);

	xor	al, al
	pop	esi

; 1115 : 		}

	ret	4
$LN4@Buy@4:

; 1106 : 		else if (max_size() < _Capacity)

	cmp	edi, 1073741823				; 3fffffffH
	jbe	SHORT $LN2@Buy@4

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ ; std::vector<int,std::allocator<int> >::_Xlen
$LN16@Buy@4:
$LN2@Buy@4:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	push	eax
	push	edi
	call	??$_Allocate@H@std@@YAPAHIPAH@Z		; std::_Allocate<int>
	mov	DWORD PTR [esi+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	DWORD PTR [esi+8], eax
	add	esp, 8

; 1112 : 			_Myend = _Myfirst + _Capacity;

	lea	eax, DWORD PTR [eax+edi*4]
	mov	DWORD PTR [esi+12], eax
	pop	edi

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
	pop	esi

; 1115 : 		}

	ret	4
$LN15@Buy@4:
?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z ENDP	; std::vector<int,std::allocator<int> >::_Buy
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAE_NI@Z ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Buy
; Function compile flags: /Ogtpy
;	COMDAT ?_Buy@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAE_NI@Z PROC ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	esi

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	xor	eax, eax
	push	edi

; 1104 : 		if (_Capacity == 0)

	mov	edi, DWORD PTR __Capacity$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	cmp	edi, eax
	jne	SHORT $LN4@Buy@5
	pop	edi

; 1105 : 			return (false);

	xor	al, al
	pop	esi

; 1115 : 		}

	ret	4
$LN4@Buy@5:

; 1106 : 		else if (max_size() < _Capacity)

	cmp	edi, 1073741823				; 3fffffffH
	jbe	SHORT $LN2@Buy@5

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@KAXXZ ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Xlen
$LN16@Buy@5:
$LN2@Buy@5:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	push	eax
	push	edi
	call	??$_Allocate@W4TraitTypes@@@std@@YAPAW4TraitTypes@@IPAW41@@Z ; std::_Allocate<enum TraitTypes>
	mov	DWORD PTR [esi+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	DWORD PTR [esi+8], eax
	add	esp, 8

; 1112 : 			_Myend = _Myfirst + _Capacity;

	lea	eax, DWORD PTR [eax+edi*4]
	mov	DWORD PTR [esi+12], eax
	pop	edi

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
	pop	esi

; 1115 : 		}

	ret	4
$LN15@Buy@5:
?_Buy@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Buy
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z ; std::vector<int,std::allocator<int> >::_Destroy
; Function compile flags: /Ogtpy
;	COMDAT ?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z PROC ; std::vector<int,std::allocator<int> >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	8
?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z ENDP ; std::vector<int,std::allocator<int> >::_Destroy
_TEXT	ENDS
PUBLIC	?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ ; std::vector<int,std::allocator<int> >::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ PROC ; std::vector<int,std::allocator<int> >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ ENDP ; std::vector<int,std::allocator<int> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ ; std::vector<int,std::allocator<int> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ PROC ; std::vector<int,std::allocator<int> >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ ENDP ; std::vector<int,std::allocator<int> >::end
_TEXT	ENDS
PUBLIC	?begin@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@XZ ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@XZ PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@XZ ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@XZ ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@XZ PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@XZ ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::end
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAE_NI@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Buy
; Function compile flags: /Ogtpy
;	COMDAT ?_Buy@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAE_NI@Z PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	esi

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	xor	eax, eax
	push	edi

; 1104 : 		if (_Capacity == 0)

	mov	edi, DWORD PTR __Capacity$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	cmp	edi, eax
	jne	SHORT $LN4@Buy@6
	pop	edi

; 1105 : 			return (false);

	xor	al, al
	pop	esi

; 1115 : 		}

	ret	4
$LN4@Buy@6:

; 1106 : 		else if (max_size() < _Capacity)

	cmp	edi, 178956970				; 0aaaaaaaH
	jbe	SHORT $LN2@Buy@6

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@KAXXZ ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Xlen
$LN16@Buy@6:
$LN2@Buy@6:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	push	eax
	push	edi
	call	??$_Allocate@V?$Array@H$05@Firaxis@@@std@@YAPAV?$Array@H$05@Firaxis@@IPAV12@@Z ; std::_Allocate<Firaxis::Array<int,6> >

; 1111 : 			_Mylast = _Myfirst;
; 1112 : 			_Myend = _Myfirst + _Capacity;

	lea	ecx, DWORD PTR [edi+edi*2]
	add	esp, 8
	lea	edx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	pop	edi
	mov	DWORD PTR [esi+12], edx

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
	pop	esi

; 1115 : 		}

	ret	4
$LN15@Buy@6:
?_Buy@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Buy
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@@Z ; std::vector<int,std::allocator<int> >::_Make_iter
; Function compile flags: /Ogtpy
;	COMDAT ?_Make_iter@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@@Z PROC ; std::vector<int,std::allocator<int> >::_Make_iter, COMDAT
; _this$ = ecx

; 687  : 		return (iterator(_Where._Myptr));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR __Where$[esp-4]
	mov	DWORD PTR [eax], ecx

; 688  : 		}

	ret	8
?_Make_iter@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@@Z ENDP ; std::vector<int,std::allocator<int> >::_Make_iter
_TEXT	ENDS
PUBLIC	?begin@?$vector@IV?$allocator@I@std@@@std@@QAE?AV?$_Vector_iterator@IV?$allocator@I@std@@@2@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QAE?AV?$_Vector_iterator@IV?$allocator@I@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@IV?$allocator@I@std@@@std@@QAE?AV?$_Vector_iterator@IV?$allocator@I@std@@@2@XZ PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@IV?$allocator@I@std@@@std@@QAE?AV?$_Vector_iterator@IV?$allocator@I@std@@@2@XZ ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::begin
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@IV?$allocator@I@std@@@std@@IAE_NI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Buy
; Function compile flags: /Ogtpy
;	COMDAT ?_Buy@?$vector@IV?$allocator@I@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@IV?$allocator@I@std@@@std@@IAE_NI@Z PROC	; std::vector<unsigned int,std::allocator<unsigned int> >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	esi

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	xor	eax, eax
	push	edi

; 1104 : 		if (_Capacity == 0)

	mov	edi, DWORD PTR __Capacity$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	cmp	edi, eax
	jne	SHORT $LN4@Buy@7
	pop	edi

; 1105 : 			return (false);

	xor	al, al
	pop	esi

; 1115 : 		}

	ret	4
$LN4@Buy@7:

; 1106 : 		else if (max_size() < _Capacity)

	cmp	edi, 1073741823				; 3fffffffH
	jbe	SHORT $LN2@Buy@7

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@IV?$allocator@I@std@@@std@@KAXXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Xlen
$LN16@Buy@7:
$LN2@Buy@7:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	push	eax
	push	edi
	call	??$_Allocate@I@std@@YAPAIIPAI@Z		; std::_Allocate<unsigned int>
	mov	DWORD PTR [esi+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	DWORD PTR [esi+8], eax
	add	esp, 8

; 1112 : 			_Myend = _Myfirst + _Capacity;

	lea	eax, DWORD PTR [eax+edi*4]
	mov	DWORD PTR [esi+12], eax
	pop	edi

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
	pop	esi

; 1115 : 		}

	ret	4
$LN15@Buy@7:
?_Buy@?$vector@IV?$allocator@I@std@@@std@@IAE_NI@Z ENDP	; std::vector<unsigned int,std::allocator<unsigned int> >::_Buy
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Make_iter
; Function compile flags: /Ogtpy
;	COMDAT ?_Make_iter@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@@Z PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Make_iter, COMDAT
; _this$ = ecx

; 687  : 		return (iterator(_Where._Myptr));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR __Where$[esp-4]
	mov	DWORD PTR [eax], ecx

; 688  : 		}

	ret	8
?_Make_iter@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@@Z ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Make_iter
_TEXT	ENDS
PUBLIC	??0?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAE@PAI@Z ; std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAE@PAI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAE@PAI@Z PROC ; std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >, COMDAT
; _this$ = ecx

; 1786 : 		{	// construct with offset and pointer

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], 0

; 1787 : 		}

	ret	4
??0?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAE@PAI@Z ENDP ; std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >
_TEXT	ENDS
PUBLIC	?max_size@?$vector@_NV?$allocator@_N@std@@@std@@QBEIXZ ; std::vector<bool,std::allocator<bool> >::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$vector@_NV?$allocator@_N@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@_NV?$allocator@_N@std@@@std@@QBEIXZ PROC ; std::vector<bool,std::allocator<bool> >::max_size, COMDAT
; _this$ = ecx

; 2053 : 		const size_type _Maxsize = _Myvec.max_size();
; 2054 : 		return (_Maxsize < (size_type)(-1) / _VBITS
; 2055 : 			? _Maxsize * _VBITS : (size_type)(-1));

	or	eax, -1

; 2056 : 		}

	ret	0
?max_size@?$vector@_NV?$allocator@_N@std@@@std@@QBEIXZ ENDP ; std::vector<bool,std::allocator<bool> >::max_size
_TEXT	ENDS
PUBLIC	?end@?$vector@IV?$allocator@I@std@@@std@@QAE?AV?$_Vector_iterator@IV?$allocator@I@std@@@2@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QAE?AV?$_Vector_iterator@IV?$allocator@I@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@IV?$allocator@I@std@@@std@@QAE?AV?$_Vector_iterator@IV?$allocator@I@std@@@2@XZ PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@IV?$allocator@I@std@@@std@@QAE?AV?$_Vector_iterator@IV?$allocator@I@std@@@2@XZ ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::end
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@IV?$allocator@I@std@@@std@@IAEXPAI0@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Destroy
; Function compile flags: /Ogtpy
;	COMDAT ?_Destroy@?$vector@IV?$allocator@I@std@@@std@@IAEXPAI0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@IV?$allocator@I@std@@@std@@IAEXPAI0@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	8
?_Destroy@?$vector@IV?$allocator@I@std@@@std@@IAEXPAI0@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Destroy
_TEXT	ENDS
PUBLIC	??H?$_Vector_iterator@IV?$allocator@I@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<unsigned int,std::allocator<unsigned int> >::operator+
; Function compile flags: /Ogtpy
;	COMDAT ??H?$_Vector_iterator@IV?$allocator@I@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@IV?$allocator@I@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<unsigned int,std::allocator<unsigned int> >::operator+, COMDAT
; _this$ = ecx

; 381  : 		_Myt _Tmp = *this;
; 382  : 		return (_Tmp += _Off);

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], edx

; 383  : 		}

	ret	8
??H?$_Vector_iterator@IV?$allocator@I@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<unsigned int,std::allocator<unsigned int> >::operator+
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@W4TraitTypes@@@std@@@std@@YAXPAW4TraitTypes@@0AAV?$allocator@W4TraitTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<enum TraitTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@W4TraitTypes@@@std@@@std@@YAXPAW4TraitTypes@@0AAV?$allocator@W4TraitTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@W4TraitTypes@@@std@@@std@@YAXPAW4TraitTypes@@0AAV?$allocator@W4TraitTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<enum TraitTypes> >, COMDAT

; 233  : 	for (; _First != _Last; ++_First)
; 234  : 		_Al.destroy(_First);
; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@W4TraitTypes@@@std@@@std@@YAXPAW4TraitTypes@@0AAV?$allocator@W4TraitTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<enum TraitTypes> >
_TEXT	ENDS
PUBLIC	??$unchecked_copy@PAV?$Array@H$05@Firaxis@@PAV12@@stdext@@YAPAV?$Array@H$05@Firaxis@@PAV12@00@Z ; stdext::unchecked_copy<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$unchecked_copy@PAV?$Array@H$05@Firaxis@@PAV12@@stdext@@YAPAV?$Array@H$05@Firaxis@@PAV12@00@Z
_TEXT	SEGMENT
$T235717 = -4						; size = 1
__Cat$235723 = -4					; size = 1
$T235719 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAV?$Array@H$05@Firaxis@@PAV12@@stdext@@YAPAV?$Array@H$05@Firaxis@@PAV12@00@Z PROC ; stdext::unchecked_copy<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *>, COMDAT

; 3604 : 	{	// copy [_First, _Last) to [_Dest, ...)

	push	ecx

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	BYTE PTR $T235717[esp+4], 0
	mov	eax, DWORD PTR $T235717[esp+4]
	mov	ecx, DWORD PTR __Cat$235723[esp+4]
	mov	edx, DWORD PTR $T235719[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Copy_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::random_access_iterator_tag>

; 3607 : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_copy@PAV?$Array@H$05@Firaxis@@PAV12@@stdext@@YAPAV?$Array@H$05@Firaxis@@PAV12@00@Z ENDP ; stdext::unchecked_copy<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *>
_TEXT	ENDS
PUBLIC	??$_Copy_opt@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_opt@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
__Dest$ = 28						; size = 8
___formal$ = 36						; size = 1
___formal$ = 40						; size = 1
___formal$ = 44						; size = 1
??$_Copy_opt@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::random_access_iterator_tag>, COMDAT

; 2469 : 	{	// copy [_First, _Last) to [_Dest, ...), arbitrary iterators

	mov	edx, DWORD PTR __Dest$[esp-4]
	mov	ecx, DWORD PTR __First$[esp]
	push	ebx
	push	esi
	mov	esi, DWORD PTR __Dest$[esp+8]
	npad	2

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

$LL18@Copy_opt@8:
	mov	eax, DWORD PTR __First$[esp+4]
	cmp	eax, DWORD PTR __Last$[esp+4]
	jne	SHORT $LN26@Copy_opt@8
	cmp	ecx, DWORD PTR __Last$[esp+8]
	je	SHORT $LN62@Copy_opt@8
$LN26@Copy_opt@8:

; 2472 : 		*_Dest = *_First;

	mov	ebx, 1
	shl	ebx, cl
	mov	ecx, esi
	test	ebx, DWORD PTR [eax]
	mov	eax, 1
	je	SHORT $LN49@Copy_opt@8
	shl	eax, cl
	or	DWORD PTR [edx], eax
	jmp	SHORT $LN2@Copy_opt@8
$LN49@Copy_opt@8:
	shl	eax, cl
	not	eax
	and	DWORD PTR [edx], eax
$LN2@Copy_opt@8:
	mov	esi, DWORD PTR __Dest$[esp+8]
	mov	edx, DWORD PTR __Dest$[esp+4]
	cmp	esi, 31					; 0000001fH
	jae	SHORT $LN11@Copy_opt@8

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	inc	esi
	jmp	SHORT $LN63@Copy_opt@8
$LN11@Copy_opt@8:
	xor	esi, esi
	add	edx, 4
	mov	DWORD PTR __Dest$[esp+4], edx
$LN63@Copy_opt@8:
	mov	ecx, DWORD PTR __First$[esp+8]
	mov	DWORD PTR __Dest$[esp+8], esi
	cmp	ecx, 31					; 0000001fH
	jae	SHORT $LN19@Copy_opt@8
	inc	ecx
	mov	DWORD PTR __First$[esp+8], ecx
	jmp	SHORT $LL18@Copy_opt@8
$LN19@Copy_opt@8:
	xor	ecx, ecx
	add	DWORD PTR __First$[esp+4], 4
	mov	DWORD PTR __First$[esp+8], ecx
	jmp	SHORT $LL18@Copy_opt@8
$LN62@Copy_opt@8:

; 2473 : 	return (_Dest);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	DWORD PTR [eax+4], esi
	pop	esi
	mov	DWORD PTR [eax], edx
	pop	ebx

; 2474 : 	}

	ret	0
??$_Copy_opt@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAXPAV?$Array@H$05@Firaxis@@0AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<Firaxis::Array<int,6> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAXPAV?$Array@H$05@Firaxis@@0AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAXPAV?$Array@H$05@Firaxis@@0AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<Firaxis::Array<int,6> > >, COMDAT

; 233  : 	for (; _First != _Last; ++_First)
; 234  : 		_Al.destroy(_First);
; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAXPAV?$Array@H$05@Firaxis@@0AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<Firaxis::Array<int,6> > >
_TEXT	ENDS
PUBLIC	??R?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@QAEXABV?$Array@H$05@Firaxis@@@Z ; SerializeFromSequenceContainer<Firaxis::Array<int,6> const ,std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > > const >::operator()
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fstlcontainerserialization.h
;	COMDAT ??R?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@QAEXABV?$Array@H$05@Firaxis@@@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??R?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@QAEXABV?$Array@H$05@Firaxis@@@Z PROC ; SerializeFromSequenceContainer<Firaxis::Array<int,6> const ,std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > > const >::operator(), COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebx

; 75   : 		m_saveTo << i;

	mov	ebx, DWORD PTR [ecx]
	push	esi
	mov	esi, DWORD PTR _i$[esp+4]
	push	edi
	mov	edi, 6
	npad	2
$LL5@operator@15:
	push	esi
	mov	ecx, ebx
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	add	esi, 4
	sub	edi, 1
	jne	SHORT $LL5@operator@15
	pop	edi
	pop	esi
	pop	ebx

; 76   : 	}

	ret	4
??R?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@QAEXABV?$Array@H$05@Firaxis@@@Z ENDP ; SerializeFromSequenceContainer<Firaxis::Array<int,6> const ,std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > > const >::operator()
_TEXT	ENDS
PUBLIC	??H?$_Vector_iterator@HV?$allocator@H@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<int,std::allocator<int> >::operator+
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??H?$_Vector_iterator@HV?$allocator@H@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@HV?$allocator@H@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<int,std::allocator<int> >::operator+, COMDAT
; _this$ = ecx

; 381  : 		_Myt _Tmp = *this;
; 382  : 		return (_Tmp += _Off);

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], edx

; 383  : 		}

	ret	8
??H?$_Vector_iterator@HV?$allocator@H@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<int,std::allocator<int> >::operator+
_TEXT	ENDS
PUBLIC	??H?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator+
; Function compile flags: /Ogtpy
;	COMDAT ??H?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator+, COMDAT
; _this$ = ecx

; 381  : 		_Myt _Tmp = *this;
; 382  : 		return (_Tmp += _Off);

	mov	eax, DWORD PTR __Off$[esp-4]
	mov	ecx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	edx, DWORD PTR [ecx+eax*8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], edx

; 383  : 		}

	ret	8
??H?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::operator+
_TEXT	ENDS
PUBLIC	??$_Unchecked_move_backward@PAHPAH@stdext@@YAPAHPAH00@Z ; stdext::_Unchecked_move_backward<int *,int *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Unchecked_move_backward@PAHPAH@stdext@@YAPAHPAH00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAHPAH@stdext@@YAPAHPAH00@Z PROC ; stdext::_Unchecked_move_backward<int *,int *>, COMDAT

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	sar	eax, 2
	push	esi
	mov	esi, DWORD PTR __Dest$[esp]
	lea	ecx, DWORD PTR [eax*4]
	sub	esi, ecx
	test	eax, eax
	jle	SHORT $LN14@Unchecked_@4
	push	ecx
	push	edx
	push	ecx
	push	esi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN14@Unchecked_@4:
	mov	eax, esi
	pop	esi

; 3697 : 	}

	ret	0
??$_Unchecked_move_backward@PAHPAH@stdext@@YAPAHPAH00@Z ENDP ; stdext::_Unchecked_move_backward<int *,int *>
_TEXT	ENDS
PUBLIC	??$fill@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@_N@std@@YAXV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@0AB_N@Z ; std::fill<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$fill@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@_N@std@@YAXV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@0AB_N@Z
_TEXT	SEGMENT
__First$ = 8						; size = 8
__Last$ = 16						; size = 8
__Val$ = 24						; size = 4
??$fill@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@_N@std@@YAXV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@0AB_N@Z PROC ; std::fill<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,bool>, COMDAT

; 3187 : 	_Fill(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val);

	mov	eax, DWORD PTR __Val$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp]
	mov	edx, DWORD PTR __Last$[esp-4]
	push	eax
	mov	eax, DWORD PTR __First$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __First$[esp+4]
	push	edx
	push	eax
	push	ecx
	call	??$_Fill@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@_N@std@@YAXV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@0AB_N@Z ; std::_Fill<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,bool>
	add	esp, 20					; 00000014H

; 3188 : 	}

	ret	0
??$fill@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@_N@std@@YAXV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@0AB_N@Z ENDP ; std::fill<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,bool>
_TEXT	ENDS
PUBLIC	??$_Unchecked_move_backward@PAV?$Array@H$05@Firaxis@@PAV12@@stdext@@YAPAV?$Array@H$05@Firaxis@@PAV12@00@Z ; stdext::_Unchecked_move_backward<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unchecked_move_backward@PAV?$Array@H$05@Firaxis@@PAV12@@stdext@@YAPAV?$Array@H$05@Firaxis@@PAV12@00@Z
_TEXT	SEGMENT
$T236014 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$236018 = 16					; size = 1
$T235997 = 16						; size = 1
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAV?$Array@H$05@Firaxis@@PAV12@@stdext@@YAPAV?$Array@H$05@Firaxis@@PAV12@00@Z PROC ; stdext::_Unchecked_move_backward<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *>, COMDAT

; 3694 : 	{	// move [_First, _Last) backwards to [..., _Dest)

	push	ecx

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$236018[esp]
	mov	edx, DWORD PTR $T235997[esp]
	mov	BYTE PTR $T236014[esp+4], 0
	mov	eax, DWORD PTR $T236014[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Copy_backward_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::random_access_iterator_tag>

; 3697 : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Unchecked_move_backward@PAV?$Array@H$05@Firaxis@@PAV12@@stdext@@YAPAV?$Array@H$05@Firaxis@@PAV12@00@Z ENDP ; stdext::_Unchecked_move_backward<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *>
_TEXT	ENDS
PUBLIC	??$_Unchecked_move_backward@PAIPAI@stdext@@YAPAIPAI00@Z ; stdext::_Unchecked_move_backward<unsigned int *,unsigned int *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unchecked_move_backward@PAIPAI@stdext@@YAPAIPAI00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAIPAI@stdext@@YAPAIPAI00@Z PROC ; stdext::_Unchecked_move_backward<unsigned int *,unsigned int *>, COMDAT

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	sar	eax, 2
	push	esi
	mov	esi, DWORD PTR __Dest$[esp]
	lea	ecx, DWORD PTR [eax*4]
	sub	esi, ecx
	test	eax, eax
	jle	SHORT $LN14@Unchecked_@5
	push	ecx
	push	edx
	push	ecx
	push	esi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN14@Unchecked_@5:
	mov	eax, esi
	pop	esi

; 3697 : 	}

	ret	0
??$_Unchecked_move_backward@PAIPAI@stdext@@YAPAIPAI00@Z ENDP ; stdext::_Unchecked_move_backward<unsigned int *,unsigned int *>
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAV?$Array@H$05@Firaxis@@IV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAXPAV?$Array@H$05@Firaxis@@IABV12@AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<Firaxis::Array<int,6> *,unsigned int,Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Uninit_fill_n@PAV?$Array@H$05@Firaxis@@IV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAXPAV?$Array@H$05@Firaxis@@IABV12@AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAV?$Array@H$05@Firaxis@@IV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAXPAV?$Array@H$05@Firaxis@@IABV12@AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<Firaxis::Array<int,6> *,unsigned int,Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >, COMDAT

; 394  : 
; 395  :  #if _HAS_ITERATOR_DEBUGGING
; 396  : //	if (_Count < 0)
; 397  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 398  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 399  : 
; 400  : 	_FwdIt _Next = _First;
; 401  : 
; 402  : 	_TRY_BEGIN
; 403  : 	for (; 0 < _Count; --_Count, ++_First)

	mov	edx, DWORD PTR __Count$[esp-4]
	test	edx, edx
	jbe	SHORT $LN4@Uninit_fil@3
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	eax, DWORD PTR __First$[esp-4]
	push	esi
$LL6@Uninit_fil@3:

; 404  : 		_Al.construct(_First, _Val);

	test	eax, eax
	je	SHORT $LN5@Uninit_fil@3
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	mov	esi, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], esi
	mov	esi, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], esi
	mov	esi, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], esi
	mov	esi, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], esi
$LN5@Uninit_fil@3:
	dec	edx
	add	eax, 24					; 00000018H
	test	edx, edx
	ja	SHORT $LL6@Uninit_fil@3
	pop	esi
$LN4@Uninit_fil@3:

; 405  : 	_CATCH_ALL
; 406  : 	for (; _Next != _First; ++_Next)
; 407  : 		_Al.destroy(_Next);
; 408  : 	_RERAISE;
; 409  : 	_CATCH_END
; 410  : 	}

	ret	0
??$_Uninit_fill_n@PAV?$Array@H$05@Firaxis@@IV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAXPAV?$Array@H$05@Firaxis@@IABV12@AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<Firaxis::Array<int,6> *,unsigned int,Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >
_TEXT	ENDS
PUBLIC	??F?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator--
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??F?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator--, COMDAT
; _this$ = ecx

; 1808 : 		{	// predecrement

	mov	eax, ecx

; 1809 : 		--*(_Mybase *)this;

	mov	ecx, DWORD PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN6@operator@16
	dec	ecx
	mov	DWORD PTR [eax+4], ecx

; 1810 : 		return (*this);
; 1811 : 		}

	ret	0

; 1809 : 		--*(_Mybase *)this;

$LN6@operator@16:
	add	DWORD PTR [eax], -4			; fffffffcH
	mov	DWORD PTR [eax+4], 31			; 0000001fH

; 1810 : 		return (*this);
; 1811 : 		}

	ret	0
??F?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator--
_TEXT	ENDS
PUBLIC	??$unchecked_fill_n@PAHIH@stdext@@YAXPAHIABH@Z	; stdext::unchecked_fill_n<int *,unsigned int,int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$unchecked_fill_n@PAHIH@stdext@@YAXPAHIABH@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
??$unchecked_fill_n@PAHIH@stdext@@YAXPAHIABH@Z PROC	; stdext::unchecked_fill_n<int *,unsigned int,int>, COMDAT

; 3721 : 		_STD _Fill_n(_First, _Count, _Val, _STD _Iter_cat(_First), _STD _Range_checked_iterator_tag());

	mov	eax, DWORD PTR __Count$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	test	eax, eax
	jbe	SHORT $LN7@unchecked_@9
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL9@unchecked_@9:
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [ecx], esi
	dec	eax
	add	ecx, 4
	test	eax, eax
	ja	SHORT $LL9@unchecked_@9
	pop	esi
$LN7@unchecked_@9:

; 3722 : 	}

	ret	0
??$unchecked_fill_n@PAHIH@stdext@@YAXPAHIABH@Z ENDP	; stdext::unchecked_fill_n<int *,unsigned int,int>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAHPAHV?$allocator@H@std@@U_Undefined_move_tag@2@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<int *,int *,std::allocator<int>,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Uninit_move@PAHPAHV?$allocator@H@std@@U_Undefined_move_tag@2@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_move@PAHPAHV?$allocator@H@std@@U_Undefined_move_tag@2@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<int *,int *,std::allocator<int>,std::_Undefined_move_tag>, COMDAT

; 207  : 	return (_STDEXT unchecked_uninitialized_copy(_First, _Last, _Dest, _Al));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]
	test	eax, eax
	jbe	SHORT $LN10@Uninit_mov
	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN10@Uninit_mov:
	pop	edi
	mov	eax, esi
	pop	esi

; 208  : 	}

	ret	0
??$_Uninit_move@PAHPAHV?$allocator@H@std@@U_Undefined_move_tag@2@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<int *,int *,std::allocator<int>,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAIPAIV?$allocator@I@std@@U_Undefined_move_tag@2@@std@@YAPAIPAI00AAV?$allocator@I@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<unsigned int *,unsigned int *,std::allocator<unsigned int>,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_move@PAIPAIV?$allocator@I@std@@U_Undefined_move_tag@2@@std@@YAPAIPAI00AAV?$allocator@I@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_move@PAIPAIV?$allocator@I@std@@U_Undefined_move_tag@2@@std@@YAPAIPAI00AAV?$allocator@I@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<unsigned int *,unsigned int *,std::allocator<unsigned int>,std::_Undefined_move_tag>, COMDAT

; 207  : 	return (_STDEXT unchecked_uninitialized_copy(_First, _Last, _Dest, _Al));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]
	test	eax, eax
	jbe	SHORT $LN10@Uninit_mov@2
	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN10@Uninit_mov@2:
	pop	edi
	mov	eax, esi
	pop	esi

; 208  : 	}

	ret	0
??$_Uninit_move@PAIPAIV?$allocator@I@std@@U_Undefined_move_tag@2@@std@@YAPAIPAI00AAV?$allocator@I@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<unsigned int *,unsigned int *,std::allocator<unsigned int>,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$unchecked_fill_n@PAIII@stdext@@YAXPAIIABI@Z	; stdext::unchecked_fill_n<unsigned int *,unsigned int,unsigned int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$unchecked_fill_n@PAIII@stdext@@YAXPAIIABI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
??$unchecked_fill_n@PAIII@stdext@@YAXPAIIABI@Z PROC	; stdext::unchecked_fill_n<unsigned int *,unsigned int,unsigned int>, COMDAT

; 3721 : 		_STD _Fill_n(_First, _Count, _Val, _STD _Iter_cat(_First), _STD _Range_checked_iterator_tag());

	mov	eax, DWORD PTR __Count$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	test	eax, eax
	jbe	SHORT $LN7@unchecked_@10
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL9@unchecked_@10:
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [ecx], esi
	dec	eax
	add	ecx, 4
	test	eax, eax
	ja	SHORT $LL9@unchecked_@10
	pop	esi
$LN7@unchecked_@10:

; 3722 : 	}

	ret	0
??$unchecked_fill_n@PAIII@stdext@@YAXPAIIABI@Z ENDP	; stdext::unchecked_fill_n<unsigned int *,unsigned int,unsigned int>
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_copy@PAV?$Array@H$05@Firaxis@@PAV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@stdext@@YAPAV?$Array@H$05@Firaxis@@PAV12@00AAV?$allocator@V?$Array@H$05@Firaxis@@@std@@@Z ; stdext::unchecked_uninitialized_copy<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::allocator<Firaxis::Array<int,6> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_copy@PAV?$Array@H$05@Firaxis@@PAV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@stdext@@YAPAV?$Array@H$05@Firaxis@@PAV12@00AAV?$allocator@V?$Array@H$05@Firaxis@@@std@@@Z
_TEXT	SEGMENT
$T236261 = -4						; size = 1
__Cat$236265 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAV?$Array@H$05@Firaxis@@PAV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@stdext@@YAPAV?$Array@H$05@Firaxis@@PAV12@00AAV?$allocator@V?$Array@H$05@Firaxis@@@std@@@Z PROC ; stdext::unchecked_uninitialized_copy<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::allocator<Firaxis::Array<int,6> > >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T236261[esp+4], 0
	mov	eax, DWORD PTR $T236261[esp+4]
	mov	ecx, DWORD PTR __Cat$236265[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAV?$Array@H$05@Firaxis@@PAV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::allocator<Firaxis::Array<int,6> > >

; 823  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_copy@PAV?$Array@H$05@Firaxis@@PAV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@stdext@@YAPAV?$Array@H$05@Firaxis@@PAV12@00AAV?$allocator@V?$Array@H$05@Firaxis@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_copy<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::allocator<Firaxis::Array<int,6> > >
_TEXT	ENDS
PUBLIC	?CheckForBarbarianConversion@CvPlayerTraits@@QAE_NPAVCvPlot@@@Z ; CvPlayerTraits::CheckForBarbarianConversion
EXTRN	?getImprovementType@CvPlot@@QBE?AW4ImprovementTypes@@XZ:PROC ; CvPlot::getImprovementType
EXTRN	?getBestDefender@CvPlot@@QAE?AV?$FObjectHandle@VCvUnit@@@@W4PlayerTypes@@0PBVCvUnit@@_N222@Z:PROC ; CvPlot::getBestDefender
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
xdata$x	SEGMENT
__unwindtable$?CheckForBarbarianConversion@CvPlayerTraits@@QAE_NPAVCvPlot@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CheckForBarbarianConversion@CvPlayerTraits@@QAE_NPAVCvPlot@@@Z$0
__ehfuncinfo$?CheckForBarbarianConversion@CvPlayerTraits@@QAE_NPAVCvPlot@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CheckForBarbarianConversion@CvPlayerTraits@@QAE_NPAVCvPlot@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
xdata$x	ENDS
;	COMDAT ?CheckForBarbarianConversion@CvPlayerTraits@@QAE_NPAVCvPlot@@@Z
_TEXT	SEGMENT
_bRtnValue$ = -21					; size = 1
_pNavalUnit$223942 = -20				; size = 8
__$EHRec$ = -12						; size = 12
$T236270 = 8						; size = 4
_pPlot$ = 8						; size = 4
?CheckForBarbarianConversion@CvPlayerTraits@@QAE_NPAVCvPlot@@@Z PROC ; CvPlayerTraits::CheckForBarbarianConversion, COMDAT
; _this$ = ecx

; 2664 : {

	push	-1
	push	__ehhandler$?CheckForBarbarianConversion@CvPlayerTraits@@QAE_NPAVCvPlot@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebp
	push	esi
	push	edi

; 2665 : 	// Loop through all adjacent plots
; 2666 : 	CvPlot* pAdjacentPlot;
; 2667 : 	int iI;
; 2668 : 	bool bRtnValue = false;
; 2669 : 
; 2670 : 	if(pPlot->isWater() && GetSeaBarbarianConversionPercent() > 0)

	mov	edi, DWORD PTR _pPlot$[esp+32]
	xor	al, al
	cmp	BYTE PTR [edi+5], 3
	mov	ebp, ecx
	mov	BYTE PTR _bRtnValue$[esp+36], al
	jne	$LN10@CheckForBa
	cmp	DWORD PTR [ebp+108], 0
	jle	$LN10@CheckForBa

; 2671 : 	{
; 2672 : 		for(iI = 0; iI < NUM_DIRECTION_TYPES; ++iI)

	xor	esi, esi
	npad	3
$LL9@CheckForBa:

; 2673 : 		{
; 2674 : 			pAdjacentPlot = plotDirection(pPlot->getX(), pPlot->getY(), ((DirectionTypes)iI));

	movsx	eax, WORD PTR [edi+2]
	movsx	ecx, WORD PTR [edi]
	push	esi
	push	eax
	push	ecx
	call	?plotDirection@@YAPAVCvPlot@@HHW4DirectionTypes@@@Z ; plotDirection
	add	esp, 12					; 0000000cH

; 2675 : 
; 2676 : 			if(pAdjacentPlot != NULL)

	test	eax, eax
	je	SHORT $LN8@CheckForBa

; 2677 : 			{
; 2678 : 				if(pAdjacentPlot->isWater())

	cmp	BYTE PTR [eax+5], 3
	jne	SHORT $LN8@CheckForBa

; 2679 : 				{
; 2680 : 					UnitHandle pNavalUnit = pAdjacentPlot->getBestDefender(BARBARIAN_PLAYER);

	push	0
	push	0
	push	0
	push	0
	push	0
	push	-1
	push	63					; 0000003fH
	lea	edx, DWORD PTR _pNavalUnit$223942[esp+64]
	push	edx
	mov	ecx, eax
	call	?getBestDefender@CvPlot@@QAE?AV?$FObjectHandle@VCvUnit@@@@W4PlayerTypes@@0PBVCvUnit@@_N222@Z ; CvPlot::getBestDefender

; 2681 : 					if(pNavalUnit)

	mov	ecx, DWORD PTR _pNavalUnit$223942[esp+36]
	mov	DWORD PTR __$EHRec$[esp+44], 0
	test	ecx, ecx
	je	SHORT $LN3@CheckForBa

; 2682 : 					{
; 2683 : 						if(ConvertBarbarianNavalUnit(pNavalUnit))

	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	cl, BYTE PTR _pNavalUnit$223942[esp+48]
	mov	BYTE PTR [eax+4], cl
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T236270[esp+40], esp
	test	eax, eax
	je	SHORT $LN30@CheckForBa
	mov	ecx, eax
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN30@CheckForBa:
	mov	ecx, ebp
	call	?ConvertBarbarianNavalUnit@CvPlayerTraits@@AAE_NV?$FObjectHandle@VCvUnit@@@@@Z ; CvPlayerTraits::ConvertBarbarianNavalUnit

; 2684 : 						{
; 2685 : 							bRtnValue = true;

	mov	ecx, DWORD PTR _pNavalUnit$223942[esp+36]
	test	al, al
	je	SHORT $LN3@CheckForBa
	mov	BYTE PTR _bRtnValue$[esp+36], 1
$LN3@CheckForBa:

; 2686 : 						}
; 2687 : 					}
; 2688 : 				}

	mov	DWORD PTR __$EHRec$[esp+44], -1
	test	ecx, ecx
	je	SHORT $LN8@CheckForBa
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN8@CheckForBa:

; 2671 : 	{
; 2672 : 		for(iI = 0; iI < NUM_DIRECTION_TYPES; ++iI)

	inc	esi
	cmp	esi, 6
	jl	$LL9@CheckForBa
$LN45@CheckForBa:

; 2697 : 	}
; 2698 : 
; 2699 : 	return bRtnValue;

	mov	al, BYTE PTR _bRtnValue$[esp+36]
$LN1@CheckForBa:

; 2700 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebp
	add	esp, 24					; 00000018H
	ret	4
$LN10@CheckForBa:

; 2689 : 			}
; 2690 : 		}
; 2691 : 	}
; 2692 : 
; 2693 : 	else if(GetLandBarbarianConversionPercent() > 0 && pPlot->getImprovementType() == GC.getBARBARIAN_CAMP_IMPROVEMENT() &&
; 2694 : 	        m_eCampGuardType != NO_UNIT)

	cmp	DWORD PTR [ebp+100], 0
	jle	SHORT $LN1@CheckForBa
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8548
	mov	ecx, edi
	call	?getImprovementType@CvPlot@@QBE?AW4ImprovementTypes@@XZ ; CvPlot::getImprovementType
	cmp	eax, esi
	jne	SHORT $LN45@CheckForBa
	cmp	DWORD PTR [ebp+356], -1
	je	SHORT $LN45@CheckForBa

; 2695 : 	{
; 2696 : 		bRtnValue = ConvertBarbarianCamp(pPlot);

	push	edi
	mov	ecx, ebp
	call	?ConvertBarbarianCamp@CvPlayerTraits@@AAE_NPAVCvPlot@@@Z ; CvPlayerTraits::ConvertBarbarianCamp

; 2700 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+36]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebp
	add	esp, 24					; 00000018H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CheckForBarbarianConversion@CvPlayerTraits@@QAE_NPAVCvPlot@@@Z$0:
	lea	ecx, DWORD PTR _pNavalUnit$223942[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?CheckForBarbarianConversion@CvPlayerTraits@@QAE_NPAVCvPlot@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?CheckForBarbarianConversion@CvPlayerTraits@@QAE_NPAVCvPlot@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CheckForBarbarianConversion@CvPlayerTraits@@QAE_NPAVCvPlot@@@Z ENDP ; CvPlayerTraits::CheckForBarbarianConversion
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AVconst_iterator@12@ABH@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::find
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AVconst_iterator@12@ABH@Z
_TEXT	SEGMENT
$T236337 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AVconst_iterator@12@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::find, COMDAT
; _this$ = ecx

; 986  : 		{	// find an element in nonmutable sequence that matches _Keyval

	push	ecx

; 987  : 		const_iterator _Where = lower_bound(_Keyval);

	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+4]
	cmp	BYTE PTR [eax+21], 0
	push	edi
	mov	edi, DWORD PTR __Keyval$[esp+4]
	jne	SHORT $LN9@find
	push	esi
	mov	esi, DWORD PTR [edi]
$LL10@find:
	cmp	DWORD PTR [eax+12], esi
	jge	SHORT $LN8@find
	mov	eax, DWORD PTR [eax+8]
	jmp	SHORT $LN7@find
$LN8@find:
	mov	edx, eax
	mov	eax, DWORD PTR [eax]
$LN7@find:
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL10@find
	pop	esi
$LN9@find:

; 988  : 		return (_Where == end()
; 989  : 			|| _DEBUG_LT_PRED(this->comp,
; 990  : 				_Keyval, _Key(_Where._Mynode()))
; 991  : 					? end() : _Where);

	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR __Where$[esp+4], edx
	cmp	edx, eax
	je	SHORT $LN3@find
	mov	ecx, DWORD PTR [edi]
	cmp	ecx, DWORD PTR [edx+12]
	jl	SHORT $LN3@find
	lea	eax, DWORD PTR __Where$[esp+4]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	DWORD PTR [eax], edx
	pop	edi

; 992  : 		}

	pop	ecx
	ret	8
$LN3@find:

; 988  : 		return (_Where == end()
; 989  : 			|| _DEBUG_LT_PRED(this->comp,
; 990  : 				_Keyval, _Key(_Where._Mynode()))
; 991  : 					? end() : _Where);

	mov	DWORD PTR $T236337[esp+8], eax
	lea	eax, DWORD PTR $T236337[esp+8]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	DWORD PTR [eax], edx
	pop	edi

; 992  : 		}

	pop	ecx
	ret	8
?find@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AVconst_iterator@12@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::find
_TEXT	ENDS
PUBLIC	??0?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE@XZ ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE@XZ PROC ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	mov	eax, ecx

; 471  : 		_Buy(0);

	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 472  : 		}

	ret	0
??0?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE@XZ ENDP ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >
_TEXT	ENDS
PUBLIC	??0?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE@XZ ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE@XZ PROC ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	mov	eax, ecx

; 471  : 		_Buy(0);

	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 472  : 		}

	ret	0
??0?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE@XZ ENDP ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >
_TEXT	ENDS
PUBLIC	??0?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE@XZ ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::vector<enum TraitTypes,std::allocator<enum TraitTypes> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE@XZ PROC ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::vector<enum TraitTypes,std::allocator<enum TraitTypes> >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	mov	eax, ecx

; 471  : 		_Buy(0);

	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 472  : 		}

	ret	0
??0?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE@XZ ENDP ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::vector<enum TraitTypes,std::allocator<enum TraitTypes> >
_TEXT	ENDS
PUBLIC	?push_back@?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@QAEIABUFreeTraitUnit@@@Z ; FStaticVector<FreeTraitUnit,5,1,297,0>::push_back
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?push_back@?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@QAEIABUFreeTraitUnit@@@Z
_TEXT	SEGMENT
_element$ = 8						; size = 4
?push_back@?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@QAEIABUFreeTraitUnit@@@Z PROC ; FStaticVector<FreeTraitUnit,5,1,297,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	esi
	mov	esi, ecx

; 677  : 		m_bIsResized = false;
; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	eax, DWORD PTR [esi+8]
	mov	BYTE PTR [esi+52], 0
	cmp	DWORD PTR [esi+4], eax
	jne	SHORT $LN1@push_back

; 679  : 			GrowSize(m_uiCurrMaxSize);

	push	eax
	call	?GrowSize@?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<FreeTraitUnit,5,1,297,0>::GrowSize
$LN1@push_back:

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi]
	lea	eax, DWORD PTR [ecx+eax*8]
	test	eax, eax
	je	SHORT $LN4@push_back
	mov	ecx, DWORD PTR _element$[esp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
$LN4@push_back:

; 681  : 		return m_uiCurrSize++;

	mov	eax, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [esi+4], edx
	pop	esi

; 682  : 	};

	ret	4
?push_back@?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@QAEIABUFreeTraitUnit@@@Z ENDP ; FStaticVector<FreeTraitUnit,5,1,297,0>::push_back
_TEXT	ENDS
PUBLIC	??0?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@XZ ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@XZ PROC ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	mov	eax, ecx

; 471  : 		_Buy(0);

	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 472  : 		}

	ret	0
??0?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@XZ ENDP ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >
_TEXT	ENDS
PUBLIC	??1?$_Tree_ptr@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@XZ ; std::_Tree_ptr<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::~_Tree_ptr<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Tree_ptr@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_ptr@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@XZ PROC ; std::_Tree_ptr<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::~_Tree_ptr<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Tree_ptr@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@XZ ENDP ; std::_Tree_ptr<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::~_Tree_ptr<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Init
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Init, COMDAT
; _this$ = ecx

; 1177 : 		{	// create head/nil node and make tree empty

	push	esi
	mov	esi, ecx

; 1178 : 		_Myhead = _Buynode();

	call	?_Buynode@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Buynode
	mov	DWORD PTR [esi+4], eax

; 1179 : 		_Isnil(_Myhead) = true;

	mov	BYTE PTR [eax+21], 1

; 1180 : 		_Root() = _Myhead;

	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], eax

; 1181 : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+8], eax

; 1182 : 		_Mysize = 0;

	mov	DWORD PTR [esi+8], 0
	pop	esi

; 1183 : 		}

	ret	0
?_Init@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Init
_TEXT	ENDS
PUBLIC	?erase@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@0@Z ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::erase
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?erase@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@0@Z PROC ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::erase, COMDAT
; _this$ = ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);

	mov	edx, DWORD PTR __First_arg$[esp-4]
	push	ebp
	mov	ebp, DWORD PTR ___$ReturnUdt$[esp]
	push	esi

; 1030 : 		iterator _Last = _Make_iter(_Last_arg);
; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	esi, DWORD PTR __Last_arg$[esp+4]
	push	edi
	mov	edi, ecx
	mov	DWORD PTR [ebp], edx
	cmp	edx, esi
	je	SHORT $LN29@erase@2

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	eax, DWORD PTR [edi+8]
	sub	eax, esi
	sar	eax, 2
	lea	ecx, DWORD PTR [eax*4]
	push	ebx
	lea	ebx, DWORD PTR [ecx+edx]
	test	eax, eax
	jle	SHORT $LN26@erase@2
	push	ecx
	push	esi
	push	ecx
	push	edx
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN26@erase@2:

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);
; 1049 : 			_Mylast = _Ptr;

	mov	DWORD PTR [edi+8], ebx
	pop	ebx
$LN29@erase@2:
	pop	edi
	pop	esi

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);

	mov	eax, ebp
	pop	ebp

; 1055 : #endif
; 1056 : 		}

	ret	12					; 0000000cH
?erase@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@2@0@Z ENDP ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAEXXZ ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Tidy
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAEXXZ PROC ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@Tidy

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1135 : 		}

	ret	0
?_Tidy@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@IAEXXZ ENDP ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@0@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Copy
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
xdata$x	SEGMENT
__catchsym$?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@0@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@0@Z$0
__unwindtable$?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@0@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@0@Z$2
__ehfuncinfo$?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@0@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@0@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
__Newroot$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Rootnode$ = 8						; size = 4
__Wherenode$ = 12					; size = 4
?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@0@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Copy, COMDAT
; _this$ = ecx

; 1075 : 		{	// copy entire subtree, recursively

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx

; 1076 : 		_Nodeptr _Newroot = _Myhead;	// point at nil node
; 1077 : 
; 1078 : 		if (!_Isnil(_Rootnode))

	mov	ebx, DWORD PTR __Rootnode$[ebp]
	cmp	BYTE PTR [ebx+21], 0
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+4]
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], esi
	mov	DWORD PTR __Newroot$[ebp], eax
	jne	SHORT $LN8@Copy

; 1079 : 			{	// copy a node, then any subtrees
; 1080 : 			_Nodeptr _Pnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 1081 : 				_Myval(_Rootnode), _Color(_Rootnode));

	movzx	ecx, BYTE PTR [ebx+20]
	push	ecx
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	lea	edx, DWORD PTR [ebx+12]
	push	edx
	push	eax
	push	ecx
	push	eax
	mov	ecx, esi
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@00ABU?$pair@$$CBHH@2@D@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Buynode

; 1082 : 			if (_Isnil(_Newroot))

	mov	edx, DWORD PTR __Newroot$[ebp]
	cmp	BYTE PTR [edx+21], 0
	mov	edi, eax
	je	SHORT $LN2@Copy

; 1083 : 				_Newroot = _Pnode;	// memorize new root

	mov	DWORD PTR __Newroot$[ebp], edi
$LN2@Copy:

; 1084 : 
; 1085 : 			_TRY_BEGIN
; 1086 : 			_Left(_Pnode) = _Copy(_Left(_Rootnode), _Pnode);

	mov	eax, DWORD PTR [ebx]
	push	edi
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@0@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Copy
	mov	DWORD PTR [edi], eax

; 1087 : 			_Right(_Pnode) = _Copy(_Right(_Rootnode), _Pnode);

	mov	ecx, DWORD PTR [ebx+8]
	push	edi
	push	ecx
	mov	ecx, esi
	call	?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@0@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Copy
	mov	DWORD PTR [edi+8], eax
$LN8@Copy:

; 1091 : 			_CATCH_END
; 1092 : 			}
; 1093 : 
; 1094 : 		return (_Newroot);	// return newly constructed tree
; 1095 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	eax, DWORD PTR __Newroot$[ebp]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
__catch$?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@0@Z$0:

; 1088 : 			_CATCH_ALL
; 1089 : 			_Erase(_Newroot);	// subtree copy failed, bail out

	mov	edx, DWORD PTR __Newroot$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	push	edx
	call	?_Erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Erase

; 1090 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN29@Copy:
$LN28@Copy:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@0@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@0@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Copy
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABU?$pair@$$CBHH@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Insert
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Insert@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABU?$pair@$$CBHH@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABU?$pair@$$CBHH@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABU?$pair@$$CBHH@2@@Z$2
__ehfuncinfo$?_Insert@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABU?$pair@$$CBHH@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Insert@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABU?$pair@$$CBHH@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABU?$pair@$$CBHH@2@@Z
_TEXT	SEGMENT
$T237061 = -80						; size = 28
$T237060 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABU?$pair@$$CBHH@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Insert, COMDAT
; _this$ = ecx

; 1187 : 		{	// add node with value next to _Wherenode, to left if _Addnode

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABU?$pair@$$CBHH@2@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 68					; 00000044H
	push	edi
	mov	edi, ecx

; 1188 : 		if (max_size() - 1 <= _Mysize)

	cmp	DWORD PTR [edi+8], 536870910		; 1ffffffeH
	jb	SHORT $LN17@Insert

; 1189 : 			_THROW(length_error, "map/set<T> too long");

	push	OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T237061[esp+88]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T237060[esp+84]
	mov	DWORD PTR __$EHRec$[esp+92], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T237061[esp+84]
	push	eax
	lea	ecx, DWORD PTR $T237060[esp+100]
	mov	BYTE PTR __$EHRec$[esp+96], 1
	mov	DWORD PTR $T237060[esp+88], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T237060[esp+88]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+100], 0
	mov	DWORD PTR $T237060[esp+92], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN228@Insert:
$LN17@Insert:

; 1190 : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 1191 : 			_Val, _Red);

	mov	edx, DWORD PTR __Val$[esp+80]
	mov	eax, DWORD PTR [edi+4]
	push	ebx
	push	ebp
	push	esi
	mov	esi, DWORD PTR __Wherenode$[esp+92]
	push	0
	push	edx
	push	eax
	push	esi
	push	eax
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@00ABU?$pair@$$CBHH@2@D@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Buynode
	mov	ebp, eax

; 1192 : 
; 1193 : 		++_Mysize;
; 1194 : 		if (_Wherenode == _Myhead)

	mov	eax, DWORD PTR [edi+4]
	mov	ebx, 1
	add	DWORD PTR [edi+8], ebx
	cmp	esi, eax
	jne	SHORT $LN16@Insert

; 1195 : 			{	// first node in tree, just set head values
; 1196 : 			_Root() = _Newnode;

	mov	DWORD PTR [eax+4], ebp

; 1197 : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [eax], ebp
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [ecx+8], ebp
	jmp	SHORT $LN11@Insert
$LN16@Insert:

; 1198 : 			}
; 1199 : 		else if (_Addleft)

	cmp	BYTE PTR __Addleft$[esp+92], 0
	je	SHORT $LN14@Insert

; 1200 : 			{	// add to left of _Wherenode
; 1201 : 			_Left(_Wherenode) = _Newnode;

	mov	DWORD PTR [esi], ebp

; 1202 : 			if (_Wherenode == _Lmost())

	mov	eax, DWORD PTR [edi+4]
	cmp	esi, DWORD PTR [eax]
	jne	SHORT $LN11@Insert

; 1203 : 				_Lmost() = _Newnode;

	mov	DWORD PTR [eax], ebp

; 1204 : 			}
; 1205 : 		else

	jmp	SHORT $LN11@Insert
$LN14@Insert:

; 1206 : 			{	// add to right of _Wherenode
; 1207 : 			_Right(_Wherenode) = _Newnode;

	mov	DWORD PTR [esi+8], ebp

; 1208 : 			if (_Wherenode == _Rmost())

	mov	eax, DWORD PTR [edi+4]
	cmp	esi, DWORD PTR [eax+8]
	jne	SHORT $LN11@Insert

; 1209 : 				_Rmost() = _Newnode;

	mov	DWORD PTR [eax+8], ebp
$LN11@Insert:

; 1210 : 			}
; 1211 : 
; 1212 : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

	mov	edx, DWORD PTR [ebp+4]
	cmp	BYTE PTR [edx+20], 0
	lea	eax, DWORD PTR [ebp+4]
	mov	esi, ebp
	jne	$LN9@Insert
	npad	5
$LL10@Insert:

; 1213 : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	cmp	ecx, DWORD PTR [edx]
	jne	SHORT $LN8@Insert

; 1214 : 				{	// fixup red-red in left subtree
; 1215 : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

	mov	edx, DWORD PTR [edx+8]

; 1216 : 				if (_Color(_Wherenode) == _Red)

	cmp	BYTE PTR [edx+20], 0
	jne	SHORT $LN7@Insert

; 1217 : 					{	// parent has two red children, blacken both
; 1218 : 					_Color(_Parent(_Pnode)) = _Black;

	mov	BYTE PTR [ecx+20], bl

; 1219 : 					_Color(_Wherenode) = _Black;

	mov	BYTE PTR [edx+20], bl

; 1220 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [edx+4]
	mov	BYTE PTR [ecx+20], 0

; 1221 : 					_Pnode = _Parent(_Parent(_Pnode));

	mov	edx, DWORD PTR [eax]
	mov	esi, DWORD PTR [edx+4]

; 1222 : 					}
; 1223 : 				else

	jmp	$LN171@Insert
$LN7@Insert:

; 1224 : 					{	// parent has red and black children
; 1225 : 					if (_Pnode == _Right(_Parent(_Pnode)))

	cmp	esi, DWORD PTR [ecx+8]
	jne	SHORT $LN5@Insert

; 1226 : 						{	// rotate right child to left
; 1227 : 						_Pnode = _Parent(_Pnode);

	mov	esi, ecx

; 1228 : 						_Lrotate(_Pnode);

	push	esi
	mov	ecx, edi
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Lrotate
$LN5@Insert:

; 1229 : 						}
; 1230 : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR [eax+20], bl

; 1231 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [ecx+4]
	mov	BYTE PTR [edx+20], 0

; 1232 : 					_Rrotate(_Parent(_Parent(_Pnode)));

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, edi
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Rrotate

; 1233 : 					}
; 1234 : 				}
; 1235 : 			else

	jmp	SHORT $LN171@Insert
$LN8@Insert:

; 1236 : 				{	// fixup red-red in right subtree
; 1237 : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));

	mov	edx, DWORD PTR [edx]

; 1238 : 				if (_Color(_Wherenode) == _Red)

	cmp	BYTE PTR [edx+20], 0
	jne	SHORT $LN3@Insert

; 1239 : 					{	// parent has two red children, blacken both
; 1240 : 					_Color(_Parent(_Pnode)) = _Black;

	mov	BYTE PTR [ecx+20], bl

; 1241 : 					_Color(_Wherenode) = _Black;

	mov	BYTE PTR [edx+20], bl

; 1242 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [edx+4]
	mov	BYTE PTR [ecx+20], 0

; 1243 : 					_Pnode = _Parent(_Parent(_Pnode));

	mov	edx, DWORD PTR [eax]
	mov	esi, DWORD PTR [edx+4]

; 1244 : 					}
; 1245 : 				else

	jmp	SHORT $LN171@Insert
$LN3@Insert:

; 1246 : 					{	// parent has red and black children
; 1247 : 					if (_Pnode == _Left(_Parent(_Pnode)))

	cmp	esi, DWORD PTR [ecx]
	jne	SHORT $LN1@Insert

; 1248 : 						{	// rotate left child to right
; 1249 : 						_Pnode = _Parent(_Pnode);

	mov	esi, ecx

; 1250 : 						_Rrotate(_Pnode);

	push	esi
	mov	ecx, edi
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Rrotate
$LN1@Insert:

; 1251 : 						}
; 1252 : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR [eax+20], bl

; 1253 : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [ecx+4]
	mov	BYTE PTR [edx+20], 0

; 1254 : 					_Lrotate(_Parent(_Parent(_Pnode)));

	mov	eax, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR [ecx]
	cmp	BYTE PTR [edx+21], 0
	jne	SHORT $LN170@Insert
	mov	DWORD PTR [edx+4], eax
$LN170@Insert:
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [edi+4]
	cmp	eax, DWORD PTR [edx+4]
	jne	SHORT $LN169@Insert
	mov	DWORD PTR [edx+4], ecx
	jmp	SHORT $LN166@Insert
$LN169@Insert:
	mov	edx, DWORD PTR [eax+4]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN167@Insert
	mov	DWORD PTR [edx], ecx
	jmp	SHORT $LN166@Insert
$LN167@Insert:
	mov	DWORD PTR [edx+8], ecx
$LN166@Insert:
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [eax+4], ecx
$LN171@Insert:
	mov	ecx, DWORD PTR [esi+4]
	cmp	BYTE PTR [ecx+20], 0
	lea	eax, DWORD PTR [esi+4]
	je	$LL10@Insert
$LN9@Insert:

; 1255 : 					}
; 1256 : 				}
; 1257 : 
; 1258 : 		_Color(_Root()) = _Black;	// root is always black

	mov	edx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edx+4]

; 1259 : 		return (_TREE_ITERATOR(_Newnode));
; 1260 : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+96]
	mov	BYTE PTR [eax+20], bl
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+92]
	pop	esi
	mov	DWORD PTR [eax], ebp
	pop	ebp
	pop	ebx
	pop	edi
	mov	DWORD PTR fs:0, ecx
	add	esp, 80					; 00000050H
	ret	16					; 00000010H
$LN227@Insert:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABU?$pair@$$CBHH@2@@Z$0:
	lea	ecx, DWORD PTR $T237061[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABU?$pair@$$CBHH@2@@Z$2:
	lea	ecx, DWORD PTR $T237060[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABU?$pair@$$CBHH@2@@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Insert@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABU?$pair@$$CBHH@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABU?$pair@$$CBHH@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Insert
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHH@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Tree_ptr<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHH@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHH@std@@@1@@Z PROC ; std::_Tree_ptr<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Tree_ptr<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >, COMDAT
; _this$ = ecx

; 78   : 		{	// construct base, and allocator from _Al

	mov	eax, ecx

; 79   : 		}

	ret	8
??0?$_Tree_ptr@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHH@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Tree_ptr<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::clear
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::clear, COMDAT
; _this$ = ecx

; 965  : 		{	// erase all

	push	esi
	mov	esi, ecx

; 966  : 
; 967  :  #if _HAS_ITERATOR_DEBUGGING
; 968  : 		this->_Orphan_ptr(*this, 0);
; 969  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 970  : 
; 971  : 		_Erase(_Root());

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, esi
	call	?_Erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Erase

; 972  : 		_Root() = _Myhead, _Mysize = 0;

	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], eax

; 973  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [eax], eax
	mov	esi, DWORD PTR [esi+4]
	mov	DWORD PTR [esi+8], esi
	pop	esi

; 974  : 		}

	ret	0
?clear@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::clear
_TEXT	ENDS
PUBLIC	??$find@V?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@H@std@@YA?AV?$_Vector_const_iterator@HV?$allocator@H@std@@@0@V10@0ABH@Z ; std::find<std::_Vector_const_iterator<int,std::allocator<int> >,int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$find@V?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@H@std@@YA?AV?$_Vector_const_iterator@HV?$allocator@H@std@@@0@V10@0ABH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Val$ = 20						; size = 4
??$find@V?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@H@std@@YA?AV?$_Vector_const_iterator@HV?$allocator@H@std@@@0@V10@0ABH@Z PROC ; std::find<std::_Vector_const_iterator<int,std::allocator<int> >,int>, COMDAT

; 74   : 	_ASSIGN_FROM_BASE(_First,

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Last$[esp-4]
	cmp	ecx, eax
	je	SHORT $LN21@find@2
	mov	edx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [edx]
$LL9@find@2:
	cmp	DWORD PTR [ecx], edx
	je	SHORT $LN21@find@2
	add	ecx, 4
	cmp	ecx, eax
	jne	SHORT $LL9@find@2
$LN21@find@2:

; 75   : 		_Find(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val));
; 76   : 	return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 77   : 	}

	ret	0
??$find@V?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@H@std@@YA?AV?$_Vector_const_iterator@HV?$allocator@H@std@@@0@V10@0ABH@Z ENDP ; std::find<std::_Vector_const_iterator<int,std::allocator<int> >,int>
_TEXT	ENDS
PUBLIC	??$find@V?$_Vector_iterator@HV?$allocator@H@std@@@std@@H@std@@YA?AV?$_Vector_iterator@HV?$allocator@H@std@@@0@V10@0ABH@Z ; std::find<std::_Vector_iterator<int,std::allocator<int> >,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$find@V?$_Vector_iterator@HV?$allocator@H@std@@@std@@H@std@@YA?AV?$_Vector_iterator@HV?$allocator@H@std@@@0@V10@0ABH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Val$ = 20						; size = 4
??$find@V?$_Vector_iterator@HV?$allocator@H@std@@@std@@H@std@@YA?AV?$_Vector_iterator@HV?$allocator@H@std@@@0@V10@0ABH@Z PROC ; std::find<std::_Vector_iterator<int,std::allocator<int> >,int>, COMDAT

; 74   : 	_ASSIGN_FROM_BASE(_First,

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Last$[esp-4]
	cmp	ecx, eax
	je	SHORT $LN25@find@3
	mov	edx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [edx]
$LL11@find@3:
	cmp	DWORD PTR [ecx], edx
	je	SHORT $LN25@find@3
	add	ecx, 4
	cmp	ecx, eax
	jne	SHORT $LL11@find@3
$LN25@find@3:

; 75   : 		_Find(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val));
; 76   : 	return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 77   : 	}

	ret	0
??$find@V?$_Vector_iterator@HV?$allocator@H@std@@@std@@H@std@@YA?AV?$_Vector_iterator@HV?$allocator@H@std@@@0@V10@0ABH@Z ENDP ; std::find<std::_Vector_iterator<int,std::allocator<int> >,int>
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_fill_n@PAUFreeResourceXCities@@IU1@V?$allocator@UFreeResourceXCities@@@std@@@stdext@@YAXPAUFreeResourceXCities@@IABU1@AAV?$allocator@UFreeResourceXCities@@@std@@@Z ; stdext::unchecked_uninitialized_fill_n<FreeResourceXCities *,unsigned int,FreeResourceXCities,std::allocator<FreeResourceXCities> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_fill_n@PAUFreeResourceXCities@@IU1@V?$allocator@UFreeResourceXCities@@@std@@@stdext@@YAXPAUFreeResourceXCities@@IABU1@AAV?$allocator@UFreeResourceXCities@@@std@@@Z
_TEXT	SEGMENT
$T237643 = -4						; size = 1
__Cat$237648 = -4					; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_fill_n@PAUFreeResourceXCities@@IU1@V?$allocator@UFreeResourceXCities@@@std@@@stdext@@YAXPAUFreeResourceXCities@@IABU1@AAV?$allocator@UFreeResourceXCities@@@std@@@Z PROC ; stdext::unchecked_uninitialized_fill_n<FreeResourceXCities *,unsigned int,FreeResourceXCities,std::allocator<FreeResourceXCities> >, COMDAT

; 940  : 	{	// copy _Count *_Val to raw _First, using _Al

	push	ecx

; 941  : 	_STD _Uninit_fill_n(_First, _Count, _Val, _Al,
; 942  : 		_STD _Ptr_cat(_First, _First), _STD _Range_checked_iterator_tag());

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T237643[esp+4], 0
	mov	eax, DWORD PTR $T237643[esp+4]
	mov	ecx, DWORD PTR __Cat$237648[esp+4]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Count$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_fill_n@PAUFreeResourceXCities@@IU1@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAXPAUFreeResourceXCities@@IABU1@AAV?$allocator@UFreeResourceXCities@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<FreeResourceXCities *,unsigned int,FreeResourceXCities,std::allocator<FreeResourceXCities> >

; 943  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_fill_n@PAUFreeResourceXCities@@IU1@V?$allocator@UFreeResourceXCities@@@std@@@stdext@@YAXPAUFreeResourceXCities@@IABU1@AAV?$allocator@UFreeResourceXCities@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_fill_n<FreeResourceXCities *,unsigned int,FreeResourceXCities,std::allocator<FreeResourceXCities> >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_fill_n@PAW4TraitTypes@@IW41@V?$allocator@W4TraitTypes@@@std@@@stdext@@YAXPAW4TraitTypes@@IABW41@AAV?$allocator@W4TraitTypes@@@std@@@Z ; stdext::unchecked_uninitialized_fill_n<enum TraitTypes *,unsigned int,enum TraitTypes,std::allocator<enum TraitTypes> >
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_uninitialized_fill_n@PAW4TraitTypes@@IW41@V?$allocator@W4TraitTypes@@@std@@@stdext@@YAXPAW4TraitTypes@@IABW41@AAV?$allocator@W4TraitTypes@@@std@@@Z
_TEXT	SEGMENT
$T237652 = -4						; size = 1
__Cat$237657 = -4					; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_fill_n@PAW4TraitTypes@@IW41@V?$allocator@W4TraitTypes@@@std@@@stdext@@YAXPAW4TraitTypes@@IABW41@AAV?$allocator@W4TraitTypes@@@std@@@Z PROC ; stdext::unchecked_uninitialized_fill_n<enum TraitTypes *,unsigned int,enum TraitTypes,std::allocator<enum TraitTypes> >, COMDAT

; 940  : 	{	// copy _Count *_Val to raw _First, using _Al

	push	ecx

; 941  : 	_STD _Uninit_fill_n(_First, _Count, _Val, _Al,
; 942  : 		_STD _Ptr_cat(_First, _First), _STD _Range_checked_iterator_tag());

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T237652[esp+4], 0
	mov	eax, DWORD PTR $T237652[esp+4]
	mov	ecx, DWORD PTR __Cat$237657[esp+4]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Count$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_fill_n@PAW4TraitTypes@@IW41@V?$allocator@W4TraitTypes@@@std@@@std@@YAXPAW4TraitTypes@@IABW41@AAV?$allocator@W4TraitTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<enum TraitTypes *,unsigned int,enum TraitTypes,std::allocator<enum TraitTypes> >

; 943  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_fill_n@PAW4TraitTypes@@IW41@V?$allocator@W4TraitTypes@@@std@@@stdext@@YAXPAW4TraitTypes@@IABW41@AAV?$allocator@W4TraitTypes@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_fill_n<enum TraitTypes *,unsigned int,enum TraitTypes,std::allocator<enum TraitTypes> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAXPAUFreeResourceXCities@@0AAV?$allocator@UFreeResourceXCities@@@0@@Z ; std::_Destroy_range<std::allocator<FreeResourceXCities> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAXPAUFreeResourceXCities@@0AAV?$allocator@UFreeResourceXCities@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAXPAUFreeResourceXCities@@0AAV?$allocator@UFreeResourceXCities@@@0@@Z PROC ; std::_Destroy_range<std::allocator<FreeResourceXCities> >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAXPAUFreeResourceXCities@@0AAV?$allocator@UFreeResourceXCities@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<FreeResourceXCities> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAXPAUMayaBonusChoice@@0AAV?$allocator@UMayaBonusChoice@@@0@@Z ; std::_Destroy_range<std::allocator<MayaBonusChoice> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy_range@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAXPAUMayaBonusChoice@@0AAV?$allocator@UMayaBonusChoice@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAXPAUMayaBonusChoice@@0AAV?$allocator@UMayaBonusChoice@@@0@@Z PROC ; std::_Destroy_range<std::allocator<MayaBonusChoice> >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAXPAUMayaBonusChoice@@0AAV?$allocator@UMayaBonusChoice@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<MayaBonusChoice> >
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAUMayaBonusChoice@@IU1@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAXPAUMayaBonusChoice@@IABU1@AAV?$allocator@UMayaBonusChoice@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<MayaBonusChoice *,unsigned int,MayaBonusChoice,std::allocator<MayaBonusChoice> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Uninit_fill_n@PAUMayaBonusChoice@@IU1@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAXPAUMayaBonusChoice@@IABU1@AAV?$allocator@UMayaBonusChoice@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAUMayaBonusChoice@@IU1@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAXPAUMayaBonusChoice@@IABU1@AAV?$allocator@UMayaBonusChoice@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<MayaBonusChoice *,unsigned int,MayaBonusChoice,std::allocator<MayaBonusChoice> >, COMDAT

; 394  : 
; 395  :  #if _HAS_ITERATOR_DEBUGGING
; 396  : //	if (_Count < 0)
; 397  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 398  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 399  : 
; 400  : 	_FwdIt _Next = _First;
; 401  : 
; 402  : 	_TRY_BEGIN
; 403  : 	for (; 0 < _Count; --_Count, ++_First)

	mov	ecx, DWORD PTR __Count$[esp-4]
	test	ecx, ecx
	jbe	SHORT $LN4@Uninit_fil@4
	mov	edx, DWORD PTR __Val$[esp-4]
	mov	eax, DWORD PTR __First$[esp-4]
	push	esi
$LL6@Uninit_fil@4:

; 404  : 		_Al.construct(_First, _Val);

	test	eax, eax
	je	SHORT $LN18@Uninit_fil@4
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], esi
$LN18@Uninit_fil@4:
	dec	ecx
	add	eax, 8
	test	ecx, ecx
	ja	SHORT $LL6@Uninit_fil@4
	pop	esi
$LN4@Uninit_fil@4:

; 405  : 	_CATCH_ALL
; 406  : 	for (; _Next != _First; ++_Next)
; 407  : 		_Al.destroy(_Next);
; 408  : 	_RERAISE;
; 409  : 	_CATCH_END
; 410  : 	}

	ret	0
??$_Uninit_fill_n@PAUMayaBonusChoice@@IU1@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAXPAUMayaBonusChoice@@IABU1@AAV?$allocator@UMayaBonusChoice@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<MayaBonusChoice *,unsigned int,MayaBonusChoice,std::allocator<MayaBonusChoice> >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAUFreeResourceXCities@@PAU1@V?$allocator@UFreeResourceXCities@@@std@@U_Undefined_move_tag@3@@std@@YAPAUFreeResourceXCities@@PAU1@00AAV?$allocator@UFreeResourceXCities@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<FreeResourceXCities *,FreeResourceXCities *,std::allocator<FreeResourceXCities>,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_move@PAUFreeResourceXCities@@PAU1@V?$allocator@UFreeResourceXCities@@@std@@U_Undefined_move_tag@3@@std@@YAPAUFreeResourceXCities@@PAU1@00AAV?$allocator@UFreeResourceXCities@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T237734 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$237738 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_move@PAUFreeResourceXCities@@PAU1@V?$allocator@UFreeResourceXCities@@@std@@U_Undefined_move_tag@3@@std@@YAPAUFreeResourceXCities@@PAU1@00AAV?$allocator@UFreeResourceXCities@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<FreeResourceXCities *,FreeResourceXCities *,std::allocator<FreeResourceXCities>,std::_Undefined_move_tag>, COMDAT

; 206  : 	{	// move defaults to copy if there is not a more effecient way

	push	ecx

; 207  : 	return (_STDEXT unchecked_uninitialized_copy(_First, _Last, _Dest, _Al));

	mov	ecx, DWORD PTR __Cat$237738[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T237734[esp+4], 0
	mov	eax, DWORD PTR $T237734[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAUFreeResourceXCities@@PAU1@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAPAUFreeResourceXCities@@PAU1@00AAV?$allocator@UFreeResourceXCities@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<FreeResourceXCities *,FreeResourceXCities *,std::allocator<FreeResourceXCities> >

; 208  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Uninit_move@PAUFreeResourceXCities@@PAU1@V?$allocator@UFreeResourceXCities@@@std@@U_Undefined_move_tag@3@@std@@YAPAUFreeResourceXCities@@PAU1@00AAV?$allocator@UFreeResourceXCities@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<FreeResourceXCities *,FreeResourceXCities *,std::allocator<FreeResourceXCities>,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_copy@PAW4TraitTypes@@PAW41@V?$allocator@W4TraitTypes@@@std@@@stdext@@YAPAW4TraitTypes@@PAW41@00AAV?$allocator@W4TraitTypes@@@std@@@Z ; stdext::unchecked_uninitialized_copy<enum TraitTypes *,enum TraitTypes *,std::allocator<enum TraitTypes> >
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_uninitialized_copy@PAW4TraitTypes@@PAW41@V?$allocator@W4TraitTypes@@@std@@@stdext@@YAPAW4TraitTypes@@PAW41@00AAV?$allocator@W4TraitTypes@@@std@@@Z
_TEXT	SEGMENT
$T237744 = -4						; size = 1
__Cat$237749 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAW4TraitTypes@@PAW41@V?$allocator@W4TraitTypes@@@std@@@stdext@@YAPAW4TraitTypes@@PAW41@00AAV?$allocator@W4TraitTypes@@@std@@@Z PROC ; stdext::unchecked_uninitialized_copy<enum TraitTypes *,enum TraitTypes *,std::allocator<enum TraitTypes> >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T237744[esp+4], 0
	mov	eax, DWORD PTR $T237744[esp+4]
	mov	ecx, DWORD PTR __Cat$237749[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAW4TraitTypes@@PAW41@V?$allocator@W4TraitTypes@@@std@@@std@@YAPAW4TraitTypes@@PAW41@00AAV?$allocator@W4TraitTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<enum TraitTypes *,enum TraitTypes *,std::allocator<enum TraitTypes> >

; 823  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_copy@PAW4TraitTypes@@PAW41@V?$allocator@W4TraitTypes@@@std@@@stdext@@YAPAW4TraitTypes@@PAW41@00AAV?$allocator@W4TraitTypes@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_copy<enum TraitTypes *,enum TraitTypes *,std::allocator<enum TraitTypes> >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_copy@PAUMayaBonusChoice@@PAU1@V?$allocator@UMayaBonusChoice@@@std@@@stdext@@YAPAUMayaBonusChoice@@PAU1@00AAV?$allocator@UMayaBonusChoice@@@std@@@Z ; stdext::unchecked_uninitialized_copy<MayaBonusChoice *,MayaBonusChoice *,std::allocator<MayaBonusChoice> >
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_uninitialized_copy@PAUMayaBonusChoice@@PAU1@V?$allocator@UMayaBonusChoice@@@std@@@stdext@@YAPAUMayaBonusChoice@@PAU1@00AAV?$allocator@UMayaBonusChoice@@@std@@@Z
_TEXT	SEGMENT
$T237753 = -4						; size = 1
__Cat$237758 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAUMayaBonusChoice@@PAU1@V?$allocator@UMayaBonusChoice@@@std@@@stdext@@YAPAUMayaBonusChoice@@PAU1@00AAV?$allocator@UMayaBonusChoice@@@std@@@Z PROC ; stdext::unchecked_uninitialized_copy<MayaBonusChoice *,MayaBonusChoice *,std::allocator<MayaBonusChoice> >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T237753[esp+4], 0
	mov	eax, DWORD PTR $T237753[esp+4]
	mov	ecx, DWORD PTR __Cat$237758[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAUMayaBonusChoice@@PAU1@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAPAUMayaBonusChoice@@PAU1@00AAV?$allocator@UMayaBonusChoice@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<MayaBonusChoice *,MayaBonusChoice *,std::allocator<MayaBonusChoice> >

; 823  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_copy@PAUMayaBonusChoice@@PAU1@V?$allocator@UMayaBonusChoice@@@std@@@stdext@@YAPAUMayaBonusChoice@@PAU1@00AAV?$allocator@UMayaBonusChoice@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_copy<MayaBonusChoice *,MayaBonusChoice *,std::allocator<MayaBonusChoice> >
_TEXT	ENDS
PUBLIC	??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	mov	eax, ecx

; 471  : 		_Buy(0);

	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 472  : 		}

	ret	0
??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ PROC	; std::vector<int,std::allocator<int> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@Tidy@2

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy@2:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1135 : 		}

	ret	0
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ENDP	; std::vector<int,std::allocator<int> >::_Tidy
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@W4TraitTypes@@@std@@@std@@YAXPAW4TraitTypes@@0AAV?$allocator@W4TraitTypes@@@0@@Z ; std::_Destroy_range<std::allocator<enum TraitTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@W4TraitTypes@@@std@@@std@@YAXPAW4TraitTypes@@0AAV?$allocator@W4TraitTypes@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@W4TraitTypes@@@std@@@std@@YAXPAW4TraitTypes@@0AAV?$allocator@W4TraitTypes@@@0@@Z PROC ; std::_Destroy_range<std::allocator<enum TraitTypes> >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@W4TraitTypes@@@std@@@std@@YAXPAW4TraitTypes@@0AAV?$allocator@W4TraitTypes@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<enum TraitTypes> >
_TEXT	ENDS
PUBLIC	??0?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@XZ ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@XZ PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	mov	eax, ecx

; 471  : 		_Buy(0);

	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 472  : 		}

	ret	0
??0?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@XZ ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >
_TEXT	ENDS
PUBLIC	?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@0@Z ; std::vector<int,std::allocator<int> >::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@0@Z PROC ; std::vector<int,std::allocator<int> >::erase, COMDAT
; _this$ = ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);

	mov	edx, DWORD PTR __First_arg$[esp-4]
	push	ebp
	mov	ebp, DWORD PTR ___$ReturnUdt$[esp]
	push	esi

; 1030 : 		iterator _Last = _Make_iter(_Last_arg);
; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	esi, DWORD PTR __Last_arg$[esp+4]
	push	edi
	mov	edi, ecx
	mov	DWORD PTR [ebp], edx
	cmp	edx, esi
	je	SHORT $LN29@erase@3

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	eax, DWORD PTR [edi+8]
	sub	eax, esi
	sar	eax, 2
	lea	ecx, DWORD PTR [eax*4]
	push	ebx
	lea	ebx, DWORD PTR [ecx+edx]
	test	eax, eax
	jle	SHORT $LN26@erase@3
	push	ecx
	push	esi
	push	ecx
	push	edx
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN26@erase@3:

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);
; 1049 : 			_Mylast = _Ptr;

	mov	DWORD PTR [edi+8], ebx
	pop	ebx
$LN29@erase@3:
	pop	edi
	pop	esi

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);

	mov	eax, ebp
	pop	ebp

; 1055 : #endif
; 1056 : 		}

	ret	12					; 0000000cH
?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@0@Z ENDP ; std::vector<int,std::allocator<int> >::erase
_TEXT	ENDS
PUBLIC	?begin@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@XZ ; std::vector<bool,std::allocator<bool> >::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@XZ PROC ; std::vector<bool,std::allocator<bool> >::begin, COMDAT
; _this$ = ecx

; 1985 : 		return (iterator(_VEC_ITER_BASE(_Myvec.begin())));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], 0

; 1986 : 		}

	ret	4
?begin@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@XZ ENDP ; std::vector<bool,std::allocator<bool> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@XZ ; std::vector<bool,std::allocator<bool> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@XZ PROC ; std::vector<bool,std::allocator<bool> >::end, COMDAT
; _this$ = ecx

; 1996 : 		iterator _Tmp = begin();

	mov	eax, DWORD PTR [ecx+8]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp]
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], 0

; 1997 : 		if (0 < _Mysize)

	mov	ecx, DWORD PTR [ecx]
	test	ecx, ecx
	jbe	SHORT $LN20@end

; 1998 : 			_Tmp += _Mysize;

	push	ecx
	mov	ecx, esi
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
$LN20@end:

; 1999 : 		return (_Tmp);

	mov	eax, esi
	pop	esi

; 2000 : 		}

	ret	4
?end@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@XZ ENDP ; std::vector<bool,std::allocator<bool> >::end
_TEXT	ENDS
PUBLIC	??0?$vector@IV?$allocator@I@std@@@std@@QAE@XZ	; std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@IV?$allocator@I@std@@@std@@QAE@XZ PROC	; std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	mov	eax, ecx

; 471  : 		_Buy(0);

	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 472  : 		}

	ret	0
??0?$vector@IV?$allocator@I@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> >
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@V?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@@Z ; std::vector<bool,std::allocator<bool> >::_Make_iter
; Function compile flags: /Ogtpy
;	COMDAT ?_Make_iter@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@V?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 8
?_Make_iter@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@V?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@@Z PROC ; std::vector<bool,std::allocator<bool> >::_Make_iter, COMDAT
; _this$ = ecx

; 2012 : 		iterator _Tmp = begin();

	mov	eax, DWORD PTR [ecx+8]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp]
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], 0

; 2013 : 		if (0 < _Mysize)

	cmp	DWORD PTR [ecx], 0
	jbe	SHORT $LN36@Make_iter

; 2014 : 			_Tmp += _Where - begin();

	mov	ecx, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR __Where$[esp]
	sub	edx, ecx
	sar	edx, 2
	shl	edx, 5
	add	edx, DWORD PTR __Where$[esp+4]
	mov	ecx, esi
	push	edx
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
$LN36@Make_iter:

; 2015 : 		return (_Tmp);

	mov	eax, esi
	pop	esi

; 2016 : 		}

	ret	12					; 0000000cH
?_Make_iter@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@V?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@@Z ENDP ; std::vector<bool,std::allocator<bool> >::_Make_iter
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@IV?$allocator@I@std@@@std@@IAEXXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Tidy
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$vector@IV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@IV?$allocator@I@std@@@std@@IAEXXZ PROC	; std::vector<unsigned int,std::allocator<unsigned int> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@Tidy@3

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy@3:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1135 : 		}

	ret	0
?_Tidy@?$vector@IV?$allocator@I@std@@@std@@IAEXXZ ENDP	; std::vector<unsigned int,std::allocator<unsigned int> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$vector@IV?$allocator@I@std@@@std@@QAE?AV?$_Vector_iterator@IV?$allocator@I@std@@@2@V?$_Vector_const_iterator@IV?$allocator@I@std@@@2@0@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$vector@IV?$allocator@I@std@@@std@@QAE?AV?$_Vector_iterator@IV?$allocator@I@std@@@2@V?$_Vector_const_iterator@IV?$allocator@I@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@IV?$allocator@I@std@@@std@@QAE?AV?$_Vector_iterator@IV?$allocator@I@std@@@2@V?$_Vector_const_iterator@IV?$allocator@I@std@@@2@0@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::erase, COMDAT
; _this$ = ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);

	mov	edx, DWORD PTR __First_arg$[esp-4]
	push	ebp
	mov	ebp, DWORD PTR ___$ReturnUdt$[esp]
	push	esi

; 1030 : 		iterator _Last = _Make_iter(_Last_arg);
; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	esi, DWORD PTR __Last_arg$[esp+4]
	push	edi
	mov	edi, ecx
	mov	DWORD PTR [ebp], edx
	cmp	edx, esi
	je	SHORT $LN29@erase@4

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	eax, DWORD PTR [edi+8]
	sub	eax, esi
	sar	eax, 2
	lea	ecx, DWORD PTR [eax*4]
	push	ebx
	lea	ebx, DWORD PTR [ecx+edx]
	test	eax, eax
	jle	SHORT $LN26@erase@4
	push	ecx
	push	esi
	push	ecx
	push	edx
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN26@erase@4:

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);
; 1049 : 			_Mylast = _Ptr;

	mov	DWORD PTR [edi+8], ebx
	pop	ebx
$LN29@erase@4:
	pop	edi
	pop	esi

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);

	mov	eax, ebp
	pop	ebp

; 1055 : #endif
; 1056 : 		}

	ret	12					; 0000000cH
?erase@?$vector@IV?$allocator@I@std@@@std@@QAE?AV?$_Vector_iterator@IV?$allocator@I@std@@@2@V?$_Vector_const_iterator@IV?$allocator@I@std@@@2@0@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::erase
_TEXT	ENDS
PUBLIC	??$copy@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@V10@00@Z ; std::copy<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$copy@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@V10@00@Z
_TEXT	SEGMENT
$T238461 = -4						; size = 1
__Cat$238466 = 8					; size = 1
$T238463 = 8						; size = 1
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
__Dest$ = 28						; size = 8
??$copy@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@V10@00@Z PROC ; std::copy<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > > >, COMDAT

; 2587 : 	{	// copy [_First, _Last) to [_Dest, ...)

	push	ecx

; 2588 : 	return (_Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest, 
; 2589 : 		_Iter_random(_First, _Dest), _Ptr_cat(_First, _Dest), _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$238466[esp]
	mov	edx, DWORD PTR $T238463[esp]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	BYTE PTR $T238461[esp+8], 0
	mov	eax, DWORD PTR $T238461[esp+8]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+12]
	push	ecx
	mov	ecx, DWORD PTR __Dest$[esp+12]
	push	edx
	mov	edx, DWORD PTR __Last$[esp+20]
	push	eax
	mov	eax, DWORD PTR __Last$[esp+20]
	push	ecx
	mov	ecx, DWORD PTR __First$[esp+28]
	push	edx
	mov	edx, DWORD PTR __First$[esp+28]
	push	eax
	push	ecx
	push	edx
	push	esi
	call	??$_Copy_opt@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::random_access_iterator_tag>
	add	esp, 40					; 00000028H
	mov	eax, esi
	pop	esi

; 2590 : 	}

	pop	ecx
	ret	0
??$copy@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@V10@00@Z ENDP ; std::copy<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > > >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAXPAV?$Array@H$05@Firaxis@@0AAV?$allocator@V?$Array@H$05@Firaxis@@@0@@Z ; std::_Destroy_range<std::allocator<Firaxis::Array<int,6> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAXPAV?$Array@H$05@Firaxis@@0AAV?$allocator@V?$Array@H$05@Firaxis@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAXPAV?$Array@H$05@Firaxis@@0AAV?$allocator@V?$Array@H$05@Firaxis@@@0@@Z PROC ; std::_Destroy_range<std::allocator<Firaxis::Array<int,6> > >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAXPAV?$Array@H$05@Firaxis@@0AAV?$allocator@V?$Array@H$05@Firaxis@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<Firaxis::Array<int,6> > >
_TEXT	ENDS
PUBLIC	??$for_each@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@U?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@@std@@YA?AU?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@0@0U1@@Z ; std::for_each<std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >,SerializeFromSequenceContainer<Firaxis::Array<int,6> const ,std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > > const > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$for_each@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@U?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@@std@@YA?AU?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@0@0U1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Func$ = 20						; size = 8
??$for_each@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@U?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@@std@@YA?AU?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@0@0U1@@Z PROC ; std::for_each<std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >,SerializeFromSequenceContainer<Firaxis::Array<int,6> const ,std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > > const > >, COMDAT

; 24   : 	_DEBUG_RANGE(_First, _Last);
; 25   : 	_DEBUG_POINTER(_Func);
; 26   : 	_CHECKED_BASE_TYPE(_InIt) _ChkFirst(_CHECKED_BASE(_First));
; 27   : 	_CHECKED_BASE_TYPE(_InIt) _ChkLast(_CHECKED_BASE(_Last));

	mov	eax, DWORD PTR __Last$[esp-4]
	push	ebp
	push	esi
	mov	esi, DWORD PTR __First$[esp+4]
	mov	ebp, eax

; 28   : 	for (; _ChkFirst != _ChkLast; ++_ChkFirst)

	cmp	esi, eax
	je	SHORT $LN1@for_each
	push	ebx
	push	edi
$LL6@for_each:

; 29   : 		_Func(*_ChkFirst);

	mov	ebx, DWORD PTR __Func$[esp+12]
	mov	edi, 6
	npad	5
$LL18@for_each:
	push	esi
	mov	ecx, ebx
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	add	esi, 4
	sub	edi, 1
	jne	SHORT $LL18@for_each

; 28   : 	for (; _ChkFirst != _ChkLast; ++_ChkFirst)

	cmp	esi, ebp
	jne	SHORT $LL6@for_each
	pop	edi
	pop	ebx
$LN1@for_each:

; 30   : 	return (_Func);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	ecx, DWORD PTR __Func$[esp+4]
	mov	edx, DWORD PTR __Func$[esp+8]
	pop	esi
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	pop	ebp

; 31   : 	}

	ret	0
??$for_each@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@U?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@@std@@YA?AU?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@0@0U1@@Z ENDP ; std::for_each<std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >,SerializeFromSequenceContainer<Firaxis::Array<int,6> const ,std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > > const > >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_fill_n@PAV?$Array@H$05@Firaxis@@IV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@stdext@@YAXPAV?$Array@H$05@Firaxis@@IABV12@AAV?$allocator@V?$Array@H$05@Firaxis@@@std@@@Z ; stdext::unchecked_uninitialized_fill_n<Firaxis::Array<int,6> *,unsigned int,Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_fill_n@PAV?$Array@H$05@Firaxis@@IV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@stdext@@YAXPAV?$Array@H$05@Firaxis@@IABV12@AAV?$allocator@V?$Array@H$05@Firaxis@@@std@@@Z
_TEXT	SEGMENT
$T238543 = -4						; size = 1
__Cat$238547 = -4					; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_fill_n@PAV?$Array@H$05@Firaxis@@IV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@stdext@@YAXPAV?$Array@H$05@Firaxis@@IABV12@AAV?$allocator@V?$Array@H$05@Firaxis@@@std@@@Z PROC ; stdext::unchecked_uninitialized_fill_n<Firaxis::Array<int,6> *,unsigned int,Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >, COMDAT

; 940  : 	{	// copy _Count *_Val to raw _First, using _Al

	push	ecx

; 941  : 	_STD _Uninit_fill_n(_First, _Count, _Val, _Al,
; 942  : 		_STD _Ptr_cat(_First, _First), _STD _Range_checked_iterator_tag());

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T238543[esp+4], 0
	mov	eax, DWORD PTR $T238543[esp+4]
	mov	ecx, DWORD PTR __Cat$238547[esp+4]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Count$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_fill_n@PAV?$Array@H$05@Firaxis@@IV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAXPAV?$Array@H$05@Firaxis@@IABV12@AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<Firaxis::Array<int,6> *,unsigned int,Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >

; 943  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_fill_n@PAV?$Array@H$05@Firaxis@@IV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@stdext@@YAXPAV?$Array@H$05@Firaxis@@IABV12@AAV?$allocator@V?$Array@H$05@Firaxis@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_fill_n<Firaxis::Array<int,6> *,unsigned int,Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAHIHV?$allocator@H@std@@@std@@YAXPAHIABHAAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<int *,unsigned int,int,std::allocator<int> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_fill_n@PAHIHV?$allocator@H@std@@@std@@YAXPAHIABHAAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAHIHV?$allocator@H@std@@@std@@YAXPAHIABHAAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<int *,unsigned int,int,std::allocator<int> >, COMDAT

; 419  : 		_STDEXT unchecked_fill_n(_First, _Count, _Val);

	mov	eax, DWORD PTR __Count$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	test	eax, eax
	jbe	SHORT $LN9@Uninit_fil@5
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL11@Uninit_fil@5:
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [ecx], esi
	dec	eax
	add	ecx, 4
	test	eax, eax
	ja	SHORT $LL11@Uninit_fil@5
	pop	esi
$LN9@Uninit_fil@5:

; 420  : 	}

	ret	0
??$_Uninit_fill_n@PAHIHV?$allocator@H@std@@@std@@YAXPAHIABHAAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<int *,unsigned int,int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??$_Unchecked_uninitialized_move@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z ; stdext::_Unchecked_uninitialized_move<int *,int *,std::allocator<int> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unchecked_uninitialized_move@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Unchecked_uninitialized_move@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z PROC ; stdext::_Unchecked_uninitialized_move<int *,int *,std::allocator<int> >, COMDAT

; 862  : 	return (_STD _Uninit_move(_CHECKED_BASE(_First),
; 863  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 864  : 		_STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]
	test	eax, eax
	jbe	SHORT $LN14@Unchecked_@6
	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN14@Unchecked_@6:
	pop	edi
	mov	eax, esi
	pop	esi

; 865  : 	}

	ret	0
??$_Unchecked_uninitialized_move@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z ENDP ; stdext::_Unchecked_uninitialized_move<int *,int *,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Copy_backward_opt@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
__Dest$ = 28						; size = 8
___formal$ = 36						; size = 1
___formal$ = 40						; size = 1
___formal$ = 44						; size = 1
??$_Copy_backward_opt@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::random_access_iterator_tag>, COMDAT

; 2673 : 	{	// copy [_First, _Last) backwards to [..., _Dest), arbitrary iterators

	push	esi
	push	edi
$LL2@Copy_backw@7:

; 2674 : 	_DEBUG_RANGE(_First, _Last);
; 2675 : 	while (_First != _Last)

	mov	esi, DWORD PTR __Last$[esp+4]
	mov	ecx, DWORD PTR __Last$[esp+8]
	cmp	DWORD PTR __First$[esp+4], esi
	jne	SHORT $LN9@Copy_backw@7
	cmp	DWORD PTR __First$[esp+8], ecx
	je	SHORT $LN61@Copy_backw@7
$LN9@Copy_backw@7:

; 2676 : 		*--_Dest = *--_Last;

	test	ecx, ecx
	je	SHORT $LN16@Copy_backw@7
	dec	ecx
	jmp	SHORT $LN62@Copy_backw@7
$LN16@Copy_backw@7:
	sub	esi, 4
	mov	DWORD PTR __Last$[esp+4], esi
	mov	ecx, 31					; 0000001fH
$LN62@Copy_backw@7:
	mov	edx, DWORD PTR __Dest$[esp+8]
	mov	eax, DWORD PTR __Dest$[esp+4]
	mov	DWORD PTR __Last$[esp+8], ecx
	test	edx, edx
	je	SHORT $LN30@Copy_backw@7
	dec	edx
	jmp	SHORT $LN63@Copy_backw@7
$LN30@Copy_backw@7:
	sub	eax, 4
	mov	DWORD PTR __Dest$[esp+4], eax
	mov	edx, 31					; 0000001fH
$LN63@Copy_backw@7:
	mov	edi, 1
	shl	edi, cl
	mov	DWORD PTR __Dest$[esp+8], edx
	mov	ecx, edx
	test	edi, DWORD PTR [esi]
	mov	esi, 1
	je	SHORT $LN48@Copy_backw@7
	shl	esi, cl
	or	DWORD PTR [eax], esi
	jmp	SHORT $LL2@Copy_backw@7
$LN48@Copy_backw@7:
	shl	esi, cl
	not	esi
	and	DWORD PTR [eax], esi
	jmp	SHORT $LL2@Copy_backw@7
$LN61@Copy_backw@7:

; 2677 : 	return (_Dest);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	ecx, DWORD PTR __Dest$[esp+4]
	mov	edx, DWORD PTR __Dest$[esp+8]
	pop	edi
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	pop	esi

; 2678 : 	}

	ret	0
??$_Copy_backward_opt@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Unchecked_uninitialized_move@PAIPAIV?$allocator@I@std@@@stdext@@YAPAIPAI00AAV?$allocator@I@std@@@Z ; stdext::_Unchecked_uninitialized_move<unsigned int *,unsigned int *,std::allocator<unsigned int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Unchecked_uninitialized_move@PAIPAIV?$allocator@I@std@@@stdext@@YAPAIPAI00AAV?$allocator@I@std@@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Unchecked_uninitialized_move@PAIPAIV?$allocator@I@std@@@stdext@@YAPAIPAI00AAV?$allocator@I@std@@@Z PROC ; stdext::_Unchecked_uninitialized_move<unsigned int *,unsigned int *,std::allocator<unsigned int> >, COMDAT

; 862  : 	return (_STD _Uninit_move(_CHECKED_BASE(_First),
; 863  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 864  : 		_STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]
	test	eax, eax
	jbe	SHORT $LN14@Unchecked_@7
	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN14@Unchecked_@7:
	pop	edi
	mov	eax, esi
	pop	esi

; 865  : 	}

	ret	0
??$_Unchecked_uninitialized_move@PAIPAIV?$allocator@I@std@@@stdext@@YAPAIPAI00AAV?$allocator@I@std@@@Z ENDP ; stdext::_Unchecked_uninitialized_move<unsigned int *,unsigned int *,std::allocator<unsigned int> >
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAIIIV?$allocator@I@std@@@std@@YAXPAIIABIAAV?$allocator@I@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<unsigned int *,unsigned int,unsigned int,std::allocator<unsigned int> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_fill_n@PAIIIV?$allocator@I@std@@@std@@YAXPAIIABIAAV?$allocator@I@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAIIIV?$allocator@I@std@@@std@@YAXPAIIABIAAV?$allocator@I@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<unsigned int *,unsigned int,unsigned int,std::allocator<unsigned int> >, COMDAT

; 419  : 		_STDEXT unchecked_fill_n(_First, _Count, _Val);

	mov	eax, DWORD PTR __Count$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	test	eax, eax
	jbe	SHORT $LN9@Uninit_fil@6
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL11@Uninit_fil@6:
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [ecx], esi
	dec	eax
	add	ecx, 4
	test	eax, eax
	ja	SHORT $LL11@Uninit_fil@6
	pop	esi
$LN9@Uninit_fil@6:

; 420  : 	}

	ret	0
??$_Uninit_fill_n@PAIIIV?$allocator@I@std@@@std@@YAXPAIIABIAAV?$allocator@I@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<unsigned int *,unsigned int,unsigned int,std::allocator<unsigned int> >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAV?$Array@H$05@Firaxis@@PAV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@U_Undefined_move_tag@4@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::allocator<Firaxis::Array<int,6> >,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_move@PAV?$Array@H$05@Firaxis@@PAV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@U_Undefined_move_tag@4@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T238935 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$238939 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_move@PAV?$Array@H$05@Firaxis@@PAV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@U_Undefined_move_tag@4@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::allocator<Firaxis::Array<int,6> >,std::_Undefined_move_tag>, COMDAT

; 206  : 	{	// move defaults to copy if there is not a more effecient way

	push	ecx

; 207  : 	return (_STDEXT unchecked_uninitialized_copy(_First, _Last, _Dest, _Al));

	mov	ecx, DWORD PTR __Cat$238939[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T238935[esp+4], 0
	mov	eax, DWORD PTR $T238935[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAV?$Array@H$05@Firaxis@@PAV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::allocator<Firaxis::Array<int,6> > >

; 208  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Uninit_move@PAV?$Array@H$05@Firaxis@@PAV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@U_Undefined_move_tag@4@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::allocator<Firaxis::Array<int,6> >,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	?IsFreePromotionUnitCombat@CvTraitEntry@@QBE_NHH@Z ; CvTraitEntry::IsFreePromotionUnitCombat
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
;	COMDAT ?IsFreePromotionUnitCombat@CvTraitEntry@@QBE_NHH@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
_promotionID$ = 8					; size = 4
_unitCombatID$ = 12					; size = 4
?IsFreePromotionUnitCombat@CvTraitEntry@@QBE_NHH@Z PROC	; CvTraitEntry::IsFreePromotionUnitCombat, COMDAT
; _this$ = ecx

; 1016 : {

	push	ecx
	push	esi
	push	edi
	mov	edi, ecx

; 1017 : 	std::multimap<int, int>::const_iterator it = m_FreePromotionUnitCombats.find(promotionID);

	lea	eax, DWORD PTR _promotionID$[esp+8]
	push	eax
	lea	ecx, DWORD PTR _it$[esp+16]
	lea	esi, DWORD PTR [edi+696]
	push	ecx
	mov	ecx, esi
	call	?find@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QBE?AVconst_iterator@12@ABH@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::find

; 1018 : 	if(it != m_FreePromotionUnitCombats.end())

	mov	edx, DWORD PTR _it$[esp+12]
	cmp	edx, DWORD PTR [edi+700]
	je	SHORT $LN2@IsFreeProm

; 1019 : 	{
; 1020 : 		// get an iterator to the element that is one past the last element associated with key
; 1021 : 		std::multimap<int, int>::const_iterator lastElement = m_FreePromotionUnitCombats.upper_bound(promotionID);

	mov	ecx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [ecx+4]
	cmp	BYTE PTR [eax+21], 0
	mov	esi, ecx
	jne	SHORT $LN20@IsFreeProm
	mov	ecx, DWORD PTR _promotionID$[esp+8]
	npad	6
$LL21@IsFreeProm:
	cmp	ecx, DWORD PTR [eax+12]
	jge	SHORT $LN19@IsFreeProm
	mov	esi, eax
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN18@IsFreeProm
$LN19@IsFreeProm:
	mov	eax, DWORD PTR [eax+8]
$LN18@IsFreeProm:
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL21@IsFreeProm
$LN20@IsFreeProm:

; 1022 : 
; 1023 : 		// for each element in the sequence [itr, lastElement)
; 1024 : 		for(; it != lastElement; ++it)

	cmp	edx, esi
	je	SHORT $LN2@IsFreeProm
	mov	edi, DWORD PTR _unitCombatID$[esp+8]
	npad	4
$LL44@IsFreeProm:

; 1025 : 		{
; 1026 : 			if(it->second == unitCombatID)

	cmp	DWORD PTR [edx+16], edi
	je	SHORT $LN58@IsFreeProm
	lea	ecx, DWORD PTR _it$[esp+12]
	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::const_iterator::_Inc
	mov	edx, DWORD PTR _it$[esp+12]
	cmp	edx, esi
	jne	SHORT $LL44@IsFreeProm
$LN2@IsFreeProm:
	pop	edi

; 1029 : 			}
; 1030 : 		}
; 1031 : 	}
; 1032 : 
; 1033 : 	return false;

	xor	al, al
	pop	esi

; 1034 : }

	pop	ecx
	ret	8
$LN58@IsFreeProm:
	pop	edi

; 1027 : 			{
; 1028 : 				return true;

	mov	al, 1
	pop	esi

; 1034 : }

	pop	ecx
	ret	8
?IsFreePromotionUnitCombat@CvTraitEntry@@QBE_NHH@Z ENDP	; CvTraitEntry::IsFreePromotionUnitCombat
_TEXT	ENDS
PUBLIC	?WillGetUniqueLuxury@CvPlayerTraits@@QBE_NPAVCvArea@@@Z ; CvPlayerTraits::WillGetUniqueLuxury
EXTRN	?GetRequiredCivilization@CvResourceInfo@@QBE?AW4CivilizationTypes@@XZ:PROC ; CvResourceInfo::GetRequiredCivilization
EXTRN	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ:PROC ; CvPlayer::getCivilizationType
EXTRN	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z:PROC ; CvGlobals::getResourceInfo
EXTRN	?getNumResourceInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumResourceInfos
EXTRN	?GetOriginalCapitalX@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetOriginalCapitalX
EXTRN	?GetOriginalCapitalY@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetOriginalCapitalY
EXTRN	?GetNumCitiesFounded@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetNumCitiesFounded
; Function compile flags: /Ogtpy
;	COMDAT ?WillGetUniqueLuxury@CvPlayerTraits@@QBE_NPAVCvArea@@@Z
_TEXT	SEGMENT
_iArea$223784 = -8					; size = 4
_this$ = -4						; size = 4
tv392 = 8						; size = 4
$T239102 = 8						; size = 4
$T239093 = 8						; size = 4
_pArea$ = 8						; size = 4
?WillGetUniqueLuxury@CvPlayerTraits@@QBE_NPAVCvArea@@@Z PROC ; CvPlayerTraits::WillGetUniqueLuxury, COMDAT
; _this$ = ecx

; 2349 : {

	sub	esp, 8
	push	ebx
	push	ebp
	mov	ebp, ecx

; 2350 : 	// Still have more of these cities to award?
; 2351 : 	if (m_iUniqueLuxuryCities > m_iUniqueLuxuryCitiesPlaced)

	mov	eax, DWORD PTR [ebp+300]
	cmp	eax, DWORD PTR [ebp+308]
	push	esi
	push	edi
	mov	DWORD PTR _this$[esp+24], ebp
	jle	$LN3@WillGetUni

; 2352 : 	{
; 2353 : 		// NQMP GJS - Spice Islanders changed it so this ability will NEVER trigger in the capital, even if it's not requiring a new area BEGIN
; 2354 : 		if (m_pPlayer->GetNumCitiesFounded() == 0)

	mov	ecx, DWORD PTR [ebp+4]
	call	?GetNumCitiesFounded@CvPlayer@@QBEHXZ	; CvPlayer::GetNumCitiesFounded
	test	eax, eax

; 2355 : 		{
; 2356 : 			return false;

	je	$LN3@WillGetUni

; 2357 : 		}
; 2358 : 		// NQMP GJS - Spice Islanders changed it so this ability will NEVER trigger in the capital, even if it's not requiring a new area END
; 2359 : 
; 2360 : 		int iArea = pArea->GetID();
; 2361 : 
; 2362 : 		// If we have to be in a new area, check to see if this area is okay
; 2363 : 		if (m_bUniqueLuxuryRequiresNewArea)

	cmp	BYTE PTR [ebp+353], 0
	mov	ecx, DWORD PTR _pArea$[esp+20]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _iArea$223784[esp+24], edx
	je	$LN82@WillGetUni

; 2364 : 		{
; 2365 : 			/* NQMP GJS - Spice Islanders changed it so this ability will NEVER trigger in the capital, even if it's not requiring a new area
; 2366 : 			// Can't be the capital itself
; 2367 : 			if (m_pPlayer->GetNumCitiesFounded() == 0)
; 2368 : 			{
; 2369 : 				return false;
; 2370 : 			}
; 2371 : 			*/
; 2372 : 
; 2373 : 			CvPlot *pOriginalCapitalPlot = GC.getMap().plot(m_pPlayer->GetOriginalCapitalX(), m_pPlayer->GetOriginalCapitalY());

	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	ecx, DWORD PTR [ebp+4]
	mov	DWORD PTR $T239102[esp+20], edi
	call	?GetOriginalCapitalY@CvPlayer@@QBEHXZ	; CvPlayer::GetOriginalCapitalY
	mov	ecx, DWORD PTR [ebp+4]
	mov	ebx, eax
	call	?GetOriginalCapitalX@CvPlayer@@QBEHXZ	; CvPlayer::GetOriginalCapitalX
	cmp	eax, -2147483647			; 80000001H
	je	$LN81@WillGetUni
	cmp	ebx, -2147483647			; 80000001H
	je	$LN81@WillGetUni
	cmp	BYTE PTR [edi+4056], 0
	mov	ecx, DWORD PTR [edi+4020]
	je	SHORT $LN80@WillGetUni
	test	eax, eax
	jge	SHORT $LN30@WillGetUni
	cdq
	idiv	ecx
	mov	esi, edx
	add	esi, ecx
	jmp	SHORT $LN32@WillGetUni
$LN30@WillGetUni:
	cmp	eax, ecx
	jl	SHORT $LN80@WillGetUni
	cdq
	idiv	ecx
	mov	esi, edx
	jmp	SHORT $LN32@WillGetUni
$LN80@WillGetUni:
	mov	esi, eax
$LN32@WillGetUni:
	mov	eax, DWORD PTR $T239102[esp+20]
	cmp	BYTE PTR [eax+4057], 0
	mov	edi, DWORD PTR [edi+4024]
	je	SHORT $LN85@WillGetUni
	test	ebx, ebx
	jge	SHORT $LN40@WillGetUni
	mov	eax, ebx
	cdq
	idiv	edi
	add	edx, edi
	jmp	SHORT $LN42@WillGetUni
$LN40@WillGetUni:
	cmp	ebx, edi
	jl	SHORT $LN85@WillGetUni
	mov	eax, ebx
	cdq
	idiv	edi
	jmp	SHORT $LN42@WillGetUni
$LN85@WillGetUni:
	mov	edx, ebx
$LN42@WillGetUni:
	test	esi, esi
	jl	SHORT $LN81@WillGetUni
	cmp	esi, ecx
	jge	SHORT $LN81@WillGetUni
	test	edx, edx
	jl	SHORT $LN81@WillGetUni
	cmp	edx, edi
	jge	SHORT $LN81@WillGetUni
	imul	ecx, edx
	mov	edx, DWORD PTR $T239102[esp+20]
	add	ecx, esi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [edx+4068]

; 2374 : 			if (pOriginalCapitalPlot)

	test	ecx, ecx
	je	SHORT $LN81@WillGetUni

; 2375 : 			{
; 2376 : 				if (pOriginalCapitalPlot->getArea() == iArea)

	mov	eax, DWORD PTR _iArea$223784[esp+24]
	cmp	DWORD PTR [ecx+356], eax

; 2377 : 				{
; 2378 : 					return false;

	je	$LN3@WillGetUni
$LN81@WillGetUni:

; 2379 : 				}
; 2380 : 			}
; 2381 : 
; 2382 : 			// Already in the list?
; 2383 : 			if (std::find (m_aUniqueLuxuryAreas.begin(), m_aUniqueLuxuryAreas.end(), iArea) != m_aUniqueLuxuryAreas.end())

	mov	esi, DWORD PTR [ebp+732]
	mov	eax, DWORD PTR [ebp+728]
	lea	ecx, DWORD PTR _iArea$223784[esp+24]
	push	ecx
	push	esi
	push	eax
	lea	edx, DWORD PTR $T239093[esp+32]
	push	edx
	call	??$find@V?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@H@std@@YA?AV?$_Vector_const_iterator@HV?$allocator@H@std@@@0@V10@0ABH@Z ; std::find<std::_Vector_const_iterator<int,std::allocator<int> >,int>
	add	esp, 16					; 00000010H
	cmp	DWORD PTR [eax], esi

; 2384 : 			{
; 2385 : 				return false;

	jne	SHORT $LN3@WillGetUni
$LN82@WillGetUni:

; 2386 : 			}
; 2387 : 		}
; 2388 : 
; 2389 : 		int iNumUniqueResourcesGiven = m_aUniqueLuxuryAreas.size();

	mov	esi, DWORD PTR [ebp+732]
	sub	esi, DWORD PTR [ebp+728]

; 2390 : 
; 2391 : 		// Loop through all resources and see if we can find one more
; 2392 : 		int iNumUniquesFound = 0;
; 2393 : #ifdef AUI_WARNING_FIXES
; 2394 : 		for (uint iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)
; 2395 : #else
; 2396 : 		for(int iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	sar	esi, 2
	xor	ebp, ebp
	xor	edi, edi
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	test	eax, eax
	jle	SHORT $LN3@WillGetUni
	npad	2
$LL84@WillGetUni:

; 2397 : #endif
; 2398 : 		{
; 2399 : 			ResourceTypes eResource = (ResourceTypes) iResourceLoop;
; 2400 : 			CvResourceInfo* pkResource = GC.getResourceInfo(eResource);

	push	edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	ebx, eax

; 2401 : 			if (pkResource != NULL && pkResource->GetRequiredCivilization() == m_pPlayer->getCivilizationType())

	test	ebx, ebx
	je	SHORT $LN4@WillGetUni
	mov	eax, DWORD PTR _this$[esp+24]
	mov	ecx, DWORD PTR [eax+4]
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	mov	ecx, ebx
	mov	DWORD PTR tv392[esp+20], eax
	call	?GetRequiredCivilization@CvResourceInfo@@QBE?AW4CivilizationTypes@@XZ ; CvResourceInfo::GetRequiredCivilization
	mov	ecx, DWORD PTR tv392[esp+20]
	cmp	eax, ecx
	jne	SHORT $LN4@WillGetUni

; 2402 : 			{
; 2403 : 				iNumUniquesFound++;

	inc	ebp

; 2404 : 				if (iNumUniquesFound > iNumUniqueResourcesGiven)

	cmp	ebp, esi
	jg	SHORT $LN77@WillGetUni
$LN4@WillGetUni:

; 2390 : 
; 2391 : 		// Loop through all resources and see if we can find one more
; 2392 : 		int iNumUniquesFound = 0;
; 2393 : #ifdef AUI_WARNING_FIXES
; 2394 : 		for (uint iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)
; 2395 : #else
; 2396 : 		for(int iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	edi
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	cmp	edi, eax
	jl	SHORT $LL84@WillGetUni
$LN3@WillGetUni:
	pop	edi
	pop	esi
	pop	ebp

; 2407 : 				}
; 2408 : 			}
; 2409 : 		}
; 2410 : 	}
; 2411 : 
; 2412 : 	return false;

	xor	al, al
	pop	ebx

; 2413 : }

	add	esp, 8
	ret	4
$LN77@WillGetUni:
	pop	edi
	pop	esi
	pop	ebp

; 2405 : 				{
; 2406 : 					return true;

	mov	al, 1
	pop	ebx

; 2413 : }

	add	esp, 8
	ret	4
?WillGetUniqueLuxury@CvPlayerTraits@@QBE_NPAVCvArea@@@Z ENDP ; CvPlayerTraits::WillGetUniqueLuxury
_TEXT	ENDS
PUBLIC	?HasFreePromotionUnitCombat@CvPlayerTraits@@QBE_NHH@Z ; CvPlayerTraits::HasFreePromotionUnitCombat
; Function compile flags: /Ogtpy
;	COMDAT ?HasFreePromotionUnitCombat@CvPlayerTraits@@QBE_NHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_promotionID$ = 8					; size = 4
_unitCombatID$ = 12					; size = 4
?HasFreePromotionUnitCombat@CvPlayerTraits@@QBE_NHH@Z PROC ; CvPlayerTraits::HasFreePromotionUnitCombat, COMDAT
; _this$ = ecx

; 2499 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi
	mov	DWORD PTR _this$[esp+16], ecx
	push	edi

; 2500 : 	CvAssertMsg((promotionID >= 0), "promotionID is less than zero");
; 2501 : #ifdef AUI_WARNING_FIXES
; 2502 : 	for (uint iI = 0; iI < GC.getNumTraitInfos(); iI++)
; 2503 : #else
; 2504 : 	for(int iI = 0; iI < GC.getNumTraitInfos(); iI++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	esi, esi
	call	?getNumTraitInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumTraitInfos
	test	eax, eax
	jle	SHORT $LN4@HasFreePro
	mov	ebx, DWORD PTR _unitCombatID$[esp+16]
	mov	ebp, DWORD PTR _promotionID$[esp+16]
$LL12@HasFreePro:

; 2505 : #endif
; 2506 : 	{
; 2507 : 		const TraitTypes eTrait = static_cast<TraitTypes>(iI);
; 2508 : 		CvTraitEntry* pkTraitInfo = GC.getTraitInfo(eTrait);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getTraitInfo@CvGlobals@@QAEPAVCvTraitEntry@@W4TraitTypes@@@Z ; CvGlobals::getTraitInfo
	mov	edi, eax

; 2509 : 		if(pkTraitInfo)

	test	edi, edi
	je	SHORT $LN5@HasFreePro

; 2510 : 		{
; 2511 : 			if(HasTrait(eTrait))

	mov	ecx, DWORD PTR _this$[esp+20]
	push	esi
	call	?HasTrait@CvPlayerTraits@@QBE_NW4TraitTypes@@@Z ; CvPlayerTraits::HasTrait
	test	al, al
	je	SHORT $LN5@HasFreePro

; 2512 : 			{
; 2513 : 				if(pkTraitInfo->IsFreePromotionUnitCombat(promotionID, unitCombatID))

	push	ebx
	push	ebp
	mov	ecx, edi
	call	?IsFreePromotionUnitCombat@CvTraitEntry@@QBE_NHH@Z ; CvTraitEntry::IsFreePromotionUnitCombat
	test	al, al
	jne	SHORT $LN10@HasFreePro
$LN5@HasFreePro:

; 2500 : 	CvAssertMsg((promotionID >= 0), "promotionID is less than zero");
; 2501 : #ifdef AUI_WARNING_FIXES
; 2502 : 	for (uint iI = 0; iI < GC.getNumTraitInfos(); iI++)
; 2503 : #else
; 2504 : 	for(int iI = 0; iI < GC.getNumTraitInfos(); iI++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	esi
	call	?getNumTraitInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumTraitInfos
	cmp	esi, eax
	jl	SHORT $LL12@HasFreePro
$LN4@HasFreePro:
	pop	edi
	pop	esi
	pop	ebp

; 2516 : 				}
; 2517 : 			}
; 2518 : 		}
; 2519 : 	}
; 2520 : 
; 2521 : 	return false;

	xor	al, al
	pop	ebx

; 2522 : }

	pop	ecx
	ret	8
$LN10@HasFreePro:
	pop	edi
	pop	esi
	pop	ebp

; 2514 : 				{
; 2515 : 					return true;

	mov	al, 1
	pop	ebx

; 2522 : }

	pop	ecx
	ret	8
?HasFreePromotionUnitCombat@CvPlayerTraits@@QBE_NHH@Z ENDP ; CvPlayerTraits::HasFreePromotionUnitCombat
_TEXT	ENDS
PUBLIC	??A?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@1@I@Z ; std::vector<bool,std::allocator<bool> >::operator[]
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??A?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@1@I@Z
_TEXT	SEGMENT
__Tmp$239326 = -8					; size = 8
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??A?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@1@I@Z PROC ; std::vector<bool,std::allocator<bool> >::operator[], COMDAT
; _this$ = ecx

; 2090 : 		{	// subscript mutable sequence

	sub	esp, 8

; 2091 : 		return (*(begin() + _Off));

	mov	ecx, DWORD PTR [ecx+8]
	xor	eax, eax
	mov	DWORD PTR __Tmp$239326[esp+12], eax
	mov	eax, DWORD PTR __Off$[esp+4]
	mov	DWORD PTR __Tmp$239326[esp+8], ecx
	push	eax
	lea	ecx, DWORD PTR __Tmp$239326[esp+12]
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	ecx, DWORD PTR __Tmp$239326[esp+8]
	mov	edx, DWORD PTR __Tmp$239326[esp+12]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 2092 : 		}

	add	esp, 8
	ret	8
??A?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_reference@IHV?$vector@_NV?$allocator@_N@std@@@std@@@1@I@Z ENDP ; std::vector<bool,std::allocator<bool> >::operator[]
_TEXT	ENDS
PUBLIC	??1?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE@XZ ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::~vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE@XZ PROC ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::~vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@vector
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 560  : 		}

	ret	0
??1?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE@XZ ENDP ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::~vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAEXXZ ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::clear
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAEXXZ PROC ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::clear, COMDAT
; _this$ = ecx

; 1059 : 		{	// erase all

	push	esi
	push	edi
	mov	edi, ecx

; 1060 : 		erase(begin(), end());

	mov	ecx, DWORD PTR [edi+8]
	mov	esi, DWORD PTR [edi+4]
	cmp	esi, ecx
	je	SHORT $LN15@clear
	mov	eax, ecx
	sub	eax, ecx
	sar	eax, 2
	lea	edx, DWORD PTR [eax*4]
	push	ebx
	lea	ebx, DWORD PTR [edx+esi]
	test	eax, eax
	jle	SHORT $LN40@clear
	push	edx
	push	ecx
	push	edx
	push	esi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN40@clear:
	mov	DWORD PTR [edi+8], ebx
	pop	ebx
$LN15@clear:
	pop	edi
	pop	esi

; 1061 : 		}

	ret	0
?clear@?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAEXXZ ENDP ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::clear
_TEXT	ENDS
PUBLIC	??1?$_Tree_val@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::~_Tree_val<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Tree_val@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_val@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::~_Tree_val<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Tree_val@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::~_Tree_val<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@IV?$allocator@I@std@@@std@@QAEXXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::clear
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$vector@IV?$allocator@I@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@IV?$allocator@I@std@@@std@@QAEXXZ PROC	; std::vector<unsigned int,std::allocator<unsigned int> >::clear, COMDAT
; _this$ = ecx

; 1059 : 		{	// erase all

	push	esi
	push	edi
	mov	edi, ecx

; 1060 : 		erase(begin(), end());

	mov	ecx, DWORD PTR [edi+8]
	mov	esi, DWORD PTR [edi+4]
	cmp	esi, ecx
	je	SHORT $LN15@clear@2
	mov	eax, ecx
	sub	eax, ecx
	sar	eax, 2
	lea	edx, DWORD PTR [eax*4]
	push	ebx
	lea	ebx, DWORD PTR [edx+esi]
	test	eax, eax
	jle	SHORT $LN40@clear@2
	push	edx
	push	ecx
	push	edx
	push	esi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN40@clear@2:
	mov	DWORD PTR [edi+8], ebx
	pop	ebx
$LN15@clear@2:
	pop	edi
	pop	esi

; 1061 : 		}

	ret	0
?clear@?$vector@IV?$allocator@I@std@@@std@@QAEXXZ ENDP	; std::vector<unsigned int,std::allocator<unsigned int> >::clear
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@_N@2@ABU?$pair@$$CBHH@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::insert
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@_N@2@ABU?$pair@$$CBHH@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T239686 = 12						; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@_N@2@ABU?$pair@$$CBHH@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::insert, COMDAT
; _this$ = ecx

; 630  : 		{	// try to insert node with value _Val

	push	ecx

; 631  : 		_Nodeptr _Trynode = _Root();

	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+4]

; 632  : 		_Nodeptr _Wherenode = _Myhead;
; 633  : 		bool _Addleft = true;	// add to left of head if tree empty
; 634  : 		while (!_Isnil(_Trynode))

	cmp	BYTE PTR [eax+21], 0
	push	ebp
	mov	ebp, DWORD PTR __Val$[esp+4]
	push	esi
	mov	esi, edx
	mov	BYTE PTR __Addleft$[esp+12], 1
	jne	SHORT $LN9@insert
	push	edi
	mov	edi, DWORD PTR [ebp]
	npad	2
$LL10@insert:

; 635  : 			{	// look for leaf to insert before (_Addleft) or after
; 636  : 			_Wherenode = _Trynode;
; 637  : 			_Addleft = _DEBUG_LT_PRED(this->comp,

	cmp	edi, DWORD PTR [eax+12]
	mov	esi, eax
	setl	dl
	mov	BYTE PTR __Addleft$[esp+16], dl

; 638  : 				this->_Kfn(_Val), _Key(_Trynode));
; 639  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

	test	dl, dl
	je	SHORT $LN13@insert
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN14@insert
$LN13@insert:
	mov	eax, DWORD PTR [eax+8]
$LN14@insert:

; 632  : 		_Nodeptr _Wherenode = _Myhead;
; 633  : 		bool _Addleft = true;	// add to left of head if tree empty
; 634  : 		while (!_Isnil(_Trynode))

	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL10@insert
	pop	edi
$LN9@insert:

; 640  : 			}
; 641  : 
; 642  : 		if (this->_Multi)
; 643  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

	mov	eax, DWORD PTR __Addleft$[esp+12]
	push	ebp
	push	esi
	push	eax
	lea	edx, DWORD PTR $T239686[esp+20]
	push	edx
	call	?_Insert@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABU?$pair@$$CBHH@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Insert
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+8]
	pop	esi
	mov	DWORD PTR [eax], ecx
	mov	BYTE PTR [eax+4], 1
	pop	ebp

; 644  : 		else
; 645  : 			{	// insert only if unique
; 646  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 647  : 			if (!_Addleft)
; 648  : 				;	// need to test if insert after is okay
; 649  : 			else if (_Where == begin())
; 650  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));
; 651  : 			else
; 652  : 				--_Where;	// need to test if insert before is okay
; 653  : 
; 654  : 			if (_DEBUG_LT_PRED(this->comp,
; 655  : 				_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 656  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 657  : 			else
; 658  : 				return (_Pairib(_Where, false));
; 659  : 			}
; 660  : 		}

	pop	ecx
	ret	8
?insert@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@_N@2@ABU?$pair@$$CBHH@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::insert
_TEXT	ENDS
PUBLIC	?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXABV12@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Copy
; Function compile flags: /Ogtpy
;	COMDAT ?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXABV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXABV12@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Copy, COMDAT
; _this$ = ecx

; 1062 : 		{	// copy entire tree from _Right

	push	ebx

; 1063 : 		_Root() = _Copy(_Right._Root(), _Myhead);

	mov	ebx, DWORD PTR __Right$[esp]
	mov	eax, DWORD PTR [ebx+4]
	push	esi
	push	edi
	mov	esi, ecx
	mov	edi, DWORD PTR [esi+4]
	add	eax, 4
	mov	eax, DWORD PTR [eax]
	push	edi
	push	eax
	call	?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@PAU342@0@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Copy
	mov	DWORD PTR [edi+4], eax

; 1064 : 		_Mysize = _Right.size();

	mov	ecx, DWORD PTR [ebx+8]

; 1065 : 		if (!_Isnil(_Root()))

	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [esi+8], ecx
	mov	eax, DWORD PTR [edx+4]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN2@Copy@2

; 1066 : 			{	// nonempty tree, look for new smallest and largest
; 1067 : 			_Lmost() = _Min(_Root());

	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN25@Copy@2
$LL26@Copy@2:
	mov	eax, ecx
	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LL26@Copy@2
$LN25@Copy@2:
	mov	DWORD PTR [edx], eax

; 1068 : 			_Rmost() = _Max(_Root());

	mov	esi, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN43@Copy@2
$LL44@Copy@2:
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL44@Copy@2
$LN43@Copy@2:
	pop	edi
	mov	DWORD PTR [esi+8], ecx
	pop	esi
	pop	ebx

; 1072 : 		}

	ret	4
$LN2@Copy@2:

; 1069 : 			}
; 1070 : 		else
; 1071 : 			_Lmost() = _Myhead, _Rmost() = _Myhead;	// empty tree

	mov	DWORD PTR [edx], edx
	mov	esi, DWORD PTR [esi+4]
	pop	edi
	mov	DWORD PTR [esi+8], esi
	pop	esi
	pop	ebx

; 1072 : 		}

	ret	4
?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXABV12@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Copy
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHH@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Tree_val<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHH@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHH@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Tree_val<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >, COMDAT
; _this$ = ecx

; 97   : 		{	// construct base, and allocator from _Al

	mov	eax, ecx

; 98   : 		}

	ret	8
??0?$_Tree_val@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHH@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Tree_val<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEPAUFreeResourceXCities@@PAU3@IABU3@@Z ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Ufill
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Ufill@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEPAUFreeResourceXCities@@PAU3@IABU3@@Z
_TEXT	SEGMENT
$T240044 = -4						; size = 1
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Cat$240048 = 16					; size = 1
__Val$ = 16						; size = 4
?_Ufill@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEPAUFreeResourceXCities@@PAU3@IABU3@@Z PROC ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Ufill, COMDAT
; _this$ = ecx

; 1253 : 		{	// copy initializing _Count * _Val, using allocator

	push	ecx

; 1254 : 		_STDEXT unchecked_uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

	mov	edx, DWORD PTR __Cat$240048[esp]
	push	esi
	mov	esi, DWORD PTR __Count$[esp+4]
	push	edi
	mov	edi, DWORD PTR __Ptr$[esp+8]
	mov	BYTE PTR $T240044[esp+12], 0
	mov	eax, DWORD PTR $T240044[esp+12]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+12]
	push	edx
	push	ecx
	push	eax
	push	esi
	push	edi
	call	??$_Uninit_fill_n@PAUFreeResourceXCities@@IU1@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAXPAUFreeResourceXCities@@IABU1@AAV?$allocator@UFreeResourceXCities@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<FreeResourceXCities *,unsigned int,FreeResourceXCities,std::allocator<FreeResourceXCities> >
	add	esp, 24					; 00000018H

; 1255 : 		return (_Ptr + _Count);

	lea	eax, DWORD PTR [edi+esi*8]
	pop	edi
	pop	esi

; 1256 : 		}

	pop	ecx
	ret	12					; 0000000cH
?_Ufill@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEPAUFreeResourceXCities@@PAU3@IABU3@@Z ENDP ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Ufill
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEPAW4TraitTypes@@PAW43@IABW43@@Z ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Ufill
; Function compile flags: /Ogtpy
;	COMDAT ?_Ufill@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEPAW4TraitTypes@@PAW43@IABW43@@Z
_TEXT	SEGMENT
$T240062 = -4						; size = 1
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Cat$240066 = 16					; size = 1
__Val$ = 16						; size = 4
?_Ufill@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEPAW4TraitTypes@@PAW43@IABW43@@Z PROC ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Ufill, COMDAT
; _this$ = ecx

; 1253 : 		{	// copy initializing _Count * _Val, using allocator

	push	ecx

; 1254 : 		_STDEXT unchecked_uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

	mov	edx, DWORD PTR __Cat$240066[esp]
	push	esi
	mov	esi, DWORD PTR __Count$[esp+4]
	push	edi
	mov	edi, DWORD PTR __Ptr$[esp+8]
	mov	BYTE PTR $T240062[esp+12], 0
	mov	eax, DWORD PTR $T240062[esp+12]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+12]
	push	edx
	push	ecx
	push	eax
	push	esi
	push	edi
	call	??$_Uninit_fill_n@PAW4TraitTypes@@IW41@V?$allocator@W4TraitTypes@@@std@@@std@@YAXPAW4TraitTypes@@IABW41@AAV?$allocator@W4TraitTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<enum TraitTypes *,unsigned int,enum TraitTypes,std::allocator<enum TraitTypes> >
	add	esp, 24					; 00000018H

; 1255 : 		return (_Ptr + _Count);

	lea	eax, DWORD PTR [edi+esi*4]
	pop	edi
	pop	esi

; 1256 : 		}

	pop	ecx
	ret	12					; 0000000cH
?_Ufill@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEPAW4TraitTypes@@PAW43@IABW43@@Z ENDP ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Ufill
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::erase
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z
_TEXT	SEGMENT
$T240074 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::erase, COMDAT
; _this$ = ecx

; 934  : 		{	// erase [_First, _Last)

	push	ecx

; 935  : 		if (_First == begin() && _Last == end())

	mov	edx, DWORD PTR __Last$[esp]
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR __First$[esp+4]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN101@erase@5
	cmp	edx, eax
	jne	SHORT $LN101@erase@5

; 936  : 			{	// erase all
; 937  : 			clear();

	mov	eax, DWORD PTR [eax+4]
	push	eax
	mov	ecx, esi
	call	?_Erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Erase
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], eax
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+8], eax

; 938  : 			return (begin());

	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	DWORD PTR [eax], edx
	pop	esi

; 945  : 			}
; 946  : 		}

	pop	ecx
	ret	12					; 0000000cH
$LN101@erase@5:

; 939  : 			}
; 940  : 		else
; 941  : 			{	// partial erase, one at a time
; 942  : 			while (_First != _Last)

	cmp	ecx, edx
	je	SHORT $LN1@erase@5
	npad	2
$LL2@erase@5:

; 943  : 				erase(_First++);

	cmp	BYTE PTR [ecx+21], 0
	mov	edx, ecx
	jne	SHORT $LN65@erase@5
	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN103@erase@5
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN79@erase@5
	npad	5
$LL80@erase@5:
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL80@erase@5
$LN79@erase@5:
	mov	DWORD PTR __First$[esp+4], ecx
	jmp	SHORT $LN65@erase@5
$LN103@erase@5:
	mov	eax, DWORD PTR [ecx+4]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN63@erase@5
	npad	7
$LL64@erase@5:
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN63@erase@5
	mov	ecx, eax
	mov	DWORD PTR __First$[esp+4], ecx
	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL64@erase@5
$LN63@erase@5:
	mov	DWORD PTR __First$[esp+4], eax
$LN65@erase@5:
	push	edx
	lea	eax, DWORD PTR $T240074[esp+12]
	push	eax
	mov	ecx, esi
	call	?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::erase
	mov	ecx, DWORD PTR __First$[esp+4]
	cmp	ecx, DWORD PTR __Last$[esp+4]
	jne	SHORT $LL2@erase@5
$LN1@erase@5:

; 944  : 			return (_Make_iter(_First));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	DWORD PTR [eax], ecx
	pop	esi

; 945  : 			}
; 946  : 		}

	pop	ecx
	ret	12					; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::erase
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXPAUFreeResourceXCities@@0@Z ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXPAUFreeResourceXCities@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXPAUFreeResourceXCities@@0@Z PROC ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	8
?_Destroy@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXPAUFreeResourceXCities@@0@Z ENDP ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXPAUMayaBonusChoice@@0@Z ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Destroy
; Function compile flags: /Ogtpy
;	COMDAT ?_Destroy@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXPAUMayaBonusChoice@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXPAUMayaBonusChoice@@0@Z PROC ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	8
?_Destroy@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXPAUMayaBonusChoice@@0@Z ENDP ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Destroy
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_fill_n@PAUMayaBonusChoice@@IU1@V?$allocator@UMayaBonusChoice@@@std@@@stdext@@YAXPAUMayaBonusChoice@@IABU1@AAV?$allocator@UMayaBonusChoice@@@std@@@Z ; stdext::unchecked_uninitialized_fill_n<MayaBonusChoice *,unsigned int,MayaBonusChoice,std::allocator<MayaBonusChoice> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_fill_n@PAUMayaBonusChoice@@IU1@V?$allocator@UMayaBonusChoice@@@std@@@stdext@@YAXPAUMayaBonusChoice@@IABU1@AAV?$allocator@UMayaBonusChoice@@@std@@@Z
_TEXT	SEGMENT
$T240399 = -4						; size = 1
__Cat$240404 = -4					; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_fill_n@PAUMayaBonusChoice@@IU1@V?$allocator@UMayaBonusChoice@@@std@@@stdext@@YAXPAUMayaBonusChoice@@IABU1@AAV?$allocator@UMayaBonusChoice@@@std@@@Z PROC ; stdext::unchecked_uninitialized_fill_n<MayaBonusChoice *,unsigned int,MayaBonusChoice,std::allocator<MayaBonusChoice> >, COMDAT

; 940  : 	{	// copy _Count *_Val to raw _First, using _Al

	push	ecx

; 941  : 	_STD _Uninit_fill_n(_First, _Count, _Val, _Al,
; 942  : 		_STD _Ptr_cat(_First, _First), _STD _Range_checked_iterator_tag());

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T240399[esp+4], 0
	mov	eax, DWORD PTR $T240399[esp+4]
	mov	ecx, DWORD PTR __Cat$240404[esp+4]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Count$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_fill_n@PAUMayaBonusChoice@@IU1@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAXPAUMayaBonusChoice@@IABU1@AAV?$allocator@UMayaBonusChoice@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<MayaBonusChoice *,unsigned int,MayaBonusChoice,std::allocator<MayaBonusChoice> >

; 943  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_fill_n@PAUMayaBonusChoice@@IU1@V?$allocator@UMayaBonusChoice@@@std@@@stdext@@YAXPAUMayaBonusChoice@@IABU1@AAV?$allocator@UMayaBonusChoice@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_fill_n<MayaBonusChoice *,unsigned int,MayaBonusChoice,std::allocator<MayaBonusChoice> >
_TEXT	ENDS
PUBLIC	??$_Unchecked_uninitialized_move@PAUFreeResourceXCities@@PAU1@V?$allocator@UFreeResourceXCities@@@std@@@stdext@@YAPAUFreeResourceXCities@@PAU1@00AAV?$allocator@UFreeResourceXCities@@@std@@@Z ; stdext::_Unchecked_uninitialized_move<FreeResourceXCities *,FreeResourceXCities *,std::allocator<FreeResourceXCities> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unchecked_uninitialized_move@PAUFreeResourceXCities@@PAU1@V?$allocator@UFreeResourceXCities@@@std@@@stdext@@YAPAUFreeResourceXCities@@PAU1@00AAV?$allocator@UFreeResourceXCities@@@std@@@Z
_TEXT	SEGMENT
$T240435 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$240439 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Unchecked_uninitialized_move@PAUFreeResourceXCities@@PAU1@V?$allocator@UFreeResourceXCities@@@std@@@stdext@@YAPAUFreeResourceXCities@@PAU1@00AAV?$allocator@UFreeResourceXCities@@@std@@@Z PROC ; stdext::_Unchecked_uninitialized_move<FreeResourceXCities *,FreeResourceXCities *,std::allocator<FreeResourceXCities> >, COMDAT

; 861  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 862  : 	return (_STD _Uninit_move(_CHECKED_BASE(_First),
; 863  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 864  : 		_STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$240439[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T240435[esp+4], 0
	mov	eax, DWORD PTR $T240435[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAUFreeResourceXCities@@PAU1@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAPAUFreeResourceXCities@@PAU1@00AAV?$allocator@UFreeResourceXCities@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<FreeResourceXCities *,FreeResourceXCities *,std::allocator<FreeResourceXCities> >

; 865  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Unchecked_uninitialized_move@PAUFreeResourceXCities@@PAU1@V?$allocator@UFreeResourceXCities@@@std@@@stdext@@YAPAUFreeResourceXCities@@PAU1@00AAV?$allocator@UFreeResourceXCities@@@std@@@Z ENDP ; stdext::_Unchecked_uninitialized_move<FreeResourceXCities *,FreeResourceXCities *,std::allocator<FreeResourceXCities> >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAW4TraitTypes@@PAW41@V?$allocator@W4TraitTypes@@@std@@U_Undefined_move_tag@3@@std@@YAPAW4TraitTypes@@PAW41@00AAV?$allocator@W4TraitTypes@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<enum TraitTypes *,enum TraitTypes *,std::allocator<enum TraitTypes>,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_move@PAW4TraitTypes@@PAW41@V?$allocator@W4TraitTypes@@@std@@U_Undefined_move_tag@3@@std@@YAPAW4TraitTypes@@PAW41@00AAV?$allocator@W4TraitTypes@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T240454 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$240457 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_move@PAW4TraitTypes@@PAW41@V?$allocator@W4TraitTypes@@@std@@U_Undefined_move_tag@3@@std@@YAPAW4TraitTypes@@PAW41@00AAV?$allocator@W4TraitTypes@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<enum TraitTypes *,enum TraitTypes *,std::allocator<enum TraitTypes>,std::_Undefined_move_tag>, COMDAT

; 206  : 	{	// move defaults to copy if there is not a more effecient way

	push	ecx

; 207  : 	return (_STDEXT unchecked_uninitialized_copy(_First, _Last, _Dest, _Al));

	mov	ecx, DWORD PTR __Cat$240457[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T240454[esp+4], 0
	mov	eax, DWORD PTR $T240454[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAW4TraitTypes@@PAW41@V?$allocator@W4TraitTypes@@@std@@@std@@YAPAW4TraitTypes@@PAW41@00AAV?$allocator@W4TraitTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<enum TraitTypes *,enum TraitTypes *,std::allocator<enum TraitTypes> >

; 208  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Uninit_move@PAW4TraitTypes@@PAW41@V?$allocator@W4TraitTypes@@@std@@U_Undefined_move_tag@3@@std@@YAPAW4TraitTypes@@PAW41@00AAV?$allocator@W4TraitTypes@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<enum TraitTypes *,enum TraitTypes *,std::allocator<enum TraitTypes>,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAUMayaBonusChoice@@PAU1@V?$allocator@UMayaBonusChoice@@@std@@U_Undefined_move_tag@3@@std@@YAPAUMayaBonusChoice@@PAU1@00AAV?$allocator@UMayaBonusChoice@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<MayaBonusChoice *,MayaBonusChoice *,std::allocator<MayaBonusChoice>,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_move@PAUMayaBonusChoice@@PAU1@V?$allocator@UMayaBonusChoice@@@std@@U_Undefined_move_tag@3@@std@@YAPAUMayaBonusChoice@@PAU1@00AAV?$allocator@UMayaBonusChoice@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T240473 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$240477 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_move@PAUMayaBonusChoice@@PAU1@V?$allocator@UMayaBonusChoice@@@std@@U_Undefined_move_tag@3@@std@@YAPAUMayaBonusChoice@@PAU1@00AAV?$allocator@UMayaBonusChoice@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<MayaBonusChoice *,MayaBonusChoice *,std::allocator<MayaBonusChoice>,std::_Undefined_move_tag>, COMDAT

; 206  : 	{	// move defaults to copy if there is not a more effecient way

	push	ecx

; 207  : 	return (_STDEXT unchecked_uninitialized_copy(_First, _Last, _Dest, _Al));

	mov	ecx, DWORD PTR __Cat$240477[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T240473[esp+4], 0
	mov	eax, DWORD PTR $T240473[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAUMayaBonusChoice@@PAU1@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAPAUMayaBonusChoice@@PAU1@00AAV?$allocator@UMayaBonusChoice@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<MayaBonusChoice *,MayaBonusChoice *,std::allocator<MayaBonusChoice> >

; 208  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Uninit_move@PAUMayaBonusChoice@@PAU1@V?$allocator@UMayaBonusChoice@@@std@@U_Undefined_move_tag@3@@std@@YAPAUMayaBonusChoice@@PAU1@00AAV?$allocator@UMayaBonusChoice@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<MayaBonusChoice *,MayaBonusChoice *,std::allocator<MayaBonusChoice>,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@vector@2
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector@2:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 560  : 		}

	ret	0
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXPAW4TraitTypes@@0@Z ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Destroy
; Function compile flags: /Ogtpy
;	COMDAT ?_Destroy@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXPAW4TraitTypes@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXPAW4TraitTypes@@0@Z PROC ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	8
?_Destroy@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXPAW4TraitTypes@@0@Z ENDP ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Destroy
_TEXT	ENDS
PUBLIC	?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ ; std::vector<int,std::allocator<int> >::clear
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ PROC	; std::vector<int,std::allocator<int> >::clear, COMDAT
; _this$ = ecx

; 1059 : 		{	// erase all

	push	esi
	push	edi
	mov	edi, ecx

; 1060 : 		erase(begin(), end());

	mov	ecx, DWORD PTR [edi+8]
	mov	esi, DWORD PTR [edi+4]
	cmp	esi, ecx
	je	SHORT $LN15@clear@3
	mov	eax, ecx
	sub	eax, ecx
	sar	eax, 2
	lea	edx, DWORD PTR [eax*4]
	push	ebx
	lea	ebx, DWORD PTR [edx+esi]
	test	eax, eax
	jle	SHORT $LN40@clear@3
	push	edx
	push	ecx
	push	edx
	push	esi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN40@clear@3:
	mov	DWORD PTR [edi+8], ebx
	pop	ebx
$LN15@clear@3:
	pop	edi
	pop	esi

; 1061 : 		}

	ret	0
?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ ENDP	; std::vector<int,std::allocator<int> >::clear
_TEXT	ENDS
PUBLIC	??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ	; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ PROC	; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@vector@3
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector@3:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 560  : 		}

	ret	0
??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >
_TEXT	ENDS
PUBLIC	?_Trim@?$vector@_NV?$allocator@_N@std@@@std@@IAEXI@Z ; std::vector<bool,std::allocator<bool> >::_Trim
; Function compile flags: /Ogtpy
;	COMDAT ?_Trim@?$vector@_NV?$allocator@_N@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T240677 = 8						; size = 4
__Size$ = 8						; size = 4
?_Trim@?$vector@_NV?$allocator@_N@std@@@std@@IAEXI@Z PROC ; std::vector<bool,std::allocator<bool> >::_Trim, COMDAT
; _this$ = ecx

; 2360 : 		{	// trim base vector to exact length in bits

	push	ebx

; 2361 : 		if (max_size() < _Size)

	mov	ebx, DWORD PTR __Size$[esp]
	push	edi
	mov	edi, ecx
	cmp	ebx, -1
	jbe	SHORT $LN3@Trim

; 2362 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@IBEXXZ ; std::vector<bool,std::allocator<bool> >::_Xlen
$LN42@Trim:
$LN3@Trim:

; 2363 : 		size_type _Words = _Nw(_Size);
; 2364 : 
; 2365 : 		if (_Words < _Myvec.size())

	mov	eax, DWORD PTR [edi+12]
	sub	eax, DWORD PTR [edi+8]
	lea	ecx, DWORD PTR [edi+4]
	push	esi
	lea	esi, DWORD PTR [ebx+31]
	shr	esi, 5
	sar	eax, 2
	cmp	esi, eax
	jae	SHORT $LN2@Trim

; 2366 : 			_Myvec.erase(_Myvec.begin() + _Words, _Myvec.end());

	mov	eax, DWORD PTR [edi+12]
	mov	edx, DWORD PTR [edi+8]
	push	eax
	lea	edx, DWORD PTR [edx+esi*4]
	push	edx
	lea	eax, DWORD PTR $T240677[esp+16]
	push	eax
	call	?erase@?$vector@IV?$allocator@I@std@@@std@@QAE?AV?$_Vector_iterator@IV?$allocator@I@std@@@2@V?$_Vector_const_iterator@IV?$allocator@I@std@@@2@0@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::erase
$LN2@Trim:

; 2367 : 		_Mysize = _Size;

	mov	DWORD PTR [edi], ebx

; 2368 : 		_Size %= _VBITS;

	and	ebx, 31					; 0000001fH

; 2369 : 		if (0 < _Size)

	jbe	SHORT $LN40@Trim

; 2370 : 			_Myvec[_Words - 1] &= (_Vbase)((1 << _Size) - 1);

	mov	ecx, DWORD PTR [edi+8]
	lea	eax, DWORD PTR [ecx+esi*4-4]
	mov	edx, 1
	mov	ecx, ebx
	shl	edx, cl
	dec	edx
	and	DWORD PTR [eax], edx
$LN40@Trim:
	pop	esi
	pop	edi
	pop	ebx

; 2371 : 		}

	ret	4
$LN41@Trim:
?_Trim@?$vector@_NV?$allocator@_N@std@@@std@@IAEXI@Z ENDP ; std::vector<bool,std::allocator<bool> >::_Trim
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXPAV?$Array@H$05@Firaxis@@0@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Destroy
; Function compile flags: /Ogtpy
;	COMDAT ?_Destroy@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXPAV?$Array@H$05@Firaxis@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXPAV?$Array@H$05@Firaxis@@0@Z PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	8
?_Destroy@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXPAV?$Array@H$05@Firaxis@@0@Z ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Destroy
_TEXT	ENDS
PUBLIC	??$?6V?$Array@H$05@Firaxis@@@@YAAAVFDataStream@@AAV0@ABV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@Z ; operator<<<Firaxis::Array<int,6> >
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fstlcontainerserialization.h
;	COMDAT ??$?6V?$Array@H$05@Firaxis@@@@YAAAVFDataStream@@AAV0@ABV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@Z
_TEXT	SEGMENT
$T240779 = -8						; size = 8
$T240790 = 8						; size = 4
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??$?6V?$Array@H$05@Firaxis@@@@YAAAVFDataStream@@AAV0@ABV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@Z PROC ; operator<<<Firaxis::Array<int,6> >, COMDAT

; 198  : {

	sub	esp, 8
	push	esi

; 199  : 	std::for_each(readFrom.begin(), readFrom.end(), SerializeFromSequenceContainer<const ElementType, const std::vector<ElementType> >(saveTo, readFrom));

	mov	esi, DWORD PTR _readFrom$[esp+8]
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, DWORD PTR [esi+4]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 2
	mov	eax, edx
	push	edi
	mov	edi, DWORD PTR _saveTo$[esp+12]
	shr	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR $T240790[esp+12]
	add	eax, edx
	push	ecx
	mov	ecx, edi
	mov	DWORD PTR $T240790[esp+16], eax
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write
	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR [esi+4]
	push	esi
	push	edi
	push	eax
	push	ecx
	lea	edx, DWORD PTR $T240779[esp+32]
	push	edx
	call	??$for_each@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@U?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@@std@@YA?AU?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@0@0U1@@Z ; std::for_each<std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >,SerializeFromSequenceContainer<Firaxis::Array<int,6> const ,std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > > const > >
	add	esp, 20					; 00000014H

; 200  : 	return saveTo;

	mov	eax, edi
	pop	edi
	pop	esi

; 201  : }

	add	esp, 8
	ret	0
??$?6V?$Array@H$05@Firaxis@@@@YAAAVFDataStream@@AAV0@ABV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@Z ENDP ; operator<<<Firaxis::Array<int,6> >
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEPAV?$Array@H$05@Firaxis@@PAV34@IABV34@@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Ufill
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Ufill@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEPAV?$Array@H$05@Firaxis@@PAV34@IABV34@@Z
_TEXT	SEGMENT
$T240825 = -4						; size = 1
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Cat$240829 = 16					; size = 1
__Val$ = 16						; size = 4
?_Ufill@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEPAV?$Array@H$05@Firaxis@@PAV34@IABV34@@Z PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Ufill, COMDAT
; _this$ = ecx

; 1253 : 		{	// copy initializing _Count * _Val, using allocator

	push	ecx

; 1254 : 		_STDEXT unchecked_uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

	mov	edx, DWORD PTR __Cat$240829[esp]
	push	esi
	mov	esi, DWORD PTR __Count$[esp+4]
	push	edi
	mov	edi, DWORD PTR __Ptr$[esp+8]
	mov	BYTE PTR $T240825[esp+12], 0
	mov	eax, DWORD PTR $T240825[esp+12]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+12]
	push	edx
	push	ecx
	push	eax
	push	esi
	push	edi
	call	??$_Uninit_fill_n@PAV?$Array@H$05@Firaxis@@IV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAXPAV?$Array@H$05@Firaxis@@IABV12@AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<Firaxis::Array<int,6> *,unsigned int,Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >

; 1255 : 		return (_Ptr + _Count);

	lea	ecx, DWORD PTR [esi+esi*2]
	add	esp, 24					; 00000018H
	lea	eax, DWORD PTR [edi+ecx*8]
	pop	edi
	pop	esi

; 1256 : 		}

	pop	ecx
	ret	12					; 0000000cH
?_Ufill@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEPAV?$Array@H$05@Firaxis@@PAV34@IABV34@@Z ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Ufill
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_fill_n@PAHIHV?$allocator@H@std@@@stdext@@YAXPAHIABHAAV?$allocator@H@std@@@Z ; stdext::unchecked_uninitialized_fill_n<int *,unsigned int,int,std::allocator<int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_fill_n@PAHIHV?$allocator@H@std@@@stdext@@YAXPAHIABHAAV?$allocator@H@std@@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_fill_n@PAHIHV?$allocator@H@std@@@stdext@@YAXPAHIABHAAV?$allocator@H@std@@@Z PROC ; stdext::unchecked_uninitialized_fill_n<int *,unsigned int,int,std::allocator<int> >, COMDAT

; 941  : 	_STD _Uninit_fill_n(_First, _Count, _Val, _Al,
; 942  : 		_STD _Ptr_cat(_First, _First), _STD _Range_checked_iterator_tag());

	mov	eax, DWORD PTR __Count$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	test	eax, eax
	jbe	SHORT $LN13@unchecked_@11
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL15@unchecked_@11:
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [ecx], esi
	dec	eax
	add	ecx, 4
	test	eax, eax
	ja	SHORT $LL15@unchecked_@11
	pop	esi
$LN13@unchecked_@11:

; 943  : 	}

	ret	0
??$unchecked_uninitialized_fill_n@PAHIHV?$allocator@H@std@@@stdext@@YAXPAHIABHAAV?$allocator@H@std@@@Z ENDP ; stdext::unchecked_uninitialized_fill_n<int *,unsigned int,int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ; std::vector<int,std::allocator<int> >::_Umove<int *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z PROC ; std::vector<int,std::allocator<int> >::_Umove<int *>, COMDAT
; _this$ = ecx

; 1146 : 		{	// move initializing [_First, _Last), using allocator
; 1147 : 		return (_STDEXT _Unchecked_uninitialized_move(_First, _Last,
; 1148 : 			_Ptr, this->_Alval));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi
	mov	edi, DWORD PTR __Ptr$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]
	test	eax, eax
	jbe	SHORT $LN16@Umove
	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN16@Umove:
	pop	edi
	mov	eax, esi
	pop	esi

; 1149 : 		}

	ret	12					; 0000000cH
??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ENDP ; std::vector<int,std::allocator<int> >::_Umove<int *>
_TEXT	ENDS
PUBLIC	??$copy_backward@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@V10@00@Z ; std::copy_backward<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$copy_backward@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@V10@00@Z
_TEXT	SEGMENT
$T240991 = -4						; size = 1
__Cat$240997 = 8					; size = 1
$T240993 = 8						; size = 1
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
__Dest$ = 28						; size = 8
??$copy_backward@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@V10@00@Z PROC ; std::copy_backward<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > > >, COMDAT

; 2740 : 	{	// copy [_First, _Last) backwards to [..., _Dest)

	push	ecx

; 2741 : 	return _Copy_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 2742 : 		_Iter_random(_First, _Dest), _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag());

	mov	ecx, DWORD PTR __Cat$240997[esp]
	mov	edx, DWORD PTR $T240993[esp]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	BYTE PTR $T240991[esp+8], 0
	mov	eax, DWORD PTR $T240991[esp+8]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+12]
	push	ecx
	mov	ecx, DWORD PTR __Dest$[esp+12]
	push	edx
	mov	edx, DWORD PTR __Last$[esp+20]
	push	eax
	mov	eax, DWORD PTR __Last$[esp+20]
	push	ecx
	mov	ecx, DWORD PTR __First$[esp+28]
	push	edx
	mov	edx, DWORD PTR __First$[esp+28]
	push	eax
	push	ecx
	push	edx
	push	esi
	call	??$_Copy_backward_opt@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::random_access_iterator_tag>
	add	esp, 40					; 00000028H
	mov	eax, esi
	pop	esi

; 2743 : 	}

	pop	ecx
	ret	0
??$copy_backward@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@V10@00@Z ENDP ; std::copy_backward<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > > >
_TEXT	ENDS
PUBLIC	??$_Umove@PAI@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAI00@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Umove<unsigned int *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??$_Umove@PAI@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAI00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAI@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAI00@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Umove<unsigned int *>, COMDAT
; _this$ = ecx

; 1146 : 		{	// move initializing [_First, _Last), using allocator
; 1147 : 		return (_STDEXT _Unchecked_uninitialized_move(_First, _Last,
; 1148 : 			_Ptr, this->_Alval));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi
	mov	edi, DWORD PTR __Ptr$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]
	test	eax, eax
	jbe	SHORT $LN16@Umove@2
	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN16@Umove@2:
	pop	edi
	mov	eax, esi
	pop	esi

; 1149 : 		}

	ret	12					; 0000000cH
??$_Umove@PAI@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAI00@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Umove<unsigned int *>
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_fill_n@PAIIIV?$allocator@I@std@@@stdext@@YAXPAIIABIAAV?$allocator@I@std@@@Z ; stdext::unchecked_uninitialized_fill_n<unsigned int *,unsigned int,unsigned int,std::allocator<unsigned int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_fill_n@PAIIIV?$allocator@I@std@@@stdext@@YAXPAIIABIAAV?$allocator@I@std@@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_fill_n@PAIIIV?$allocator@I@std@@@stdext@@YAXPAIIABIAAV?$allocator@I@std@@@Z PROC ; stdext::unchecked_uninitialized_fill_n<unsigned int *,unsigned int,unsigned int,std::allocator<unsigned int> >, COMDAT

; 941  : 	_STD _Uninit_fill_n(_First, _Count, _Val, _Al,
; 942  : 		_STD _Ptr_cat(_First, _First), _STD _Range_checked_iterator_tag());

	mov	eax, DWORD PTR __Count$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	test	eax, eax
	jbe	SHORT $LN13@unchecked_@12
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL15@unchecked_@12:
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [ecx], esi
	dec	eax
	add	ecx, 4
	test	eax, eax
	ja	SHORT $LL15@unchecked_@12
	pop	esi
$LN13@unchecked_@12:

; 943  : 	}

	ret	0
??$unchecked_uninitialized_fill_n@PAIIIV?$allocator@I@std@@@stdext@@YAXPAIIABIAAV?$allocator@I@std@@@Z ENDP ; stdext::unchecked_uninitialized_fill_n<unsigned int *,unsigned int,unsigned int,std::allocator<unsigned int> >
_TEXT	ENDS
PUBLIC	??$_Unchecked_uninitialized_move@PAV?$Array@H$05@Firaxis@@PAV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@stdext@@YAPAV?$Array@H$05@Firaxis@@PAV12@00AAV?$allocator@V?$Array@H$05@Firaxis@@@std@@@Z ; stdext::_Unchecked_uninitialized_move<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::allocator<Firaxis::Array<int,6> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unchecked_uninitialized_move@PAV?$Array@H$05@Firaxis@@PAV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@stdext@@YAPAV?$Array@H$05@Firaxis@@PAV12@00AAV?$allocator@V?$Array@H$05@Firaxis@@@std@@@Z
_TEXT	SEGMENT
$T241187 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$241191 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Unchecked_uninitialized_move@PAV?$Array@H$05@Firaxis@@PAV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@stdext@@YAPAV?$Array@H$05@Firaxis@@PAV12@00AAV?$allocator@V?$Array@H$05@Firaxis@@@std@@@Z PROC ; stdext::_Unchecked_uninitialized_move<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::allocator<Firaxis::Array<int,6> > >, COMDAT

; 861  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 862  : 	return (_STD _Uninit_move(_CHECKED_BASE(_First),
; 863  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 864  : 		_STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$241191[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T241187[esp+4], 0
	mov	eax, DWORD PTR $T241187[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAV?$Array@H$05@Firaxis@@PAV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::allocator<Firaxis::Array<int,6> > >

; 865  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Unchecked_uninitialized_move@PAV?$Array@H$05@Firaxis@@PAV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@stdext@@YAPAV?$Array@H$05@Firaxis@@PAV12@00AAV?$allocator@V?$Array@H$05@Firaxis@@@std@@@Z ENDP ; stdext::_Unchecked_uninitialized_move<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::allocator<Firaxis::Array<int,6> > >
_TEXT	ENDS
PUBLIC	?NoTrain@CvTraitEntry@@QAE_NW4UnitClassTypes@@@Z ; CvTraitEntry::NoTrain
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
;	COMDAT ?NoTrain@CvTraitEntry@@QAE_NW4UnitClassTypes@@@Z
_TEXT	SEGMENT
__Tmp$241300 = -8					; size = 8
_eUnitClass$ = 8					; size = 4
?NoTrain@CvTraitEntry@@QAE_NW4UnitClassTypes@@@Z PROC	; CvTraitEntry::NoTrain, COMDAT
; _this$ = ecx

; 1068 : 	if (eUnitClass != NO_UNITCLASS)

	mov	edx, DWORD PTR _eUnitClass$[esp-4]
	sub	esp, 8
	cmp	edx, -1
	je	SHORT $LN2@NoTrain

; 1069 : 	{
; 1070 : 		return m_abNoTrainUnitClass[eUnitClass];

	mov	eax, DWORD PTR [ecx+732]
	xor	ecx, ecx
	mov	DWORD PTR __Tmp$241300[esp+12], ecx
	push	edx
	lea	ecx, DWORD PTR __Tmp$241300[esp+12]
	mov	DWORD PTR __Tmp$241300[esp+12], eax
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
	mov	ecx, DWORD PTR __Tmp$241300[esp+12]
	mov	eax, 1
	shl	eax, cl
	mov	ecx, DWORD PTR __Tmp$241300[esp+8]
	and	eax, DWORD PTR [ecx]
	neg	eax
	sbb	eax, eax
	neg	eax

; 1075 : 	}
; 1076 : }

	add	esp, 8
	ret	4
$LN2@NoTrain:

; 1071 : 	}
; 1072 : 	else
; 1073 : 	{
; 1074 : 		return false;

	xor	al, al

; 1075 : 	}
; 1076 : }

	add	esp, 8
	ret	4
?NoTrain@CvTraitEntry@@QAE_NW4UnitClassTypes@@@Z ENDP	; CvTraitEntry::NoTrain
_TEXT	ENDS
PUBLIC	?NoBuild@CvTraitEntry@@QAE_NW4ImprovementTypes@@@Z ; CvTraitEntry::NoBuild
; Function compile flags: /Ogtpy
;	COMDAT ?NoBuild@CvTraitEntry@@QAE_NW4ImprovementTypes@@@Z
_TEXT	SEGMENT
__Tmp$241422 = -8					; size = 8
_eImprovementType$ = 8					; size = 4
?NoBuild@CvTraitEntry@@QAE_NW4ImprovementTypes@@@Z PROC	; CvTraitEntry::NoBuild, COMDAT
; _this$ = ecx

; 1082 : 	if (eImprovementType != NO_IMPROVEMENT)

	mov	edx, DWORD PTR _eImprovementType$[esp-4]
	sub	esp, 8
	cmp	edx, -1
	je	SHORT $LN2@NoBuild

; 1083 : 	{
; 1084 : 		return m_abNoBuildImprovement[eImprovementType];

	mov	eax, DWORD PTR [ecx+752]
	xor	ecx, ecx
	mov	DWORD PTR __Tmp$241422[esp+12], ecx
	push	edx
	lea	ecx, DWORD PTR __Tmp$241422[esp+12]
	mov	DWORD PTR __Tmp$241422[esp+12], eax
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
	mov	ecx, DWORD PTR __Tmp$241422[esp+12]
	mov	eax, 1
	shl	eax, cl
	mov	ecx, DWORD PTR __Tmp$241422[esp+8]
	and	eax, DWORD PTR [ecx]
	neg	eax
	sbb	eax, eax
	neg	eax

; 1089 : 	}
; 1090 : }

	add	esp, 8
	ret	4
$LN2@NoBuild:

; 1085 : 	}
; 1086 : 	else
; 1087 : 	{
; 1088 : 		return false;

	xor	al, al

; 1089 : 	}
; 1090 : }

	add	esp, 8
	ret	4
?NoBuild@CvTraitEntry@@QAE_NW4ImprovementTypes@@@Z ENDP	; CvTraitEntry::NoBuild
_TEXT	ENDS
PUBLIC	??0CvTraitXMLEntries@@QAE@XZ			; CvTraitXMLEntries::CvTraitXMLEntries
; Function compile flags: /Ogtpy
;	COMDAT ??0CvTraitXMLEntries@@QAE@XZ
_TEXT	SEGMENT
??0CvTraitXMLEntries@@QAE@XZ PROC			; CvTraitXMLEntries::CvTraitXMLEntries, COMDAT
; _this$ = ecx

; 1623 : {

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 1624 : 
; 1625 : }

	ret	0
??0CvTraitXMLEntries@@QAE@XZ ENDP			; CvTraitXMLEntries::CvTraitXMLEntries
_TEXT	ENDS
PUBLIC	?NoTrain@CvPlayerTraits@@QAE_NW4UnitClassTypes@@@Z ; CvPlayerTraits::NoTrain
; Function compile flags: /Ogtpy
;	COMDAT ?NoTrain@CvPlayerTraits@@QAE_NW4UnitClassTypes@@@Z
_TEXT	SEGMENT
__Tmp$241694 = -8					; size = 8
_eUnitClassType$ = 8					; size = 4
?NoTrain@CvPlayerTraits@@QAE_NW4UnitClassTypes@@@Z PROC	; CvPlayerTraits::NoTrain, COMDAT
; _this$ = ecx

; 2798 : 	if (eUnitClassType != NO_UNITCLASS)

	mov	edx, DWORD PTR _eUnitClassType$[esp-4]
	sub	esp, 8
	cmp	edx, -1
	je	SHORT $LN2@NoTrain@2

; 2799 : 	{
; 2800 : 		return m_abNoTrain[eUnitClassType];

	mov	eax, DWORD PTR [ecx+636]
	xor	ecx, ecx
	mov	DWORD PTR __Tmp$241694[esp+12], ecx
	push	edx
	lea	ecx, DWORD PTR __Tmp$241694[esp+12]
	mov	DWORD PTR __Tmp$241694[esp+12], eax
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
	mov	ecx, DWORD PTR __Tmp$241694[esp+12]
	mov	eax, 1
	shl	eax, cl
	mov	ecx, DWORD PTR __Tmp$241694[esp+8]
	and	eax, DWORD PTR [ecx]
	neg	eax
	sbb	eax, eax
	neg	eax

; 2805 : 	}
; 2806 : }

	add	esp, 8
	ret	4
$LN2@NoTrain@2:

; 2801 : 	}
; 2802 : 	else
; 2803 : 	{
; 2804 : 		return false;

	xor	al, al

; 2805 : 	}
; 2806 : }

	add	esp, 8
	ret	4
?NoTrain@CvPlayerTraits@@QAE_NW4UnitClassTypes@@@Z ENDP	; CvPlayerTraits::NoTrain
_TEXT	ENDS
PUBLIC	?NoBuild@CvPlayerTraits@@QAE_NW4ImprovementTypes@@@Z ; CvPlayerTraits::NoBuild
; Function compile flags: /Ogtpy
;	COMDAT ?NoBuild@CvPlayerTraits@@QAE_NW4ImprovementTypes@@@Z
_TEXT	SEGMENT
__Tmp$241816 = -8					; size = 8
_eImprovementType$ = 8					; size = 4
?NoBuild@CvPlayerTraits@@QAE_NW4ImprovementTypes@@@Z PROC ; CvPlayerTraits::NoBuild, COMDAT
; _this$ = ecx

; 2813 : 	if (eImprovementType != NO_IMPROVEMENT)

	mov	edx, DWORD PTR _eImprovementType$[esp-4]
	sub	esp, 8
	cmp	edx, -1
	je	SHORT $LN2@NoBuild@2

; 2814 : 	{
; 2815 : 		return m_abNoBuild[eImprovementType];

	mov	eax, DWORD PTR [ecx+656]
	xor	ecx, ecx
	mov	DWORD PTR __Tmp$241816[esp+12], ecx
	push	edx
	lea	ecx, DWORD PTR __Tmp$241816[esp+12]
	mov	DWORD PTR __Tmp$241816[esp+12], eax
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
	mov	ecx, DWORD PTR __Tmp$241816[esp+12]
	mov	eax, 1
	shl	eax, cl
	mov	ecx, DWORD PTR __Tmp$241816[esp+8]
	and	eax, DWORD PTR [ecx]
	neg	eax
	sbb	eax, eax
	neg	eax

; 2820 : 	}
; 2821 : }

	add	esp, 8
	ret	4
$LN2@NoBuild@2:

; 2816 : 	}
; 2817 : 	else
; 2818 : 	{
; 2819 : 		return false;

	xor	al, al

; 2820 : 	}
; 2821 : }

	add	esp, 8
	ret	4
?NoBuild@CvPlayerTraits@@QAE_NW4ImprovementTypes@@@Z ENDP ; CvPlayerTraits::NoBuild
_TEXT	ENDS
PUBLIC	?Write@CvPlayerTraits@@QAEXAAVFDataStream@@@Z	; CvPlayerTraits::Write
EXTRN	?getNumUnitCombatClassInfos@CvGlobals@@QAEHXZ:PROC ; CvGlobals::getNumUnitCombatClassInfos
EXTRN	??6@YAAAVFDataStream@@AAV0@ABW4TechTypes@@@Z:PROC ; operator<<
EXTRN	?getNumTerrainInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumTerrainInfos
EXTRN	??6@YAAAVFDataStream@@AAV0@ABW4ImprovementTypes@@@Z:PROC ; operator<<
EXTRN	??6@YAAAVFDataStream@@AAV0@ABW4UnitTypes@@@Z:PROC ; operator<<
; Function compile flags: /Ogtpy
;	COMDAT ?Write@CvPlayerTraits@@QAEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_iNumUnitCombatClassInfos$ = -16			; size = 4
_uiVersion$ = -12					; size = 4
$T242990 = -8						; size = 8
$T242929 = -8						; size = 8
$T242868 = -8						; size = 8
$T242992 = 8						; size = 4
$T242931 = 8						; size = 4
$T242870 = 8						; size = 4
$T242784 = 8						; size = 1
$T242612 = 8						; size = 1
$T241857 = 8						; size = 4
$T241856 = 8						; size = 4
$T241854 = 8						; size = 4
$T241852 = 8						; size = 4
$T241840 = 8						; size = 4
_kStream$ = 8						; size = 4
?Write@CvPlayerTraits@@QAEXAAVFDataStream@@@Z PROC	; CvPlayerTraits::Write, COMDAT
; _this$ = ecx

; 3615 : {

	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi

; 3616 : 	// Current version number
; 3617 : 	uint uiVersion = 19;
; 3618 : 	kStream << uiVersion;

	mov	edi, DWORD PTR _kStream$[esp+24]
	lea	eax, DWORD PTR _uiVersion$[esp+28]
	mov	esi, ecx
	push	eax
	mov	ecx, edi
	mov	DWORD PTR _uiVersion$[esp+32], 19	; 00000013H
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 3619 : 
; 3620 : 	kStream << m_iGreatPeopleRateModifier;

	lea	ecx, DWORD PTR [esi+44]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3621 : 	kStream << m_iGreatScientistRateModifier;

	lea	edx, DWORD PTR [esi+48]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3622 : 	kStream << m_iGreatGeneralRateModifier;

	lea	eax, DWORD PTR [esi+52]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3623 : 	kStream << m_iGreatGeneralExtraBonus;

	lea	ecx, DWORD PTR [esi+56]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3624 : 	kStream << m_iGreatPersonGiftInfluence;

	lea	edx, DWORD PTR [esi+60]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3625 : 	kStream << m_iLevelExperienceModifier;

	lea	eax, DWORD PTR [esi+64]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3626 : 	kStream << m_iMaxGlobalBuildingProductionModifier;

	lea	ecx, DWORD PTR [esi+68]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3627 : 	kStream << m_iMaxTeamBuildingProductionModifier;

	lea	edx, DWORD PTR [esi+72]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3628 : 	kStream << m_iMaxPlayerBuildingProductionModifier;

	lea	eax, DWORD PTR [esi+76]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3629 : 	kStream << m_iCityUnhappinessModifier;

	lea	ecx, DWORD PTR [esi+80]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3630 : 	kStream << m_iPopulationUnhappinessModifier;

	lea	edx, DWORD PTR [esi+84]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3631 : 	kStream << m_iCityStateBonusModifier;

	lea	eax, DWORD PTR [esi+88]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3632 : 	kStream << m_iCityStateFriendshipModifier;

	lea	ecx, DWORD PTR [esi+92]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3633 : 	kStream << m_iCityStateCombatModifier;

	lea	edx, DWORD PTR [esi+96]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3634 : 	kStream << m_iLandBarbarianConversionPercent;

	lea	eax, DWORD PTR [esi+100]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3635 : 	kStream << m_iLandBarbarianConversionExtraUnits;

	lea	ecx, DWORD PTR [esi+104]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3636 : 	kStream << m_iSeaBarbarianConversionPercent;

	lea	edx, DWORD PTR [esi+108]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3637 : 	kStream << m_iCapitalBuildingModifier;

	lea	eax, DWORD PTR [esi+112]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3638 : 	kStream << m_iPlotBuyCostModifier;

	lea	ecx, DWORD PTR [esi+116]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3639 : 	kStream << m_iPlotCultureCostModifier;

	lea	edx, DWORD PTR [esi+120]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3640 : #ifdef NQ_SCIENCE_PER_GREAT_PERSON_BORN
; 3641 : 	kStream << m_iSciencePerGreatPersonBorn;

	lea	eax, DWORD PTR [esi+124]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3642 : #endif
; 3643 : #ifdef NQ_NUM_TURNS_BEFORE_MINOR_ALLIES_REFUSE_BRIBES_FROM_TRAIT
; 3644 : 	kStream << m_iNumTurnsBeforeMinorAlliesRefuseBribes;

	lea	ecx, DWORD PTR [esi+128]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3645 : #endif
; 3646 : #ifdef NQ_GOLDEN_PILGRIMAGE
; 3647 : 	kStream << m_iGoldenAgeTileBonusFaith;

	lea	edx, DWORD PTR [esi+132]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3648 : #endif
; 3649 : 	kStream << m_iCultureFromKills;

	lea	eax, DWORD PTR [esi+136]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3650 : 	kStream << m_iFaithFromKills;

	lea	ecx, DWORD PTR [esi+140]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3651 : 	kStream << m_iCityCultureBonus;

	lea	edx, DWORD PTR [esi+144]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3652 : 	kStream << m_iCapitalThemingBonusModifier;

	lea	eax, DWORD PTR [esi+148]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3653 : 	kStream << m_iPolicyCostModifier;

	lea	ecx, DWORD PTR [esi+152]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3654 : 	kStream << m_iCityConnectionTradeRouteChange;

	lea	edx, DWORD PTR [esi+156]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3655 : 	kStream << m_iWonderProductionModifier;

	lea	eax, DWORD PTR [esi+160]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3656 : 	kStream << m_iPlunderModifier;

	lea	ecx, DWORD PTR [esi+164]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3657 : 	kStream << m_iImprovementMaintenanceModifier;

	lea	edx, DWORD PTR [esi+168]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3658 : 	kStream << m_iGoldenAgeDurationModifier;

	lea	eax, DWORD PTR [esi+172]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3659 : 	kStream << m_iGoldenAgeMoveChange;

	lea	ecx, DWORD PTR [esi+176]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3660 : 	kStream << m_iGoldenAgeCombatModifier;

	lea	edx, DWORD PTR [esi+180]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3661 : 	kStream << m_iGoldenAgeTourismModifier;

	lea	eax, DWORD PTR [esi+184]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3662 : 	kStream << m_iGoldenAgeGreatArtistRateModifier;

	lea	ecx, DWORD PTR [esi+188]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3663 : 	kStream << m_iGoldenAgeGreatMusicianRateModifier;

	lea	edx, DWORD PTR [esi+192]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3664 : 	kStream << m_iGoldenAgeGreatWriterRateModifier;

	lea	eax, DWORD PTR [esi+196]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3665 : 	kStream << m_iExtraEmbarkMoves;

	lea	ecx, DWORD PTR [esi+200]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3666 : 	kStream << m_iNaturalWonderFirstFinderGold;

	lea	edx, DWORD PTR [esi+204]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3667 : 	kStream << m_iNaturalWonderSubsequentFinderGold;

	lea	eax, DWORD PTR [esi+208]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3668 : 	
; 3669 : 	//EAP: Natural wonder faith for the finder
; 3670 : 	
; 3671 : 	kStream << m_iNaturalWonderFirstFinderFaith;

	lea	ecx, DWORD PTR [esi+216]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3672 : 	kStream << m_iNaturalWonderSubsequentFinderFaith;

	lea	edx, DWORD PTR [esi+220]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3673 : 	
; 3674 : 
; 3675 : 	//
; 3676 : 	kStream << m_iNaturalWonderYieldModifier;

	lea	eax, DWORD PTR [esi+212]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3677 : 	kStream << m_iNaturalWonderHappinessModifier;

	lea	ecx, DWORD PTR [esi+224]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3678 : 	kStream << m_iNearbyImprovementCombatBonus;

	lea	edx, DWORD PTR [esi+228]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3679 : 	kStream << m_iNearbyImprovementBonusRange;

	lea	eax, DWORD PTR [esi+232]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3680 : 	kStream << m_iCultureBuildingYieldChange;

	lea	ecx, DWORD PTR [esi+236]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3681 : 	kStream << m_iCombatBonusVsHigherTech;

	lea	edx, DWORD PTR [esi+240]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3682 : 	kStream << m_iCombatBonusVsLargerCiv;

	lea	eax, DWORD PTR [esi+244]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3683 : 	kStream << m_iLandUnitMaintenanceModifier;

	lea	ecx, DWORD PTR [esi+248]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3684 : 	kStream << m_iNavalUnitMaintenanceModifier;

	lea	edx, DWORD PTR [esi+252]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3685 : 	kStream << m_iRazeSpeedModifier;

	lea	eax, DWORD PTR [esi+256]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3686 : 	kStream << m_iDOFGreatPersonModifier;

	lea	ecx, DWORD PTR [esi+260]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3687 : 	kStream << m_iLuxuryHappinessRetention;

	lea	edx, DWORD PTR [esi+264]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3688 : 	kStream << m_iExtraHappinessPerLuxury; // NQMP GJS - New Netherlands UA

	lea	eax, DWORD PTR [esi+268]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3689 : 	kStream << m_iExtraSpies;

	lea	ecx, DWORD PTR [esi+272]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3690 : 	kStream << m_iHappinessPerReligion; // NQMP GJS - New Ottoman UA

	lea	edx, DWORD PTR [esi+276]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3691 : 	kStream << m_iUnresearchedTechBonusFromKills;

	lea	eax, DWORD PTR [esi+280]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3692 : 	kStream << m_iExtraFoundedCityTerritoryClaimRange;

	lea	ecx, DWORD PTR [esi+284]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3693 : 	kStream << m_iFreeSocialPoliciesPerEra;

	lea	edx, DWORD PTR [esi+288]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3694 : 	kStream << m_iNumTradeRoutesModifier;

	lea	eax, DWORD PTR [esi+292]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3695 : 	kStream << m_iTradeRouteResourceModifier;

	lea	ecx, DWORD PTR [esi+296]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3696 : 	kStream << m_iUniqueLuxuryCities;

	lea	edx, DWORD PTR [esi+300]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3697 : 	kStream << m_iUniqueLuxuryQuantity;

	lea	eax, DWORD PTR [esi+304]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3698 : 	kStream << m_iUniqueLuxuryCitiesPlaced;

	lea	ecx, DWORD PTR [esi+308]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3699 : 	kStream << m_iWorkerSpeedModifier;

	lea	edx, DWORD PTR [esi+312]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3700 : 	kStream << m_iAfraidMinorPerTurnInfluence;

	lea	eax, DWORD PTR [esi+316]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3701 : 	kStream << m_iLandTradeRouteRangeBonus;

	lea	ecx, DWORD PTR [esi+320]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3702 : 	kStream << m_iTradeReligionModifier;

	lea	edx, DWORD PTR [esi+324]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3703 : 	kStream << m_iTradeBuildingModifier;

	lea	eax, DWORD PTR [esi+328]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3704 : 
; 3705 : 	kStream << m_bFightWellDamaged;

	lea	ecx, DWORD PTR [esi+332]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3706 : 	kStream << m_bMoveFriendlyWoodsAsRoad;

	lea	edx, DWORD PTR [esi+333]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3707 : 	kStream << m_bFasterAlongRiver;

	lea	eax, DWORD PTR [esi+334]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3708 : 	kStream << m_bFasterInHills;

	lea	ecx, DWORD PTR [esi+335]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3709 : 	kStream << m_bEmbarkedAllWater;

	lea	edx, DWORD PTR [esi+336]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3710 : 	kStream << m_bEmbarkedToLandFlatCost;

	lea	eax, DWORD PTR [esi+337]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3711 : 	kStream << m_bNoHillsImprovementMaintenance;

	lea	ecx, DWORD PTR [esi+338]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3712 : 	kStream << m_bTechBoostFromCapitalScienceBuildings;

	lea	edx, DWORD PTR [esi+339]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3713 : 	kStream << m_bStaysAliveZeroCities;

	lea	eax, DWORD PTR [esi+340]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3714 : 	kStream << m_bFaithFromUnimprovedForest;

	lea	ecx, DWORD PTR [esi+341]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3715 : #ifdef NQ_UNIT_IMMUNE_TO_PLUNDER_FROM_TRAIT
; 3716 : 	kStream << m_bSeaTradeRoutesArePlunderImmune;

	lea	edx, DWORD PTR [esi+342]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3717 : #endif
; 3718 : 
; 3719 : 	// NQMP GJS - New France UA begin
; 3720 : 	kStream << m_bEarnsGreatPersonOnSlotOrGuild;

	lea	eax, DWORD PTR [esi+343]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3721 : 	kStream << m_bHasBuiltWritersGuild;

	lea	ecx, DWORD PTR [esi+344]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3722 : 	kStream << m_bHasBuiltArtistsGuild;

	lea	edx, DWORD PTR [esi+345]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3723 : 	kStream << m_bHasBuiltMusiciansGuild;

	lea	eax, DWORD PTR [esi+346]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3724 : 	// NQMP GJS - New France UA end
; 3725 : 
; 3726 : 	kStream << m_bBonusReligiousBelief;

	lea	ecx, DWORD PTR [esi+347]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3727 : 	kStream << m_bAbleToAnnexCityStates;

	lea	edx, DWORD PTR [esi+348]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3728 : 	kStream << m_bCrossesMountainsAfterGreatGeneral;

	lea	eax, DWORD PTR [esi+349]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3729 : 	kStream << m_bMayaCalendarBonuses;

	lea	ecx, DWORD PTR [esi+350]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3730 : 
; 3731 : 	kStream << m_iBaktunPreviousTurn;

	lea	edx, DWORD PTR [esi+740]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3732 : 
; 3733 : 	std::vector<MayaBonusChoice>::const_iterator it;
; 3734 : 	kStream << m_aMayaBonusChoices.size();

	mov	eax, DWORD PTR [esi+772]
	sub	eax, DWORD PTR [esi+768]
	lea	ecx, DWORD PTR $T241840[esp+24]
	sar	eax, 3
	push	ecx
	mov	ecx, edi
	mov	DWORD PTR $T241840[esp+28], eax
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 3735 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 3736 : 	for (it = m_aMayaBonusChoices.begin(); it != m_aMayaBonusChoices.end(); ++it)
; 3737 : #else
; 3738 : 	for(it = m_aMayaBonusChoices.begin(); it != m_aMayaBonusChoices.end(); it++)

	mov	ebx, DWORD PTR [esi+768]
	cmp	ebx, DWORD PTR [esi+772]
	je	SHORT $LN19@Write
$LL224@Write:

; 3739 : #endif
; 3740 : 	{
; 3741 : 		kStream << it->m_eUnitType;

	push	ebx
	push	edi
	call	??6@YAAAVFDataStream@@AAV0@ABW4UnitTypes@@@Z ; operator<<
	add	esp, 8
	lea	edx, DWORD PTR [ebx+4]

; 3742 : 		kStream << it->m_iBaktunJustFinished;

	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	add	ebx, 8
	cmp	ebx, DWORD PTR [esi+772]
	jne	SHORT $LL224@Write
$LN19@Write:
	push	ebp

; 3743 : 	}
; 3744 : 
; 3745 : 	kStream << m_bNoAnnexing;

	lea	eax, DWORD PTR [esi+351]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3746 : 	kStream << m_bTechFromCityConquer;

	lea	ecx, DWORD PTR [esi+352]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3747 : 	kStream << m_bUniqueLuxuryRequiresNewArea;

	lea	edx, DWORD PTR [esi+353]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3748 : 	kStream << m_bRiverTradeRoad;

	lea	eax, DWORD PTR [esi+354]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3749 : 	kStream << m_bAngerFreeIntrusionOfCityStates;

	lea	ecx, DWORD PTR [esi+355]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 3750 : 
; 3751 : 	kStream << m_eCampGuardType;

	lea	edx, DWORD PTR [esi+356]
	push	edx
	push	edi
	call	??6@YAAAVFDataStream@@AAV0@ABW4UnitTypes@@@Z ; operator<<

; 3752 : 	kStream << m_eCombatBonusImprovement;

	lea	eax, DWORD PTR [esi+368]
	push	eax
	push	edi
	call	??6@YAAAVFDataStream@@AAV0@ABW4ImprovementTypes@@@Z ; operator<<
	add	esp, 16					; 00000010H

; 3753 : 
; 3754 : 	kStream << ArrayWrapper<int>(NUM_YIELD_TYPES, m_iExtraYieldThreshold);

	lea	ebx, DWORD PTR [esi+384]
	mov	ebp, 6
$LL260@Write:
	push	ebx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	add	ebx, 4
	sub	ebp, 1
	jne	SHORT $LL260@Write

; 3755 : 	kStream << ArrayWrapper<int>(NUM_YIELD_TYPES, m_iFreeCityYield);

	lea	ebx, DWORD PTR [esi+408]
	mov	ebp, 6
$LL273@Write:
	push	ebx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	add	ebx, 4
	sub	ebp, 1
	jne	SHORT $LL273@Write

; 3756 : 	kStream << ArrayWrapper<int>(NUM_YIELD_TYPES, m_iYieldChangeStrategicResources);

	lea	ebx, DWORD PTR [esi+432]
	mov	ebp, 6
	npad	5
$LL286@Write:
	push	ebx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	add	ebx, 4
	sub	ebp, 1
	jne	SHORT $LL286@Write

; 3757 : 	kStream << ArrayWrapper<int>(NUM_YIELD_TYPES, m_iYieldChangeLuxuryResources); // NQMP GJS - New Netherlands UA

	lea	ebx, DWORD PTR [esi+456]
	mov	ebp, 6
	npad	5
$LL299@Write:
	push	ebx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	add	ebx, 4
	sub	ebp, 1
	jne	SHORT $LL299@Write

; 3758 : 	kStream << ArrayWrapper<int>(NUM_YIELD_TYPES, m_iYieldRateModifier);

	lea	ebx, DWORD PTR [esi+552]
	mov	ebp, 6
	npad	5
$LL312@Write:
	push	ebx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	add	ebx, 4
	sub	ebp, 1
	jne	SHORT $LL312@Write

; 3759 : 	kStream << ArrayWrapper<int>(NUM_YIELD_TYPES, m_iYieldChangeNaturalWonder);

	lea	ebx, DWORD PTR [esi+480]
	mov	ebp, 6
	npad	5
$LL325@Write:
	push	ebx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	add	ebx, 4
	sub	ebp, 1
	jne	SHORT $LL325@Write

; 3760 : 	kStream << ArrayWrapper<int>(NUM_YIELD_TYPES, m_iYieldChangePerTradePartner);

	lea	ebx, DWORD PTR [esi+504]
	mov	ebp, 6
	npad	5
$LL338@Write:
	push	ebx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	add	ebx, 4
	sub	ebp, 1
	jne	SHORT $LL338@Write

; 3761 : 	kStream << ArrayWrapper<int>(NUM_YIELD_TYPES, m_iYieldChangeIncomingTradeRoute);

	lea	ebx, DWORD PTR [esi+528]
	mov	ebp, 6
	npad	5
$LL351@Write:
	push	ebx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	add	ebx, 4
	sub	ebp, 1
	jne	SHORT $LL351@Write

; 3762 : 	
; 3763 : 	CvInfosSerializationHelper::WriteHashedDataArray<TerrainTypes>(kStream, &m_iStrategicResourceQuantityModifier[0], GC.getNumTerrainInfos());

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumTerrainInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumTerrainInfos
	push	eax
	lea	ecx, DWORD PTR [esi+576]
	push	ecx
	push	edi
	call	??$WriteHashedDataArray@W4TerrainTypes@@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHI@Z ; CvInfosSerializationHelper::WriteHashedDataArray<enum TerrainTypes,int>

; 3764 : 	CvInfosSerializationHelper::WriteHashedDataArray<ResourceTypes>(kStream, m_aiResourceQuantityModifier);

	lea	edx, DWORD PTR [esi+612]
	push	edx
	push	edi
	call	??$WriteHashedDataArray@W4ResourceTypes@@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@ABV?$vector@HV?$allocator@H@std@@@std@@@Z ; CvInfosSerializationHelper::WriteHashedDataArray<enum ResourceTypes,int>

; 3765 : 
; 3766 : 	kStream << m_abNoTrain.size();

	mov	eax, DWORD PTR [esi+628]
	add	esp, 20					; 00000014H
	lea	ecx, DWORD PTR $T241852[esp+28]
	push	ecx
	mov	ecx, edi
	mov	DWORD PTR $T241852[esp+32], eax
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 3767 : 	for (uint ui = 0; ui < m_abNoTrain.size(); ui++)

	xor	ebx, ebx
	cmp	DWORD PTR [esi+628], ebx
	jbe	SHORT $LN16@Write
	npad	8
$LL563@Write:

; 3768 : 	{
; 3769 : 		kStream << m_abNoTrain[ui];

	mov	eax, DWORD PTR [esi+636]
	mov	ecx, ebp
	test	ebx, ebx
	je	SHORT $LN386@Write
	jge	SHORT $LN387@Write
	mov	edx, ebx
	neg	edx
	je	SHORT $LN387@Write
	or	ecx, -1
	sub	ecx, ebx
	shr	ecx, 5
	add	ecx, ecx
	add	ecx, ecx
	mov	edx, -4					; fffffffcH
	sub	edx, ecx
	add	eax, edx
	jmp	SHORT $LN564@Write
$LN387@Write:
	mov	ecx, ebx
	shr	ecx, 5
	lea	eax, DWORD PTR [eax+ecx*4]
$LN564@Write:
	mov	ecx, ebx
	and	ecx, 31					; 0000001fH
$LN386@Write:
	mov	edx, 1
	shl	edx, cl
	lea	ecx, DWORD PTR $T242612[esp+28]
	push	ecx
	mov	ecx, edi
	test	edx, DWORD PTR [eax]
	setne	al
	mov	BYTE PTR $T242612[esp+32], al
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write
	inc	ebx
	cmp	ebx, DWORD PTR [esi+628]
	jb	SHORT $LL563@Write
$LN16@Write:

; 3770 : 	}
; 3771 : 	
; 3772 : 	// EAP: No build
; 3773 : 	kStream << m_abNoBuild.size();

	mov	edx, DWORD PTR [esi+648]
	lea	eax, DWORD PTR $T241854[esp+28]
	push	eax
	mov	ecx, edi
	mov	DWORD PTR $T241854[esp+32], edx
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 3774 : 	for (uint ui = 0; ui < m_abNoBuild.size(); ui++)

	xor	ebx, ebx
	cmp	DWORD PTR [esi+648], ebx
	jbe	SHORT $LN13@Write

; 3775 : 	{
; 3776 : 		kStream << m_abNoBuild[ui];

	xor	ebp, ebp
	npad	1
$LL562@Write:
	mov	eax, DWORD PTR [esi+656]
	mov	ecx, ebp
	test	ebx, ebx
	je	SHORT $LN433@Write
	jge	SHORT $LN434@Write
	mov	ecx, ebx
	neg	ecx
	je	SHORT $LN434@Write
	or	edx, -1
	sub	edx, ebx
	shr	edx, 5
	add	edx, edx
	add	edx, edx
	mov	ecx, -4					; fffffffcH
	sub	ecx, edx
	add	eax, ecx
	jmp	SHORT $LN565@Write
$LN434@Write:
	mov	edx, ebx
	shr	edx, 5
	lea	eax, DWORD PTR [eax+edx*4]
$LN565@Write:
	mov	ecx, ebx
	and	ecx, 31					; 0000001fH
$LN433@Write:
	mov	edx, 1
	shl	edx, cl
	lea	ecx, DWORD PTR $T242784[esp+28]
	push	ecx
	mov	ecx, edi
	test	edx, DWORD PTR [eax]
	setne	al
	mov	BYTE PTR $T242784[esp+32], al
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write
	inc	ebx
	cmp	ebx, DWORD PTR [esi+648]
	jb	SHORT $LL562@Write
$LN13@Write:

; 3777 : 	}
; 3778 : 
; 3779 : 	kStream << m_aFreeTraitUnits.size();

	mov	edx, DWORD PTR [esi+672]
	lea	eax, DWORD PTR $T241856[esp+28]
	push	eax
	mov	ecx, edi
	mov	DWORD PTR $T241856[esp+32], edx
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 3780 : 	for(uint ui = 0; ui < m_aFreeTraitUnits.size(); ui++)

	xor	ebx, ebx
	cmp	DWORD PTR [esi+672], ebx
	jbe	SHORT $LN10@Write
	npad	3
$LL12@Write:
	mov	ecx, DWORD PTR [esi+668]
	lea	ebp, DWORD PTR [ebx*8]
	add	ecx, ebp

; 3781 : 	{
; 3782 : 		kStream << m_aFreeTraitUnits[ui].m_iFreeUnit;

	push	ecx
	push	edi
	call	??6@YAAAVFDataStream@@AAV0@ABW4UnitTypes@@@Z ; operator<<

; 3783 : 		kStream << m_aFreeTraitUnits[ui].m_ePrereqTech;

	mov	edx, DWORD PTR [esi+668]
	lea	eax, DWORD PTR [edx+ebp+4]
	push	eax
	push	edi
	call	??6@YAAAVFDataStream@@AAV0@ABW4TechTypes@@@Z ; operator<<
	inc	ebx
	add	esp, 16					; 00000010H
	cmp	ebx, DWORD PTR [esi+672]
	jb	SHORT $LL12@Write
$LN10@Write:

; 3784 : 	}
; 3785 : 
; 3786 : 	int iNumUnitCombatClassInfos = GC.getNumUnitCombatClassInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumUnitCombatClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumUnitCombatClassInfos

; 3787 : 	kStream << 	iNumUnitCombatClassInfos;

	lea	ecx, DWORD PTR _iNumUnitCombatClassInfos$[esp+32]
	push	ecx
	mov	ecx, edi
	mov	DWORD PTR _iNumUnitCombatClassInfos$[esp+36], eax
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3788 : 	for(int iI = 0; iI < iNumUnitCombatClassInfos; iI++)

	mov	eax, DWORD PTR _iNumUnitCombatClassInfos$[esp+32]
	xor	ebx, ebx
	pop	ebp
	test	eax, eax
	jle	SHORT $LN7@Write
	npad	8
$LL9@Write:
	mov	edx, DWORD PTR [esi+784]
	lea	eax, DWORD PTR [edx+ebx*4]

; 3789 : 	{
; 3790 : 		kStream << m_paiMovesChangeUnitCombat[iI];

	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	mov	eax, DWORD PTR _iNumUnitCombatClassInfos$[esp+28]
	inc	ebx
	cmp	ebx, eax
	jl	SHORT $LL9@Write
$LN7@Write:

; 3791 : 	}
; 3792 : 	for(int iI = 0; iI < iNumUnitCombatClassInfos; iI++)

	xor	ebx, ebx
	test	eax, eax
	jle	SHORT $LN4@Write
$LL6@Write:
	mov	ecx, DWORD PTR [esi+800]
	lea	edx, DWORD PTR [ecx+ebx*4]

; 3793 : 	{
; 3794 : 		kStream << m_paiMaintenanceModifierUnitCombat[iI];

	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	inc	ebx
	cmp	ebx, DWORD PTR _iNumUnitCombatClassInfos$[esp+28]
	jl	SHORT $LL6@Write
$LN4@Write:

; 3795 : 	}
; 3796 : 
; 3797 : 	kStream << m_ppaaiImprovementYieldChange;

	mov	ecx, DWORD PTR [esi+820]
	sub	ecx, DWORD PTR [esi+816]
	lea	ebx, DWORD PTR [esi+812]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR $T242870[esp+24]
	add	eax, edx
	push	ecx
	mov	ecx, edi
	mov	DWORD PTR $T242870[esp+28], eax
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write
	mov	eax, DWORD PTR [ebx+8]
	mov	ecx, DWORD PTR [ebx+4]
	push	ebx
	push	edi
	push	eax
	push	ecx
	lea	edx, DWORD PTR $T242868[esp+44]
	push	edx
	call	??$for_each@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@U?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@@std@@YA?AU?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@0@0U1@@Z ; std::for_each<std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >,SerializeFromSequenceContainer<Firaxis::Array<int,6> const ,std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > > const > >

; 3798 : 	kStream << m_ppaaiSpecialistYieldChange;

	mov	ecx, DWORD PTR [esi+836]
	sub	ecx, DWORD PTR [esi+832]
	lea	ebx, DWORD PTR [esi+828]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 2
	mov	eax, edx
	add	esp, 20					; 00000014H
	shr	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR $T242931[esp+24]
	add	eax, edx
	push	ecx
	mov	ecx, edi
	mov	DWORD PTR $T242931[esp+28], eax
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write
	mov	eax, DWORD PTR [ebx+8]
	mov	ecx, DWORD PTR [ebx+4]
	push	ebx
	push	edi
	push	eax
	push	ecx
	lea	edx, DWORD PTR $T242929[esp+44]
	push	edx
	call	??$for_each@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@U?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@@std@@YA?AU?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@0@0U1@@Z ; std::for_each<std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >,SerializeFromSequenceContainer<Firaxis::Array<int,6> const ,std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > > const > >

; 3799 : #ifdef LEK_TRAIT_SPECIALIST_YIELD_MAX_ONE
; 3800 : 	kStream << m_ppaaiAnySpecificSpecialistYieldChange;
; 3801 : #endif
; 3802 : 	kStream << m_ppaaiUnimprovedFeatureYieldChange;

	mov	ecx, DWORD PTR [esi+852]
	sub	ecx, DWORD PTR [esi+848]
	lea	ebx, DWORD PTR [esi+844]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 2
	mov	eax, edx
	add	esp, 20					; 00000014H
	shr	eax, 31					; 0000001fH
	lea	ecx, DWORD PTR $T242992[esp+24]
	add	eax, edx
	push	ecx
	mov	ecx, edi
	mov	DWORD PTR $T242992[esp+28], eax
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write
	mov	eax, DWORD PTR [ebx+8]
	mov	ecx, DWORD PTR [ebx+4]
	push	ebx
	push	edi
	push	eax
	push	ecx
	lea	edx, DWORD PTR $T242990[esp+44]
	push	edx
	call	??$for_each@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@U?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@@std@@YA?AU?$SerializeFromSequenceContainer@$$CBV?$Array@H$05@Firaxis@@$$CBV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@0@0U1@@Z ; std::for_each<std::_Vector_const_iterator<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >,SerializeFromSequenceContainer<Firaxis::Array<int,6> const ,std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > > const > >

; 3803 : 
; 3804 : 	kStream << (int)m_aUniqueLuxuryAreas.size();

	mov	eax, DWORD PTR [esi+732]
	sub	eax, DWORD PTR [esi+728]
	add	esp, 20					; 00000014H
	lea	ecx, DWORD PTR $T241857[esp+24]
	sar	eax, 2
	push	ecx
	mov	ecx, edi
	mov	DWORD PTR $T241857[esp+28], eax
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 3805 : 	for (unsigned int iI = 0; iI < m_aUniqueLuxuryAreas.size(); iI++)

	xor	ebx, ebx
	mov	edx, DWORD PTR [esi+732]
	sub	edx, DWORD PTR [esi+728]
	sar	edx, 2
	test	edx, edx
	jbe	SHORT $LN1@Write
	npad	6
$LL3@Write:
	mov	eax, DWORD PTR [esi+728]
	lea	ecx, DWORD PTR [eax+ebx*4]

; 3806 : 	{
; 3807 : 		kStream << m_aUniqueLuxuryAreas[iI];

	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	mov	edx, DWORD PTR [esi+732]
	sub	edx, DWORD PTR [esi+728]
	inc	ebx
	sar	edx, 2
	cmp	ebx, edx
	jb	SHORT $LL3@Write
$LN1@Write:
	pop	edi
	pop	esi
	pop	ebx

; 3808 : 	}
; 3809 : }

	add	esp, 16					; 00000010H
	ret	4
?Write@CvPlayerTraits@@QAEXAAVFDataStream@@@Z ENDP	; CvPlayerTraits::Write
_TEXT	ENDS
PUBLIC	??4?$vector@IV?$allocator@I@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::operator=
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??4?$vector@IV?$allocator@I@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??4?$vector@IV?$allocator@I@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::operator=, COMDAT
; _this$ = ecx

; 563  : 		{	// assign _Right

	push	esi
	push	edi

; 564  : 		if (this != &_Right)

	mov	edi, DWORD PTR __Right$[esp+4]
	mov	esi, ecx
	cmp	esi, edi
	je	$LN33@operator@17
	push	ebx

; 565  : 			{	// worth doing
; 566  : 
; 567  :  #if _HAS_ITERATOR_DEBUGGING
; 568  : 			this->_Orphan_all();
; 569  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 570  : 
; 571  : 			if (_Right.size() == 0)

	mov	ebx, DWORD PTR [edi+8]
	push	ebp
	mov	ebp, DWORD PTR [edi+4]
	mov	eax, ebx
	sub	eax, ebp
	sar	eax, 2
	test	eax, eax
	jne	SHORT $LN8@operator@17

; 572  : 				clear();	// new sequence empty, erase existing sequence

	call	?clear@?$vector@IV?$allocator@I@std@@@std@@QAEXXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::clear
	pop	ebp
	pop	ebx
	pop	edi

; 596  : 				}
; 597  : 			}
; 598  : 		return (*this);

	mov	eax, esi
	pop	esi

; 599  : 		}

	ret	4
$LN8@operator@17:

; 573  : 			else if (_Right.size() <= size())

	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi+8]
	sub	edx, ecx
	sar	edx, 2
	cmp	eax, edx
	ja	SHORT $LN6@operator@17

; 574  : 				{	// enough elements, copy new and destroy old
; 575  : 				pointer _Ptr = _STDEXT unchecked_copy(_Right._Myfirst, _Right._Mylast,
; 576  : 					_Myfirst);	// copy new

	push	ecx
	push	ebx
	push	ebp
	call	??$unchecked_copy@PAIPAI@stdext@@YAPAIPAI00@Z ; stdext::unchecked_copy<unsigned int *,unsigned int *>

; 577  : 				_Destroy(_Ptr, _Mylast);	// destroy old
; 578  : 				_Mylast = _Myfirst + _Right.size();

	mov	eax, DWORD PTR [edi+8]
	sub	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [esi+4]
	add	esp, 12					; 0000000cH
	pop	ebp
	sar	eax, 2
	pop	ebx
	lea	edx, DWORD PTR [ecx+eax*4]
	pop	edi
	mov	DWORD PTR [esi+8], edx

; 596  : 				}
; 597  : 			}
; 598  : 		return (*this);

	mov	eax, esi
	pop	esi

; 599  : 		}

	ret	4
$LN6@operator@17:

; 579  : 				}
; 580  : 			else if (_Right.size() <= capacity())

	test	ecx, ecx
	jne	SHORT $LN24@operator@17
	xor	ebx, ebx
	jmp	SHORT $LN25@operator@17
$LN24@operator@17:
	mov	ebx, DWORD PTR [esi+12]
	sub	ebx, ecx
	sar	ebx, 2
$LN25@operator@17:
	cmp	eax, ebx
	ja	SHORT $LN4@operator@17

; 581  : 				{	// enough room, copy and construct new
; 582  : 				pointer _Ptr = _Right._Myfirst + size();

	mov	eax, ebp

; 583  : 				_STDEXT unchecked_copy(_Right._Myfirst, _Ptr, _Myfirst);

	push	ecx
	lea	ebx, DWORD PTR [eax+edx*4]
	push	ebx
	push	eax
	call	??$unchecked_copy@PAIPAI@stdext@@YAPAIPAI00@Z ; stdext::unchecked_copy<unsigned int *,unsigned int *>

; 584  : 				_Mylast = _Ucopy(_Ptr, _Right._Mylast, _Mylast);

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR [edi+8]
	add	esp, 12					; 0000000cH
	push	eax
	push	ecx
	push	ebx
	mov	ecx, esi
	call	??$_Ucopy@PAI@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAI00@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Ucopy<unsigned int *>
	pop	ebp
	pop	ebx
	mov	DWORD PTR [esi+8], eax
	pop	edi

; 596  : 				}
; 597  : 			}
; 598  : 		return (*this);

	mov	eax, esi
	pop	esi

; 599  : 		}

	ret	4
$LN4@operator@17:

; 585  : 				}
; 586  : 			else
; 587  : 				{	// not enough room, allocate new array and construct new
; 588  : 				if (_Myfirst != 0)

	test	ecx, ecx
	je	SHORT $LN28@operator@17

; 589  : 					{	// discard old array
; 590  : 					_Destroy(_Myfirst, _Mylast);
; 591  : 					this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN28@operator@17:

; 592  : 					}
; 593  : 				if (_Buy(_Right.size()))

	mov	eax, DWORD PTR [edi+8]
	sub	eax, DWORD PTR [edi+4]
	mov	ecx, esi
	sar	eax, 2
	push	eax
	call	?_Buy@?$vector@IV?$allocator@I@std@@@std@@IAE_NI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Buy
	test	al, al
	je	SHORT $LN32@operator@17

; 594  : 					_Mylast = _Ucopy(_Right._Myfirst, _Right._Mylast,
; 595  : 						_Myfirst);

	mov	edx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [edi+8]
	mov	ecx, DWORD PTR [edi+4]
	push	edx
	push	eax
	push	ecx
	mov	ecx, esi
	call	??$_Ucopy@PAI@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAI00@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Ucopy<unsigned int *>
	mov	DWORD PTR [esi+8], eax
$LN32@operator@17:
	pop	ebp
	pop	ebx
$LN33@operator@17:
	pop	edi

; 596  : 				}
; 597  : 			}
; 598  : 		return (*this);

	mov	eax, esi
	pop	esi

; 599  : 		}

	ret	4
??4?$vector@IV?$allocator@I@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::operator=
_TEXT	ENDS
PUBLIC	?insert@?$multimap@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAE?AViterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABU?$pair@$$CBHH@2@@Z ; std::multimap<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > >::insert
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\map
;	COMDAT ?insert@?$multimap@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAE?AViterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABU?$pair@$$CBHH@2@@Z
_TEXT	SEGMENT
$T243105 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
?insert@?$multimap@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAE?AViterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABU?$pair@$$CBHH@2@@Z PROC ; std::multimap<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > >::insert, COMDAT
; _this$ = ecx

; 271  : 		return (_Mybase::insert(_Val).first);

	mov	eax, DWORD PTR __Val$[esp-4]
	sub	esp, 8
	push	eax
	lea	edx, DWORD PTR $T243105[esp+12]
	push	edx
	call	?insert@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@_N@2@ABU?$pair@$$CBHH@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::insert
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	DWORD PTR [eax], ecx

; 272  : 		}

	add	esp, 8
	ret	8
?insert@?$multimap@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAE?AViterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@ABU?$pair@$$CBHH@2@@Z ENDP ; std::multimap<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > >::insert
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHH@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHH@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHH@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >, COMDAT
; _this$ = ecx

; 509  : 		{	// construct empty tree

	push	esi
	mov	esi, ecx

; 510  : 		_Init();

	call	?_Buynode@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Buynode
	mov	DWORD PTR [esi+4], eax
	mov	BYTE PTR [eax+21], 1
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], eax
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+8], eax
	mov	DWORD PTR [esi+8], 0

; 511  : 		}

	mov	eax, esi
	pop	esi
	ret	8
??0?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHH@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >
_TEXT	ENDS
PUBLIC	??4?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEAAV01@ABV01@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
$T243277 = 8						; size = 4
__Right$ = 8						; size = 4
??4?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::operator=, COMDAT
; _this$ = ecx

; 544  : 		{	// replace contents from _Right

	push	esi
	push	edi

; 545  : 		if (this != &_Right)

	mov	edi, DWORD PTR __Right$[esp+4]
	mov	esi, ecx
	cmp	esi, edi
	je	SHORT $LN20@operator@18

; 546  : 			{	// worth doing
; 547  : 			erase(begin(), end());

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax]
	push	eax
	push	ecx
	lea	eax, DWORD PTR $T243277[esp+12]
	push	eax
	mov	ecx, esi
	call	?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::erase

; 548  : 			this->comp = _Right.comp;
; 549  : 			_Copy(_Right);

	push	edi
	mov	ecx, esi
	call	?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXABV12@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Copy
$LN20@operator@18:
	pop	edi

; 550  : 			}
; 551  : 		return (*this);

	mov	eax, esi
	pop	esi

; 552  : 		}

	ret	4
??4?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::operator=
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Tidy
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T243331 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Tidy, COMDAT
; _this$ = ecx

; 1420 : 		{	// free all storage

	push	ecx
	push	esi
	mov	esi, ecx

; 1421 : 		erase(begin(), end());

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax]
	push	eax
	push	ecx
	lea	eax, DWORD PTR $T243331[esp+16]
	push	eax
	mov	ecx, esi
	call	?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::erase

; 1422 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1423 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1424 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1425 : 		this->_Alnod.deallocate(_Myhead, 1);

	mov	ecx, DWORD PTR [esi+4]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1426 : 		_Myhead = 0, _Mysize = 0;

	xor	eax, eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	pop	esi

; 1427 : 		}

	pop	ecx
	ret	0
?_Tidy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE?AV?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@V?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@0@Z ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::erase
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?erase@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE?AV?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@V?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE?AV?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@V?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@0@Z PROC ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::erase, COMDAT
; _this$ = ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);
; 1030 : 		iterator _Last = _Make_iter(_Last_arg);
; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	edx, DWORD PTR __Last_arg$[esp-4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	push	esi
	mov	esi, DWORD PTR __First_arg$[esp]
	mov	DWORD PTR [eax], esi
	cmp	esi, edx
	je	SHORT $LN1@erase@6
	push	edi

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	edi, DWORD PTR [ecx+8]
	cmp	edx, edi
	je	SHORT $LN26@erase@6
	push	ebx
	npad	4
$LL28@erase@6:
	mov	ebx, DWORD PTR [edx]
	mov	DWORD PTR [esi], ebx
	mov	ebx, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+4], ebx
	add	edx, 8
	add	esi, 8
	cmp	edx, edi
	jne	SHORT $LL28@erase@6
	pop	ebx
$LN26@erase@6:

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);
; 1049 : 			_Mylast = _Ptr;

	mov	DWORD PTR [ecx+8], esi
	pop	edi
$LN1@erase@6:
	pop	esi

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);
; 1055 : #endif
; 1056 : 		}

	ret	12					; 0000000cH
?erase@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE?AV?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@V?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@0@Z ENDP ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXXZ ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Tidy
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXXZ PROC ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@Tidy@4

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy@4:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1135 : 		}

	ret	0
?_Tidy@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXXZ ENDP ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@V?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@0@Z ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@V?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@V?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@0@Z PROC ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::erase, COMDAT
; _this$ = ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);
; 1030 : 		iterator _Last = _Make_iter(_Last_arg);
; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	edx, DWORD PTR __Last_arg$[esp-4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	push	esi
	mov	esi, DWORD PTR __First_arg$[esp]
	mov	DWORD PTR [eax], esi
	cmp	esi, edx
	je	SHORT $LN1@erase@7
	push	edi

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	edi, DWORD PTR [ecx+8]
	cmp	edx, edi
	je	SHORT $LN26@erase@7
	push	ebx
	npad	4
$LL28@erase@7:
	mov	ebx, DWORD PTR [edx]
	mov	DWORD PTR [esi], ebx
	add	edx, 4
	add	esi, 4
	cmp	edx, edi
	jne	SHORT $LL28@erase@7
	pop	ebx
$LN26@erase@7:

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);
; 1049 : 			_Mylast = _Ptr;

	mov	DWORD PTR [ecx+8], esi
	pop	edi
$LN1@erase@7:
	pop	esi

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);
; 1055 : #endif
; 1056 : 		}

	ret	12					; 0000000cH
?erase@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@V?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@0@Z ENDP ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::erase
_TEXT	ENDS
PUBLIC	?erase@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE?AV?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@V?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@0@Z ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE?AV?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@V?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE?AV?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@V?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@0@Z PROC ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::erase, COMDAT
; _this$ = ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);
; 1030 : 		iterator _Last = _Make_iter(_Last_arg);
; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	edx, DWORD PTR __Last_arg$[esp-4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	push	esi
	mov	esi, DWORD PTR __First_arg$[esp]
	mov	DWORD PTR [eax], esi
	cmp	esi, edx
	je	SHORT $LN1@erase@8
	push	edi

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	edi, DWORD PTR [ecx+8]
	cmp	edx, edi
	je	SHORT $LN26@erase@8
	push	ebx
	npad	4
$LL28@erase@8:
	mov	ebx, DWORD PTR [edx]
	mov	DWORD PTR [esi], ebx
	mov	ebx, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+4], ebx
	add	edx, 8
	add	esi, 8
	cmp	edx, edi
	jne	SHORT $LL28@erase@8
	pop	ebx
$LN26@erase@8:

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);
; 1049 : 			_Mylast = _Ptr;

	mov	DWORD PTR [ecx+8], esi
	pop	edi
$LN1@erase@8:
	pop	esi

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);
; 1055 : #endif
; 1056 : 		}

	ret	12					; 0000000cH
?erase@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE?AV?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@V?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@0@Z ENDP ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXXZ ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Tidy
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXXZ PROC ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@Tidy@5

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy@5:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1135 : 		}

	ret	0
?_Tidy@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXXZ ENDP ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEPAUMayaBonusChoice@@PAU3@IABU3@@Z ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Ufill
; Function compile flags: /Ogtpy
;	COMDAT ?_Ufill@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEPAUMayaBonusChoice@@PAU3@IABU3@@Z
_TEXT	SEGMENT
$T243674 = -4						; size = 1
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Cat$243677 = 16					; size = 1
__Val$ = 16						; size = 4
?_Ufill@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEPAUMayaBonusChoice@@PAU3@IABU3@@Z PROC ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Ufill, COMDAT
; _this$ = ecx

; 1253 : 		{	// copy initializing _Count * _Val, using allocator

	push	ecx

; 1254 : 		_STDEXT unchecked_uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

	mov	edx, DWORD PTR __Cat$243677[esp]
	push	esi
	mov	esi, DWORD PTR __Count$[esp+4]
	push	edi
	mov	edi, DWORD PTR __Ptr$[esp+8]
	mov	BYTE PTR $T243674[esp+12], 0
	mov	eax, DWORD PTR $T243674[esp+12]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+12]
	push	edx
	push	ecx
	push	eax
	push	esi
	push	edi
	call	??$_Uninit_fill_n@PAUMayaBonusChoice@@IU1@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAXPAUMayaBonusChoice@@IABU1@AAV?$allocator@UMayaBonusChoice@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<MayaBonusChoice *,unsigned int,MayaBonusChoice,std::allocator<MayaBonusChoice> >
	add	esp, 24					; 00000018H

; 1255 : 		return (_Ptr + _Count);

	lea	eax, DWORD PTR [edi+esi*8]
	pop	edi
	pop	esi

; 1256 : 		}

	pop	ecx
	ret	12					; 0000000cH
?_Ufill@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEPAUMayaBonusChoice@@PAU3@IABU3@@Z ENDP ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Ufill
_TEXT	ENDS
PUBLIC	??$_Umove@PAUFreeResourceXCities@@@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEPAUFreeResourceXCities@@PAU2@00@Z ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Umove<FreeResourceXCities *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Umove@PAUFreeResourceXCities@@@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEPAUFreeResourceXCities@@PAU2@00@Z
_TEXT	SEGMENT
$T243733 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$243720 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Umove@PAUFreeResourceXCities@@@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEPAUFreeResourceXCities@@PAU2@00@Z PROC ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Umove<FreeResourceXCities *>, COMDAT
; _this$ = ecx

; 1145 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1146 : 		{	// move initializing [_First, _Last), using allocator
; 1147 : 		return (_STDEXT _Unchecked_uninitialized_move(_First, _Last,
; 1148 : 			_Ptr, this->_Alval));

	mov	edx, DWORD PTR __Cat$243720[esp]
	mov	BYTE PTR $T243733[esp+4], 0
	mov	eax, DWORD PTR $T243733[esp+4]
	push	eax
	mov	eax, DWORD PTR __Ptr$[esp+4]
	push	edx
	mov	edx, DWORD PTR __First$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAUFreeResourceXCities@@PAU1@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAPAUFreeResourceXCities@@PAU1@00AAV?$allocator@UFreeResourceXCities@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<FreeResourceXCities *,FreeResourceXCities *,std::allocator<FreeResourceXCities> >

; 1149 : 		}

	add	esp, 28					; 0000001cH
	ret	12					; 0000000cH
??$_Umove@PAUFreeResourceXCities@@@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEPAUFreeResourceXCities@@PAU2@00@Z ENDP ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Umove<FreeResourceXCities *>
_TEXT	ENDS
PUBLIC	??$_Unchecked_uninitialized_move@PAW4TraitTypes@@PAW41@V?$allocator@W4TraitTypes@@@std@@@stdext@@YAPAW4TraitTypes@@PAW41@00AAV?$allocator@W4TraitTypes@@@std@@@Z ; stdext::_Unchecked_uninitialized_move<enum TraitTypes *,enum TraitTypes *,std::allocator<enum TraitTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Unchecked_uninitialized_move@PAW4TraitTypes@@PAW41@V?$allocator@W4TraitTypes@@@std@@@stdext@@YAPAW4TraitTypes@@PAW41@00AAV?$allocator@W4TraitTypes@@@std@@@Z
_TEXT	SEGMENT
$T243763 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$243767 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Unchecked_uninitialized_move@PAW4TraitTypes@@PAW41@V?$allocator@W4TraitTypes@@@std@@@stdext@@YAPAW4TraitTypes@@PAW41@00AAV?$allocator@W4TraitTypes@@@std@@@Z PROC ; stdext::_Unchecked_uninitialized_move<enum TraitTypes *,enum TraitTypes *,std::allocator<enum TraitTypes> >, COMDAT

; 861  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 862  : 	return (_STD _Uninit_move(_CHECKED_BASE(_First),
; 863  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 864  : 		_STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$243767[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T243763[esp+4], 0
	mov	eax, DWORD PTR $T243763[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAW4TraitTypes@@PAW41@V?$allocator@W4TraitTypes@@@std@@@std@@YAPAW4TraitTypes@@PAW41@00AAV?$allocator@W4TraitTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<enum TraitTypes *,enum TraitTypes *,std::allocator<enum TraitTypes> >

; 865  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Unchecked_uninitialized_move@PAW4TraitTypes@@PAW41@V?$allocator@W4TraitTypes@@@std@@@stdext@@YAPAW4TraitTypes@@PAW41@00AAV?$allocator@W4TraitTypes@@@std@@@Z ENDP ; stdext::_Unchecked_uninitialized_move<enum TraitTypes *,enum TraitTypes *,std::allocator<enum TraitTypes> >
_TEXT	ENDS
PUBLIC	??$_Unchecked_uninitialized_move@PAUMayaBonusChoice@@PAU1@V?$allocator@UMayaBonusChoice@@@std@@@stdext@@YAPAUMayaBonusChoice@@PAU1@00AAV?$allocator@UMayaBonusChoice@@@std@@@Z ; stdext::_Unchecked_uninitialized_move<MayaBonusChoice *,MayaBonusChoice *,std::allocator<MayaBonusChoice> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unchecked_uninitialized_move@PAUMayaBonusChoice@@PAU1@V?$allocator@UMayaBonusChoice@@@std@@@stdext@@YAPAUMayaBonusChoice@@PAU1@00AAV?$allocator@UMayaBonusChoice@@@std@@@Z
_TEXT	SEGMENT
$T243800 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$243804 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Unchecked_uninitialized_move@PAUMayaBonusChoice@@PAU1@V?$allocator@UMayaBonusChoice@@@std@@@stdext@@YAPAUMayaBonusChoice@@PAU1@00AAV?$allocator@UMayaBonusChoice@@@std@@@Z PROC ; stdext::_Unchecked_uninitialized_move<MayaBonusChoice *,MayaBonusChoice *,std::allocator<MayaBonusChoice> >, COMDAT

; 861  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 862  : 	return (_STD _Uninit_move(_CHECKED_BASE(_First),
; 863  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 864  : 		_STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$243804[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T243800[esp+4], 0
	mov	eax, DWORD PTR $T243800[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAUMayaBonusChoice@@PAU1@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAPAUMayaBonusChoice@@PAU1@00AAV?$allocator@UMayaBonusChoice@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<MayaBonusChoice *,MayaBonusChoice *,std::allocator<MayaBonusChoice> >

; 865  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Unchecked_uninitialized_move@PAUMayaBonusChoice@@PAU1@V?$allocator@UMayaBonusChoice@@@std@@@stdext@@YAPAUMayaBonusChoice@@PAU1@00AAV?$allocator@UMayaBonusChoice@@@std@@@Z ENDP ; stdext::_Unchecked_uninitialized_move<MayaBonusChoice *,MayaBonusChoice *,std::allocator<MayaBonusChoice> >
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXXZ ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Tidy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXXZ PROC ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@Tidy@6

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy@6:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1135 : 		}

	ret	0
?_Tidy@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXXZ ENDP ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Tidy
_TEXT	ENDS
PUBLIC	??0?$vector@_NV?$allocator@_N@std@@@std@@QAE@XZ	; std::vector<bool,std::allocator<bool> >::vector<bool,std::allocator<bool> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$vector@_NV?$allocator@_N@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@_NV?$allocator@_N@std@@@std@@QAE@XZ PROC	; std::vector<bool,std::allocator<bool> >::vector<bool,std::allocator<bool> >, COMDAT
; _this$ = ecx

; 1903 : 		{	// construct empty vector

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx

; 1904 : 		}

	ret	0
??0?$vector@_NV?$allocator@_N@std@@@std@@QAE@XZ ENDP	; std::vector<bool,std::allocator<bool> >::vector<bool,std::allocator<bool> >
_TEXT	ENDS
PUBLIC	??1?$vector@_NV?$allocator@_N@std@@@std@@QAE@XZ	; std::vector<bool,std::allocator<bool> >::~vector<bool,std::allocator<bool> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$vector@_NV?$allocator@_N@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@_NV?$allocator@_N@std@@@std@@QAE@XZ PROC	; std::vector<bool,std::allocator<bool> >::~vector<bool,std::allocator<bool> >, COMDAT
; _this$ = ecx

; 1957 : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 1958 : 		_Mysize = 0;

	mov	DWORD PTR [esi], 0

; 1959 : 		}

	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN9@vector@4
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN9@vector@4:
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	mov	DWORD PTR [esi+16], 0
	pop	esi
	ret	0
??1?$vector@_NV?$allocator@_N@std@@@std@@QAE@XZ ENDP	; std::vector<bool,std::allocator<bool> >::~vector<bool,std::allocator<bool> >
_TEXT	ENDS
PUBLIC	?erase@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@V?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@0@Z ; std::vector<bool,std::allocator<bool> >::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@V?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T244442 = -28						; size = 1
__First$ = -24						; size = 8
$T244000 = -16						; size = 8
__Next$ = -8						; size = 8
__Last$ = -8						; size = 8
__Cat$244446 = 8					; size = 1
$T244444 = 8						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Tmp$244566 = 12					; size = 8
__First_arg$ = 12					; size = 8
__Last_arg$ = 20					; size = 8
?erase@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@V?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@0@Z PROC ; std::vector<bool,std::allocator<bool> >::erase, COMDAT
; _this$ = ecx

; 2221 : 		{	// erase [_First, _Last)

	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx

; 2222 : 		iterator _First = _Make_iter(_First_arg);

	mov	ebp, DWORD PTR [edi]
	mov	ebx, DWORD PTR [edi+8]
	xor	esi, esi
	mov	DWORD PTR __First$[esp+44], ebx
	mov	DWORD PTR __First$[esp+48], esi
	cmp	ebp, esi
	jbe	SHORT $LN36@erase@9
	mov	eax, DWORD PTR __First_arg$[esp+40]
	sub	eax, ebx
	sar	eax, 2
	shl	eax, 5
	add	eax, DWORD PTR __First_arg$[esp+44]
	lea	ecx, DWORD PTR __First$[esp+44]
	push	eax
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
$LN36@erase@9:

; 2223 : 		iterator _Last = _Make_iter(_Last_arg);

	mov	DWORD PTR __Last$[esp+44], ebx
	mov	DWORD PTR __Last$[esp+48], esi
	cmp	ebp, esi
	jbe	SHORT $LN71@erase@9
	mov	ecx, DWORD PTR __Last_arg$[esp+40]
	sub	ecx, ebx
	sar	ecx, 2
	shl	ecx, 5
	add	ecx, DWORD PTR __Last_arg$[esp+44]
	push	ecx
	lea	ecx, DWORD PTR __Last$[esp+48]
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
$LN71@erase@9:

; 2224 : 		size_type _Off = _First - begin();

	mov	esi, DWORD PTR __First$[esp+44]
	sub	esi, ebx
	sar	esi, 2
	shl	esi, 5
	add	esi, DWORD PTR __First$[esp+48]

; 2225 : 
; 2226 :  #if _HAS_ITERATOR_DEBUGGING
; 2227 : 		if (_Last < _First || end() < _Last)
; 2228 : 			_DEBUG_ERROR("vector<bool> erase iterator outside range");
; 2229 : 		iterator _Next = std::copy(_Last, end(), _First);
; 2230 : 		size_type _Newsize = _Next - begin();
; 2231 : 		_Orphan_range(_Newsize, _Mysize);
; 2232 : 		_Trim(_Newsize);
; 2233 : 
; 2234 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 2235 : 		iterator _Next = std::copy(_Last, end(), _First);

	mov	DWORD PTR $T244000[esp+44], ebx
	mov	DWORD PTR $T244000[esp+48], 0
	test	ebp, ebp
	jbe	SHORT $LN108@erase@9
	push	ebp
	lea	ecx, DWORD PTR $T244000[esp+48]
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
$LN108@erase@9:
	mov	eax, DWORD PTR __Cat$244446[esp+40]
	mov	ecx, DWORD PTR $T244444[esp+40]
	mov	BYTE PTR $T244442[esp+44], 0
	mov	edx, DWORD PTR $T244442[esp+44]
	push	edx
	mov	edx, DWORD PTR __First$[esp+52]
	push	eax
	mov	eax, DWORD PTR __First$[esp+52]
	push	ecx
	mov	ecx, DWORD PTR $T244000[esp+60]
	push	edx
	mov	edx, DWORD PTR $T244000[esp+60]
	push	eax
	mov	eax, DWORD PTR __Last$[esp+68]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+68]
	push	edx
	push	eax
	push	ecx
	lea	edx, DWORD PTR __Next$[esp+80]
	push	edx
	call	??$_Copy_opt@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::random_access_iterator_tag>

; 2236 : 		_Trim(_Next - begin());

	mov	eax, DWORD PTR [edi+8]
	mov	ecx, DWORD PTR __Next$[esp+84]
	sub	ecx, eax
	sar	ecx, 2
	shl	ecx, 5
	add	ecx, DWORD PTR __Next$[esp+88]
	add	esp, 40					; 00000028H
	push	ecx
	mov	ecx, edi
	call	?_Trim@?$vector@_NV?$allocator@_N@std@@@std@@IAEXI@Z ; std::vector<bool,std::allocator<bool> >::_Trim

; 2237 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 2238 : 
; 2239 : 		return (begin() + _Off);

	mov	edi, DWORD PTR [edi+8]
	xor	eax, eax
	push	esi
	lea	ecx, DWORD PTR __Tmp$244566[esp+44]
	mov	DWORD PTR __Tmp$244566[esp+44], edi
	mov	DWORD PTR __Tmp$244566[esp+48], eax
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+40]
	mov	edx, DWORD PTR __Tmp$244566[esp+40]
	mov	ecx, DWORD PTR __Tmp$244566[esp+44]
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx
	pop	ebx

; 2240 : 		}

	add	esp, 28					; 0000001cH
	ret	20					; 00000014H
?erase@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@V?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@0@Z ENDP ; std::vector<bool,std::allocator<bool> >::erase
_TEXT	ENDS
PUBLIC	?erase@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@0@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@0@Z
_TEXT	SEGMENT
$T244625 = 8						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Cat$244629 = 12					; size = 1
$T244627 = 12						; size = 1
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@0@Z PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::erase, COMDAT
; _this$ = ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);

	mov	eax, DWORD PTR __First_arg$[esp-4]

; 1030 : 		iterator _Last = _Make_iter(_Last_arg);
; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	edx, DWORD PTR __Last_arg$[esp-4]
	push	esi
	push	edi
	mov	edi, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [edi], eax
	cmp	eax, edx
	je	SHORT $LN26@erase@10

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	ecx, DWORD PTR [esi+8]
	push	ebx
	mov	BYTE PTR $T244625[esp+8], 0
	mov	ebx, DWORD PTR $T244625[esp+8]
	push	ebx
	mov	ebx, DWORD PTR __Cat$244629[esp+12]
	push	ebx
	mov	ebx, DWORD PTR $T244627[esp+16]
	push	ebx
	push	eax
	push	ecx
	push	edx
	call	??$_Copy_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::random_access_iterator_tag>
	add	esp, 24					; 00000018H

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);
; 1049 : 			_Mylast = _Ptr;

	mov	DWORD PTR [esi+8], eax
	pop	ebx
$LN26@erase@10:

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);

	mov	eax, edi
	pop	edi
	pop	esi

; 1055 : #endif
; 1056 : 		}

	ret	12					; 0000000cH
?erase@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@0@Z ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXXZ ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Tidy
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXXZ PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@Tidy@7

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy@7:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1135 : 		}

	ret	0
?_Tidy@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXXZ ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Tidy
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAHIABH@Z ; std::vector<int,std::allocator<int> >::_Ufill
; Function compile flags: /Ogtpy
;	COMDAT ?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAHIABH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAHIABH@Z PROC ; std::vector<int,std::allocator<int> >::_Ufill, COMDAT
; _this$ = ecx

; 1253 : 		{	// copy initializing _Count * _Val, using allocator

	push	esi

; 1254 : 		_STDEXT unchecked_uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

	mov	esi, DWORD PTR __Count$[esp]
	push	edi
	mov	edi, DWORD PTR __Ptr$[esp+4]
	mov	eax, esi
	mov	ecx, edi
	test	esi, esi
	jbe	SHORT $LN22@Ufill
	mov	edx, DWORD PTR __Val$[esp+4]
	push	ebx
$LL17@Ufill:
	mov	ebx, DWORD PTR [edx]
	mov	DWORD PTR [ecx], ebx
	dec	eax
	add	ecx, 4
	test	eax, eax
	ja	SHORT $LL17@Ufill
	pop	ebx
$LN22@Ufill:

; 1255 : 		return (_Ptr + _Count);

	lea	eax, DWORD PTR [edi+esi*4]
	pop	edi
	pop	esi

; 1256 : 		}

	ret	12					; 0000000cH
?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAHIABH@Z ENDP ; std::vector<int,std::allocator<int> >::_Ufill
_TEXT	ENDS
PUBLIC	?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z ; std::vector<int,std::allocator<int> >::_Insert_n
; Function compile flags: /Ogtpy
;	COMDAT ?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z
_TEXT	SEGMENT
__Capacity$ = -4					; size = 4
__Where$ = 8						; size = 4
__Count$ = 12						; size = 4
__Tmp$215406 = 16					; size = 4
__Tmp$215396 = 16					; size = 4
__Val$ = 16						; size = 4
?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z PROC ; std::vector<int,std::allocator<int> >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ecx
	push	esi
	mov	esi, ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	edx, DWORD PTR [esi+4]
	push	edi
	test	edx, edx
	jne	SHORT $LN29@Insert_n
	xor	ecx, ecx
	jmp	SHORT $LN30@Insert_n
$LN29@Insert_n:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, edx
	sar	eax, 2
	mov	ecx, eax
$LN30@Insert_n:

; 1162 : 
; 1163 : 		if (_Count == 0)

	mov	edi, DWORD PTR __Count$[esp+8]
	test	edi, edi
	je	$LN1@Insert_n
	push	ebx

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	ebx, DWORD PTR [esi+8]
	mov	eax, ebx
	sub	eax, edx
	sar	eax, 2
	mov	edx, 1073741823				; 3fffffffH
	sub	edx, eax
	cmp	edx, edi
	jae	SHORT $LN12@Insert_n

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ ; std::vector<int,std::allocator<int> >::_Xlen
$LN64@Insert_n:
$LN12@Insert_n:

; 1167 : 		else if (_Capacity < size() + _Count)

	lea	edx, DWORD PTR [eax+edi]
	push	ebp
	cmp	ecx, edx
	jae	$LN10@Insert_n

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	eax, ecx
	shr	eax, 1
	mov	ebx, 1073741823				; 3fffffffH
	sub	ebx, eax
	cmp	ebx, ecx
	jae	SHORT $LN17@Insert_n
	mov	DWORD PTR __Capacity$[esp+20], 0
	mov	ecx, DWORD PTR __Capacity$[esp+20]
	jmp	SHORT $LN18@Insert_n
$LN17@Insert_n:
	add	ecx, eax
	mov	DWORD PTR __Capacity$[esp+20], ecx
$LN18@Insert_n:

; 1171 : 			if (_Capacity < size() + _Count)

	cmp	ecx, edx
	jae	SHORT $LN9@Insert_n

; 1172 : 				_Capacity = size() + _Count;

	mov	DWORD PTR __Capacity$[esp+20], edx
	mov	ecx, edx
$LN9@Insert_n:

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

	push	0
	push	ecx
	call	??$_Allocate@H@std@@YAPAHIPAH@Z		; std::_Allocate<int>

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	ebx, DWORD PTR __Where$[esp+24]
	sub	ebx, DWORD PTR [esi+4]
	add	esp, 8
	mov	ebp, eax

; 1175 : 			int _Ncopied = 0;
; 1176 : 
; 1177 : 			_TRY_BEGIN
; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	eax, DWORD PTR __Val$[esp+16]
	push	eax
	sar	ebx, 2
	push	edi
	lea	ecx, DWORD PTR [ebp+ebx*4]
	push	ecx
	mov	ecx, esi
	call	?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAHIABH@Z ; std::vector<int,std::allocator<int> >::_Ufill

; 1179 : 			++_Ncopied;
; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	edx, DWORD PTR __Where$[esp+16]
	mov	eax, DWORD PTR [esi+4]
	push	ebp
	push	edx
	push	eax
	mov	ecx, esi
	call	??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ; std::vector<int,std::allocator<int> >::_Umove<int *>

; 1182 : 			++_Ncopied;
; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	edx, DWORD PTR [esi+8]
	mov	eax, DWORD PTR __Where$[esp+16]
	add	ebx, edi
	lea	ecx, DWORD PTR [ebp+ebx*4]
	push	ecx
	push	edx
	push	eax
	mov	ecx, esi
	call	??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ; std::vector<int,std::allocator<int> >::_Umove<int *>

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)
; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);
; 1188 : 			if (0 < _Ncopied)
; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);
; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);
; 1191 : 			_RERAISE;
; 1192 : 			_CATCH_END
; 1193 : 
; 1194 : 			_Count += size();

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, eax
	sar	ecx, 2
	add	edi, ecx

; 1195 : 			if (_Myfirst != 0)

	test	eax, eax
	je	SHORT $LN57@Insert_n

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);
; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN57@Insert_n:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	edx, DWORD PTR __Capacity$[esp+20]

; 1206 : 			_Mylast = _Newvec + _Count;

	lea	ecx, DWORD PTR [ebp+edi*4]
	lea	eax, DWORD PTR [ebp+edx*4]

; 1207 : 			_Myfirst = _Newvec;

	mov	DWORD PTR [esi+4], ebp
	pop	ebp
	pop	ebx
	pop	edi
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+8], ecx
	pop	esi

; 1249 : 			}
; 1250 : 		}

	pop	ecx
	ret	12					; 0000000cH
$LN10@Insert_n:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	eax, DWORD PTR __Where$[esp+16]

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[esp+16]
	mov	edx, ebx
	sub	edx, eax
	sar	edx, 2
	cmp	edx, edi
	mov	edx, DWORD PTR [ecx]

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	lea	ebp, DWORD PTR [edi*4]
	mov	DWORD PTR __Tmp$215396[esp+16], edx
	jae	SHORT $LN3@Insert_n
	lea	ecx, DWORD PTR [eax+ebp]
	push	ecx
	push	ebx
	push	eax
	mov	ecx, esi
	call	??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ; std::vector<int,std::allocator<int> >::_Umove<int *>

; 1215 : 
; 1216 : 			_TRY_BEGIN
; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, eax
	sub	ecx, DWORD PTR __Where$[esp+16]
	lea	edx, DWORD PTR __Tmp$215396[esp+16]
	sar	ecx, 2
	push	edx
	sub	edi, ecx
	push	edi
	push	eax
	mov	ecx, esi
	call	?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAHIABH@Z ; std::vector<int,std::allocator<int> >::_Ufill

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 1221 : 			_RERAISE;
; 1222 : 			_CATCH_END
; 1223 : 
; 1224 : 			_Mylast += _Count;

	add	DWORD PTR [esi+8], ebp
	mov	esi, DWORD PTR [esi+8]

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	mov	eax, DWORD PTR __Where$[esp+16]
	lea	edx, DWORD PTR __Tmp$215396[esp+16]
	push	edx
	sub	esi, ebp
	push	esi
	push	eax
	call	??$fill@PAHH@std@@YAXPAH0ABH@Z		; std::fill<int *,int>
	add	esp, 12					; 0000000cH
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi

; 1249 : 			}
; 1250 : 		}

	pop	ecx
	ret	12					; 0000000cH
$LN3@Insert_n:

; 1232 : 			}
; 1233 : 		else
; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence
; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;
; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	push	ebx
	mov	edi, ebx
	push	ebx
	sub	edi, ebp
	push	edi
	mov	ecx, esi
	call	??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ; std::vector<int,std::allocator<int> >::_Umove<int *>

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	push	ebx
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR __Where$[esp+20]
	push	edi
	push	eax
	call	??$_Unchecked_move_backward@PAHPAH@stdext@@YAPAHPAH00@Z ; stdext::_Unchecked_move_backward<int *,int *>

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	mov	eax, DWORD PTR __Where$[esp+28]
	lea	ecx, DWORD PTR __Tmp$215406[esp+28]
	push	ecx
	add	ebp, eax
	push	ebp
	push	eax
	call	??$fill@PAHH@std@@YAXPAH0ABH@Z		; std::fill<int *,int>
	add	esp, 24					; 00000018H
	pop	ebp
	pop	ebx
$LN1@Insert_n:
	pop	edi
	pop	esi

; 1249 : 			}
; 1250 : 		}

	pop	ecx
	ret	12					; 0000000cH
$LN63@Insert_n:
?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z ENDP ; std::vector<int,std::allocator<int> >::_Insert_n
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAIIABI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Ufill
; Function compile flags: /Ogtpy
;	COMDAT ?_Ufill@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAIIABI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Ufill@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAIIABI@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Ufill, COMDAT
; _this$ = ecx

; 1253 : 		{	// copy initializing _Count * _Val, using allocator

	push	esi

; 1254 : 		_STDEXT unchecked_uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

	mov	esi, DWORD PTR __Count$[esp]
	push	edi
	mov	edi, DWORD PTR __Ptr$[esp+4]
	mov	eax, esi
	mov	ecx, edi
	test	esi, esi
	jbe	SHORT $LN22@Ufill@2
	mov	edx, DWORD PTR __Val$[esp+4]
	push	ebx
$LL17@Ufill@2:
	mov	ebx, DWORD PTR [edx]
	mov	DWORD PTR [ecx], ebx
	dec	eax
	add	ecx, 4
	test	eax, eax
	ja	SHORT $LL17@Ufill@2
	pop	ebx
$LN22@Ufill@2:

; 1255 : 		return (_Ptr + _Count);

	lea	eax, DWORD PTR [edi+esi*4]
	pop	edi
	pop	esi

; 1256 : 		}

	ret	12					; 0000000cH
?_Ufill@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAIIABI@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Ufill
_TEXT	ENDS
PUBLIC	??$_Umove@PAV?$Array@H$05@Firaxis@@@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEPAV?$Array@H$05@Firaxis@@PAV23@00@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Umove<Firaxis::Array<int,6> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Umove@PAV?$Array@H$05@Firaxis@@@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEPAV?$Array@H$05@Firaxis@@PAV23@00@Z
_TEXT	SEGMENT
$T244985 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$244989 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Umove@PAV?$Array@H$05@Firaxis@@@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEPAV?$Array@H$05@Firaxis@@PAV23@00@Z PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Umove<Firaxis::Array<int,6> *>, COMDAT
; _this$ = ecx

; 1145 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1146 : 		{	// move initializing [_First, _Last), using allocator
; 1147 : 		return (_STDEXT _Unchecked_uninitialized_move(_First, _Last,
; 1148 : 			_Ptr, this->_Alval));

	mov	edx, DWORD PTR __Cat$244989[esp]
	mov	BYTE PTR $T244985[esp+4], 0
	mov	eax, DWORD PTR $T244985[esp+4]
	push	eax
	mov	eax, DWORD PTR __Ptr$[esp+4]
	push	edx
	mov	edx, DWORD PTR __First$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAV?$Array@H$05@Firaxis@@PAV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::allocator<Firaxis::Array<int,6> > >

; 1149 : 		}

	add	esp, 28					; 0000001cH
	ret	12					; 0000000cH
??$_Umove@PAV?$Array@H$05@Firaxis@@@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEPAV?$Array@H$05@Firaxis@@PAV23@00@Z ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Umove<Firaxis::Array<int,6> *>
_TEXT	ENDS
PUBLIC	??4?$vector@_NV?$allocator@_N@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<bool,std::allocator<bool> >::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4?$vector@_NV?$allocator@_N@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4?$vector@_NV?$allocator@_N@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::vector<bool,std::allocator<bool> >::operator=, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR [eax]
	add	eax, 4
	mov	DWORD PTR [esi], ecx
	push	eax
	lea	ecx, DWORD PTR [esi+4]
	call	??4?$vector@IV?$allocator@I@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::operator=
	mov	eax, esi
	pop	esi
	ret	4
??4?$vector@_NV?$allocator@_N@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::vector<bool,std::allocator<bool> >::operator=
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@ABV01@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
xdata$x	SEGMENT
__catchsym$??0?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@ABV01@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@ABV01@@Z$0
__unwindtable$??0?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??0?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@ABV01@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??0?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@ABV01@@Z$2
__ehfuncinfo$??0?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Right$ = 8						; size = 4
??0?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@ABV01@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >, COMDAT
; _this$ = ecx

; 528  : 		{	// construct tree by copying _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	esi, ecx
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], esi

; 529  : 		_Init();

	call	?_Buynode@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Buynode
	mov	DWORD PTR [esi+4], eax
	mov	BYTE PTR [eax+21], 1
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], eax
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+8], eax

; 530  : 		_TRY_BEGIN
; 531  : 		_Copy(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	?_Copy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXABV12@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Copy

; 535  : 		_CATCH_END
; 536  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
__catch$??0?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@ABV01@@Z$0:

; 532  : 		_CATCH_ALL
; 533  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Tidy

; 534  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN57@Tree:
$LN56@Tree:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@ABV01@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >
PUBLIC	??1?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::~_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T245260 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::~_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >, COMDAT
; _this$ = ecx

; 539  : 		{	// destroy tree

	push	ecx
	push	esi
	mov	esi, ecx

; 540  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax]
	push	eax
	push	ecx
	lea	eax, DWORD PTR $T245260[esp+16]
	push	eax
	mov	ecx, esi
	call	?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::erase
	mov	ecx, DWORD PTR [esi+4]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	xor	eax, eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	pop	esi

; 541  : 		}

	pop	ecx
	ret	0
??1?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::~_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >
_TEXT	ENDS
PUBLIC	?swap@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXAAV12@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::swap
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$?swap@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXAAV12@@Z DD 0ffffffffH
	DD	00H
__ehfuncinfo$?swap@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXAAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?swap@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXAAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ?swap@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
?swap@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXAAV12@@Z PROC ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::swap, COMDAT
; _this$ = ecx

; 1033 : 		{	// exchange contents with _Right

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?swap@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXAAV12@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ebx
	push	esi

; 1034 : 		if (this == &_Right)

	mov	esi, DWORD PTR __Right$[esp+16]
	push	edi
	cmp	ecx, esi
	je	SHORT $LN23@swap@4

; 1035 : 			;	// same object, do nothing
; 1036 : 		else if (get_allocator() == _Right.get_allocator())
; 1037 : 			{	// same allocator, swap control information
; 1038 : 
; 1039 :  #if _HAS_ITERATOR_DEBUGGING
; 1040 : 			this->_Swap_all(_Right);
; 1041 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1042 : 
; 1043 : 			this->_Swap_aux(_Right);
; 1044 : 
; 1045 : 			_STD _Swap_adl(this->comp, _Right.comp);
; 1046 : 			_STD swap(_Myhead, _Right._Myhead);

	lea	eax, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [ecx+4]
	cmp	edx, eax
	je	SHORT $LN20@swap@4
	mov	ebx, DWORD PTR [eax]
	mov	edi, DWORD PTR [edx]
	mov	DWORD PTR [edx], ebx
	mov	DWORD PTR [eax], edi
$LN20@swap@4:

; 1047 : 			_STD swap(_Mysize, _Right._Mysize);

	lea	eax, DWORD PTR [esi+8]
	add	ecx, 8
	cmp	ecx, eax
	je	SHORT $LN23@swap@4
	mov	esi, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [ecx], esi
	mov	DWORD PTR [eax], edx
$LN23@swap@4:

; 1048 : 			}
; 1049 : 		else
; 1050 : 			{	// different allocator, do multiple assigns
; 1051 : 			this->_Swap_aux(_Right);
; 1052 : 
; 1053 : 			_Myt _Tmp = *this;
; 1054 : 
; 1055 : 			*this = _Right;
; 1056 : 			_Right = _Tmp;
; 1057 : 			}
; 1058 : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 12					; 0000000cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?swap@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXAAV12@@Z:
	mov	eax, OFFSET __ehfuncinfo$?swap@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXAAV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?swap@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXAAV12@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::swap
PUBLIC	??1?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE@XZ ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::~vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??1?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE@XZ PROC ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::~vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@vector@5
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector@5:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 560  : 		}

	ret	0
??1?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE@XZ ENDP ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::~vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAEXXZ ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::clear
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAEXXZ PROC ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::clear, COMDAT
; _this$ = ecx

; 1060 : 		erase(begin(), end());

	mov	edx, DWORD PTR [ecx+4]
	push	esi
	mov	esi, DWORD PTR [ecx+8]
	cmp	edx, esi
	je	SHORT $LN15@clear@4
	mov	eax, esi
	cmp	esi, esi
	je	SHORT $LN40@clear@4
	push	edi
$LL42@clear@4:
	mov	edi, DWORD PTR [eax]
	mov	DWORD PTR [edx], edi
	mov	edi, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], edi
	add	eax, 8
	add	edx, 8
	cmp	eax, esi
	jne	SHORT $LL42@clear@4
	pop	edi
$LN40@clear@4:
	mov	DWORD PTR [ecx+8], edx
$LN15@clear@4:
	pop	esi

; 1061 : 		}

	ret	0
?clear@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAEXXZ ENDP ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::clear
_TEXT	ENDS
PUBLIC	?clear@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAEXXZ ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::clear
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAEXXZ PROC ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::clear, COMDAT
; _this$ = ecx

; 1060 : 		erase(begin(), end());

	mov	edx, DWORD PTR [ecx+8]
	push	esi
	mov	esi, DWORD PTR [ecx+4]
	cmp	esi, edx
	je	SHORT $LN15@clear@5
	mov	eax, edx
	cmp	edx, edx
	je	SHORT $LN40@clear@5
	push	edi
$LL42@clear@5:
	mov	edi, DWORD PTR [eax]
	mov	DWORD PTR [esi], edi
	add	eax, 4
	add	esi, 4
	cmp	eax, edx
	jne	SHORT $LL42@clear@5
	pop	edi
$LN40@clear@5:
	mov	DWORD PTR [ecx+8], esi
$LN15@clear@5:
	pop	esi

; 1061 : 		}

	ret	0
?clear@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAEXXZ ENDP ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::clear
_TEXT	ENDS
PUBLIC	??1?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@XZ ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::~vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@XZ PROC ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::~vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@vector@6
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector@6:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 560  : 		}

	ret	0
??1?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@XZ ENDP ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::~vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAEXXZ ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::clear
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAEXXZ PROC ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::clear, COMDAT
; _this$ = ecx

; 1060 : 		erase(begin(), end());

	mov	edx, DWORD PTR [ecx+4]
	push	esi
	mov	esi, DWORD PTR [ecx+8]
	cmp	edx, esi
	je	SHORT $LN15@clear@6
	mov	eax, esi
	cmp	esi, esi
	je	SHORT $LN40@clear@6
	push	edi
$LL42@clear@6:
	mov	edi, DWORD PTR [eax]
	mov	DWORD PTR [edx], edi
	mov	edi, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], edi
	add	eax, 8
	add	edx, 8
	cmp	eax, esi
	jne	SHORT $LL42@clear@6
	pop	edi
$LN40@clear@6:
	mov	DWORD PTR [ecx+8], edx
$LN15@clear@6:
	pop	esi

; 1061 : 		}

	ret	0
?clear@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAEXXZ ENDP ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::clear
_TEXT	ENDS
PUBLIC	?resize@?$vector@HV?$allocator@H@std@@@std@@QAEXIH@Z ; std::vector<int,std::allocator<int> >::resize
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$vector@HV?$allocator@H@std@@@std@@QAEXIH@Z
_TEXT	SEGMENT
$T246134 = 8						; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
?resize@?$vector@HV?$allocator@H@std@@@std@@QAEXIH@Z PROC ; std::vector<int,std::allocator<int> >::resize, COMDAT
; _this$ = ecx

; 718  : 		if (size() < _Newsize)

	mov	edx, DWORD PTR __Newsize$[esp-4]
	push	esi
	mov	esi, DWORD PTR [ecx+8]
	push	edi
	mov	edi, DWORD PTR [ecx+4]
	mov	eax, esi
	sub	eax, edi
	sar	eax, 2
	cmp	edx, eax
	jbe	SHORT $LN36@resize

; 719  : 			_Insert_n(end(), _Newsize - size(), _Val);

	lea	edi, DWORD PTR __Val$[esp+4]
	push	edi
	sub	edx, eax
	push	edx
	push	esi
	call	?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z ; std::vector<int,std::allocator<int> >::_Insert_n
	pop	edi
	pop	esi

; 722  : 		}

	ret	8
$LN36@resize:

; 720  : 		else if (_Newsize < size())

	jae	SHORT $LN1@resize

; 721  : 			erase(begin() + _Newsize, end());

	lea	eax, DWORD PTR [edi+edx*4]
	push	esi
	push	eax
	lea	eax, DWORD PTR $T246134[esp+12]
	push	eax
	call	?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@0@Z ; std::vector<int,std::allocator<int> >::erase
$LN1@resize:
	pop	edi
	pop	esi

; 722  : 		}

	ret	8
?resize@?$vector@HV?$allocator@H@std@@@std@@QAEXIH@Z ENDP ; std::vector<int,std::allocator<int> >::resize
_TEXT	ENDS
PUBLIC	?_Construct_n@?$vector@IV?$allocator@I@std@@@std@@QAEXIABI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Construct_n
; Function compile flags: /Ogtpy
;	COMDAT ?_Construct_n@?$vector@IV?$allocator@I@std@@@std@@QAEXIABI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Val$ = 12						; size = 4
?_Construct_n@?$vector@IV?$allocator@I@std@@@std@@QAEXIABI@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Construct_n, COMDAT
; _this$ = ecx

; 545  : 		{	// construct from _Count * _Val

	push	ebx
	push	esi

; 546  : 		if (_Buy(_Count))

	xor	ebx, ebx
	push	edi
	mov	edi, DWORD PTR __Count$[esp+8]
	mov	esi, ecx
	mov	DWORD PTR [esi+4], ebx
	mov	DWORD PTR [esi+8], ebx
	mov	DWORD PTR [esi+12], ebx
	cmp	edi, ebx
	je	SHORT $LN5@Construct_
	cmp	edi, 1073741823				; 3fffffffH
	jbe	SHORT $LN10@Construct_
	call	?_Xlen@?$vector@IV?$allocator@I@std@@@std@@KAXXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Xlen
$LN48@Construct_:
$LN10@Construct_:
	push	ebx
	push	edi
	call	??$_Allocate@I@std@@YAPAIIPAI@Z		; std::_Allocate<unsigned int>
	lea	ecx, DWORD PTR [eax+edi*4]
	add	esp, 8
	mov	DWORD PTR [esi+12], ecx
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax

; 547  : 			{	// nonzero, fill it
; 548  : 			_TRY_BEGIN
; 549  : 			_Mylast = _Ufill(_Myfirst, _Count, _Val);

	mov	ecx, edi
	mov	edx, eax
	cmp	edi, ebx
	jbe	SHORT $LN38@Construct_
	mov	ebx, DWORD PTR __Val$[esp+8]
	push	ebp
$LL40@Construct_:
	mov	ebp, DWORD PTR [ebx]
	mov	DWORD PTR [edx], ebp
	dec	ecx
	add	edx, 4
	test	ecx, ecx
	ja	SHORT $LL40@Construct_
	pop	ebp
$LN38@Construct_:
	lea	edx, DWORD PTR [eax+edi*4]
	mov	DWORD PTR [esi+8], edx
$LN5@Construct_:
	pop	edi
	pop	esi
	pop	ebx

; 550  : 			_CATCH_ALL
; 551  : 			_Tidy();
; 552  : 			_RERAISE;
; 553  : 			_CATCH_END
; 554  : 			}
; 555  : 		}

	ret	8
$LN47@Construct_:
?_Construct_n@?$vector@IV?$allocator@I@std@@@std@@QAEXIABI@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Construct_n
_TEXT	ENDS
PUBLIC	?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Insert_n
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z$2
__catchsym$?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z$0
__unwindtable$?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z$4
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z$5
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z
_TEXT	SEGMENT
__Tmp$225863 = -24					; size = 8
__Tmp$225853 = -24					; size = 8
__Capacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Cat$246594 = 8					; size = 1
__Cat$246522 = 8					; size = 1
__Where$ = 8						; size = 4
__Newvec$225838 = 12					; size = 4
__Count$ = 12						; size = 4
tv515 = 16						; size = 4
$T246590 = 16						; size = 1
$T246518 = 16						; size = 1
__Val$ = 16						; size = 4
?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z PROC ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	mov	esi, ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	edx, DWORD PTR [esi+4]
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	test	edx, edx
	jne	SHORT $LN29@Insert_n@2
	xor	ecx, ecx
	jmp	SHORT $LN30@Insert_n@2
$LN29@Insert_n@2:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, edx
	sar	eax, 3
	mov	ecx, eax
$LN30@Insert_n@2:

; 1162 : 
; 1163 : 		if (_Count == 0)

	mov	ebx, DWORD PTR __Count$[ebp]
	test	ebx, ebx
	je	$LN1@Insert_n@2

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	edi, DWORD PTR [esi+8]
	mov	eax, edi
	sub	eax, edx
	sar	eax, 3
	mov	edx, 536870911				; 1fffffffH
	sub	edx, eax
	cmp	edx, ebx
	jae	SHORT $LN12@Insert_n@2

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@KAXXZ ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Xlen
$LN87@Insert_n@2:
$LN12@Insert_n@2:

; 1167 : 		else if (_Capacity < size() + _Count)

	lea	edx, DWORD PTR [eax+ebx]
	cmp	ecx, edx
	jae	$LN10@Insert_n@2

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	eax, ecx
	shr	eax, 1
	mov	edi, 536870911				; 1fffffffH
	sub	edi, eax
	cmp	edi, ecx
	jae	SHORT $LN17@Insert_n@2
	mov	DWORD PTR __Capacity$[ebp], 0
	mov	ecx, DWORD PTR __Capacity$[ebp]
	jmp	SHORT $LN18@Insert_n@2
$LN17@Insert_n@2:
	add	ecx, eax
	mov	DWORD PTR __Capacity$[ebp], ecx
$LN18@Insert_n@2:

; 1171 : 			if (_Capacity < size() + _Count)

	cmp	ecx, edx
	jae	SHORT $LN9@Insert_n@2

; 1172 : 				_Capacity = size() + _Count;

	mov	DWORD PTR __Capacity$[ebp], edx
	mov	ecx, edx
$LN9@Insert_n@2:

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

	push	0
	push	ecx
	call	??$_Allocate@UFreeResourceXCities@@@std@@YAPAUFreeResourceXCities@@IPAU1@@Z ; std::_Allocate<FreeResourceXCities>

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	edi, DWORD PTR __Where$[ebp]
	sub	edi, DWORD PTR [esi+4]

; 1175 : 			int _Ncopied = 0;
; 1176 : 
; 1177 : 			_TRY_BEGIN
; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	ecx, DWORD PTR __Val$[ebp]
	add	esp, 8
	push	ecx
	sar	edi, 3
	push	ebx
	lea	edx, DWORD PTR [eax+edi*8]
	push	edx
	mov	ecx, esi
	mov	DWORD PTR __Newvec$225838[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	?_Ufill@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEPAUFreeResourceXCities@@PAU3@IABU3@@Z ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Ufill

; 1179 : 			++_Ncopied;
; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	edx, DWORD PTR __Cat$246522[ebp]
	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR $T246518[ebp], 0
	mov	ecx, DWORD PTR $T246518[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Newvec$225838[ebp]
	push	edx
	mov	edx, DWORD PTR __Where$[ebp]
	push	esi
	push	ecx
	push	edx
	push	eax
	call	??$_Uninit_copy@PAUFreeResourceXCities@@PAU1@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAPAUFreeResourceXCities@@PAU1@00AAV?$allocator@UFreeResourceXCities@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<FreeResourceXCities *,FreeResourceXCities *,std::allocator<FreeResourceXCities> >

; 1182 : 			++_Ncopied;
; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	eax, DWORD PTR [esi+8]
	add	esp, 24					; 00000018H
	mov	BYTE PTR $T246590[ebp], 0
	mov	edx, DWORD PTR $T246590[ebp]
	push	edx
	mov	edx, DWORD PTR __Cat$246594[ebp]
	push	edx
	lea	ecx, DWORD PTR [edi+ebx]
	mov	edi, DWORD PTR __Newvec$225838[ebp]
	push	esi
	lea	ecx, DWORD PTR [edi+ecx*8]
	push	ecx
	push	eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??$_Uninit_copy@PAUFreeResourceXCities@@PAU1@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAPAUFreeResourceXCities@@PAU1@00AAV?$allocator@UFreeResourceXCities@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<FreeResourceXCities *,FreeResourceXCities *,std::allocator<FreeResourceXCities> >

; 1192 : 			_CATCH_END
; 1193 : 
; 1194 : 			_Count += size();

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, eax
	sar	ecx, 3
	add	esp, 24					; 00000018H
	add	ebx, ecx

; 1195 : 			if (_Myfirst != 0)

	test	eax, eax
	je	SHORT $LN81@Insert_n@2

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);
; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN81@Insert_n@2:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	edx, DWORD PTR __Capacity$[ebp]
	lea	eax, DWORD PTR [edi+edx*8]

; 1206 : 			_Mylast = _Newvec + _Count;

	lea	ecx, DWORD PTR [edi+ebx*8]
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+8], ecx

; 1207 : 			_Myfirst = _Newvec;

	mov	DWORD PTR [esi+4], edi

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
__catch$?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)
; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);
; 1188 : 			if (0 < _Ncopied)
; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);
; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	mov	edx, DWORD PTR __Newvec$225838[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
__catch$?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z$2:

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN88@Insert_n@2:
$LN10@Insert_n@2:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	eax, DWORD PTR __Where$[ebp]
	mov	ecx, edi
	sub	ecx, eax
	sar	ecx, 3
	cmp	ecx, ebx
	jae	SHORT $LN3@Insert_n@2

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$225853[ebp+4], ecx

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	lea	ecx, DWORD PTR [ebx*8]
	mov	DWORD PTR tv515[ebp], ecx
	add	ecx, eax
	push	ecx
	push	edi
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __Tmp$225853[ebp], edx
	call	??$_Umove@PAUFreeResourceXCities@@@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEPAUFreeResourceXCities@@PAU2@00@Z ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Umove<FreeResourceXCities *>

; 1215 : 
; 1216 : 			_TRY_BEGIN
; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, eax
	sub	ecx, DWORD PTR __Where$[ebp]
	lea	edx, DWORD PTR __Tmp$225853[ebp]
	sar	ecx, 3
	push	edx
	sub	ebx, ecx
	push	ebx
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	call	?_Ufill@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEPAUFreeResourceXCities@@PAU3@IABU3@@Z ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Ufill

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 1221 : 			_RERAISE;
; 1222 : 			_CATCH_END
; 1223 : 
; 1224 : 			_Mylast += _Count;

	mov	eax, DWORD PTR tv515[ebp]
	add	DWORD PTR [esi+8], eax
	mov	esi, DWORD PTR [esi+8]

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	lea	edx, DWORD PTR __Tmp$225853[ebp]
	push	edx
	sub	esi, eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	esi
	push	eax
	call	??$fill@PAUFreeResourceXCities@@U1@@std@@YAXPAUFreeResourceXCities@@0ABU1@@Z ; std::fill<FreeResourceXCities *,FreeResourceXCities>
	add	esp, 12					; 0000000cH

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN3@Insert_n@2:

; 1232 : 			}
; 1233 : 		else
; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;
; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	lea	eax, DWORD PTR [ebx*8]
	push	edi
	mov	ebx, edi
	sub	ebx, eax
	push	edi
	mov	DWORD PTR __Tmp$225863[ebp], ecx
	push	ebx
	mov	ecx, esi
	mov	DWORD PTR __Tmp$225863[ebp+4], edx
	mov	DWORD PTR tv515[ebp], eax
	call	??$_Umove@PAUFreeResourceXCities@@@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEPAUFreeResourceXCities@@PAU2@00@Z ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Umove<FreeResourceXCities *>

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	push	edi
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	ebx
	push	eax
	call	??$_Unchecked_move_backward@PAUFreeResourceXCities@@PAU1@@stdext@@YAPAUFreeResourceXCities@@PAU1@00@Z ; stdext::_Unchecked_move_backward<FreeResourceXCities *,FreeResourceXCities *>

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	mov	eax, DWORD PTR __Where$[ebp]
	mov	edx, DWORD PTR tv515[ebp]
	lea	ecx, DWORD PTR __Tmp$225863[ebp]
	push	ecx
	add	edx, eax
	push	edx
	push	eax
	call	??$fill@PAUFreeResourceXCities@@U1@@std@@YAXPAUFreeResourceXCities@@0ABU1@@Z ; std::fill<FreeResourceXCities *,FreeResourceXCities>
	add	esp, 24					; 00000018H
$LN1@Insert_n@2:

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN86@Insert_n@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z ENDP ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Insert_n
PUBLIC	??$_Umove@PAW4TraitTypes@@@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEPAW4TraitTypes@@PAW42@00@Z ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Umove<enum TraitTypes *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Umove@PAW4TraitTypes@@@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEPAW4TraitTypes@@PAW42@00@Z
_TEXT	SEGMENT
$T246669 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$246672 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Umove@PAW4TraitTypes@@@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEPAW4TraitTypes@@PAW42@00@Z PROC ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Umove<enum TraitTypes *>, COMDAT
; _this$ = ecx

; 1145 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1146 : 		{	// move initializing [_First, _Last), using allocator
; 1147 : 		return (_STDEXT _Unchecked_uninitialized_move(_First, _Last,
; 1148 : 			_Ptr, this->_Alval));

	mov	edx, DWORD PTR __Cat$246672[esp]
	mov	BYTE PTR $T246669[esp+4], 0
	mov	eax, DWORD PTR $T246669[esp+4]
	push	eax
	mov	eax, DWORD PTR __Ptr$[esp+4]
	push	edx
	mov	edx, DWORD PTR __First$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAW4TraitTypes@@PAW41@V?$allocator@W4TraitTypes@@@std@@@std@@YAPAW4TraitTypes@@PAW41@00AAV?$allocator@W4TraitTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<enum TraitTypes *,enum TraitTypes *,std::allocator<enum TraitTypes> >

; 1149 : 		}

	add	esp, 28					; 0000001cH
	ret	12					; 0000000cH
??$_Umove@PAW4TraitTypes@@@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEPAW4TraitTypes@@PAW42@00@Z ENDP ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Umove<enum TraitTypes *>
_TEXT	ENDS
PUBLIC	??$_Umove@PAUMayaBonusChoice@@@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEPAUMayaBonusChoice@@PAU2@00@Z ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Umove<MayaBonusChoice *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Umove@PAUMayaBonusChoice@@@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEPAUMayaBonusChoice@@PAU2@00@Z
_TEXT	SEGMENT
$T246724 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$246727 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Umove@PAUMayaBonusChoice@@@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEPAUMayaBonusChoice@@PAU2@00@Z PROC ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Umove<MayaBonusChoice *>, COMDAT
; _this$ = ecx

; 1145 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1146 : 		{	// move initializing [_First, _Last), using allocator
; 1147 : 		return (_STDEXT _Unchecked_uninitialized_move(_First, _Last,
; 1148 : 			_Ptr, this->_Alval));

	mov	edx, DWORD PTR __Cat$246727[esp]
	mov	BYTE PTR $T246724[esp+4], 0
	mov	eax, DWORD PTR $T246724[esp+4]
	push	eax
	mov	eax, DWORD PTR __Ptr$[esp+4]
	push	edx
	mov	edx, DWORD PTR __First$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAUMayaBonusChoice@@PAU1@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAPAUMayaBonusChoice@@PAU1@00AAV?$allocator@UMayaBonusChoice@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<MayaBonusChoice *,MayaBonusChoice *,std::allocator<MayaBonusChoice> >

; 1149 : 		}

	add	esp, 28					; 0000001cH
	ret	12					; 0000000cH
??$_Umove@PAUMayaBonusChoice@@@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEPAUMayaBonusChoice@@PAU2@00@Z ENDP ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Umove<MayaBonusChoice *>
_TEXT	ENDS
PUBLIC	??1?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE@XZ ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::~vector<enum TraitTypes,std::allocator<enum TraitTypes> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE@XZ PROC ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::~vector<enum TraitTypes,std::allocator<enum TraitTypes> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@vector@7
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector@7:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 560  : 		}

	ret	0
??1?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE@XZ ENDP ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::~vector<enum TraitTypes,std::allocator<enum TraitTypes> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@_NV?$allocator@_N@std@@@std@@QAEXXZ ; std::vector<bool,std::allocator<bool> >::clear
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$vector@_NV?$allocator@_N@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T246752 = -8						; size = 8
$T246749 = -8						; size = 8
?clear@?$vector@_NV?$allocator@_N@std@@@std@@QAEXXZ PROC ; std::vector<bool,std::allocator<bool> >::clear, COMDAT
; _this$ = ecx

; 2243 : 		{	// erase all elements

	sub	esp, 8
	push	esi
	mov	esi, ecx

; 2244 : 		erase(begin(), end());

	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR [esi+8]
	mov	DWORD PTR $T246749[esp+16], edi
	mov	DWORD PTR $T246749[esp+20], 0
	test	eax, eax
	jbe	SHORT $LN20@clear@7
	push	eax
	lea	ecx, DWORD PTR $T246749[esp+20]
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
$LN20@clear@7:
	mov	ecx, DWORD PTR $T246749[esp+20]
	mov	edx, DWORD PTR $T246749[esp+16]
	push	ecx
	push	edx
	xor	eax, eax
	push	eax
	push	edi
	lea	eax, DWORD PTR $T246752[esp+32]
	push	eax
	mov	ecx, esi
	call	?erase@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@V?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@0@Z ; std::vector<bool,std::allocator<bool> >::erase
	pop	edi
	pop	esi

; 2245 : 		}

	add	esp, 8
	ret	0
?clear@?$vector@_NV?$allocator@_N@std@@@std@@QAEXXZ ENDP ; std::vector<bool,std::allocator<bool> >::clear
_TEXT	ENDS
PUBLIC	??1?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@XZ ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::~vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@XZ PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::~vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@vector@8
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector@8:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 560  : 		}

	ret	0
??1?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@XZ ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::~vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >
_TEXT	ENDS
PUBLIC	?clear@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEXXZ ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::clear
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T247014 = -4						; size = 1
$T247016 = -4						; size = 1
__Cat$247019 = -4					; size = 1
?clear@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEXXZ PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::clear, COMDAT
; _this$ = ecx

; 1059 : 		{	// erase all

	push	ecx
	push	esi
	mov	esi, ecx

; 1060 : 		erase(begin(), end());

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, eax
	je	SHORT $LN15@clear@8
	mov	BYTE PTR $T247014[esp+8], 0
	mov	edx, DWORD PTR $T247014[esp+8]
	push	edx
	mov	edx, DWORD PTR __Cat$247019[esp+12]
	push	edx
	mov	edx, DWORD PTR $T247016[esp+16]
	push	edx
	push	ecx
	push	eax
	push	eax
	call	??$_Copy_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::random_access_iterator_tag>
	add	esp, 24					; 00000018H
	mov	DWORD PTR [esi+8], eax
$LN15@clear@8:
	pop	esi

; 1061 : 		}

	pop	ecx
	ret	0
?clear@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEXXZ ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::clear
_TEXT	ENDS
PUBLIC	?insert@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@ABH@Z ; std::vector<int,std::allocator<int> >::insert
; Function compile flags: /Ogtpy
;	COMDAT ?insert@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@ABH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@ABH@Z PROC ; std::vector<int,std::allocator<int> >::insert, COMDAT
; _this$ = ecx

; 875  : 		{	// insert _Val at _Where

	push	esi
	push	edi
	mov	edi, ecx

; 876  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi+8]
	sub	ecx, eax
	test	ecx, -4					; fffffffcH
	mov	ecx, DWORD PTR __Where$[esp+4]
	jne	SHORT $LN3@insert@2
	xor	esi, esi
	jmp	SHORT $LN4@insert@2
$LN3@insert@2:
	mov	esi, ecx
	sub	esi, eax
	sar	esi, 2
$LN4@insert@2:

; 877  : 		_Insert_n(_Where, (size_type)1, _Val);

	mov	edx, DWORD PTR __Val$[esp+4]
	push	edx
	push	1
	push	ecx
	mov	ecx, edi
	call	?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z ; std::vector<int,std::allocator<int> >::_Insert_n

; 878  : 		return (begin() + _Off);

	mov	eax, DWORD PTR [edi+4]
	lea	ecx, DWORD PTR [eax+esi*4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi

; 879  : 		}

	ret	12					; 0000000cH
?insert@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@ABH@Z ENDP ; std::vector<int,std::allocator<int> >::insert
_TEXT	ENDS
PUBLIC	?_Insert_n@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@IABV?$Array@H$05@Firaxis@@@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Insert_n
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@IABV?$Array@H$05@Firaxis@@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@IABV?$Array@H$05@Firaxis@@@Z$2
__catchsym$?_Insert_n@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@IABV?$Array@H$05@Firaxis@@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@IABV?$Array@H$05@Firaxis@@@Z$0
__unwindtable$?_Insert_n@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@IABV?$Array@H$05@Firaxis@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Insert_n@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@IABV?$Array@H$05@Firaxis@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@IABV?$Array@H$05@Firaxis@@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@IABV?$Array@H$05@Firaxis@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Insert_n@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@IABV?$Array@H$05@Firaxis@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@IABV?$Array@H$05@Firaxis@@@Z$4
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@IABV?$Array@H$05@Firaxis@@@Z$5
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@IABV?$Array@H$05@Firaxis@@@Z
_TEXT	SEGMENT
__Tmp$215506 = -44					; size = 24
__Tmp$215496 = -44					; size = 24
__Capacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Cat$247297 = 8					; size = 1
__Cat$247225 = 8					; size = 1
__Where$ = 8						; size = 4
__Newvec$215481 = 12					; size = 4
__Count$ = 12						; size = 4
tv525 = 16						; size = 4
tv515 = 16						; size = 4
$T247293 = 16						; size = 1
$T247221 = 16						; size = 1
__Val$ = 16						; size = 4
?_Insert_n@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@IABV?$Array@H$05@Firaxis@@@Z PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@IABV?$Array@H$05@Firaxis@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	mov	esi, ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	eax, DWORD PTR [esi+4]
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	test	eax, eax
	jne	SHORT $LN29@Insert_n@3
	xor	ecx, ecx
	jmp	SHORT $LN30@Insert_n@3
$LN29@Insert_n@3:
	mov	edx, DWORD PTR [esi+12]
	sub	edx, eax
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	ecx, eax
$LN30@Insert_n@3:

; 1162 : 
; 1163 : 		if (_Count == 0)

	mov	edi, DWORD PTR __Count$[ebp]
	test	edi, edi
	je	$LN85@Insert_n@3

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	ebx, DWORD PTR [esi+8]
	mov	edx, ebx
	sub	edx, DWORD PTR [esi+4]
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edx, 178956970				; 0aaaaaaaH
	sub	edx, eax
	cmp	edx, edi
	jae	SHORT $LN12@Insert_n@3

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@KAXXZ ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Xlen
$LN91@Insert_n@3:
$LN12@Insert_n@3:

; 1167 : 		else if (_Capacity < size() + _Count)

	lea	edx, DWORD PTR [eax+edi]
	cmp	ecx, edx
	jae	$LN10@Insert_n@3

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	eax, ecx
	shr	eax, 1
	mov	ebx, 178956970				; 0aaaaaaaH
	sub	ebx, eax
	cmp	ebx, ecx
	jae	SHORT $LN17@Insert_n@3
	mov	DWORD PTR __Capacity$[ebp], 0
	mov	ecx, DWORD PTR __Capacity$[ebp]
	jmp	SHORT $LN18@Insert_n@3
$LN17@Insert_n@3:
	add	ecx, eax
	mov	DWORD PTR __Capacity$[ebp], ecx
$LN18@Insert_n@3:

; 1171 : 			if (_Capacity < size() + _Count)

	cmp	ecx, edx
	jae	SHORT $LN9@Insert_n@3

; 1172 : 				_Capacity = size() + _Count;

	mov	DWORD PTR __Capacity$[ebp], edx
	mov	ecx, edx
$LN9@Insert_n@3:

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

	push	0
	push	ecx
	call	??$_Allocate@V?$Array@H$05@Firaxis@@@std@@YAPAV?$Array@H$05@Firaxis@@IPAV12@@Z ; std::_Allocate<Firaxis::Array<int,6> >

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	edx, DWORD PTR __Where$[ebp]
	sub	edx, DWORD PTR [esi+4]
	mov	ecx, eax
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx

; 1175 : 			int _Ncopied = 0;
; 1176 : 
; 1177 : 			_TRY_BEGIN
; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	eax, DWORD PTR __Val$[ebp]
	sar	edx, 2
	mov	ebx, edx
	add	esp, 8
	shr	ebx, 31					; 0000001fH
	add	ebx, edx
	push	eax
	lea	edx, DWORD PTR [ebx+ebx*2]
	lea	eax, DWORD PTR [ecx+edx*8]
	push	edi
	mov	DWORD PTR __Newvec$215481[ebp], ecx
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	?_Ufill@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEPAV?$Array@H$05@Firaxis@@PAV34@IABV34@@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Ufill

; 1179 : 			++_Ncopied;
; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	edx, DWORD PTR __Cat$247225[ebp]
	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR $T247221[ebp], 0
	mov	ecx, DWORD PTR $T247221[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Newvec$215481[ebp]
	push	edx
	mov	edx, DWORD PTR __Where$[ebp]
	push	esi
	push	ecx
	push	edx
	push	eax
	call	??$_Uninit_copy@PAV?$Array@H$05@Firaxis@@PAV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::allocator<Firaxis::Array<int,6> > >

; 1182 : 			++_Ncopied;
; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	edx, DWORD PTR __Newvec$215481[ebp]
	mov	eax, DWORD PTR [esi+8]
	add	esp, 24					; 00000018H
	add	ebx, edi
	lea	ecx, DWORD PTR [ebx+ebx*2]
	lea	ecx, DWORD PTR [edx+ecx*8]
	mov	BYTE PTR $T247293[ebp], 0
	mov	edx, DWORD PTR $T247293[ebp]
	push	edx
	mov	edx, DWORD PTR __Cat$247297[ebp]
	push	edx
	push	esi
	push	ecx
	push	eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??$_Uninit_copy@PAV?$Array@H$05@Firaxis@@PAV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::allocator<Firaxis::Array<int,6> > >

; 1192 : 			_CATCH_END
; 1193 : 
; 1194 : 			_Count += size();

	mov	ebx, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, ebx
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 2
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	add	esp, 24					; 00000018H
	add	edi, ecx

; 1195 : 			if (_Myfirst != 0)

	test	ebx, ebx
	je	SHORT $LN81@Insert_n@3

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);
; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN81@Insert_n@3:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	eax, DWORD PTR __Capacity$[ebp]
	lea	edx, DWORD PTR [eax+eax*2]
	mov	eax, DWORD PTR __Newvec$215481[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]

; 1206 : 			_Mylast = _Newvec + _Count;

	lea	edx, DWORD PTR [edi+edi*2]
	mov	DWORD PTR [esi+12], ecx
	lea	ecx, DWORD PTR [eax+edx*8]
	mov	DWORD PTR [esi+8], ecx

; 1207 : 			_Myfirst = _Newvec;

	mov	DWORD PTR [esi+4], eax

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
__catch$?_Insert_n@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@IABV?$Array@H$05@Firaxis@@@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)
; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);
; 1188 : 			if (0 < _Ncopied)
; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);
; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	mov	edx, DWORD PTR __Newvec$215481[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
__catch$?_Insert_n@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@IABV?$Array@H$05@Firaxis@@@Z$2:

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN92@Insert_n@3:
$LN10@Insert_n@3:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	ecx, DWORD PTR __Where$[ebp]
	mov	edx, ebx
	sub	edx, ecx
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	eax, edi

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	eax, DWORD PTR __Val$[ebp]
	jae	$LN3@Insert_n@3
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$215496[ebp], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$215496[ebp+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR __Tmp$215496[ebp+8], edx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR __Tmp$215496[ebp+12], edx
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR __Tmp$215496[ebp+20], eax

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	lea	eax, DWORD PTR [edi+edi*2]
	add	eax, eax
	add	eax, eax
	add	eax, eax
	mov	DWORD PTR tv515[ebp], eax
	add	eax, ecx
	push	eax
	push	ebx
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR __Tmp$215496[ebp+16], edx
	call	??$_Umove@PAV?$Array@H$05@Firaxis@@@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEPAV?$Array@H$05@Firaxis@@PAV23@00@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Umove<Firaxis::Array<int,6> *>

; 1215 : 
; 1216 : 			_TRY_BEGIN
; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	ebx, DWORD PTR [esi+8]
	lea	ecx, DWORD PTR __Tmp$215496[ebp]
	push	ecx
	mov	ecx, ebx
	sub	ecx, DWORD PTR __Where$[ebp]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	sub	edi, eax
	push	edi
	push	ebx
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	call	?_Ufill@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEPAV?$Array@H$05@Firaxis@@PAV34@IABV34@@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Ufill

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 1221 : 			_RERAISE;
; 1222 : 			_CATCH_END
; 1223 : 
; 1224 : 			_Mylast += _Count;

	mov	eax, DWORD PTR tv515[ebp]
	add	DWORD PTR [esi+8], eax
	mov	esi, DWORD PTR [esi+8]

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	mov	edx, DWORD PTR __Where$[ebp]
	lea	ecx, DWORD PTR __Tmp$215496[ebp]
	push	ecx
	sub	esi, eax
	push	esi
	push	edx
	call	??$_Fill@PAV?$Array@H$05@Firaxis@@V12@@std@@YAXPAV?$Array@H$05@Firaxis@@0ABV12@@Z ; std::_Fill<Firaxis::Array<int,6> *,Firaxis::Array<int,6> >
	add	esp, 12					; 0000000cH

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN3@Insert_n@3:

; 1232 : 			}
; 1233 : 		else
; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$215506[ebp], ecx
	mov	ecx, DWORD PTR [eax+8]

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;
; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	lea	edi, DWORD PTR [edi+edi*2]
	mov	DWORD PTR __Tmp$215506[ebp+4], edx
	mov	edx, DWORD PTR [eax+12]
	add	edi, edi
	mov	DWORD PTR __Tmp$215506[ebp+8], ecx
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR __Tmp$215506[ebp+12], edx
	mov	edx, DWORD PTR [eax+20]
	add	edi, edi
	push	ebx
	add	edi, edi
	mov	eax, ebx
	sub	eax, edi
	push	ebx
	mov	DWORD PTR __Tmp$215506[ebp+16], ecx
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __Tmp$215506[ebp+20], edx
	mov	DWORD PTR tv525[ebp], eax
	call	??$_Umove@PAV?$Array@H$05@Firaxis@@@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEPAV?$Array@H$05@Firaxis@@PAV23@00@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Umove<Firaxis::Array<int,6> *>

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR tv525[ebp]
	push	ebx
	push	eax
	push	ecx
	call	??$_Unchecked_move_backward@PAV?$Array@H$05@Firaxis@@PAV12@@stdext@@YAPAV?$Array@H$05@Firaxis@@PAV12@00@Z ; stdext::_Unchecked_move_backward<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *>

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	mov	eax, DWORD PTR __Where$[ebp]
	lea	edx, DWORD PTR __Tmp$215506[ebp]
	push	edx
	add	edi, eax
	push	edi
	push	eax
	call	??$_Fill@PAV?$Array@H$05@Firaxis@@V12@@std@@YAXPAV?$Array@H$05@Firaxis@@0ABV12@@Z ; std::_Fill<Firaxis::Array<int,6> *,Firaxis::Array<int,6> >
	add	esp, 24					; 00000018H
$LN85@Insert_n@3:

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN90@Insert_n@3:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Insert_n@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@IABV?$Array@H$05@Firaxis@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@IABV?$Array@H$05@Firaxis@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@IABV?$Array@H$05@Firaxis@@@Z ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Insert_n
PUBLIC	?_Insert_n@?$vector@IV?$allocator@I@std@@@std@@IAEXV?$_Vector_const_iterator@IV?$allocator@I@std@@@2@IABI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Insert_n
; Function compile flags: /Ogtpy
;	COMDAT ?_Insert_n@?$vector@IV?$allocator@I@std@@@std@@IAEXV?$_Vector_const_iterator@IV?$allocator@I@std@@@2@IABI@Z
_TEXT	SEGMENT
__Capacity$ = -4					; size = 4
__Where$ = 8						; size = 4
__Count$ = 12						; size = 4
__Tmp$215618 = 16					; size = 4
__Tmp$215608 = 16					; size = 4
__Val$ = 16						; size = 4
?_Insert_n@?$vector@IV?$allocator@I@std@@@std@@IAEXV?$_Vector_const_iterator@IV?$allocator@I@std@@@2@IABI@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ecx
	push	esi
	mov	esi, ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	edx, DWORD PTR [esi+4]
	push	edi
	test	edx, edx
	jne	SHORT $LN29@Insert_n@4
	xor	ecx, ecx
	jmp	SHORT $LN30@Insert_n@4
$LN29@Insert_n@4:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, edx
	sar	eax, 2
	mov	ecx, eax
$LN30@Insert_n@4:

; 1162 : 
; 1163 : 		if (_Count == 0)

	mov	edi, DWORD PTR __Count$[esp+8]
	test	edi, edi
	je	$LN1@Insert_n@4
	push	ebx

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	ebx, DWORD PTR [esi+8]
	mov	eax, ebx
	sub	eax, edx
	sar	eax, 2
	mov	edx, 1073741823				; 3fffffffH
	sub	edx, eax
	cmp	edx, edi
	jae	SHORT $LN12@Insert_n@4

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@IV?$allocator@I@std@@@std@@KAXXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Xlen
$LN64@Insert_n@4:
$LN12@Insert_n@4:

; 1167 : 		else if (_Capacity < size() + _Count)

	lea	edx, DWORD PTR [eax+edi]
	push	ebp
	cmp	ecx, edx
	jae	$LN10@Insert_n@4

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	eax, ecx
	shr	eax, 1
	mov	ebx, 1073741823				; 3fffffffH
	sub	ebx, eax
	cmp	ebx, ecx
	jae	SHORT $LN17@Insert_n@4
	mov	DWORD PTR __Capacity$[esp+20], 0
	mov	ecx, DWORD PTR __Capacity$[esp+20]
	jmp	SHORT $LN18@Insert_n@4
$LN17@Insert_n@4:
	add	ecx, eax
	mov	DWORD PTR __Capacity$[esp+20], ecx
$LN18@Insert_n@4:

; 1171 : 			if (_Capacity < size() + _Count)

	cmp	ecx, edx
	jae	SHORT $LN9@Insert_n@4

; 1172 : 				_Capacity = size() + _Count;

	mov	DWORD PTR __Capacity$[esp+20], edx
	mov	ecx, edx
$LN9@Insert_n@4:

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

	push	0
	push	ecx
	call	??$_Allocate@I@std@@YAPAIIPAI@Z		; std::_Allocate<unsigned int>

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	ebx, DWORD PTR __Where$[esp+24]
	sub	ebx, DWORD PTR [esi+4]
	add	esp, 8
	mov	ebp, eax

; 1175 : 			int _Ncopied = 0;
; 1176 : 
; 1177 : 			_TRY_BEGIN
; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	eax, DWORD PTR __Val$[esp+16]
	push	eax
	sar	ebx, 2
	push	edi
	lea	ecx, DWORD PTR [ebp+ebx*4]
	push	ecx
	mov	ecx, esi
	call	?_Ufill@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAIIABI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Ufill

; 1179 : 			++_Ncopied;
; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	edx, DWORD PTR __Where$[esp+16]
	mov	eax, DWORD PTR [esi+4]
	push	ebp
	push	edx
	push	eax
	mov	ecx, esi
	call	??$_Umove@PAI@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAI00@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Umove<unsigned int *>

; 1182 : 			++_Ncopied;
; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	edx, DWORD PTR [esi+8]
	mov	eax, DWORD PTR __Where$[esp+16]
	add	ebx, edi
	lea	ecx, DWORD PTR [ebp+ebx*4]
	push	ecx
	push	edx
	push	eax
	mov	ecx, esi
	call	??$_Umove@PAI@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAI00@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Umove<unsigned int *>

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)
; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);
; 1188 : 			if (0 < _Ncopied)
; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);
; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);
; 1191 : 			_RERAISE;
; 1192 : 			_CATCH_END
; 1193 : 
; 1194 : 			_Count += size();

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, eax
	sar	ecx, 2
	add	edi, ecx

; 1195 : 			if (_Myfirst != 0)

	test	eax, eax
	je	SHORT $LN57@Insert_n@4

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);
; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN57@Insert_n@4:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	edx, DWORD PTR __Capacity$[esp+20]

; 1206 : 			_Mylast = _Newvec + _Count;

	lea	ecx, DWORD PTR [ebp+edi*4]
	lea	eax, DWORD PTR [ebp+edx*4]

; 1207 : 			_Myfirst = _Newvec;

	mov	DWORD PTR [esi+4], ebp
	pop	ebp
	pop	ebx
	pop	edi
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+8], ecx
	pop	esi

; 1249 : 			}
; 1250 : 		}

	pop	ecx
	ret	12					; 0000000cH
$LN10@Insert_n@4:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	eax, DWORD PTR __Where$[esp+16]

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[esp+16]
	mov	edx, ebx
	sub	edx, eax
	sar	edx, 2
	cmp	edx, edi
	mov	edx, DWORD PTR [ecx]

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	lea	ebp, DWORD PTR [edi*4]
	mov	DWORD PTR __Tmp$215608[esp+16], edx
	jae	SHORT $LN3@Insert_n@4
	lea	ecx, DWORD PTR [eax+ebp]
	push	ecx
	push	ebx
	push	eax
	mov	ecx, esi
	call	??$_Umove@PAI@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAI00@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Umove<unsigned int *>

; 1215 : 
; 1216 : 			_TRY_BEGIN
; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, eax
	sub	ecx, DWORD PTR __Where$[esp+16]
	lea	edx, DWORD PTR __Tmp$215608[esp+16]
	sar	ecx, 2
	push	edx
	sub	edi, ecx
	push	edi
	push	eax
	mov	ecx, esi
	call	?_Ufill@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAIIABI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Ufill

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 1221 : 			_RERAISE;
; 1222 : 			_CATCH_END
; 1223 : 
; 1224 : 			_Mylast += _Count;

	add	DWORD PTR [esi+8], ebp
	mov	esi, DWORD PTR [esi+8]

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	mov	eax, DWORD PTR __Where$[esp+16]
	lea	edx, DWORD PTR __Tmp$215608[esp+16]
	push	edx
	sub	esi, ebp
	push	esi
	push	eax
	call	??$fill@PAII@std@@YAXPAI0ABI@Z		; std::fill<unsigned int *,unsigned int>
	add	esp, 12					; 0000000cH
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi

; 1249 : 			}
; 1250 : 		}

	pop	ecx
	ret	12					; 0000000cH
$LN3@Insert_n@4:

; 1232 : 			}
; 1233 : 		else
; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence
; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;
; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	push	ebx
	mov	edi, ebx
	push	ebx
	sub	edi, ebp
	push	edi
	mov	ecx, esi
	call	??$_Umove@PAI@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAI00@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Umove<unsigned int *>

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	push	ebx
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR __Where$[esp+20]
	push	edi
	push	eax
	call	??$_Unchecked_move_backward@PAIPAI@stdext@@YAPAIPAI00@Z ; stdext::_Unchecked_move_backward<unsigned int *,unsigned int *>

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	mov	eax, DWORD PTR __Where$[esp+28]
	lea	ecx, DWORD PTR __Tmp$215618[esp+28]
	push	ecx
	add	ebp, eax
	push	ebp
	push	eax
	call	??$fill@PAII@std@@YAXPAI0ABI@Z		; std::fill<unsigned int *,unsigned int>
	add	esp, 24					; 00000018H
	pop	ebp
	pop	ebx
$LN1@Insert_n@4:
	pop	edi
	pop	esi

; 1249 : 			}
; 1250 : 		}

	pop	ecx
	ret	12					; 0000000cH
$LN63@Insert_n@4:
?_Insert_n@?$vector@IV?$allocator@I@std@@@std@@IAEXV?$_Vector_const_iterator@IV?$allocator@I@std@@@2@IABI@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Insert_n
_TEXT	ENDS
PUBLIC	??1?$multimap@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAE@XZ ; std::multimap<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > >::~multimap<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$multimap@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T247527 = -4						; size = 4
??1?$multimap@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAE@XZ PROC ; std::multimap<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > >::~multimap<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > >, COMDAT
; _this$ = ecx
	push	ecx
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax]
	push	eax
	push	ecx
	lea	eax, DWORD PTR $T247527[esp+16]
	push	eax
	mov	ecx, esi
	call	?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::erase
	mov	ecx, DWORD PTR [esi+4]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	xor	eax, eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	pop	esi
	pop	ecx
	ret	0
??1?$multimap@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAE@XZ ENDP ; std::multimap<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > >::~multimap<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > >
_TEXT	ENDS
PUBLIC	??_7CvTraitEntry@@6B@				; CvTraitEntry::`vftable'
PUBLIC	??1CvTraitEntry@@QAE@XZ				; CvTraitEntry::~CvTraitEntry
PUBLIC	??_R4CvTraitEntry@@6B@				; CvTraitEntry::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCvTraitEntry@@@8			; CvTraitEntry `RTTI Type Descriptor'
PUBLIC	??_R3CvTraitEntry@@8				; CvTraitEntry::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CvTraitEntry@@8				; CvTraitEntry::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CvTraitEntry@@8			; CvTraitEntry::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CvBaseInfo@@8			; CvBaseInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCvBaseInfo@@@8				; CvBaseInfo `RTTI Type Descriptor'
PUBLIC	??_R3CvBaseInfo@@8				; CvBaseInfo::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CvBaseInfo@@8				; CvBaseInfo::`RTTI Base Class Array'
PUBLIC	?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z ; CvTraitEntry::CacheResults
EXTRN	?SafeDelete2DArray@CvDatabaseUtility@@SAXAAPAPAH@Z:PROC ; CvDatabaseUtility::SafeDelete2DArray
EXTRN	??8CvBaseInfo@@UBE_NABV0@@Z:PROC		; CvBaseInfo::operator==
EXTRN	?readFrom@CvBaseInfo@@UAEXAAVFDataStream@@@Z:PROC ; CvBaseInfo::readFrom
EXTRN	?writeTo@CvBaseInfo@@UBEXAAVFDataStream@@@Z:PROC ; CvBaseInfo::writeTo
;	COMDAT ??_R2CvBaseInfo@@8
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
rdata$r	SEGMENT
??_R2CvBaseInfo@@8 DD FLAT:??_R1A@?0A@EA@CvBaseInfo@@8	; CvBaseInfo::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CvBaseInfo@@8
rdata$r	SEGMENT
??_R3CvBaseInfo@@8 DD 00H				; CvBaseInfo::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CvBaseInfo@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCvBaseInfo@@@8
_DATA	SEGMENT
??_R0?AVCvBaseInfo@@@8 DD FLAT:??_7type_info@@6B@	; CvBaseInfo `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCvBaseInfo@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CvBaseInfo@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CvBaseInfo@@8 DD FLAT:??_R0?AVCvBaseInfo@@@8 ; CvBaseInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CvBaseInfo@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CvTraitEntry@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CvTraitEntry@@8 DD FLAT:??_R0?AVCvTraitEntry@@@8 ; CvTraitEntry::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CvTraitEntry@@8
rdata$r	ENDS
;	COMDAT ??_R2CvTraitEntry@@8
rdata$r	SEGMENT
??_R2CvTraitEntry@@8 DD FLAT:??_R1A@?0A@EA@CvTraitEntry@@8 ; CvTraitEntry::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CvBaseInfo@@8
rdata$r	ENDS
;	COMDAT ??_R3CvTraitEntry@@8
rdata$r	SEGMENT
??_R3CvTraitEntry@@8 DD 00H				; CvTraitEntry::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CvTraitEntry@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCvTraitEntry@@@8
_DATA	SEGMENT
??_R0?AVCvTraitEntry@@@8 DD FLAT:??_7type_info@@6B@	; CvTraitEntry `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCvTraitEntry@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CvTraitEntry@@6B@
rdata$r	SEGMENT
??_R4CvTraitEntry@@6B@ DD 00H				; CvTraitEntry::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCvTraitEntry@@@8
	DD	FLAT:??_R3CvTraitEntry@@8
rdata$r	ENDS
;	COMDAT ??_7CvTraitEntry@@6B@
CONST	SEGMENT
??_7CvTraitEntry@@6B@ DD FLAT:??_R4CvTraitEntry@@6B@	; CvTraitEntry::`vftable'
	DD	FLAT:?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z
	DD	FLAT:??8CvBaseInfo@@UBE_NABV0@@Z
	DD	FLAT:?readFrom@CvBaseInfo@@UAEXAAVFDataStream@@@Z
	DD	FLAT:?writeTo@CvBaseInfo@@UBEXAAVFDataStream@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CvTraitEntry@@QAE@XZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??1CvTraitEntry@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1CvTraitEntry@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvTraitEntry@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CvTraitEntry@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CvTraitEntry@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CvTraitEntry@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CvTraitEntry@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CvTraitEntry@@QAE@XZ$5
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
xdata$x	ENDS
;	COMDAT ??1CvTraitEntry@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T247795 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CvTraitEntry@@QAE@XZ PROC				; CvTraitEntry::~CvTraitEntry, COMDAT
; _this$ = ecx

; 178  : {

	push	-1
	push	__ehhandler$??1CvTraitEntry@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
	mov	DWORD PTR _this$[esp+32], esi
	mov	DWORD PTR [esi], OFFSET ??_7CvTraitEntry@@6B@

; 179  : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 180  : 	CvDatabaseUtility::SafeDelete2DArray(m_ppiImprovementYieldChanges.first, m_ppiImprovementYieldChanges.second);
; 181  : 	CvDatabaseUtility::SafeDelete2DArray(m_ppiSpecialistYieldChanges.first, m_ppiSpecialistYieldChanges.second);
; 182  : 	CvDatabaseUtility::SafeDelete2DArray(m_ppiUnimprovedFeatureYieldChanges.first, m_ppiUnimprovedFeatureYieldChanges.second);
; 183  : #else
; 184  : 	CvDatabaseUtility::SafeDelete2DArray(m_ppiImprovementYieldChanges);

	lea	eax, DWORD PTR [esi+684]
	push	eax
	mov	DWORD PTR __$EHRec$[esp+44], 5
	call	?SafeDelete2DArray@CvDatabaseUtility@@SAXAAPAPAH@Z ; CvDatabaseUtility::SafeDelete2DArray

; 185  : 	CvDatabaseUtility::SafeDelete2DArray(m_ppiSpecialistYieldChanges);

	lea	ecx, DWORD PTR [esi+688]
	push	ecx
	call	?SafeDelete2DArray@CvDatabaseUtility@@SAXAAPAPAH@Z ; CvDatabaseUtility::SafeDelete2DArray

; 186  : #ifdef LEK_TRAIT_SPECIALIST_YIELD_MAX_ONE
; 187  : 	CvDatabaseUtility::SafeDelete2DArray(m_ppiAnySpecificSpecialistYieldChanges);
; 188  : #endif
; 189  : 	CvDatabaseUtility::SafeDelete2DArray(m_ppiUnimprovedFeatureYieldChanges);

	lea	edx, DWORD PTR [esi+692]
	push	edx
	call	?SafeDelete2DArray@CvDatabaseUtility@@SAXAAPAPAH@Z ; CvDatabaseUtility::SafeDelete2DArray

; 190  : #endif
; 191  : #ifdef AUI_WARNING_FIXES
; 192  : 	SAFE_DELETE_ARRAY(m_paiExtraYieldThreshold);
; 193  : 	SAFE_DELETE_ARRAY(m_paiYieldChange);
; 194  : 	SAFE_DELETE_ARRAY(m_paiYieldChangeStrategicResources);
; 195  : 	SAFE_DELETE_ARRAY(m_paiYieldChangeLuxuryResources); // NQMP GJS - New Netherlands UA
; 196  : 	SAFE_DELETE_ARRAY(m_paiYieldChangeNaturalWonder);
; 197  : 	SAFE_DELETE_ARRAY(m_paiYieldChangePerTradePartner);
; 198  : 	SAFE_DELETE_ARRAY(m_paiYieldChangeIncomingTradeRoute);
; 199  : 	SAFE_DELETE_ARRAY(m_paiYieldModifier);
; 200  : 	SAFE_DELETE_ARRAY(m_piStrategicResourceQuantityModifier);
; 201  : 	SAFE_DELETE_ARRAY(m_piResourceQuantityModifiers);
; 202  : 	SAFE_DELETE_ARRAY(m_piMovesChangeUnitCombats);
; 203  : 	SAFE_DELETE_ARRAY(m_piMaintenanceModifierUnitCombats);
; 204  : #endif
; 205  : }

	xor	ebx, ebx
	mov	DWORD PTR [esi+744], ebx
	mov	eax, DWORD PTR [esi+752]
	add	esp, 12					; 0000000cH
	cmp	eax, ebx
	je	SHORT $LN16@CvTraitEnt
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN16@CvTraitEnt:
	mov	DWORD PTR [esi+752], ebx
	mov	DWORD PTR [esi+756], ebx
	mov	DWORD PTR [esi+760], ebx
	mov	DWORD PTR [esi+724], ebx
	mov	eax, DWORD PTR [esi+732]
	cmp	eax, ebx
	je	SHORT $LN27@CvTraitEnt
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN27@CvTraitEnt:
	mov	DWORD PTR [esi+732], ebx
	mov	DWORD PTR [esi+736], ebx
	mov	DWORD PTR [esi+740], ebx
	mov	eax, DWORD PTR [esi+712]
	cmp	eax, ebx
	je	SHORT $LN36@CvTraitEnt
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN36@CvTraitEnt:
	mov	DWORD PTR [esi+712], ebx
	mov	DWORD PTR [esi+716], ebx
	mov	DWORD PTR [esi+720], ebx
	mov	eax, DWORD PTR [esi+700]
	mov	ecx, DWORD PTR [eax]
	lea	edi, DWORD PTR [esi+696]
	push	eax
	push	ecx
	lea	eax, DWORD PTR $T247795[esp+40]
	push	eax
	mov	ecx, edi
	mov	BYTE PTR __$EHRec$[esp+52], 1
	call	?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::erase
	mov	eax, DWORD PTR [edi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	lea	ecx, DWORD PTR [esi+608]
	mov	DWORD PTR [edi+4], ebx
	mov	DWORD PTR [edi+8], ebx
	mov	BYTE PTR __$EHRec$[esp+40], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+40], -1
	call	??1CvBaseInfo@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[esp+32]
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 20					; 00000014H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CvTraitEntry@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CvBaseInfo@@QAE@XZ
__unwindfunclet$??1CvTraitEntry@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 608				; 00000260H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvTraitEntry@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 696				; 000002b8H
	jmp	??1?$multimap@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAE@XZ
__unwindfunclet$??1CvTraitEntry@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 708				; 000002c4H
	jmp	??1?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE@XZ ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::~vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >
__unwindfunclet$??1CvTraitEntry@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 724				; 000002d4H
	jmp	??1?$vector@_NV?$allocator@_N@std@@@std@@QAE@XZ ; std::vector<bool,std::allocator<bool> >::~vector<bool,std::allocator<bool> >
__unwindfunclet$??1CvTraitEntry@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 744				; 000002e8H
	jmp	??1?$vector@_NV?$allocator@_N@std@@@std@@QAE@XZ ; std::vector<bool,std::allocator<bool> >::~vector<bool,std::allocator<bool> >
__ehhandler$??1CvTraitEntry@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1CvTraitEntry@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CvTraitEntry@@QAE@XZ ENDP				; CvTraitEntry::~CvTraitEntry
PUBLIC	??0?$multimap@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAE@ABV01@@Z ; std::multimap<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > >::multimap<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$multimap@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0?$multimap@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAE@ABV01@@Z PROC ; std::multimap<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > >::multimap<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > >, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@ABV01@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >
	mov	eax, esi
	pop	esi
	ret	4
??0?$multimap@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAE@ABV01@@Z ENDP ; std::multimap<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > >::multimap<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > >
_TEXT	ENDS
PUBLIC	??0CvPlayerTraits@@QAE@XZ			; CvPlayerTraits::CvPlayerTraits
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
xdata$x	SEGMENT
__ehfuncinfo$??0CvPlayerTraits@@QAE@XZ DD 019930522H
	DD	0dH
	DD	FLAT:__unwindtable$??0CvPlayerTraits@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CvPlayerTraits@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$9
	DD	09H
	DD	FLAT:__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$10
	DD	0aH
	DD	FLAT:__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$11
	DD	0bH
	DD	FLAT:__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$12
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
xdata$x	ENDS
;	COMDAT ??0CvPlayerTraits@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CvPlayerTraits@@QAE@XZ PROC				; CvPlayerTraits::CvPlayerTraits, COMDAT
; _this$ = ecx

; 1667 : {

	push	-1
	push	__ehhandler$??0CvPlayerTraits@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], ecx
	mov	DWORD PTR [eax+24], ecx
	mov	DWORD PTR [eax+32], ecx
	mov	DWORD PTR [eax+36], ecx
	mov	DWORD PTR [eax+40], ecx
	mov	DWORD PTR [eax+616], ecx
	mov	DWORD PTR [eax+620], ecx
	mov	DWORD PTR [eax+624], ecx
	mov	DWORD PTR [eax+628], ecx
	mov	DWORD PTR [eax+636], ecx
	mov	DWORD PTR [eax+640], ecx
	mov	DWORD PTR [eax+644], ecx
	mov	DWORD PTR [eax+648], ecx
	mov	DWORD PTR [eax+656], ecx
	mov	DWORD PTR [eax+660], ecx
	mov	DWORD PTR [eax+664], ecx
	lea	edx, DWORD PTR [eax+680]
	mov	DWORD PTR [eax+672], ecx
	mov	DWORD PTR [eax+676], 5
	mov	DWORD PTR [eax+668], edx
	mov	DWORD PTR [eax+728], ecx
	mov	DWORD PTR [eax+732], ecx
	mov	DWORD PTR [eax+736], ecx
	mov	DWORD PTR [eax+768], ecx
	mov	DWORD PTR [eax+772], ecx
	mov	DWORD PTR [eax+776], ecx
	mov	DWORD PTR [eax+784], ecx
	mov	DWORD PTR [eax+788], ecx
	mov	DWORD PTR [eax+792], ecx
	mov	DWORD PTR [eax+800], ecx
	mov	DWORD PTR [eax+804], ecx
	mov	DWORD PTR [eax+808], ecx
	mov	DWORD PTR [eax+816], ecx
	mov	DWORD PTR [eax+820], ecx
	mov	DWORD PTR [eax+824], ecx
	mov	DWORD PTR [eax+832], ecx
	mov	DWORD PTR [eax+836], ecx
	mov	DWORD PTR [eax+840], ecx
	mov	DWORD PTR [eax+848], ecx
	mov	DWORD PTR [eax+852], ecx
	mov	DWORD PTR [eax+856], ecx
	mov	DWORD PTR [eax+864], ecx
	mov	DWORD PTR [eax+868], ecx
	mov	DWORD PTR [eax+872], ecx

; 1668 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$vector@_NV?$allocator@_N@std@@@std@@QAE@XZ ; std::vector<bool,std::allocator<bool> >::~vector<bool,std::allocator<bool> >
__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	jmp	??1?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE@XZ ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::~vector<enum TraitTypes,std::allocator<enum TraitTypes> >
__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 612				; 00000264H
	jmp	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 628				; 00000274H
	jmp	??1?$vector@_NV?$allocator@_N@std@@@std@@QAE@XZ ; std::vector<bool,std::allocator<bool> >::~vector<bool,std::allocator<bool> >
__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 648				; 00000288H
	jmp	??1?$vector@_NV?$allocator@_N@std@@@std@@QAE@XZ ; std::vector<bool,std::allocator<bool> >::~vector<bool,std::allocator<bool> >
__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 668				; 0000029cH
	jmp	??1?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<FreeTraitUnit,5,1,297,0>::~FStaticVector<FreeTraitUnit,5,1,297,0>
__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 724				; 000002d4H
	jmp	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 764				; 000002fcH
	jmp	??1?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@XZ ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::~vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >
__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$8:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 780				; 0000030cH
	jmp	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$9:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 796				; 0000031cH
	jmp	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$10:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 812				; 0000032cH
	jmp	??1?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@XZ ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::~vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >
__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$11:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 828				; 0000033cH
	jmp	??1?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@XZ ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::~vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >
__unwindfunclet$??0CvPlayerTraits@@QAE@XZ$12:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 844				; 0000034cH
	jmp	??1?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@XZ ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::~vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >
__ehhandler$??0CvPlayerTraits@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??0CvPlayerTraits@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CvPlayerTraits@@QAE@XZ ENDP				; CvPlayerTraits::CvPlayerTraits
PUBLIC	?Uninit@CvPlayerTraits@@QAEXXZ			; CvPlayerTraits::Uninit
; Function compile flags: /Ogtpy
;	COMDAT ?Uninit@CvPlayerTraits@@QAEXXZ
_TEXT	SEGMENT
$T251395 = -8						; size = 1
__Cat$251400 = -8					; size = 1
$T251397 = -8						; size = 1
$T251205 = -8						; size = 1
__Cat$251210 = -8					; size = 1
$T251207 = -8						; size = 1
$T250992 = -8						; size = 1
__Cat$250997 = -8					; size = 1
$T250994 = -8						; size = 1
$T250372 = -8						; size = 8
$T250369 = -8						; size = 8
$T250198 = -8						; size = 8
$T250195 = -8						; size = 8
?Uninit@CvPlayerTraits@@QAEXXZ PROC			; CvPlayerTraits::Uninit, COMDAT
; _this$ = ecx

; 2048 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx

; 2049 : 	m_aiResourceQuantityModifier.clear();

	mov	ecx, DWORD PTR [esi+620]
	push	edi
	mov	edi, DWORD PTR [esi+616]
	xor	ebx, ebx
	cmp	edi, ecx
	je	SHORT $LN17@Uninit
	mov	eax, ecx
	sub	eax, ecx
	sar	eax, 2
	cmp	eax, ebx
	lea	edx, DWORD PTR [eax*4]
	lea	ebp, DWORD PTR [edx+edi]
	jle	SHORT $LN42@Uninit
	push	edx
	push	ecx
	push	edx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN42@Uninit:
	mov	DWORD PTR [esi+620], ebp
$LN17@Uninit:

; 2050 : 	m_abNoTrain.clear();

	mov	eax, DWORD PTR [esi+628]
	mov	ebp, DWORD PTR [esi+636]
	lea	edi, DWORD PTR [esi+628]
	mov	DWORD PTR $T250195[esp+24], ebp
	mov	DWORD PTR $T250195[esp+28], ebx
	cmp	eax, ebx
	jbe	SHORT $LN64@Uninit
	push	eax
	lea	ecx, DWORD PTR $T250195[esp+28]
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
$LN64@Uninit:
	mov	ecx, DWORD PTR $T250195[esp+28]
	mov	edx, DWORD PTR $T250195[esp+24]
	push	ecx
	push	edx
	xor	eax, eax
	push	eax
	push	ebp
	lea	eax, DWORD PTR $T250198[esp+40]
	push	eax
	mov	ecx, edi
	call	?erase@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@V?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@0@Z ; std::vector<bool,std::allocator<bool> >::erase

; 2051 : 	//EAP: No build
; 2052 : 	m_abNoBuild.clear();

	mov	eax, DWORD PTR [esi+648]
	mov	ebp, DWORD PTR [esi+656]
	lea	edi, DWORD PTR [esi+648]
	mov	DWORD PTR $T250369[esp+24], ebp
	mov	DWORD PTR $T250369[esp+28], ebx
	cmp	eax, ebx
	jbe	SHORT $LN99@Uninit
	push	eax
	lea	ecx, DWORD PTR $T250369[esp+28]
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
$LN99@Uninit:
	mov	ecx, DWORD PTR $T250369[esp+28]
	mov	edx, DWORD PTR $T250369[esp+24]
	push	ecx
	push	edx
	xor	eax, eax
	push	eax
	push	ebp
	lea	eax, DWORD PTR $T250372[esp+40]
	push	eax
	mov	ecx, edi
	call	?erase@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@V?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@0@Z ; std::vector<bool,std::allocator<bool> >::erase

; 2053 : 
; 2054 : 	m_paiMovesChangeUnitCombat.clear();

	mov	edx, DWORD PTR [esi+784]
	mov	ecx, DWORD PTR [esi+788]
	cmp	edx, ecx
	je	SHORT $LN129@Uninit
	mov	eax, ecx
	sub	eax, ecx
	sar	eax, 2
	cmp	eax, ebx
	lea	edi, DWORD PTR [eax*4]
	lea	ebp, DWORD PTR [edx+edi]
	jle	SHORT $LN154@Uninit
	push	edi
	push	ecx
	push	edi
	push	edx
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN154@Uninit:
	mov	DWORD PTR [esi+788], ebp
$LN129@Uninit:

; 2055 : 	m_paiMaintenanceModifierUnitCombat.clear();

	mov	edi, DWORD PTR [esi+800]
	mov	ecx, DWORD PTR [esi+804]
	cmp	edi, ecx
	je	SHORT $LN171@Uninit
	mov	eax, ecx
	sub	eax, ecx
	sar	eax, 2
	cmp	eax, ebx
	lea	edx, DWORD PTR [eax*4]
	lea	ebp, DWORD PTR [edi+edx]
	jle	SHORT $LN196@Uninit
	push	edx
	push	ecx
	push	edx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN196@Uninit:
	mov	DWORD PTR [esi+804], ebp
$LN171@Uninit:

; 2056 : 	m_ppaaiImprovementYieldChange.clear();

	mov	ecx, DWORD PTR [esi+816]
	mov	eax, DWORD PTR [esi+820]
	cmp	ecx, eax
	je	SHORT $LN213@Uninit
	mov	BYTE PTR $T250992[esp+24], bl
	mov	edx, DWORD PTR $T250992[esp+24]
	push	edx
	mov	edx, DWORD PTR __Cat$250997[esp+28]
	push	edx
	mov	edx, DWORD PTR $T250994[esp+32]
	push	edx
	push	ecx
	push	eax
	push	eax
	call	??$_Copy_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::random_access_iterator_tag>
	add	esp, 24					; 00000018H
	mov	DWORD PTR [esi+820], eax
$LN213@Uninit:

; 2057 : 	m_ppaaiSpecialistYieldChange.clear();

	mov	ecx, DWORD PTR [esi+832]
	mov	eax, DWORD PTR [esi+836]
	cmp	ecx, eax
	je	SHORT $LN252@Uninit
	mov	BYTE PTR $T251205[esp+24], bl
	mov	edx, DWORD PTR $T251205[esp+24]
	push	edx
	mov	edx, DWORD PTR __Cat$251210[esp+28]
	push	edx
	mov	edx, DWORD PTR $T251207[esp+32]
	push	edx
	push	ecx
	push	eax
	push	eax
	call	??$_Copy_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::random_access_iterator_tag>
	add	esp, 24					; 00000018H
	mov	DWORD PTR [esi+836], eax
$LN252@Uninit:

; 2058 : 
; 2059 : #ifdef LEK_TRAIT_SPECIALIST_YIELD_MAX_ONE
; 2060 : 	m_ppaaiAnySpecificSpecialistYieldChange.clear();
; 2061 : #endif
; 2062 : 
; 2063 : 	m_ppaaiUnimprovedFeatureYieldChange.clear();

	mov	ecx, DWORD PTR [esi+848]
	mov	eax, DWORD PTR [esi+852]
	cmp	ecx, eax
	je	SHORT $LN291@Uninit
	mov	BYTE PTR $T251395[esp+24], bl
	mov	edx, DWORD PTR $T251395[esp+24]
	push	edx
	mov	edx, DWORD PTR __Cat$251400[esp+28]
	push	edx
	mov	edx, DWORD PTR $T251397[esp+32]
	push	edx
	push	ecx
	push	eax
	push	eax
	call	??$_Copy_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::random_access_iterator_tag>
	add	esp, 24					; 00000018H
	mov	DWORD PTR [esi+852], eax
$LN291@Uninit:

; 2064 : 	m_aFreeResourceXCities.clear();

	mov	ecx, DWORD PTR [esi+864]
	mov	edx, DWORD PTR [esi+868]
	cmp	ecx, edx
	je	SHORT $LN330@Uninit
	mov	eax, edx
	cmp	edx, edx
	je	SHORT $LN355@Uninit
	npad	7
$LL357@Uninit:
	mov	edi, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edi
	mov	edi, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edi
	add	eax, 8
	add	ecx, 8
	cmp	eax, edx
	jne	SHORT $LL357@Uninit
$LN355@Uninit:
	mov	DWORD PTR [esi+868], ecx
$LN330@Uninit:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 2065 : }

	add	esp, 8
	ret	0
?Uninit@CvPlayerTraits@@QAEXXZ ENDP			; CvPlayerTraits::Uninit
_TEXT	ENDS
PUBLIC	?resize@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z ; std::vector<int,std::allocator<int> >::resize
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?resize@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
$T251751 = -4						; size = 4
$T251715 = 8						; size = 4
__Newsize$ = 8						; size = 4
?resize@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z PROC ; std::vector<int,std::allocator<int> >::resize, COMDAT
; _this$ = ecx

; 712  : 		{	// determine new length, padding with _Ty() elements as needed

	push	ecx

; 713  : 		resize(_Newsize, _Ty());

	mov	edx, DWORD PTR __Newsize$[esp]
	push	esi
	mov	esi, DWORD PTR [ecx+8]
	push	edi
	mov	edi, DWORD PTR [ecx+4]
	mov	eax, esi
	sub	eax, edi
	sar	eax, 2
	mov	DWORD PTR $T251751[esp+12], 0
	cmp	edx, eax
	jbe	SHORT $LN38@resize@2
	lea	edi, DWORD PTR $T251751[esp+12]
	push	edi
	sub	edx, eax
	push	edx
	push	esi
	call	?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z ; std::vector<int,std::allocator<int> >::_Insert_n
	pop	edi
	pop	esi

; 714  : 		}

	pop	ecx
	ret	4
$LN38@resize@2:

; 713  : 		resize(_Newsize, _Ty());

	jae	SHORT $LN3@resize@2
	lea	eax, DWORD PTR [edi+edx*4]
	push	esi
	push	eax
	lea	eax, DWORD PTR $T251715[esp+16]
	push	eax
	call	?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@0@Z ; std::vector<int,std::allocator<int> >::erase
$LN3@resize@2:
	pop	edi
	pop	esi

; 714  : 		}

	pop	ecx
	ret	4
?resize@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z ENDP ; std::vector<int,std::allocator<int> >::resize
_TEXT	ENDS
PUBLIC	??0?$multimap@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAE@XZ ; std::multimap<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > >::multimap<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\map
;	COMDAT ??0?$multimap@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$multimap@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAE@XZ PROC ; std::multimap<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > >::multimap<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > >, COMDAT
; _this$ = ecx

; 228  : 		{	// construct empty map from defaults

	push	esi
	mov	esi, ecx
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Buynode
	mov	DWORD PTR [esi+4], eax
	mov	BYTE PTR [eax+21], 1
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], eax
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+8], eax
	mov	DWORD PTR [esi+8], 0

; 229  : 		}

	mov	eax, esi
	pop	esi
	ret	0
??0?$multimap@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAE@XZ ENDP ; std::multimap<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > >::multimap<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > >
_TEXT	ENDS
PUBLIC	??0?$vector@IV?$allocator@I@std@@@std@@QAE@IABI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@IABI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Val$ = 12						; size = 4
??0?$vector@IV?$allocator@I@std@@@std@@QAE@IABI@Z PROC	; std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> >, COMDAT
; _this$ = ecx

; 489  : 		_Construct_n(_Count, _Val);

	mov	eax, DWORD PTR __Val$[esp-4]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR __Count$[esp]
	push	eax
	push	ecx
	mov	ecx, esi
	call	?_Construct_n@?$vector@IV?$allocator@I@std@@@std@@QAEXIABI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Construct_n

; 490  : 		}

	mov	eax, esi
	pop	esi
	ret	8
??0?$vector@IV?$allocator@I@std@@@std@@QAE@IABI@Z ENDP	; std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> >
_TEXT	ENDS
PUBLIC	?resize@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEXIV?$Array@H$05@Firaxis@@@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::resize
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEXIV?$Array@H$05@Firaxis@@@Z
_TEXT	SEGMENT
$T252014 = 8						; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 24
?resize@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEXIV?$Array@H$05@Firaxis@@@Z PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::resize, COMDAT
; _this$ = ecx

; 717  : 		{	// determine new length, padding with _Val elements as needed

	push	esi

; 718  : 		if (size() < _Newsize)

	mov	esi, DWORD PTR [ecx+8]
	push	edi
	mov	edi, DWORD PTR [ecx+4]
	mov	edx, esi
	sub	edx, edi
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edx, DWORD PTR __Newsize$[esp+4]
	cmp	edx, eax
	jbe	SHORT $LN36@resize@3

; 719  : 			_Insert_n(end(), _Newsize - size(), _Val);

	lea	edi, DWORD PTR __Val$[esp+4]
	push	edi
	sub	edx, eax
	push	edx
	push	esi
	call	?_Insert_n@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@IABV?$Array@H$05@Firaxis@@@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Insert_n
	pop	edi
	pop	esi

; 722  : 		}

	ret	28					; 0000001cH
$LN36@resize@3:

; 720  : 		else if (_Newsize < size())

	jae	SHORT $LN1@resize@3

; 721  : 			erase(begin() + _Newsize, end());

	lea	eax, DWORD PTR [edx+edx*2]
	push	esi
	lea	eax, DWORD PTR [edi+eax*8]
	push	eax
	lea	edx, DWORD PTR $T252014[esp+12]
	push	edx
	call	?erase@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@0@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::erase
$LN1@resize@3:
	pop	edi
	pop	esi

; 722  : 		}

	ret	28					; 0000001cH
?resize@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEXIV?$Array@H$05@Firaxis@@@Z ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::resize
_TEXT	ENDS
PUBLIC	?insert@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE?AV?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@V?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@ABUFreeResourceXCities@@@Z ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::insert
; Function compile flags: /Ogtpy
;	COMDAT ?insert@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE?AV?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@V?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@ABUFreeResourceXCities@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE?AV?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@V?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@ABUFreeResourceXCities@@@Z PROC ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::insert, COMDAT
; _this$ = ecx

; 875  : 		{	// insert _Val at _Where

	push	esi
	push	edi
	mov	edi, ecx

; 876  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi+8]
	sub	ecx, eax
	test	ecx, -8					; fffffff8H
	mov	ecx, DWORD PTR __Where$[esp+4]
	jne	SHORT $LN3@insert@3
	xor	esi, esi
	jmp	SHORT $LN4@insert@3
$LN3@insert@3:
	mov	esi, ecx
	sub	esi, eax
	sar	esi, 3
$LN4@insert@3:

; 877  : 		_Insert_n(_Where, (size_type)1, _Val);

	mov	edx, DWORD PTR __Val$[esp+4]
	push	edx
	push	1
	push	ecx
	mov	ecx, edi
	call	?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Insert_n

; 878  : 		return (begin() + _Off);

	mov	eax, DWORD PTR [edi+4]
	lea	ecx, DWORD PTR [eax+esi*8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi

; 879  : 		}

	ret	12					; 0000000cH
?insert@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE?AV?$_Vector_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@V?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@ABUFreeResourceXCities@@@Z ENDP ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::insert
_TEXT	ENDS
PUBLIC	?_Insert_n@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@IABW4TraitTypes@@@Z ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Insert_n
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@IABW4TraitTypes@@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@IABW4TraitTypes@@@Z$2
__catchsym$?_Insert_n@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@IABW4TraitTypes@@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@IABW4TraitTypes@@@Z$0
__unwindtable$?_Insert_n@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@IABW4TraitTypes@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Insert_n@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@IABW4TraitTypes@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@IABW4TraitTypes@@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@IABW4TraitTypes@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Insert_n@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@IABW4TraitTypes@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@IABW4TraitTypes@@@Z$4
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@IABW4TraitTypes@@@Z$5
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@IABW4TraitTypes@@@Z
_TEXT	SEGMENT
__Capacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Cat$252357 = 8					; size = 1
__Cat$252285 = 8					; size = 1
__Where$ = 8						; size = 4
__Tmp$225960 = 12					; size = 4
__Tmp$225950 = 12					; size = 4
__Newvec$225935 = 12					; size = 4
__Count$ = 12						; size = 4
tv515 = 16						; size = 4
$T252353 = 16						; size = 1
$T252281 = 16						; size = 1
__Val$ = 16						; size = 4
?_Insert_n@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@IABW4TraitTypes@@@Z PROC ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@IABW4TraitTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	esi
	mov	esi, ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	edx, DWORD PTR [esi+4]
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	test	edx, edx
	jne	SHORT $LN29@Insert_n@5
	xor	ecx, ecx
	jmp	SHORT $LN30@Insert_n@5
$LN29@Insert_n@5:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, edx
	sar	eax, 2
	mov	ecx, eax
$LN30@Insert_n@5:

; 1162 : 
; 1163 : 		if (_Count == 0)

	mov	edi, DWORD PTR __Count$[ebp]
	test	edi, edi
	je	$LN1@Insert_n@5

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	ebx, DWORD PTR [esi+8]
	mov	eax, ebx
	sub	eax, edx
	sar	eax, 2
	mov	edx, 1073741823				; 3fffffffH
	sub	edx, eax
	cmp	edx, edi
	jae	SHORT $LN12@Insert_n@5

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@KAXXZ ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Xlen
$LN87@Insert_n@5:
$LN12@Insert_n@5:

; 1167 : 		else if (_Capacity < size() + _Count)

	lea	edx, DWORD PTR [eax+edi]
	cmp	ecx, edx
	jae	$LN10@Insert_n@5

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	eax, ecx
	shr	eax, 1
	mov	ebx, 1073741823				; 3fffffffH
	sub	ebx, eax
	cmp	ebx, ecx
	jae	SHORT $LN17@Insert_n@5
	mov	DWORD PTR __Capacity$[ebp], 0
	mov	ecx, DWORD PTR __Capacity$[ebp]
	jmp	SHORT $LN18@Insert_n@5
$LN17@Insert_n@5:
	add	ecx, eax
	mov	DWORD PTR __Capacity$[ebp], ecx
$LN18@Insert_n@5:

; 1171 : 			if (_Capacity < size() + _Count)

	cmp	ecx, edx
	jae	SHORT $LN9@Insert_n@5

; 1172 : 				_Capacity = size() + _Count;

	mov	DWORD PTR __Capacity$[ebp], edx
	mov	ecx, edx
$LN9@Insert_n@5:

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

	push	0
	push	ecx
	call	??$_Allocate@W4TraitTypes@@@std@@YAPAW4TraitTypes@@IPAW41@@Z ; std::_Allocate<enum TraitTypes>

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	ebx, DWORD PTR __Where$[ebp]
	sub	ebx, DWORD PTR [esi+4]

; 1175 : 			int _Ncopied = 0;
; 1176 : 
; 1177 : 			_TRY_BEGIN
; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	ecx, DWORD PTR __Val$[ebp]
	add	esp, 8
	push	ecx
	sar	ebx, 2
	push	edi
	lea	edx, DWORD PTR [eax+ebx*4]
	push	edx
	mov	ecx, esi
	mov	DWORD PTR __Newvec$225935[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	?_Ufill@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEPAW4TraitTypes@@PAW43@IABW43@@Z ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Ufill

; 1179 : 			++_Ncopied;
; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	edx, DWORD PTR __Cat$252285[ebp]
	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR $T252281[ebp], 0
	mov	ecx, DWORD PTR $T252281[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Newvec$225935[ebp]
	push	edx
	mov	edx, DWORD PTR __Where$[ebp]
	push	esi
	push	ecx
	push	edx
	push	eax
	call	??$_Uninit_copy@PAW4TraitTypes@@PAW41@V?$allocator@W4TraitTypes@@@std@@@std@@YAPAW4TraitTypes@@PAW41@00AAV?$allocator@W4TraitTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<enum TraitTypes *,enum TraitTypes *,std::allocator<enum TraitTypes> >

; 1182 : 			++_Ncopied;
; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	eax, DWORD PTR [esi+8]
	add	esp, 24					; 00000018H
	mov	BYTE PTR $T252353[ebp], 0
	mov	edx, DWORD PTR $T252353[ebp]
	push	edx
	mov	edx, DWORD PTR __Cat$252357[ebp]
	push	edx
	lea	ecx, DWORD PTR [ebx+edi]
	mov	ebx, DWORD PTR __Newvec$225935[ebp]
	push	esi
	lea	ecx, DWORD PTR [ebx+ecx*4]
	push	ecx
	push	eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??$_Uninit_copy@PAW4TraitTypes@@PAW41@V?$allocator@W4TraitTypes@@@std@@@std@@YAPAW4TraitTypes@@PAW41@00AAV?$allocator@W4TraitTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<enum TraitTypes *,enum TraitTypes *,std::allocator<enum TraitTypes> >

; 1192 : 			_CATCH_END
; 1193 : 
; 1194 : 			_Count += size();

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, eax
	sar	ecx, 2
	add	esp, 24					; 00000018H
	add	edi, ecx

; 1195 : 			if (_Myfirst != 0)

	test	eax, eax
	je	SHORT $LN81@Insert_n@5

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);
; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN81@Insert_n@5:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	edx, DWORD PTR __Capacity$[ebp]
	lea	eax, DWORD PTR [ebx+edx*4]

; 1206 : 			_Mylast = _Newvec + _Count;

	lea	ecx, DWORD PTR [ebx+edi*4]
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+8], ecx

; 1207 : 			_Myfirst = _Newvec;

	mov	DWORD PTR [esi+4], ebx

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
__catch$?_Insert_n@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@IABW4TraitTypes@@@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)
; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);
; 1188 : 			if (0 < _Ncopied)
; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);
; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	mov	edx, DWORD PTR __Newvec$225935[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
__catch$?_Insert_n@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@IABW4TraitTypes@@@Z$2:

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN88@Insert_n@5:
$LN10@Insert_n@5:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	eax, DWORD PTR __Where$[ebp]
	mov	ecx, ebx
	sub	ecx, eax
	sar	ecx, 2
	cmp	ecx, edi
	jae	SHORT $LN3@Insert_n@5

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	edx, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$225950[ebp], ecx

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	lea	ecx, DWORD PTR [edi*4]
	mov	DWORD PTR tv515[ebp], ecx
	add	ecx, eax
	push	ecx
	push	ebx
	push	eax
	mov	ecx, esi
	call	??$_Umove@PAW4TraitTypes@@@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEPAW4TraitTypes@@PAW42@00@Z ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Umove<enum TraitTypes *>

; 1215 : 
; 1216 : 			_TRY_BEGIN
; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, eax
	sub	ecx, DWORD PTR __Where$[ebp]
	lea	edx, DWORD PTR __Tmp$225950[ebp]
	sar	ecx, 2
	push	edx
	sub	edi, ecx
	push	edi
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	call	?_Ufill@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEPAW4TraitTypes@@PAW43@IABW43@@Z ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Ufill

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 1221 : 			_RERAISE;
; 1222 : 			_CATCH_END
; 1223 : 
; 1224 : 			_Mylast += _Count;

	mov	eax, DWORD PTR tv515[ebp]
	add	DWORD PTR [esi+8], eax
	mov	esi, DWORD PTR [esi+8]

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	lea	edx, DWORD PTR __Tmp$225950[ebp]
	push	edx
	sub	esi, eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	esi
	push	eax
	call	??$fill@PAW4TraitTypes@@W41@@std@@YAXPAW4TraitTypes@@0ABW41@@Z ; std::fill<enum TraitTypes *,enum TraitTypes>
	add	esp, 12					; 0000000cH

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN3@Insert_n@5:

; 1232 : 			}
; 1233 : 		else
; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;
; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	lea	eax, DWORD PTR [edi*4]
	push	ebx
	mov	edi, ebx
	sub	edi, eax
	push	ebx
	push	edi
	mov	ecx, esi
	mov	DWORD PTR __Tmp$225960[ebp], edx
	mov	DWORD PTR tv515[ebp], eax
	call	??$_Umove@PAW4TraitTypes@@@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEPAW4TraitTypes@@PAW42@00@Z ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Umove<enum TraitTypes *>

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	push	ebx
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	edi
	push	eax
	call	??$_Unchecked_move_backward@PAW4TraitTypes@@PAW41@@stdext@@YAPAW4TraitTypes@@PAW41@00@Z ; stdext::_Unchecked_move_backward<enum TraitTypes *,enum TraitTypes *>

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	mov	eax, DWORD PTR __Where$[ebp]
	mov	edx, DWORD PTR tv515[ebp]
	lea	ecx, DWORD PTR __Tmp$225960[ebp]
	push	ecx
	add	edx, eax
	push	edx
	push	eax
	call	??$fill@PAW4TraitTypes@@W41@@std@@YAXPAW4TraitTypes@@0ABW41@@Z ; std::fill<enum TraitTypes *,enum TraitTypes>
	add	esp, 24					; 00000018H
$LN1@Insert_n@5:

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN86@Insert_n@5:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Insert_n@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@IABW4TraitTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@IABW4TraitTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@IABW4TraitTypes@@@Z ENDP ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Insert_n
PUBLIC	?_Insert_n@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@IABUMayaBonusChoice@@@Z ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Insert_n
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.h
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@IABUMayaBonusChoice@@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@IABUMayaBonusChoice@@@Z$2
__catchsym$?_Insert_n@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@IABUMayaBonusChoice@@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@IABUMayaBonusChoice@@@Z$0
__unwindtable$?_Insert_n@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@IABUMayaBonusChoice@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Insert_n@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@IABUMayaBonusChoice@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@IABUMayaBonusChoice@@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@IABUMayaBonusChoice@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Insert_n@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@IABUMayaBonusChoice@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@IABUMayaBonusChoice@@@Z$4
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@IABUMayaBonusChoice@@@Z$5
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@IABUMayaBonusChoice@@@Z
_TEXT	SEGMENT
__Tmp$226017 = -24					; size = 8
__Tmp$226007 = -24					; size = 8
__Capacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Cat$252592 = 8					; size = 1
__Cat$252520 = 8					; size = 1
__Where$ = 8						; size = 4
__Newvec$225992 = 12					; size = 4
__Count$ = 12						; size = 4
tv515 = 16						; size = 4
$T252588 = 16						; size = 1
$T252516 = 16						; size = 1
__Val$ = 16						; size = 4
?_Insert_n@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@IABUMayaBonusChoice@@@Z PROC ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@IABUMayaBonusChoice@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	mov	esi, ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	edx, DWORD PTR [esi+4]
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	test	edx, edx
	jne	SHORT $LN29@Insert_n@6
	xor	ecx, ecx
	jmp	SHORT $LN30@Insert_n@6
$LN29@Insert_n@6:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, edx
	sar	eax, 3
	mov	ecx, eax
$LN30@Insert_n@6:

; 1162 : 
; 1163 : 		if (_Count == 0)

	mov	ebx, DWORD PTR __Count$[ebp]
	test	ebx, ebx
	je	$LN1@Insert_n@6

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	edi, DWORD PTR [esi+8]
	mov	eax, edi
	sub	eax, edx
	sar	eax, 3
	mov	edx, 536870911				; 1fffffffH
	sub	edx, eax
	cmp	edx, ebx
	jae	SHORT $LN12@Insert_n@6

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@KAXXZ ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Xlen
$LN91@Insert_n@6:
$LN12@Insert_n@6:

; 1167 : 		else if (_Capacity < size() + _Count)

	lea	edx, DWORD PTR [eax+ebx]
	cmp	ecx, edx
	jae	$LN10@Insert_n@6

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	eax, ecx
	shr	eax, 1
	mov	edi, 536870911				; 1fffffffH
	sub	edi, eax
	cmp	edi, ecx
	jae	SHORT $LN17@Insert_n@6
	mov	DWORD PTR __Capacity$[ebp], 0
	mov	ecx, DWORD PTR __Capacity$[ebp]
	jmp	SHORT $LN18@Insert_n@6
$LN17@Insert_n@6:
	add	ecx, eax
	mov	DWORD PTR __Capacity$[ebp], ecx
$LN18@Insert_n@6:

; 1171 : 			if (_Capacity < size() + _Count)

	cmp	ecx, edx
	jae	SHORT $LN9@Insert_n@6

; 1172 : 				_Capacity = size() + _Count;

	mov	DWORD PTR __Capacity$[ebp], edx
	mov	ecx, edx
$LN9@Insert_n@6:

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

	push	0
	push	ecx
	call	??$_Allocate@UMayaBonusChoice@@@std@@YAPAUMayaBonusChoice@@IPAU1@@Z ; std::_Allocate<MayaBonusChoice>

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	edi, DWORD PTR __Where$[ebp]
	sub	edi, DWORD PTR [esi+4]

; 1175 : 			int _Ncopied = 0;
; 1176 : 
; 1177 : 			_TRY_BEGIN
; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	ecx, DWORD PTR __Val$[ebp]
	add	esp, 8
	push	ecx
	sar	edi, 3
	push	ebx
	lea	edx, DWORD PTR [eax+edi*8]
	push	edx
	mov	ecx, esi
	mov	DWORD PTR __Newvec$225992[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	?_Ufill@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEPAUMayaBonusChoice@@PAU3@IABU3@@Z ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Ufill

; 1179 : 			++_Ncopied;
; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	edx, DWORD PTR __Cat$252520[ebp]
	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR $T252516[ebp], 0
	mov	ecx, DWORD PTR $T252516[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Newvec$225992[ebp]
	push	edx
	mov	edx, DWORD PTR __Where$[ebp]
	push	esi
	push	ecx
	push	edx
	push	eax
	call	??$_Uninit_copy@PAUMayaBonusChoice@@PAU1@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAPAUMayaBonusChoice@@PAU1@00AAV?$allocator@UMayaBonusChoice@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<MayaBonusChoice *,MayaBonusChoice *,std::allocator<MayaBonusChoice> >

; 1182 : 			++_Ncopied;
; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	eax, DWORD PTR [esi+8]
	add	esp, 24					; 00000018H
	mov	BYTE PTR $T252588[ebp], 0
	mov	edx, DWORD PTR $T252588[ebp]
	push	edx
	mov	edx, DWORD PTR __Cat$252592[ebp]
	push	edx
	lea	ecx, DWORD PTR [edi+ebx]
	mov	edi, DWORD PTR __Newvec$225992[ebp]
	push	esi
	lea	ecx, DWORD PTR [edi+ecx*8]
	push	ecx
	push	eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??$_Uninit_copy@PAUMayaBonusChoice@@PAU1@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAPAUMayaBonusChoice@@PAU1@00AAV?$allocator@UMayaBonusChoice@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<MayaBonusChoice *,MayaBonusChoice *,std::allocator<MayaBonusChoice> >

; 1192 : 			_CATCH_END
; 1193 : 
; 1194 : 			_Count += size();

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, eax
	sar	ecx, 3
	add	esp, 24					; 00000018H
	add	ebx, ecx

; 1195 : 			if (_Myfirst != 0)

	test	eax, eax
	je	SHORT $LN81@Insert_n@6

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);
; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN81@Insert_n@6:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	edx, DWORD PTR __Capacity$[ebp]
	lea	eax, DWORD PTR [edi+edx*8]

; 1206 : 			_Mylast = _Newvec + _Count;

	lea	ecx, DWORD PTR [edi+ebx*8]
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+8], ecx

; 1207 : 			_Myfirst = _Newvec;

	mov	DWORD PTR [esi+4], edi

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
__catch$?_Insert_n@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@IABUMayaBonusChoice@@@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)
; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);
; 1188 : 			if (0 < _Ncopied)
; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);
; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	mov	edx, DWORD PTR __Newvec$225992[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
__catch$?_Insert_n@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@IABUMayaBonusChoice@@@Z$2:

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN92@Insert_n@6:
$LN10@Insert_n@6:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	eax, DWORD PTR __Where$[ebp]
	mov	ecx, edi
	sub	ecx, eax
	sar	ecx, 3
	cmp	ecx, ebx
	jae	SHORT $LN3@Insert_n@6

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$226007[ebp+4], ecx

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	lea	ecx, DWORD PTR [ebx*8]
	mov	DWORD PTR tv515[ebp], ecx
	add	ecx, eax
	push	ecx
	push	edi
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __Tmp$226007[ebp], edx
	call	??$_Umove@PAUMayaBonusChoice@@@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEPAUMayaBonusChoice@@PAU2@00@Z ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Umove<MayaBonusChoice *>

; 1215 : 
; 1216 : 			_TRY_BEGIN
; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, eax
	sub	ecx, DWORD PTR __Where$[ebp]
	lea	edx, DWORD PTR __Tmp$226007[ebp]
	sar	ecx, 3
	push	edx
	sub	ebx, ecx
	push	ebx
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	call	?_Ufill@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEPAUMayaBonusChoice@@PAU3@IABU3@@Z ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Ufill

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 1221 : 			_RERAISE;
; 1222 : 			_CATCH_END
; 1223 : 
; 1224 : 			_Mylast += _Count;

	mov	eax, DWORD PTR tv515[ebp]
	add	DWORD PTR [esi+8], eax
	mov	esi, DWORD PTR [esi+8]

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	lea	edx, DWORD PTR __Tmp$226007[ebp]
	push	edx
	sub	esi, eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	esi
	push	eax
	call	??$fill@PAUMayaBonusChoice@@U1@@std@@YAXPAUMayaBonusChoice@@0ABU1@@Z ; std::fill<MayaBonusChoice *,MayaBonusChoice>
	add	esp, 12					; 0000000cH

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN3@Insert_n@6:

; 1232 : 			}
; 1233 : 		else
; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;
; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	lea	eax, DWORD PTR [ebx*8]
	push	edi
	mov	ebx, edi
	sub	ebx, eax
	push	edi
	mov	DWORD PTR __Tmp$226017[ebp], ecx
	push	ebx
	mov	ecx, esi
	mov	DWORD PTR __Tmp$226017[ebp+4], edx
	mov	DWORD PTR tv515[ebp], eax
	call	??$_Umove@PAUMayaBonusChoice@@@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEPAUMayaBonusChoice@@PAU2@00@Z ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Umove<MayaBonusChoice *>

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	push	edi
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	ebx
	push	eax
	call	??$_Unchecked_move_backward@PAUMayaBonusChoice@@PAU1@@stdext@@YAPAUMayaBonusChoice@@PAU1@00@Z ; stdext::_Unchecked_move_backward<MayaBonusChoice *,MayaBonusChoice *>

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	mov	eax, DWORD PTR __Where$[ebp]
	mov	edx, DWORD PTR tv515[ebp]
	lea	ecx, DWORD PTR __Tmp$226017[ebp]
	push	ecx
	add	edx, eax
	push	edx
	push	eax
	call	??$fill@PAUMayaBonusChoice@@U1@@std@@YAXPAUMayaBonusChoice@@0ABU1@@Z ; std::fill<MayaBonusChoice *,MayaBonusChoice>
	add	esp, 24					; 00000018H
$LN1@Insert_n@6:

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN90@Insert_n@6:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Insert_n@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@IABUMayaBonusChoice@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@IABUMayaBonusChoice@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@IABUMayaBonusChoice@@@Z ENDP ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Insert_n
PUBLIC	??$ReadHashedDataArray@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@AAV?$vector@HV?$allocator@H@std@@@std@@@Z ; CvInfosSerializationHelper::ReadHashedDataArray<int>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvinfosserializationhelper.h
;	COMDAT ??$ReadHashedDataArray@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@AAV?$vector@HV?$allocator@H@std@@@std@@@Z
_TEXT	SEGMENT
_uiNumEntries$ = -20					; size = 4
_iI$226334 = -16					; size = 4
$T252765 = -12						; size = 4
$T252776 = -8						; size = 4
_tDummy$226345 = -4					; size = 4
_kStream$ = 8						; size = 4
_bValid$226338 = 12					; size = 1
_aiArray$ = 12						; size = 4
??$ReadHashedDataArray@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@AAV?$vector@HV?$allocator@H@std@@@std@@@Z PROC ; CvInfosSerializationHelper::ReadHashedDataArray<int>, COMDAT

; 390  : {

	sub	esp, 20					; 00000014H
	push	ebx

; 391  : 	uint uiNumEntries;
; 392  : 
; 393  : 	kStream >> uiNumEntries;

	mov	ebx, DWORD PTR _kStream$[esp+20]
	push	esi
	lea	eax, DWORD PTR _uiNumEntries$[esp+28]
	push	eax
	mov	ecx, ebx
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 394  : 
; 395  : 	if(aiArray.size() < uiNumEntries)

	mov	esi, DWORD PTR _aiArray$[esp+24]
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR _uiNumEntries$[esp+28]
	sar	ecx, 2
	cmp	ecx, eax
	jae	SHORT $LN8@ReadHashed@2

; 396  : 		aiArray.resize(uiNumEntries);

	push	eax
	mov	ecx, esi
	call	?resize@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z ; std::vector<int,std::allocator<int> >::resize
	mov	eax, DWORD PTR _uiNumEntries$[esp+28]
$LN8@ReadHashed@2:

; 397  : 
; 398  : 	for(uint iI = 0; iI < uiNumEntries; iI++)

	mov	DWORD PTR _iI$226334[esp+28], 0
	test	eax, eax
	jbe	$LN5@ReadHashed@2
	push	ebp
	push	edi
$LL7@ReadHashed@2:

; 399  : 	{
; 400  : 		bool bValid;
; 401  : 		int iType = ReadHashed(kStream, &bValid);

	lea	edx, DWORD PTR _bValid$226338[esp+32]
	push	edx
	push	ebx
	call	?ReadHashed@CvInfosSerializationHelper@@YAHAAVFDataStream@@PA_N@Z ; CvInfosSerializationHelper::ReadHashed
	mov	edi, eax
	add	esp, 8

; 402  : 		if(iType != -1)

	cmp	edi, -1
	je	SHORT $LN4@ReadHashed@2

; 403  : 		{
; 404  : 			if (iType >= (int)aiArray.size())

	mov	edx, DWORD PTR [esi+8]
	mov	ebp, DWORD PTR [esi+4]
	mov	eax, edx
	sub	eax, ebp
	sar	eax, 2
	cmp	edi, eax
	jl	SHORT $LN19@ReadHashed@2

; 405  : 				aiArray.resize(iType+1);

	lea	ecx, DWORD PTR [edi+1]
	mov	DWORD PTR $T252765[esp+36], 0
	cmp	ecx, eax
	jbe	SHORT $LN62@ReadHashed@2
	lea	ebp, DWORD PTR $T252765[esp+36]
	push	ebp
	sub	ecx, eax
	push	ecx
	push	edx
	mov	ecx, esi
	call	?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z ; std::vector<int,std::allocator<int> >::_Insert_n

; 406  : 
; 407  : 			kStream >> aiArray[iType];

	mov	ecx, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [ecx+edi*4]
	push	edx
	jmp	SHORT $LN63@ReadHashed@2
$LN62@ReadHashed@2:

; 405  : 				aiArray.resize(iType+1);

	jae	SHORT $LN19@ReadHashed@2
	lea	eax, DWORD PTR [ebp+ecx*4]
	push	edx
	push	eax
	lea	eax, DWORD PTR $T252776[esp+44]
	push	eax
	mov	ecx, esi
	call	?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@0@Z ; std::vector<int,std::allocator<int> >::erase
$LN19@ReadHashed@2:

; 406  : 
; 407  : 			kStream >> aiArray[iType];

	mov	ecx, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [ecx+edi*4]
	push	edx
	jmp	SHORT $LN63@ReadHashed@2
$LN4@ReadHashed@2:

; 408  : 		}
; 409  : 		else if(!bValid)

	cmp	BYTE PTR _bValid$226338[esp+32], 0
	jne	SHORT $LN6@ReadHashed@2

; 410  : 		{
; 411  : 			TData tDummy;
; 412  : 			kStream >> tDummy;

	lea	eax, DWORD PTR _tDummy$226345[esp+36]
	push	eax
$LN63@ReadHashed@2:
	mov	ecx, ebx
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
$LN6@ReadHashed@2:
	mov	eax, DWORD PTR _iI$226334[esp+36]
	inc	eax
	mov	DWORD PTR _iI$226334[esp+36], eax
	cmp	eax, DWORD PTR _uiNumEntries$[esp+36]
	jb	$LL7@ReadHashed@2
	pop	edi
	pop	ebp
$LN5@ReadHashed@2:
	pop	esi
	pop	ebx

; 413  : 		}
; 414  : 	}
; 415  : }

	add	esp, 20					; 00000014H
	ret	0
??$ReadHashedDataArray@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@AAV?$vector@HV?$allocator@H@std@@@std@@@Z ENDP ; CvInfosSerializationHelper::ReadHashedDataArray<int>
_TEXT	ENDS
PUBLIC	??_GCvTraitEntry@@QAEPAXI@Z			; CvTraitEntry::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_GCvTraitEntry@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCvTraitEntry@@QAEPAXI@Z PROC			; CvTraitEntry::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1CvTraitEntry@@QAE@XZ			; CvTraitEntry::~CvTraitEntry
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar@5
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@5:
	mov	eax, esi
	pop	esi
	ret	4
??_GCvTraitEntry@@QAEPAXI@Z ENDP			; CvTraitEntry::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEXABH@Z ; std::vector<int,std::allocator<int> >::push_back
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEXABH@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEXABH@Z PROC ; std::vector<int,std::allocator<int> >::push_back, COMDAT
; _this$ = ecx

; 809  : 		{	// insert element at end

	push	esi

; 810  : 		if (size() < capacity())

	mov	esi, DWORD PTR [ecx+4]
	push	edi
	test	esi, esi
	jne	SHORT $LN9@push_back@2
	xor	eax, eax
	jmp	SHORT $LN10@push_back@2
$LN9@push_back@2:
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, esi
	sar	eax, 2
$LN10@push_back@2:
	mov	edx, DWORD PTR [ecx+8]
	mov	edi, edx
	sub	edi, esi
	sar	edi, 2
	cmp	edi, eax

; 811  : 
; 812  :  #if _HAS_ITERATOR_DEBUGGING
; 813  : 			{ // room at end, construct it there
; 814  : 			_Orphan_range(_Mylast, _Mylast);
; 815  : 			_Mylast = _Ufill(_Mylast, 1, _Val);
; 816  : 			}
; 817  : 
; 818  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 819  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

	mov	eax, DWORD PTR __Val$[esp+4]
	pop	edi
	pop	esi
	jae	SHORT $LN2@push_back@2
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	add	edx, 4
	mov	DWORD PTR [ecx+8], edx

; 824  : 		}

	ret	4
$LN2@push_back@2:

; 820  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 821  : 
; 822  : 		else
; 823  : 			insert(end(), _Val);

	push	eax
	push	1
	push	edx
	call	?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z ; std::vector<int,std::allocator<int> >::_Insert_n

; 824  : 		}

	ret	4
?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEXABH@Z ENDP ; std::vector<int,std::allocator<int> >::push_back
_TEXT	ENDS
PUBLIC	?insert@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@ABV?$Array@H$05@Firaxis@@@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::insert
; Function compile flags: /Ogtpy
;	COMDAT ?insert@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@ABV?$Array@H$05@Firaxis@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@ABV?$Array@H$05@Firaxis@@@Z PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::insert, COMDAT
; _this$ = ecx

; 875  : 		{	// insert _Val at _Where

	push	ebx

; 876  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

	mov	ebx, DWORD PTR __Where$[esp]
	push	esi
	push	edi
	mov	edi, ecx
	mov	esi, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi+8]
	sub	ecx, esi
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	jne	SHORT $LN3@insert@4
	xor	esi, esi
	jmp	SHORT $LN4@insert@4
$LN3@insert@4:
	mov	ecx, ebx
	sub	ecx, esi
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 2
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
$LN4@insert@4:

; 877  : 		_Insert_n(_Where, (size_type)1, _Val);

	mov	ecx, DWORD PTR __Val$[esp+8]
	push	ecx
	push	1
	push	ebx
	mov	ecx, edi
	call	?_Insert_n@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@IAEXV?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@IABV?$Array@H$05@Firaxis@@@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::_Insert_n

; 878  : 		return (begin() + _Off);

	mov	eax, DWORD PTR [edi+4]
	lea	edx, DWORD PTR [esi+esi*2]
	pop	edi
	lea	ecx, DWORD PTR [eax+edx*8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	pop	esi
	mov	DWORD PTR [eax], ecx
	pop	ebx

; 879  : 		}

	ret	12					; 0000000cH
?insert@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@ABV?$Array@H$05@Firaxis@@@Z ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::insert
_TEXT	ENDS
PUBLIC	?resize@?$vector@IV?$allocator@I@std@@@std@@QAEXII@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::resize
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$vector@IV?$allocator@I@std@@@std@@QAEXII@Z
_TEXT	SEGMENT
$T253151 = 8						; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
?resize@?$vector@IV?$allocator@I@std@@@std@@QAEXII@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::resize, COMDAT
; _this$ = ecx

; 718  : 		if (size() < _Newsize)

	mov	edx, DWORD PTR __Newsize$[esp-4]
	push	esi
	mov	esi, DWORD PTR [ecx+8]
	push	edi
	mov	edi, DWORD PTR [ecx+4]
	mov	eax, esi
	sub	eax, edi
	sar	eax, 2
	cmp	edx, eax
	jbe	SHORT $LN36@resize@4

; 719  : 			_Insert_n(end(), _Newsize - size(), _Val);

	lea	edi, DWORD PTR __Val$[esp+4]
	push	edi
	sub	edx, eax
	push	edx
	push	esi
	call	?_Insert_n@?$vector@IV?$allocator@I@std@@@std@@IAEXV?$_Vector_const_iterator@IV?$allocator@I@std@@@2@IABI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Insert_n
	pop	edi
	pop	esi

; 722  : 		}

	ret	8
$LN36@resize@4:

; 720  : 		else if (_Newsize < size())

	jae	SHORT $LN1@resize@4

; 721  : 			erase(begin() + _Newsize, end());

	lea	eax, DWORD PTR [edi+edx*4]
	push	esi
	push	eax
	lea	eax, DWORD PTR $T253151[esp+12]
	push	eax
	call	?erase@?$vector@IV?$allocator@I@std@@@std@@QAE?AV?$_Vector_iterator@IV?$allocator@I@std@@@2@V?$_Vector_const_iterator@IV?$allocator@I@std@@@2@0@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::erase
$LN1@resize@4:
	pop	edi
	pop	esi

; 722  : 		}

	ret	8
?resize@?$vector@IV?$allocator@I@std@@@std@@QAEXII@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::resize
_TEXT	ENDS
PUBLIC	??0CvTraitEntry@@QAE@XZ				; CvTraitEntry::CvTraitEntry
EXTRN	??0CvBaseInfo@@QAE@XZ:PROC			; CvBaseInfo::CvBaseInfo
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
xdata$x	SEGMENT
__ehfuncinfo$??0CvTraitEntry@@QAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0CvTraitEntry@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CvTraitEntry@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CvTraitEntry@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CvTraitEntry@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CvTraitEntry@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CvTraitEntry@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CvTraitEntry@@QAE@XZ$4
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
xdata$x	ENDS
;	COMDAT ??0CvTraitEntry@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CvTraitEntry@@QAE@XZ PROC				; CvTraitEntry::CvTraitEntry, COMDAT
; _this$ = ecx

; 173  : {

	push	-1
	push	__ehhandler$??0CvTraitEntry@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
	mov	DWORD PTR _this$[esp+28], esi
	call	??0CvBaseInfo@@QAE@XZ			; CvBaseInfo::CvBaseInfo
	xor	ebx, ebx
	or	eax, -1
	mov	DWORD PTR __$EHRec$[esp+36], ebx
	mov	DWORD PTR [esi], OFFSET ??_7CvTraitEntry@@6B@
	mov	DWORD PTR [esi+260], ebx
	mov	DWORD PTR [esi+264], ebx
	mov	DWORD PTR [esi+268], ebx
	mov	DWORD PTR [esi+272], ebx
	mov	DWORD PTR [esi+276], ebx
	mov	DWORD PTR [esi+280], ebx
	mov	DWORD PTR [esi+284], ebx
	mov	DWORD PTR [esi+288], ebx
	mov	DWORD PTR [esi+292], ebx
	mov	DWORD PTR [esi+296], ebx
	mov	DWORD PTR [esi+300], ebx
	mov	DWORD PTR [esi+304], ebx
	mov	DWORD PTR [esi+308], ebx
	mov	DWORD PTR [esi+312], ebx
	mov	DWORD PTR [esi+316], ebx
	mov	DWORD PTR [esi+320], ebx
	mov	DWORD PTR [esi+324], ebx
	mov	DWORD PTR [esi+328], ebx
	mov	DWORD PTR [esi+332], ebx
	mov	DWORD PTR [esi+336], ebx
	mov	DWORD PTR [esi+340], ebx
	mov	DWORD PTR [esi+344], ebx
	mov	DWORD PTR [esi+348], ebx
	mov	DWORD PTR [esi+352], ebx
	mov	DWORD PTR [esi+356], ebx
	mov	DWORD PTR [esi+360], ebx
	mov	DWORD PTR [esi+364], ebx
	mov	DWORD PTR [esi+368], ebx
	mov	DWORD PTR [esi+372], ebx
	mov	DWORD PTR [esi+376], ebx
	mov	DWORD PTR [esi+380], ebx
	mov	DWORD PTR [esi+384], ebx
	mov	DWORD PTR [esi+388], ebx
	mov	DWORD PTR [esi+392], ebx
	mov	DWORD PTR [esi+396], ebx
	mov	DWORD PTR [esi+400], ebx
	mov	DWORD PTR [esi+404], ebx
	mov	DWORD PTR [esi+408], ebx
	mov	DWORD PTR [esi+412], ebx
	mov	DWORD PTR [esi+416], eax
	mov	DWORD PTR [esi+420], eax
	mov	DWORD PTR [esi+424], ebx
	mov	DWORD PTR [esi+428], eax
	mov	DWORD PTR [esi+432], ebx
	mov	DWORD PTR [esi+436], ebx
	mov	DWORD PTR [esi+440], ebx
	mov	DWORD PTR [esi+444], ebx
	mov	DWORD PTR [esi+448], ebx
	mov	DWORD PTR [esi+452], ebx
	mov	DWORD PTR [esi+456], ebx
	mov	DWORD PTR [esi+460], ebx
	mov	DWORD PTR [esi+464], ebx
	mov	DWORD PTR [esi+468], ebx
	mov	DWORD PTR [esi+472], ebx
	mov	DWORD PTR [esi+476], ebx
	mov	DWORD PTR [esi+480], ebx
	mov	DWORD PTR [esi+484], ebx
	mov	DWORD PTR [esi+488], ebx
	mov	DWORD PTR [esi+492], ebx
	mov	DWORD PTR [esi+496], ebx
	mov	DWORD PTR [esi+500], ebx
	mov	DWORD PTR [esi+504], ebx
	mov	DWORD PTR [esi+508], ebx
	mov	DWORD PTR [esi+512], ebx
	mov	DWORD PTR [esi+516], ebx
	mov	DWORD PTR [esi+520], ebx
	mov	DWORD PTR [esi+524], ebx
	mov	DWORD PTR [esi+528], ebx
	mov	DWORD PTR [esi+532], ebx
	mov	DWORD PTR [esi+556], eax
	mov	DWORD PTR [esi+564], eax
	mov	DWORD PTR [esi+568], eax
	mov	DWORD PTR [esi+572], eax
	mov	DWORD PTR [esi+576], eax
	mov	DWORD PTR [esi+580], eax
	mov	BYTE PTR [esi+584], bl
	mov	BYTE PTR [esi+585], bl
	mov	BYTE PTR [esi+586], bl
	mov	BYTE PTR [esi+587], bl
	mov	BYTE PTR [esi+588], bl
	mov	BYTE PTR [esi+589], bl
	mov	BYTE PTR [esi+590], bl
	mov	BYTE PTR [esi+591], bl
	mov	BYTE PTR [esi+592], bl
	mov	BYTE PTR [esi+593], bl
	mov	BYTE PTR [esi+594], bl
	mov	BYTE PTR [esi+595], bl
	mov	BYTE PTR [esi+596], bl
	mov	BYTE PTR [esi+597], bl
	mov	BYTE PTR [esi+598], bl
	mov	BYTE PTR [esi+599], bl
	mov	BYTE PTR [esi+600], bl
	mov	BYTE PTR [esi+601], bl
	mov	BYTE PTR [esi+602], bl
	mov	BYTE PTR [esi+603], bl
	mov	BYTE PTR [esi+604], bl
	lea	ecx, DWORD PTR [esi+608]
	mov	BYTE PTR [esi+605], bl
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR [esi+636], ebx
	mov	DWORD PTR [esi+640], ebx
	mov	DWORD PTR [esi+644], ebx
	mov	DWORD PTR [esi+648], ebx
	mov	DWORD PTR [esi+652], ebx
	mov	DWORD PTR [esi+656], ebx
	mov	DWORD PTR [esi+660], ebx
	mov	DWORD PTR [esi+664], ebx
	mov	DWORD PTR [esi+668], ebx
	mov	DWORD PTR [esi+672], ebx
	mov	DWORD PTR [esi+684], ebx
	lea	edi, DWORD PTR [esi+696]
	mov	DWORD PTR [esi+688], ebx
	mov	ecx, edi
	mov	BYTE PTR __$EHRec$[esp+36], 1
	mov	DWORD PTR [esi+692], ebx
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Buynode
	mov	DWORD PTR [edi+4], eax
	mov	BYTE PTR [eax+21], 1
	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], eax
	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+8], eax
	mov	DWORD PTR [edi+8], ebx
	mov	DWORD PTR [esi+712], ebx
	mov	DWORD PTR [esi+716], ebx
	mov	DWORD PTR [esi+720], ebx
	mov	DWORD PTR [esi+724], ebx
	mov	DWORD PTR [esi+732], ebx
	mov	DWORD PTR [esi+736], ebx
	mov	DWORD PTR [esi+740], ebx

; 174  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR [esi+744], ebx
	mov	DWORD PTR [esi+752], ebx
	mov	DWORD PTR [esi+756], ebx
	mov	DWORD PTR [esi+760], ebx
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CvTraitEntry@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CvBaseInfo@@QAE@XZ
__unwindfunclet$??0CvTraitEntry@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 608				; 00000260H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??0CvTraitEntry@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 696				; 000002b8H
	jmp	??1?$multimap@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAE@XZ
__unwindfunclet$??0CvTraitEntry@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 708				; 000002c4H
	jmp	??1?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE@XZ ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::~vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >
__unwindfunclet$??0CvTraitEntry@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 724				; 000002d4H
	jmp	??1?$vector@_NV?$allocator@_N@std@@@std@@QAE@XZ ; std::vector<bool,std::allocator<bool> >::~vector<bool,std::allocator<bool> >
__ehhandler$??0CvTraitEntry@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??0CvTraitEntry@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CvTraitEntry@@QAE@XZ ENDP				; CvTraitEntry::CvTraitEntry
PUBLIC	??1CvPlayerTraits@@QAE@XZ			; CvPlayerTraits::~CvPlayerTraits
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__ehfuncinfo$??1CvPlayerTraits@@QAE@XZ DD 019930522H
	DD	0eH
	DD	FLAT:__unwindtable$??1CvPlayerTraits@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1CvPlayerTraits@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$9
	DD	09H
	DD	FLAT:__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$10
	DD	0aH
	DD	FLAT:__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$11
	DD	0bH
	DD	FLAT:__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$12
	DD	0cH
	DD	FLAT:__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$13
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
xdata$x	ENDS
;	COMDAT ??1CvPlayerTraits@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CvPlayerTraits@@QAE@XZ PROC				; CvPlayerTraits::~CvPlayerTraits, COMDAT
; _this$ = ecx

; 1672 : {

	push	-1
	push	__ehhandler$??1CvPlayerTraits@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	mov	esi, ecx
	push	edi
	mov	DWORD PTR _this$[esp+24], esi
	mov	DWORD PTR __$EHRec$[esp+32], 13		; 0000000dH

; 1673 : 	Uninit();

	call	?Uninit@CvPlayerTraits@@QAEXXZ		; CvPlayerTraits::Uninit

; 1674 : }

	mov	eax, DWORD PTR [esi+864]
	xor	edi, edi
	cmp	eax, edi
	je	SHORT $LN22@CvPlayerTr
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN22@CvPlayerTr:
	mov	DWORD PTR [esi+864], edi
	mov	DWORD PTR [esi+868], edi
	mov	DWORD PTR [esi+872], edi
	mov	eax, DWORD PTR [esi+848]
	cmp	eax, edi
	je	SHORT $LN29@CvPlayerTr
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN29@CvPlayerTr:
	mov	DWORD PTR [esi+848], edi
	mov	DWORD PTR [esi+852], edi
	mov	DWORD PTR [esi+856], edi
	mov	eax, DWORD PTR [esi+832]
	cmp	eax, edi
	je	SHORT $LN36@CvPlayerTr
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN36@CvPlayerTr:
	mov	DWORD PTR [esi+832], edi
	mov	DWORD PTR [esi+836], edi
	mov	DWORD PTR [esi+840], edi
	mov	eax, DWORD PTR [esi+816]
	cmp	eax, edi
	je	SHORT $LN43@CvPlayerTr
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN43@CvPlayerTr:
	mov	DWORD PTR [esi+816], edi
	mov	DWORD PTR [esi+820], edi
	mov	DWORD PTR [esi+824], edi
	mov	eax, DWORD PTR [esi+800]
	cmp	eax, edi
	je	SHORT $LN50@CvPlayerTr
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN50@CvPlayerTr:
	mov	DWORD PTR [esi+800], edi
	mov	DWORD PTR [esi+804], edi
	mov	DWORD PTR [esi+808], edi
	mov	eax, DWORD PTR [esi+784]
	cmp	eax, edi
	je	SHORT $LN57@CvPlayerTr
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN57@CvPlayerTr:
	mov	DWORD PTR [esi+784], edi
	mov	DWORD PTR [esi+788], edi
	mov	DWORD PTR [esi+792], edi
	mov	eax, DWORD PTR [esi+768]
	cmp	eax, edi
	je	SHORT $LN64@CvPlayerTr
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN64@CvPlayerTr:
	mov	DWORD PTR [esi+768], edi
	mov	DWORD PTR [esi+772], edi
	mov	DWORD PTR [esi+776], edi
	mov	eax, DWORD PTR [esi+728]
	cmp	eax, edi
	je	SHORT $LN71@CvPlayerTr
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN71@CvPlayerTr:
	mov	DWORD PTR [esi+728], edi
	mov	DWORD PTR [esi+732], edi
	mov	DWORD PTR [esi+736], edi
	mov	eax, DWORD PTR [esi+668]
	lea	ecx, DWORD PTR [esi+680]
	mov	BYTE PTR __$EHRec$[esp+32], 4
	cmp	eax, ecx
	je	SHORT $LN75@CvPlayerTr
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN75@CvPlayerTr:
	mov	DWORD PTR [esi+648], edi
	mov	eax, DWORD PTR [esi+656]
	cmp	eax, edi
	je	SHORT $LN94@CvPlayerTr
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN94@CvPlayerTr:
	mov	DWORD PTR [esi+656], edi
	mov	DWORD PTR [esi+660], edi
	mov	DWORD PTR [esi+664], edi
	mov	DWORD PTR [esi+628], edi
	mov	eax, DWORD PTR [esi+636]
	cmp	eax, edi
	je	SHORT $LN105@CvPlayerTr
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN105@CvPlayerTr:
	mov	DWORD PTR [esi+636], edi
	mov	DWORD PTR [esi+640], edi
	mov	DWORD PTR [esi+644], edi
	mov	eax, DWORD PTR [esi+616]
	cmp	eax, edi
	je	SHORT $LN114@CvPlayerTr
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN114@CvPlayerTr:
	mov	DWORD PTR [esi+616], edi
	mov	DWORD PTR [esi+620], edi
	mov	DWORD PTR [esi+624], edi
	mov	eax, DWORD PTR [esi+32]
	cmp	eax, edi
	je	SHORT $LN121@CvPlayerTr
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN121@CvPlayerTr:
	mov	DWORD PTR [esi+32], edi
	mov	DWORD PTR [esi+36], edi
	mov	DWORD PTR [esi+40], edi
	mov	DWORD PTR [esi+8], edi
	mov	eax, DWORD PTR [esi+16]
	cmp	eax, edi
	je	SHORT $LN130@CvPlayerTr
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN130@CvPlayerTr:
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR [esi+16], edi
	mov	DWORD PTR [esi+20], edi
	mov	DWORD PTR [esi+24], edi
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$vector@_NV?$allocator@_N@std@@@std@@QAE@XZ ; std::vector<bool,std::allocator<bool> >::~vector<bool,std::allocator<bool> >
__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	jmp	??1?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE@XZ ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::~vector<enum TraitTypes,std::allocator<enum TraitTypes> >
__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 612				; 00000264H
	jmp	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 628				; 00000274H
	jmp	??1?$vector@_NV?$allocator@_N@std@@@std@@QAE@XZ ; std::vector<bool,std::allocator<bool> >::~vector<bool,std::allocator<bool> >
__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 648				; 00000288H
	jmp	??1?$vector@_NV?$allocator@_N@std@@@std@@QAE@XZ ; std::vector<bool,std::allocator<bool> >::~vector<bool,std::allocator<bool> >
__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 668				; 0000029cH
	jmp	??1?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@QAE@XZ ; FStaticVector<FreeTraitUnit,5,1,297,0>::~FStaticVector<FreeTraitUnit,5,1,297,0>
__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 724				; 000002d4H
	jmp	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 764				; 000002fcH
	jmp	??1?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE@XZ ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::~vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >
__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$8:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 780				; 0000030cH
	jmp	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$9:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 796				; 0000031cH
	jmp	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$10:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 812				; 0000032cH
	jmp	??1?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@XZ ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::~vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >
__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$11:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 828				; 0000033cH
	jmp	??1?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@XZ ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::~vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >
__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$12:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 844				; 0000034cH
	jmp	??1?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE@XZ ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::~vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >
__unwindfunclet$??1CvPlayerTraits@@QAE@XZ$13:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 860				; 0000035cH
	jmp	??1?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAE@XZ ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::~vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >
__ehhandler$??1CvPlayerTraits@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1CvPlayerTraits@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CvPlayerTraits@@QAE@XZ ENDP				; CvPlayerTraits::~CvPlayerTraits
PUBLIC	?AddUniqueLuxuries@CvPlayerTraits@@QAEXPAVCvCity@@@Z ; CvPlayerTraits::AddUniqueLuxuries
EXTRN	?setResourceType@CvPlot@@QAEXW4ResourceTypes@@H_N@Z:PROC ; CvPlot::setResourceType
EXTRN	?plot@CvCity@@QBEPAVCvPlot@@XZ:PROC		; CvCity::plot
EXTRN	?getArea@CvCity@@QBEHXZ:PROC			; CvCity::getArea
EXTRN	?isCoastal@CvCity@@QBE_NH@Z:PROC		; CvCity::isCoastal
; Function compile flags: /Ogtpy
;	COMDAT ?AddUniqueLuxuries@CvPlayerTraits@@QAEXPAVCvCity@@@Z
_TEXT	SEGMENT
tv433 = -8						; size = 4
_iArea$223898 = -8					; size = 4
$T254432 = -4						; size = 4
_iNumUniquesFound$223917 = -4				; size = 4
$T254427 = -4						; size = 4
_pCity$ = 8						; size = 4
?AddUniqueLuxuries@CvPlayerTraits@@QAEXPAVCvCity@@@Z PROC ; CvPlayerTraits::AddUniqueLuxuries, COMDAT
; _this$ = ecx

; 2581 : {

	sub	esp, 8
	push	ebx
	mov	ebx, ecx

; 2582 : 	// Still have more of these cities to award?
; 2583 : 	if (m_iUniqueLuxuryCities > m_iUniqueLuxuryCitiesPlaced)

	mov	eax, DWORD PTR [ebx+300]
	cmp	eax, DWORD PTR [ebx+308]
	jle	$LN1@AddUniqueL

; 2584 : 	{
; 2585 : 		// NQMP GJS - Spice Islanders changed it so this ability will NEVER trigger in the capital, even if it's not requiring a new area BEGIN
; 2586 : 		if (m_pPlayer->GetNumCitiesFounded() == 1)

	mov	ecx, DWORD PTR [ebx+4]
	call	?GetNumCitiesFounded@CvPlayer@@QBEHXZ	; CvPlayer::GetNumCitiesFounded
	cmp	eax, 1
	je	$LN1@AddUniqueL
	push	esi

; 2587 : 		{
; 2588 : 			return;
; 2589 : 		}
; 2590 : 		// NQMP GJS - Spice Islanders changed it so this ability will NEVER trigger in the capital, even if it's not requiring a new area END
; 2591 : 
; 2592 : 		// NQMP GJS - Spice Islanders must be coastal BEGIN
; 2593 : 		if (!pCity->isCoastal())

	mov	esi, DWORD PTR _pCity$[esp+12]
	push	-1
	mov	ecx, esi
	call	?isCoastal@CvCity@@QBE_NH@Z		; CvCity::isCoastal
	test	al, al
	je	$LN94@AddUniqueL
	push	ebp
	push	edi

; 2594 : 		{
; 2595 : 			return;
; 2596 : 		}
; 2597 : 		// NQMP GJS - Spice Islanders must be coastal END
; 2598 : 
; 2599 : 		int iArea = pCity->getArea();

	mov	ecx, esi
	call	?getArea@CvCity@@QBEHXZ			; CvCity::getArea

; 2600 : 
; 2601 : 		// If we have to be in a new area, check to see if this area is okay
; 2602 : 		if (m_bUniqueLuxuryRequiresNewArea)

	cmp	BYTE PTR [ebx+353], 0
	mov	DWORD PTR _iArea$223898[esp+24], eax
	je	$LN88@AddUniqueL

; 2603 : 		{
; 2604 : 			/* NQMP GJS - Spice Islanders changed it so this ability will NEVER trigger in the capital, even if it's not requiring a new area
; 2605 : 			// Can't be the capital itself of the area where the capital was founded
; 2606 : 			if (m_pPlayer->GetNumCitiesFounded() == 1)
; 2607 : 			{
; 2608 : 				return;
; 2609 : 			}
; 2610 : 			*/
; 2611 : 
; 2612 : 			CvPlot *pOriginalCapitalPlot = GC.getMap().plot(m_pPlayer->GetOriginalCapitalX(), m_pPlayer->GetOriginalCapitalY());

	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	ecx, DWORD PTR [ebx+4]
	mov	DWORD PTR $T254432[esp+24], edi
	call	?GetOriginalCapitalY@CvPlayer@@QBEHXZ	; CvPlayer::GetOriginalCapitalY
	mov	ecx, DWORD PTR [ebx+4]
	mov	ebp, eax
	call	?GetOriginalCapitalX@CvPlayer@@QBEHXZ	; CvPlayer::GetOriginalCapitalX
	cmp	eax, -2147483647			; 80000001H
	je	$LN87@AddUniqueL
	cmp	ebp, -2147483647			; 80000001H
	je	$LN87@AddUniqueL
	cmp	BYTE PTR [edi+4056], 0
	mov	ecx, DWORD PTR [edi+4020]
	je	SHORT $LN86@AddUniqueL
	test	eax, eax
	jge	SHORT $LN30@AddUniqueL
	cdq
	idiv	ecx
	mov	esi, edx
	add	esi, ecx
	jmp	SHORT $LN32@AddUniqueL
$LN30@AddUniqueL:
	cmp	eax, ecx
	jl	SHORT $LN86@AddUniqueL
	cdq
	idiv	ecx
	mov	esi, edx
	jmp	SHORT $LN32@AddUniqueL
$LN86@AddUniqueL:
	mov	esi, eax
$LN32@AddUniqueL:
	mov	edx, DWORD PTR $T254432[esp+24]
	cmp	BYTE PTR [edx+4057], 0
	mov	edi, DWORD PTR [edi+4024]
	je	SHORT $LN93@AddUniqueL
	test	ebp, ebp
	jge	SHORT $LN40@AddUniqueL
	mov	eax, ebp
	cdq
	idiv	edi
	add	edx, edi
	jmp	SHORT $LN42@AddUniqueL
$LN40@AddUniqueL:
	cmp	ebp, edi
	jl	SHORT $LN93@AddUniqueL
	mov	eax, ebp
	cdq
	idiv	edi
	jmp	SHORT $LN42@AddUniqueL
$LN93@AddUniqueL:
	mov	edx, ebp
$LN42@AddUniqueL:
	test	esi, esi
	jl	SHORT $LN87@AddUniqueL
	cmp	esi, ecx
	jge	SHORT $LN87@AddUniqueL
	test	edx, edx
	jl	SHORT $LN87@AddUniqueL
	cmp	edx, edi
	jge	SHORT $LN87@AddUniqueL
	mov	eax, DWORD PTR $T254432[esp+24]
	imul	ecx, edx
	add	ecx, esi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [eax+4068]

; 2613 : 			if (pOriginalCapitalPlot)

	test	ecx, ecx
	je	SHORT $LN87@AddUniqueL

; 2614 : 			{
; 2615 : 				if (pOriginalCapitalPlot->getArea() == iArea)

	mov	edx, DWORD PTR _iArea$223898[esp+24]
	cmp	DWORD PTR [ecx+356], edx
	je	$LN95@AddUniqueL
$LN87@AddUniqueL:

; 2616 : 				{
; 2617 : 					return;
; 2618 : 				}
; 2619 : 			}
; 2620 : 
; 2621 : 			// Already in the list?
; 2622 : 			if (std::find (m_aUniqueLuxuryAreas.begin(), m_aUniqueLuxuryAreas.end(), iArea) != m_aUniqueLuxuryAreas.end())

	mov	esi, DWORD PTR [ebx+732]
	mov	eax, DWORD PTR [ebx+728]
	lea	ecx, DWORD PTR _iArea$223898[esp+24]
	push	ecx
	push	esi
	push	eax
	lea	edx, DWORD PTR $T254427[esp+36]
	push	edx
	call	??$find@V?$_Vector_iterator@HV?$allocator@H@std@@@std@@H@std@@YA?AV?$_Vector_iterator@HV?$allocator@H@std@@@0@V10@0ABH@Z ; std::find<std::_Vector_iterator<int,std::allocator<int> >,int>
	add	esp, 16					; 00000010H
	cmp	DWORD PTR [eax], esi
	jne	$LN95@AddUniqueL
$LN88@AddUniqueL:

; 2623 : 			{
; 2624 : 				return;
; 2625 : 			}
; 2626 : 		}
; 2627 : 
; 2628 : 		m_aUniqueLuxuryAreas.push_back(iArea);  		// Store area

	lea	eax, DWORD PTR _iArea$223898[esp+24]
	lea	edi, DWORD PTR [ebx+724]
	push	eax
	mov	ecx, edi
	call	?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEXABH@Z ; std::vector<int,std::allocator<int> >::push_back

; 2629 : 		int iNumUniqueResourcesGiven = m_aUniqueLuxuryAreas.size();

	mov	esi, DWORD PTR [edi+8]
	sub	esi, DWORD PTR [edi+4]

; 2630 : 		m_iUniqueLuxuryCitiesPlaced++;   // One less to give out

	inc	DWORD PTR [ebx+308]

; 2631 : 
; 2632 : 		// Loop through all resources and see if we can find this many unique ones
; 2633 : 		ResourceTypes eResourceToGive = NO_RESOURCE;
; 2634 : 		int iNumUniquesFound = 0;

	xor	edi, edi

; 2635 : #ifdef AUI_WARNING_FIXES
; 2636 : 		for (uint iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)
; 2637 : #else
; 2638 : 		for(int iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	sar	esi, 2
	mov	DWORD PTR _iNumUniquesFound$223917[esp+24], edi
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	test	eax, eax
	jle	$LN95@AddUniqueL
	npad	4
$LL91@AddUniqueL:

; 2639 : #endif
; 2640 : 		{
; 2641 : 			ResourceTypes eResource = (ResourceTypes) iResourceLoop;
; 2642 : 			CvResourceInfo* pkResource = GC.getResourceInfo(eResource);

	push	edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	ebp, eax

; 2643 : 			if (pkResource != NULL && pkResource->GetRequiredCivilization() == m_pPlayer->getCivilizationType())

	test	ebp, ebp
	je	SHORT $LN5@AddUniqueL
	mov	ecx, DWORD PTR [ebx+4]
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	mov	ecx, ebp
	mov	DWORD PTR tv433[esp+24], eax
	call	?GetRequiredCivilization@CvResourceInfo@@QBE?AW4CivilizationTypes@@XZ ; CvResourceInfo::GetRequiredCivilization
	mov	ecx, DWORD PTR tv433[esp+24]
	cmp	eax, ecx
	jne	SHORT $LN5@AddUniqueL

; 2644 : 			{
; 2645 : 				iNumUniquesFound++;

	mov	eax, DWORD PTR _iNumUniquesFound$223917[esp+24]
	inc	eax
	mov	DWORD PTR _iNumUniquesFound$223917[esp+24], eax

; 2646 : 				if (iNumUniquesFound == iNumUniqueResourcesGiven)

	cmp	eax, esi
	je	SHORT $LN83@AddUniqueL
$LN5@AddUniqueL:

; 2635 : #ifdef AUI_WARNING_FIXES
; 2636 : 		for (uint iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)
; 2637 : #else
; 2638 : 		for(int iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	edi
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	cmp	edi, eax
	jl	SHORT $LL91@AddUniqueL
	pop	edi
	pop	ebp
	pop	esi
	pop	ebx

; 2658 : 		}
; 2659 : 	}
; 2660 : }

	add	esp, 8
	ret	4
$LN83@AddUniqueL:

; 2647 : 				{
; 2648 : 					eResourceToGive = eResource;
; 2649 : 					break;
; 2650 : 				}
; 2651 : 			}
; 2652 : 		}
; 2653 : 
; 2654 : 		if (eResourceToGive != NO_RESOURCE)

	cmp	edi, -1
	je	SHORT $LN95@AddUniqueL

; 2655 : 		{
; 2656 : 			pCity->plot()->setResourceType(NO_RESOURCE, 0, true);

	mov	esi, DWORD PTR _pCity$[esp+20]
	push	1
	push	0
	push	-1
	mov	ecx, esi
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	ecx, eax
	call	?setResourceType@CvPlot@@QAEXW4ResourceTypes@@H_N@Z ; CvPlot::setResourceType

; 2657 : 			pCity->plot()->setResourceType(eResourceToGive, m_iUniqueLuxuryQuantity, true);

	mov	ecx, DWORD PTR [ebx+304]
	push	1
	push	ecx
	push	edi
	mov	ecx, esi
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	ecx, eax
	call	?setResourceType@CvPlot@@QAEXW4ResourceTypes@@H_N@Z ; CvPlot::setResourceType
$LN95@AddUniqueL:
	pop	edi
	pop	ebp
$LN94@AddUniqueL:
	pop	esi
$LN1@AddUniqueL:
	pop	ebx

; 2658 : 		}
; 2659 : 	}
; 2660 : }

	add	esp, 8
	ret	4
?AddUniqueLuxuries@CvPlayerTraits@@QAEXPAVCvCity@@@Z ENDP ; CvPlayerTraits::AddUniqueLuxuries
_TEXT	ENDS
PUBLIC	??0?$vector@_NV?$allocator@_N@std@@@std@@QAE@I_N@Z ; std::vector<bool,std::allocator<bool> >::vector<bool,std::allocator<bool> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??0?$vector@_NV?$allocator@_N@std@@@std@@QAE@I_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@_NV?$allocator@_N@std@@@std@@QAE@I_N@Z$0
__ehfuncinfo$??0?$vector@_NV?$allocator@_N@std@@@std@@QAE@I_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@_NV?$allocator@_N@std@@@std@@QAE@I_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??0?$vector@_NV?$allocator@_N@std@@@std@@QAE@I_N@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Count$ = 8						; size = 4
$T254620 = 12						; size = 4
__Val$ = 12						; size = 1
??0?$vector@_NV?$allocator@_N@std@@@std@@QAE@I_N@Z PROC	; std::vector<bool,std::allocator<bool> >::vector<bool,std::allocator<bool> >, COMDAT
; _this$ = ecx

; 1918 : 		{	// construct from _Count * _Val

	push	-1
	push	__ehhandler$??0?$vector@_NV?$allocator@_N@std@@@std@@QAE@I_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	movzx	eax, BYTE PTR __Val$[esp+12]
	push	esi
	neg	eax
	push	edi
	mov	edi, DWORD PTR __Count$[esp+20]
	sbb	eax, eax
	mov	DWORD PTR $T254620[esp+20], eax
	mov	esi, ecx
	lea	edx, DWORD PTR $T254620[esp+20]
	lea	eax, DWORD PTR [edi+31]
	push	edx
	shr	eax, 5
	lea	ecx, DWORD PTR [esi+4]
	push	eax
	mov	DWORD PTR _this$[esp+32], esi
	mov	DWORD PTR [esi], 0
	call	?_Construct_n@?$vector@IV?$allocator@I@std@@@std@@QAEXIABI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Construct_n

; 1919 : 		_Trim(_Count);

	push	edi
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+36], 0
	call	?_Trim@?$vector@_NV?$allocator@_N@std@@@std@@IAEXI@Z ; std::vector<bool,std::allocator<bool> >::_Trim

; 1920 : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@_NV?$allocator@_N@std@@@std@@QAE@I_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >
__ehhandler$??0?$vector@_NV?$allocator@_N@std@@@std@@QAE@I_N@Z:
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@_NV?$allocator@_N@std@@@std@@QAE@I_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@_NV?$allocator@_N@std@@@std@@QAE@I_N@Z ENDP	; std::vector<bool,std::allocator<bool> >::vector<bool,std::allocator<bool> >
PUBLIC	?resize@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEXI@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::resize
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
$T254686 = -24						; size = 24
__Newsize$ = 8						; size = 4
?resize@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEXI@Z PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::resize, COMDAT
; _this$ = ecx

; 713  : 		resize(_Newsize, _Ty());

	mov	edx, DWORD PTR $T254686[esp]
	sub	esp, 24					; 00000018H
	sub	esp, 24					; 00000018H
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR $T254686[esp+52]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR $T254686[esp+56]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR $T254686[esp+60]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR $T254686[esp+64]
	mov	DWORD PTR [eax+16], edx
	mov	edx, DWORD PTR $T254686[esp+68]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR __Newsize$[esp+44]
	push	eax
	call	?resize@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEXIV?$Array@H$05@Firaxis@@@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::resize

; 714  : 		}

	add	esp, 24					; 00000018H
	ret	4
?resize@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEXI@Z ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::resize
_TEXT	ENDS
PUBLIC	?push_back@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAEXABUFreeResourceXCities@@@Z ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::push_back
; Function compile flags: /Ogtpy
;	COMDAT ?push_back@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAEXABUFreeResourceXCities@@@Z
_TEXT	SEGMENT
$T254723 = -4						; size = 1
__Cat$254727 = 8					; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAEXABUFreeResourceXCities@@@Z PROC ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::push_back, COMDAT
; _this$ = ecx

; 809  : 		{	// insert element at end

	push	ecx
	push	esi
	mov	esi, ecx

; 810  : 		if (size() < capacity())

	mov	ecx, DWORD PTR [esi+4]
	push	edi
	test	ecx, ecx
	jne	SHORT $LN9@push_back@3
	xor	eax, eax
	jmp	SHORT $LN10@push_back@3
$LN9@push_back@3:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, ecx
	sar	eax, 3
$LN10@push_back@3:
	mov	edi, DWORD PTR [esi+8]
	mov	edx, edi
	sub	edx, ecx
	sar	edx, 3
	cmp	edx, eax
	jae	SHORT $LN2@push_back@3

; 811  : 
; 812  :  #if _HAS_ITERATOR_DEBUGGING
; 813  : 			{ // room at end, construct it there
; 814  : 			_Orphan_range(_Mylast, _Mylast);
; 815  : 			_Mylast = _Ufill(_Mylast, 1, _Val);
; 816  : 			}
; 817  : 
; 818  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 819  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

	mov	ecx, DWORD PTR __Cat$254727[esp+8]
	mov	edx, DWORD PTR __Val$[esp+8]
	mov	BYTE PTR $T254723[esp+12], 0
	mov	eax, DWORD PTR $T254723[esp+12]
	push	eax
	push	ecx
	push	esi
	push	edx
	push	1
	push	edi
	call	??$_Uninit_fill_n@PAUFreeResourceXCities@@IU1@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAXPAUFreeResourceXCities@@IABU1@AAV?$allocator@UFreeResourceXCities@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<FreeResourceXCities *,unsigned int,FreeResourceXCities,std::allocator<FreeResourceXCities> >
	add	esp, 24					; 00000018H
	add	edi, 8
	mov	DWORD PTR [esi+8], edi
	pop	edi
	pop	esi

; 824  : 		}

	pop	ecx
	ret	4
$LN2@push_back@3:

; 820  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 821  : 
; 822  : 		else
; 823  : 			insert(end(), _Val);

	mov	eax, DWORD PTR __Val$[esp+8]
	push	eax
	push	1
	push	edi
	mov	ecx, esi
	call	?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Insert_n
	pop	edi
	pop	esi

; 824  : 		}

	pop	ecx
	ret	4
?push_back@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@QAEXABUFreeResourceXCities@@@Z ENDP ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::push_back
_TEXT	ENDS
PUBLIC	?insert@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@V?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@ABW4TraitTypes@@@Z ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::insert
; Function compile flags: /Ogtpy
;	COMDAT ?insert@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@V?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@ABW4TraitTypes@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@V?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@ABW4TraitTypes@@@Z PROC ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::insert, COMDAT
; _this$ = ecx

; 875  : 		{	// insert _Val at _Where

	push	esi
	push	edi
	mov	edi, ecx

; 876  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi+8]
	sub	ecx, eax
	test	ecx, -4					; fffffffcH
	mov	ecx, DWORD PTR __Where$[esp+4]
	jne	SHORT $LN3@insert@5
	xor	esi, esi
	jmp	SHORT $LN4@insert@5
$LN3@insert@5:
	mov	esi, ecx
	sub	esi, eax
	sar	esi, 2
$LN4@insert@5:

; 877  : 		_Insert_n(_Where, (size_type)1, _Val);

	mov	edx, DWORD PTR __Val$[esp+4]
	push	edx
	push	1
	push	ecx
	mov	ecx, edi
	call	?_Insert_n@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@IABW4TraitTypes@@@Z ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Insert_n

; 878  : 		return (begin() + _Off);

	mov	eax, DWORD PTR [edi+4]
	lea	ecx, DWORD PTR [eax+esi*4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi

; 879  : 		}

	ret	12					; 0000000cH
?insert@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@V?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@ABW4TraitTypes@@@Z ENDP ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE?AV?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@V?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@ABUMayaBonusChoice@@@Z ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::insert
; Function compile flags: /Ogtpy
;	COMDAT ?insert@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE?AV?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@V?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@ABUMayaBonusChoice@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE?AV?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@V?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@ABUMayaBonusChoice@@@Z PROC ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::insert, COMDAT
; _this$ = ecx

; 875  : 		{	// insert _Val at _Where

	push	esi
	push	edi
	mov	edi, ecx

; 876  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi+8]
	sub	ecx, eax
	test	ecx, -8					; fffffff8H
	mov	ecx, DWORD PTR __Where$[esp+4]
	jne	SHORT $LN3@insert@6
	xor	esi, esi
	jmp	SHORT $LN4@insert@6
$LN3@insert@6:
	mov	esi, ecx
	sub	esi, eax
	sar	esi, 3
$LN4@insert@6:

; 877  : 		_Insert_n(_Where, (size_type)1, _Val);

	mov	edx, DWORD PTR __Val$[esp+4]
	push	edx
	push	1
	push	ecx
	mov	ecx, edi
	call	?_Insert_n@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@IABUMayaBonusChoice@@@Z ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Insert_n

; 878  : 		return (begin() + _Off);

	mov	eax, DWORD PTR [edi+4]
	lea	ecx, DWORD PTR [eax+esi*8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi

; 879  : 		}

	ret	12					; 0000000cH
?insert@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAE?AV?$_Vector_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@V?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@ABUMayaBonusChoice@@@Z ENDP ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::insert
_TEXT	ENDS
PUBLIC	??$SAFE_DELETE@VCvTraitEntry@@@@YAXAAPAVCvTraitEntry@@@Z ; SAFE_DELETE<CvTraitEntry>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffiretypes.h
;	COMDAT ??$SAFE_DELETE@VCvTraitEntry@@@@YAXAAPAVCvTraitEntry@@@Z
_TEXT	SEGMENT
_pkInstance$ = 8					; size = 4
??$SAFE_DELETE@VCvTraitEntry@@@@YAXAAPAVCvTraitEntry@@@Z PROC ; SAFE_DELETE<CvTraitEntry>, COMDAT

; 305  : {

	push	esi
	push	edi

; 306  : 	delete pkInstance;

	mov	edi, DWORD PTR _pkInstance$[esp+4]
	mov	esi, DWORD PTR [edi]
	test	esi, esi
	je	SHORT $LN8@SAFE_DELET
	mov	ecx, esi
	call	??1CvTraitEntry@@QAE@XZ			; CvTraitEntry::~CvTraitEntry
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@SAFE_DELET:

; 307  : 	pkInstance = NULL;

	mov	DWORD PTR [edi], 0
	pop	edi
	pop	esi

; 308  : };

	ret	0
??$SAFE_DELETE@VCvTraitEntry@@@@YAXAAPAVCvTraitEntry@@@Z ENDP ; SAFE_DELETE<CvTraitEntry>
_TEXT	ENDS
PUBLIC	??$SerializeToSequenceContainer@HV?$vector@HV?$allocator@H@std@@@std@@@@YAXAAVFDataStream@@AAV?$vector@HV?$allocator@H@std@@@std@@@Z ; SerializeToSequenceContainer<int,std::vector<int,std::allocator<int> > >
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fstlcontainerserialization.h
;	COMDAT ??$SerializeToSequenceContainer@HV?$vector@HV?$allocator@H@std@@@std@@@@YAXAAVFDataStream@@AAV?$vector@HV?$allocator@H@std@@@std@@@Z
_TEXT	SEGMENT
_v$214336 = -4						; size = 4
_loadFrom$ = 8						; size = 4
_count$ = 12						; size = 4
_container$ = 12					; size = 4
??$SerializeToSequenceContainer@HV?$vector@HV?$allocator@H@std@@@std@@@@YAXAAVFDataStream@@AAV?$vector@HV?$allocator@H@std@@@std@@@Z PROC ; SerializeToSequenceContainer<int,std::vector<int,std::allocator<int> > >, COMDAT

; 83   : {

	push	ecx
	push	ebx
	push	esi

; 84   : 	container.clear();

	mov	esi, DWORD PTR _container$[esp+8]
	mov	ecx, DWORD PTR [esi+8]
	push	edi
	mov	edi, DWORD PTR [esi+4]
	cmp	edi, ecx
	je	SHORT $LN20@SerializeT
	mov	eax, ecx
	sub	eax, ecx
	sar	eax, 2
	lea	edx, DWORD PTR [eax*4]
	lea	ebx, DWORD PTR [edx+edi]
	test	eax, eax
	jle	SHORT $LN45@SerializeT
	push	edx
	push	ecx
	push	edx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN45@SerializeT:
	mov	DWORD PTR [esi+8], ebx
$LN20@SerializeT:

; 85   : 	ContainerType::size_type count = 0;
; 86   : 	loadFrom >> count;

	mov	edi, DWORD PTR _loadFrom$[esp+12]
	lea	eax, DWORD PTR _count$[esp+12]
	push	eax
	mov	ecx, edi
	mov	DWORD PTR _count$[esp+16], 0
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 87   : 	ContainerType::size_type i = 0;
; 88   : 	for(i = 0; i < count; ++i)

	xor	ebx, ebx
	cmp	DWORD PTR _count$[esp+12], ebx
	jbe	SHORT $LN1@SerializeT
	push	ebp
$LL117@SerializeT:

; 89   : 	{
; 90   : 		ElementType v;
; 91   : 		loadFrom >> v;

	lea	ecx, DWORD PTR _v$214336[esp+20]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 92   : 		container.push_back(v);

	mov	edx, DWORD PTR [esi+4]
	test	edx, edx
	jne	SHORT $LN60@SerializeT
	xor	eax, eax
	jmp	SHORT $LN61@SerializeT
$LN60@SerializeT:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, edx
	sar	eax, 2
$LN61@SerializeT:
	mov	ecx, DWORD PTR [esi+8]
	mov	ebp, ecx
	sub	ebp, edx
	sar	ebp, 2
	cmp	ebp, eax
	jae	SHORT $LN53@SerializeT
	mov	edx, DWORD PTR _v$214336[esp+20]
	mov	DWORD PTR [ecx], edx
	add	ecx, 4
	mov	DWORD PTR [esi+8], ecx
	jmp	SHORT $LN2@SerializeT
$LN53@SerializeT:
	lea	eax, DWORD PTR _v$214336[esp+20]
	push	eax
	push	1
	push	ecx
	mov	ecx, esi
	call	?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z ; std::vector<int,std::allocator<int> >::_Insert_n
$LN2@SerializeT:
	inc	ebx
	cmp	ebx, DWORD PTR _count$[esp+16]
	jb	SHORT $LL117@SerializeT
	pop	ebp
$LN1@SerializeT:
	pop	edi
	pop	esi
	pop	ebx

; 93   : 	}
; 94   : }

	pop	ecx
	ret	0
??$SerializeToSequenceContainer@HV?$vector@HV?$allocator@H@std@@@std@@@@YAXAAVFDataStream@@AAV?$vector@HV?$allocator@H@std@@@std@@@Z ENDP ; SerializeToSequenceContainer<int,std::vector<int,std::allocator<int> > >
_TEXT	ENDS
PUBLIC	?push_back@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEXABV?$Array@H$05@Firaxis@@@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::push_back
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?push_back@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEXABV?$Array@H$05@Firaxis@@@Z
_TEXT	SEGMENT
$T255551 = -4						; size = 1
__Cat$255555 = 8					; size = 1
$T255521 = 8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEXABV?$Array@H$05@Firaxis@@@Z PROC ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::push_back, COMDAT
; _this$ = ecx

; 809  : 		{	// insert element at end

	push	ecx
	push	ebx
	push	esi
	mov	esi, ecx

; 810  : 		if (size() < capacity())

	mov	ebx, DWORD PTR [esi+4]
	push	edi
	test	ebx, ebx
	jne	SHORT $LN9@push_back@4
	xor	ecx, ecx
	jmp	SHORT $LN10@push_back@4
$LN9@push_back@4:
	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, ebx
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 2
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
$LN10@push_back@4:
	mov	edi, DWORD PTR [esi+8]
	mov	edx, edi
	sub	edx, ebx
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	eax, ecx
	jae	SHORT $LN2@push_back@4

; 811  : 
; 812  :  #if _HAS_ITERATOR_DEBUGGING
; 813  : 			{ // room at end, construct it there
; 814  : 			_Orphan_range(_Mylast, _Mylast);
; 815  : 			_Mylast = _Ufill(_Mylast, 1, _Val);
; 816  : 			}
; 817  : 
; 818  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 819  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

	mov	edx, DWORD PTR __Cat$255555[esp+12]
	mov	eax, DWORD PTR __Val$[esp+12]
	mov	BYTE PTR $T255551[esp+16], 0
	mov	ecx, DWORD PTR $T255551[esp+16]
	push	ecx
	push	edx
	push	esi
	push	eax
	push	1
	push	edi
	call	??$_Uninit_fill_n@PAV?$Array@H$05@Firaxis@@IV12@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@YAXPAV?$Array@H$05@Firaxis@@IABV12@AAV?$allocator@V?$Array@H$05@Firaxis@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<Firaxis::Array<int,6> *,unsigned int,Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >
	add	esp, 24					; 00000018H
	add	edi, 24					; 00000018H
	mov	DWORD PTR [esi+8], edi
	pop	edi
	pop	esi
	pop	ebx

; 824  : 		}

	pop	ecx
	ret	4
$LN2@push_back@4:

; 820  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 821  : 
; 822  : 		else
; 823  : 			insert(end(), _Val);

	mov	ecx, DWORD PTR __Val$[esp+12]
	push	ecx
	push	edi
	lea	edx, DWORD PTR $T255521[esp+20]
	push	edx
	mov	ecx, esi
	call	?insert@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@V?$_Vector_const_iterator@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@2@ABV?$Array@H$05@Firaxis@@@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::insert
	pop	edi
	pop	esi
	pop	ebx

; 824  : 		}

	pop	ecx
	ret	4
?push_back@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEXABV?$Array@H$05@Firaxis@@@Z ENDP ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::push_back
_TEXT	ENDS
PUBLIC	?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@IAEIV?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@I@Z ; std::vector<bool,std::allocator<bool> >::_Insert_x
; Function compile flags: /Ogtpy
;	COMDAT ?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@IAEIV?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@I@Z
_TEXT	SEGMENT
$T255578 = -32						; size = 8
__Oldend$215543 = -24					; size = 8
$T255581 = -16						; size = 8
$T255579 = -16						; size = 8
$T255580 = -8						; size = 8
__Where$ = 8						; size = 8
__Count$ = 16						; size = 4
?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@IAEIV?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@I@Z PROC ; std::vector<bool,std::allocator<bool> >::_Insert_x, COMDAT
; _this$ = ecx

; 2296 : 		{	// make room to insert _Count elements at _Where

	sub	esp, 32					; 00000020H
	push	ebx

; 2297 : 		size_type _Off = _Where - begin();
; 2298 : 
; 2299 :  #if _HAS_ITERATOR_DEBUGGING
; 2300 : 		if (end() < _Where)
; 2301 : 			_DEBUG_ERROR("vector<bool> insert iterator outside range");
; 2302 : 		bool _Realloc = capacity() - size() < _Count;
; 2303 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 2304 : 
; 2305 : 		if (_Count == 0)

	mov	ebx, DWORD PTR __Count$[esp+32]
	push	ebp
	mov	ebp, DWORD PTR __Where$[esp+36]
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+8]
	sub	ebp, eax
	sar	ebp, 2
	shl	ebp, 5
	add	ebp, DWORD PTR __Where$[esp+44]
	test	ebx, ebx
	je	$LN1@Insert_x

; 2306 : 			;
; 2307 : 		else if (max_size() - size() < _Count)

	mov	eax, DWORD PTR [esi]
	or	ecx, -1
	sub	ecx, eax
	cmp	ecx, ebx
	jae	SHORT $LN4@Insert_x

; 2308 : 			_Xlen();	// result too long

	mov	ecx, esi
	call	?_Xlen@?$vector@_NV?$allocator@_N@std@@@std@@IBEXXZ ; std::vector<bool,std::allocator<bool> >::_Xlen
$LN97@Insert_x:
$LN4@Insert_x:
	push	edi

; 2309 : 		else
; 2310 : 			{	// worth doing
; 2311 : 			_Myvec.resize(_Nw(size() + _Count), 0);

	lea	edx, DWORD PTR [eax+ebx+31]
	push	0
	shr	edx, 5
	push	edx
	lea	ecx, DWORD PTR [esi+4]
	call	?resize@?$vector@IV?$allocator@I@std@@@std@@QAEXII@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::resize

; 2312 : 			if (size() == 0)

	mov	edi, DWORD PTR [esi]
	test	edi, edi
	jne	SHORT $LN2@Insert_x
	pop	edi

; 2313 : 				_Mysize += _Count;

	mov	DWORD PTR [esi], ebx
	pop	esi

; 2319 : 				}
; 2320 : 
; 2321 :  #if _HAS_ITERATOR_DEBUGGING
; 2322 : 			_Orphan_range(_Realloc ? 0 : _Off, _Mysize);
; 2323 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 2324 : 
; 2325 : 			}
; 2326 : 		return (_Off);

	mov	eax, ebp
	pop	ebp
	pop	ebx

; 2327 : 		}

	add	esp, 32					; 00000020H
	ret	12					; 0000000cH
$LN2@Insert_x:

; 2314 : 			else
; 2315 : 				{	// make room and copy down suffix
; 2316 : 				iterator _Oldend = end();

	mov	ebx, DWORD PTR [esi+8]
	mov	DWORD PTR __Oldend$215543[esp+48], ebx
	mov	DWORD PTR __Oldend$215543[esp+52], 0
	test	edi, edi
	jbe	SHORT $LN60@Insert_x
	push	edi
	lea	ecx, DWORD PTR __Oldend$215543[esp+52]
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
$LN60@Insert_x:

; 2317 : 				_Mysize += _Count;

	mov	eax, DWORD PTR __Count$[esp+44]
	add	eax, edi
	mov	DWORD PTR [esi], eax

; 2318 : 				std::copy_backward(begin() + _Off, _Oldend, end());

	mov	DWORD PTR $T255578[esp+48], ebx
	mov	DWORD PTR $T255578[esp+52], 0
	je	SHORT $LN79@Insert_x
	push	eax
	lea	ecx, DWORD PTR $T255578[esp+52]
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
$LN79@Insert_x:
	push	ebp
	lea	ecx, DWORD PTR $T255580[esp+52]
	push	ecx
	lea	ecx, DWORD PTR $T255579[esp+56]
	mov	DWORD PTR $T255579[esp+56], ebx
	mov	DWORD PTR $T255579[esp+60], 0
	call	??H?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+
	mov	edx, DWORD PTR $T255578[esp+52]
	mov	ecx, DWORD PTR $T255578[esp+48]
	push	edx
	mov	edx, DWORD PTR __Oldend$215543[esp+56]
	push	ecx
	mov	ecx, DWORD PTR __Oldend$215543[esp+56]
	push	edx
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [eax]
	push	ecx
	push	edx
	push	eax
	lea	ecx, DWORD PTR $T255581[esp+72]
	push	ecx
	call	??$copy_backward@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@V12@@std@@YA?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@V10@00@Z ; std::copy_backward<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > > >
	add	esp, 28					; 0000001cH
	pop	edi
$LN1@Insert_x:
	pop	esi

; 2319 : 				}
; 2320 : 
; 2321 :  #if _HAS_ITERATOR_DEBUGGING
; 2322 : 			_Orphan_range(_Realloc ? 0 : _Off, _Mysize);
; 2323 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 2324 : 
; 2325 : 			}
; 2326 : 		return (_Off);

	mov	eax, ebp
	pop	ebp
	pop	ebx

; 2327 : 		}

	add	esp, 32					; 00000020H
	ret	12					; 0000000cH
$LN96@Insert_x:
?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@IAEIV?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@I@Z ENDP ; std::vector<bool,std::allocator<bool> >::_Insert_x
_TEXT	ENDS
PUBLIC	?DeleteArray@CvTraitXMLEntries@@QAEXXZ		; CvTraitXMLEntries::DeleteArray
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
;	COMDAT ?DeleteArray@CvTraitXMLEntries@@QAEXXZ
_TEXT	SEGMENT
?DeleteArray@CvTraitXMLEntries@@QAEXXZ PROC		; CvTraitXMLEntries::DeleteArray, COMDAT
; _this$ = ecx

; 1647 : {

	push	ebx
	mov	ebx, ecx
	push	esi

; 1648 : 	for(std::vector<CvTraitEntry*>::iterator it = m_paTraitEntries.begin(); it != m_paTraitEntries.end(); ++it)

	mov	esi, DWORD PTR [ebx+4]
	push	edi
	cmp	esi, DWORD PTR [ebx+8]
	je	SHORT $LN1@DeleteArra
	npad	3
$LL14@DeleteArra:

; 1649 : 	{
; 1650 : 		SAFE_DELETE(*it);

	mov	edi, DWORD PTR [esi]
	test	edi, edi
	je	SHORT $LN32@DeleteArra
	mov	ecx, edi
	call	??1CvTraitEntry@@QAE@XZ			; CvTraitEntry::~CvTraitEntry
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN32@DeleteArra:
	mov	DWORD PTR [esi], 0
	add	esi, 4
	cmp	esi, DWORD PTR [ebx+8]
	jne	SHORT $LL14@DeleteArra
$LN1@DeleteArra:

; 1651 : 	}
; 1652 : 
; 1653 : 	m_paTraitEntries.clear();

	mov	ecx, DWORD PTR [ebx+8]
	mov	esi, DWORD PTR [ebx+4]
	cmp	esi, ecx
	je	SHORT $LN51@DeleteArra
	mov	eax, ecx
	sub	eax, ecx
	sar	eax, 2
	lea	edx, DWORD PTR [eax*4]
	lea	edi, DWORD PTR [edx+esi]
	test	eax, eax
	jle	SHORT $LN76@DeleteArra
	push	edx
	push	ecx
	push	edx
	push	esi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN76@DeleteArra:
	mov	DWORD PTR [ebx+8], edi
$LN51@DeleteArra:
	pop	edi
	pop	esi
	pop	ebx

; 1654 : }

	ret	0
?DeleteArray@CvTraitXMLEntries@@QAEXXZ ENDP		; CvTraitXMLEntries::DeleteArray
_TEXT	ENDS
PUBLIC	?push_back@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAEXABW4TraitTypes@@@Z ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::push_back
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?push_back@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAEXABW4TraitTypes@@@Z
_TEXT	SEGMENT
$T256210 = -4						; size = 1
__Cat$256214 = 8					; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAEXABW4TraitTypes@@@Z PROC ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::push_back, COMDAT
; _this$ = ecx

; 809  : 		{	// insert element at end

	push	ecx
	push	esi
	mov	esi, ecx

; 810  : 		if (size() < capacity())

	mov	ecx, DWORD PTR [esi+4]
	push	edi
	test	ecx, ecx
	jne	SHORT $LN9@push_back@5
	xor	eax, eax
	jmp	SHORT $LN10@push_back@5
$LN9@push_back@5:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, ecx
	sar	eax, 2
$LN10@push_back@5:
	mov	edi, DWORD PTR [esi+8]
	mov	edx, edi
	sub	edx, ecx
	sar	edx, 2
	cmp	edx, eax
	jae	SHORT $LN2@push_back@5

; 811  : 
; 812  :  #if _HAS_ITERATOR_DEBUGGING
; 813  : 			{ // room at end, construct it there
; 814  : 			_Orphan_range(_Mylast, _Mylast);
; 815  : 			_Mylast = _Ufill(_Mylast, 1, _Val);
; 816  : 			}
; 817  : 
; 818  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 819  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

	mov	ecx, DWORD PTR __Cat$256214[esp+8]
	mov	edx, DWORD PTR __Val$[esp+8]
	mov	BYTE PTR $T256210[esp+12], 0
	mov	eax, DWORD PTR $T256210[esp+12]
	push	eax
	push	ecx
	push	esi
	push	edx
	push	1
	push	edi
	call	??$_Uninit_fill_n@PAW4TraitTypes@@IW41@V?$allocator@W4TraitTypes@@@std@@@std@@YAXPAW4TraitTypes@@IABW41@AAV?$allocator@W4TraitTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<enum TraitTypes *,unsigned int,enum TraitTypes,std::allocator<enum TraitTypes> >
	add	esp, 24					; 00000018H
	add	edi, 4
	mov	DWORD PTR [esi+8], edi
	pop	edi
	pop	esi

; 824  : 		}

	pop	ecx
	ret	4
$LN2@push_back@5:

; 820  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 821  : 
; 822  : 		else
; 823  : 			insert(end(), _Val);

	mov	eax, DWORD PTR __Val$[esp+8]
	push	eax
	push	1
	push	edi
	mov	ecx, esi
	call	?_Insert_n@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@2@IABW4TraitTypes@@@Z ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::_Insert_n
	pop	edi
	pop	esi

; 824  : 		}

	pop	ecx
	ret	4
?push_back@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAEXABW4TraitTypes@@@Z ENDP ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::push_back
_TEXT	ENDS
PUBLIC	?push_back@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAEXABUMayaBonusChoice@@@Z ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::push_back
; Function compile flags: /Ogtpy
;	COMDAT ?push_back@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAEXABUMayaBonusChoice@@@Z
_TEXT	SEGMENT
$T256359 = -4						; size = 1
__Cat$256363 = 8					; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAEXABUMayaBonusChoice@@@Z PROC ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::push_back, COMDAT
; _this$ = ecx

; 809  : 		{	// insert element at end

	push	ecx
	push	esi
	mov	esi, ecx

; 810  : 		if (size() < capacity())

	mov	ecx, DWORD PTR [esi+4]
	push	edi
	test	ecx, ecx
	jne	SHORT $LN9@push_back@6
	xor	eax, eax
	jmp	SHORT $LN10@push_back@6
$LN9@push_back@6:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, ecx
	sar	eax, 3
$LN10@push_back@6:
	mov	edi, DWORD PTR [esi+8]
	mov	edx, edi
	sub	edx, ecx
	sar	edx, 3
	cmp	edx, eax
	jae	SHORT $LN2@push_back@6

; 811  : 
; 812  :  #if _HAS_ITERATOR_DEBUGGING
; 813  : 			{ // room at end, construct it there
; 814  : 			_Orphan_range(_Mylast, _Mylast);
; 815  : 			_Mylast = _Ufill(_Mylast, 1, _Val);
; 816  : 			}
; 817  : 
; 818  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 819  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

	mov	ecx, DWORD PTR __Cat$256363[esp+8]
	mov	edx, DWORD PTR __Val$[esp+8]
	mov	BYTE PTR $T256359[esp+12], 0
	mov	eax, DWORD PTR $T256359[esp+12]
	push	eax
	push	ecx
	push	esi
	push	edx
	push	1
	push	edi
	call	??$_Uninit_fill_n@PAUMayaBonusChoice@@IU1@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAXPAUMayaBonusChoice@@IABU1@AAV?$allocator@UMayaBonusChoice@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<MayaBonusChoice *,unsigned int,MayaBonusChoice,std::allocator<MayaBonusChoice> >
	add	esp, 24					; 00000018H
	add	edi, 8
	mov	DWORD PTR [esi+8], edi
	pop	edi
	pop	esi

; 824  : 		}

	pop	ecx
	ret	4
$LN2@push_back@6:

; 820  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 821  : 
; 822  : 		else
; 823  : 			insert(end(), _Val);

	mov	eax, DWORD PTR __Val$[esp+8]
	push	eax
	push	1
	push	edi
	mov	ecx, esi
	call	?_Insert_n@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@IABUMayaBonusChoice@@@Z ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Insert_n
	pop	edi
	pop	esi

; 824  : 		}

	pop	ecx
	ret	4
?push_back@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAEXABUMayaBonusChoice@@@Z ENDP ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::push_back
_TEXT	ENDS
PUBLIC	??$?5H@@YAAAVFDataStream@@AAV0@AAV?$vector@HV?$allocator@H@std@@@std@@@Z ; operator>><int>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fstlcontainerserialization.h
;	COMDAT ??$?5H@@YAAAVFDataStream@@AAV0@AAV?$vector@HV?$allocator@H@std@@@std@@@Z
_TEXT	SEGMENT
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??$?5H@@YAAAVFDataStream@@AAV0@AAV?$vector@HV?$allocator@H@std@@@std@@@Z PROC ; operator>><int>, COMDAT

; 226  : 	// The functor needs to be instantiated to properly resize the container based 
; 227  : 	// on how many elements the stream says it should have before passing it along
; 228  : 	// to std::for_each
; 229  : 	SerializeToSequenceContainer<ElementType, std::vector<ElementType> >(loadFrom, writeTo);

	mov	eax, DWORD PTR _writeTo$[esp-4]
	push	esi
	mov	esi, DWORD PTR _loadFrom$[esp]
	push	eax
	push	esi
	call	??$SerializeToSequenceContainer@HV?$vector@HV?$allocator@H@std@@@std@@@@YAXAAVFDataStream@@AAV?$vector@HV?$allocator@H@std@@@std@@@Z ; SerializeToSequenceContainer<int,std::vector<int,std::allocator<int> > >
	add	esp, 8

; 230  : 
; 231  : 	//std::for_each(writeTo.begin(), writeTo.end(), func);
; 232  : 	return loadFrom;

	mov	eax, esi
	pop	esi

; 233  : }

	ret	0
??$?5H@@YAAAVFDataStream@@AAV0@AAV?$vector@HV?$allocator@H@std@@@std@@@Z ENDP ; operator>><int>
_TEXT	ENDS
PUBLIC	??$SerializeToSequenceContainer@V?$Array@H$05@Firaxis@@V?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@YAXAAVFDataStream@@AAV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@Z ; SerializeToSequenceContainer<Firaxis::Array<int,6>,std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > > >
; Function compile flags: /Ogtpy
;	COMDAT ??$SerializeToSequenceContainer@V?$Array@H$05@Firaxis@@V?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@YAXAAVFDataStream@@AAV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@Z
_TEXT	SEGMENT
$T256657 = -28						; size = 1
_count$ = -28						; size = 4
_v$214514 = -24						; size = 24
_loadFrom$ = 8						; size = 4
__Cat$256662 = 12					; size = 1
$T256659 = 12						; size = 1
_container$ = 12					; size = 4
??$SerializeToSequenceContainer@V?$Array@H$05@Firaxis@@V?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@YAXAAVFDataStream@@AAV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@Z PROC ; SerializeToSequenceContainer<Firaxis::Array<int,6>,std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > > >, COMDAT

; 83   : {

	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 84   : 	container.clear();

	mov	esi, DWORD PTR _container$[esp+36]
	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR [esi+4]
	xor	ebx, ebx
	cmp	ecx, eax
	je	SHORT $LN20@SerializeT@2
	mov	BYTE PTR $T256657[esp+40], bl
	mov	edx, DWORD PTR $T256657[esp+40]
	push	edx
	mov	edx, DWORD PTR __Cat$256662[esp+40]
	push	edx
	mov	edx, DWORD PTR $T256659[esp+44]
	push	edx
	push	ecx
	push	eax
	push	eax
	call	??$_Copy_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::random_access_iterator_tag>
	add	esp, 24					; 00000018H
	mov	DWORD PTR [esi+8], eax
$LN20@SerializeT@2:

; 85   : 	ContainerType::size_type count = 0;
; 86   : 	loadFrom >> count;

	mov	ebp, DWORD PTR _loadFrom$[esp+36]
	lea	eax, DWORD PTR _count$[esp+40]
	push	eax
	mov	ecx, ebp
	mov	DWORD PTR _count$[esp+44], ebx
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 87   : 	ContainerType::size_type i = 0;
; 88   : 	for(i = 0; i < count; ++i)

	cmp	DWORD PTR _count$[esp+40], ebx
	jbe	SHORT $LN1@SerializeT@2
	push	edi
$LL3@SerializeT@2:

; 84   : 	container.clear();

	lea	esi, DWORD PTR _v$214514[esp+44]
	mov	edi, 6
	npad	5

; 89   : 	{
; 90   : 		ElementType v;
; 91   : 		loadFrom >> v;

$LL49@SerializeT@2:
	push	esi
	mov	ecx, ebp
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	add	esi, 4
	sub	edi, 1
	jne	SHORT $LL49@SerializeT@2

; 92   : 		container.push_back(v);

	lea	ecx, DWORD PTR _v$214514[esp+44]
	push	ecx
	mov	ecx, DWORD PTR _container$[esp+44]
	call	?push_back@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEXABV?$Array@H$05@Firaxis@@@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::push_back
	inc	ebx
	cmp	ebx, DWORD PTR _count$[esp+44]
	jb	SHORT $LL3@SerializeT@2
	pop	edi
$LN1@SerializeT@2:
	pop	esi
	pop	ebp
	pop	ebx

; 93   : 	}
; 94   : }

	add	esp, 28					; 0000001cH
	ret	0
??$SerializeToSequenceContainer@V?$Array@H$05@Firaxis@@V?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@YAXAAVFDataStream@@AAV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@Z ENDP ; SerializeToSequenceContainer<Firaxis::Array<int,6>,std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > > >
_TEXT	ENDS
PUBLIC	?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@IAEXV?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@I_N@Z ; std::vector<bool,std::allocator<bool> >::_Insert_n
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@IAEXV?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@I_N@Z
_TEXT	SEGMENT
__Tmp$256756 = -16					; size = 8
__Tmp$256814 = -8					; size = 8
__Where$ = 8						; size = 8
__Count$ = 16						; size = 4
__Val$ = 20						; size = 1
?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@IAEXV?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@I_N@Z PROC ; std::vector<bool,std::allocator<bool> >::_Insert_n, COMDAT
; _this$ = ecx

; 2290 : 		{	// insert _Count * _Val at _Where

	sub	esp, 16					; 00000010H

; 2291 : 		size_type _Off = _Insert_x(_Where, _Count);

	mov	eax, DWORD PTR __Where$[esp+16]
	push	ebx
	mov	ebx, DWORD PTR __Count$[esp+16]
	push	esi
	push	edi
	push	ebx
	mov	esi, ecx
	mov	ecx, DWORD PTR __Where$[esp+28]
	push	eax
	push	ecx
	mov	ecx, esi
	call	?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@IAEIV?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@I@Z ; std::vector<bool,std::allocator<bool> >::_Insert_x

; 2292 : 		std::fill(begin() + _Off, begin() + (_Off + _Count), _Val);

	mov	esi, DWORD PTR [esi+8]
	mov	edi, eax
	lea	edx, DWORD PTR [edi+ebx]
	xor	eax, eax
	push	edx
	lea	ecx, DWORD PTR __Tmp$256756[esp+32]
	mov	DWORD PTR __Tmp$256756[esp+32], esi
	mov	DWORD PTR __Tmp$256756[esp+36], eax
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
	xor	eax, eax
	push	edi
	lea	ecx, DWORD PTR __Tmp$256814[esp+32]
	mov	DWORD PTR __Tmp$256814[esp+32], esi
	mov	DWORD PTR __Tmp$256814[esp+36], eax
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
	mov	ecx, DWORD PTR __Tmp$256756[esp+32]
	mov	edx, DWORD PTR __Tmp$256756[esp+28]
	lea	eax, DWORD PTR __Val$[esp+24]
	push	eax
	mov	eax, DWORD PTR __Tmp$256814[esp+36]
	push	ecx
	mov	ecx, DWORD PTR __Tmp$256814[esp+36]
	push	edx
	push	eax
	push	ecx
	call	??$_Fill@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@_N@std@@YAXV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@0AB_N@Z ; std::_Fill<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,bool>
	add	esp, 20					; 00000014H
	pop	edi
	pop	esi
	pop	ebx

; 2293 : 		}

	add	esp, 16					; 00000010H
	ret	16					; 00000010H
?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@IAEXV?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@I_N@Z ENDP ; std::vector<bool,std::allocator<bool> >::_Insert_n
_TEXT	ENDS
PUBLIC	??1CvTraitXMLEntries@@QAE@XZ			; CvTraitXMLEntries::~CvTraitXMLEntries
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??1CvTraitXMLEntries@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvTraitXMLEntries@@QAE@XZ$0
__ehfuncinfo$??1CvTraitXMLEntries@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CvTraitXMLEntries@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
xdata$x	ENDS
;	COMDAT ??1CvTraitXMLEntries@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CvTraitXMLEntries@@QAE@XZ PROC			; CvTraitXMLEntries::~CvTraitXMLEntries, COMDAT
; _this$ = ecx

; 1629 : {

	push	-1
	push	__ehhandler$??1CvTraitXMLEntries@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	mov	esi, ecx
	push	edi
	mov	DWORD PTR _this$[esp+24], esi
	xor	edi, edi
	mov	DWORD PTR __$EHRec$[esp+32], edi

; 1630 : 	DeleteArray();

	call	?DeleteArray@CvTraitXMLEntries@@QAEXXZ	; CvTraitXMLEntries::DeleteArray

; 1631 : }

	mov	eax, DWORD PTR [esi+4]
	cmp	eax, edi
	je	SHORT $LN9@CvTraitXML
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN9@CvTraitXML:
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR [esi+4], edi
	mov	DWORD PTR [esi+8], edi
	mov	DWORD PTR [esi+12], edi
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CvTraitXMLEntries@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$vector@PAVCvTraitEntry@@V?$allocator@PAVCvTraitEntry@@@std@@@std@@QAE@XZ ; std::vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >::~vector<CvTraitEntry *,std::allocator<CvTraitEntry *> >
__ehhandler$??1CvTraitXMLEntries@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1CvTraitXMLEntries@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CvTraitXMLEntries@@QAE@XZ ENDP			; CvTraitXMLEntries::~CvTraitXMLEntries
PUBLIC	?InitPlayerTraits@CvPlayerTraits@@QAEXXZ	; CvPlayerTraits::InitPlayerTraits
EXTRN	?getNumSpecialistInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumSpecialistInfos
EXTRN	?getNumImprovementInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumImprovementInfos
EXTRN	?getNumFeatureInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumFeatureInfos
EXTRN	?ChangeWoundedUnitDamageMod@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeWoundedUnitDamageMod
EXTRN	?isMajorCiv@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isMajorCiv
; Function compile flags: /Ogtpy
;	COMDAT ?InitPlayerTraits@CvPlayerTraits@@QAEXXZ
_TEXT	SEGMENT
_iSpecialistLoop$223665 = -100				; size = 4
_iImprovementLoop$223655 = -100				; size = 4
_iFeatureLoop$223645 = -100				; size = 4
_iI$223610 = -96					; size = 4
tv4199 = -92						; size = 4
tv4099 = -92						; size = 4
tv4000 = -92						; size = 4
__Tmp$257345 = -92					; size = 8
tv4477 = -84						; size = 4
$T256857 = -84						; size = 4
_traitUnit$223695 = -80					; size = 8
_yields$223654 = -72					; size = 24
_yields$223664 = -48					; size = 24
_yields$223674 = -24					; size = 24
?InitPlayerTraits@CvPlayerTraits@@QAEXXZ PROC		; CvPlayerTraits::InitPlayerTraits, COMDAT
; _this$ = ecx

; 1703 : {

	sub	esp, 100				; 00000064H
	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx

; 1704 : 
; 1705 : 	// precompute the traits our leader has
; 1706 : 	m_vPotentiallyActiveLeaderTraits.clear();

	mov	eax, DWORD PTR [esi+36]
	mov	edx, DWORD PTR [esi+32]
	lea	ebx, DWORD PTR [esi+28]
	push	edi
	cmp	edx, eax
	je	SHORT $LN82@InitPlayer
	mov	ecx, eax
	cmp	eax, eax
	je	SHORT $LN107@InitPlayer
	npad	4
$LL109@InitPlayer:
	mov	edi, DWORD PTR [ecx]
	mov	DWORD PTR [edx], edi
	add	ecx, 4
	add	edx, 4
	cmp	ecx, eax
	jne	SHORT $LL109@InitPlayer
$LN107@InitPlayer:
	mov	DWORD PTR [ebx+8], edx
$LN82@InitPlayer:

; 1707 : 	for(int iI = 0; iI < GC.getNumTraitInfos(); iI++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	edi, edi
	call	?getNumTraitInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumTraitInfos
	test	eax, eax
	jle	$LN63@InitPlayer

; 1708 : 	{
; 1709 : 		m_vLeaderHasTrait[iI] = false;

	xor	ebp, ebp
$LL730@InitPlayer:
	mov	eax, DWORD PTR [esi+16]
	mov	ecx, ebp
	test	edi, edi
	je	SHORT $LN132@InitPlayer
	jge	SHORT $LN133@InitPlayer
	mov	ecx, edi
	neg	ecx
	je	SHORT $LN133@InitPlayer
	or	edx, -1
	sub	edx, edi
	shr	edx, 5
	add	edx, edx
	add	edx, edx
	mov	ecx, -4					; fffffffcH
	sub	ecx, edx
	add	eax, ecx
	jmp	SHORT $LN737@InitPlayer
$LN133@InitPlayer:
	mov	edx, edi
	shr	edx, 5
	lea	eax, DWORD PTR [eax+edx*4]
$LN737@InitPlayer:
	mov	ecx, edi
	and	ecx, 31					; 0000001fH
$LN132@InitPlayer:
	mov	edx, 1
	shl	edx, cl
	not	edx
	and	DWORD PTR [eax], edx

; 1710 : 		if (m_pPlayer && m_pPlayer->isMajorCiv() && m_pPlayer->isAlive() && m_pPlayer->getLeaderInfo().hasTrait( (TraitTypes)iI ))

	mov	ecx, DWORD PTR [esi+4]
	test	ecx, ecx
	je	SHORT $LN64@InitPlayer
	call	?isMajorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMajorCiv
	test	al, al
	je	SHORT $LN64@InitPlayer
	mov	ecx, DWORD PTR [esi+4]
	cmp	BYTE PTR [ecx+2256], 0
	je	SHORT $LN64@InitPlayer
	push	edi
	call	?getLeaderInfo@CvPlayer@@QBEAAVCvLeaderHeadInfo@@XZ ; CvPlayer::getLeaderInfo
	mov	ecx, eax
	call	?hasTrait@CvLeaderHeadInfo@@QBE_NH@Z	; CvLeaderHeadInfo::hasTrait
	test	al, al
	je	SHORT $LN64@InitPlayer

; 1711 : 		{
; 1712 : 			m_vLeaderHasTrait[iI] = true;

	mov	eax, DWORD PTR [esi+16]
	xor	ecx, ecx
	mov	DWORD PTR __Tmp$257345[esp+120], ecx
	push	edi
	lea	ecx, DWORD PTR __Tmp$257345[esp+120]
	mov	DWORD PTR __Tmp$257345[esp+120], eax
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
	mov	ecx, DWORD PTR __Tmp$257345[esp+120]
	mov	eax, DWORD PTR __Tmp$257345[esp+116]
	mov	edx, 1
	shl	edx, cl

; 1713 : 			m_vPotentiallyActiveLeaderTraits.push_back( (TraitTypes)iI );

	mov	ecx, ebx
	mov	DWORD PTR $T256857[esp+116], edi
	or	DWORD PTR [eax], edx
	lea	eax, DWORD PTR $T256857[esp+116]
	push	eax
	call	?push_back@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAEXABW4TraitTypes@@@Z ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::push_back
$LN64@InitPlayer:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	edi
	call	?getNumTraitInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumTraitInfos
	cmp	edi, eax
	jl	$LL730@InitPlayer
$LN63@InitPlayer:

; 1714 : 		}
; 1715 : 	}
; 1716 : #ifdef AUI_WARNING_FIXES
; 1717 : 	for (uint iI = 0; iI < GC.getNumTraitInfos(); iI++)
; 1718 : #else
; 1719 : 	for(int iI = 0; iI < GC.getNumTraitInfos(); iI++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iI$223610[esp+116], 0
	call	?getNumTraitInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumTraitInfos
	test	eax, eax
	jle	$LN59@InitPlayer
	npad	7
$LL723@InitPlayer:

; 1720 : #endif
; 1721 : 
; 1722 : 	{
; 1723 : 		if(HasTrait((TraitTypes)iI))

	mov	ecx, DWORD PTR _iI$223610[esp+116]
	push	ecx
	mov	ecx, esi
	call	?HasTrait@CvPlayerTraits@@QBE_NW4TraitTypes@@@Z ; CvPlayerTraits::HasTrait
	test	al, al
	je	$LN60@InitPlayer

; 1724 : 		{
; 1725 : 			CvTraitEntry* trait = GC.getTraitInfo((TraitTypes)iI);

	mov	edx, DWORD PTR _iI$223610[esp+116]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getTraitInfo@CvGlobals@@QAEPAVCvTraitEntry@@W4TraitTypes@@@Z ; CvGlobals::getTraitInfo
	mov	ebp, eax

; 1726 : 			m_iGreatPeopleRateModifier += trait->GetGreatPeopleRateModifier();

	mov	eax, DWORD PTR [ebp+264]
	add	DWORD PTR [esi+44], eax

; 1727 : 			m_iGreatScientistRateModifier += trait->GetGreatScientistRateModifier();

	mov	ecx, DWORD PTR [ebp+268]
	add	DWORD PTR [esi+48], ecx

; 1728 : 			m_iGreatGeneralRateModifier += trait->GetGreatGeneralRateModifier();

	mov	edx, DWORD PTR [ebp+272]
	add	DWORD PTR [esi+52], edx

; 1729 : 			m_iGreatGeneralExtraBonus += trait->GetGreatGeneralExtraBonus();

	mov	eax, DWORD PTR [ebp+276]
	add	DWORD PTR [esi+56], eax

; 1730 : 			m_iGreatPersonGiftInfluence += trait->GetGreatPersonGiftInfluence();

	mov	ecx, DWORD PTR [ebp+280]
	add	DWORD PTR [esi+60], ecx

; 1731 : 			m_iLevelExperienceModifier += trait->GetLevelExperienceModifier();

	mov	edx, DWORD PTR [ebp+260]
	add	DWORD PTR [esi+64], edx

; 1732 : 			m_iMaxGlobalBuildingProductionModifier += trait->GetMaxGlobalBuildingProductionModifier();

	mov	eax, DWORD PTR [ebp+284]
	add	DWORD PTR [esi+68], eax

; 1733 : 			m_iMaxTeamBuildingProductionModifier += trait->GetMaxTeamBuildingProductionModifier();

	mov	ecx, DWORD PTR [ebp+288]
	add	DWORD PTR [esi+72], ecx

; 1734 : 			m_iMaxPlayerBuildingProductionModifier += trait->GetMaxPlayerBuildingProductionModifier();

	mov	edx, DWORD PTR [ebp+292]
	add	DWORD PTR [esi+76], edx

; 1735 : 			m_iCityUnhappinessModifier += trait->GetCityUnhappinessModifier();

	mov	eax, DWORD PTR [ebp+296]
	add	DWORD PTR [esi+80], eax

; 1736 : 			m_iPopulationUnhappinessModifier += trait->GetPopulationUnhappinessModifier();

	mov	ecx, DWORD PTR [ebp+300]
	add	DWORD PTR [esi+84], ecx

; 1737 : 			m_iCityStateBonusModifier += trait->GetCityStateBonusModifier();

	mov	edx, DWORD PTR [ebp+304]
	add	DWORD PTR [esi+88], edx

; 1738 : 			m_iCityStateFriendshipModifier += trait->GetCityStateFriendshipModifier();

	mov	eax, DWORD PTR [ebp+308]
	add	DWORD PTR [esi+92], eax

; 1739 : 			m_iCityStateCombatModifier += trait->GetCityStateCombatModifier();

	mov	ecx, DWORD PTR [ebp+312]
	add	DWORD PTR [esi+96], ecx

; 1740 : 			m_iLandBarbarianConversionPercent += trait->GetLandBarbarianConversionPercent();

	mov	edx, DWORD PTR [ebp+316]
	add	DWORD PTR [esi+100], edx

; 1741 : 			m_iLandBarbarianConversionExtraUnits += trait->GetLandBarbarianConversionExtraUnits();

	mov	eax, DWORD PTR [ebp+320]
	add	DWORD PTR [esi+104], eax

; 1742 : 			m_iSeaBarbarianConversionPercent += trait->GetSeaBarbarianConversionPercent();

	mov	ecx, DWORD PTR [ebp+324]
	add	DWORD PTR [esi+108], ecx

; 1743 : 			m_iCapitalBuildingModifier += trait->GetCapitalBuildingModifier();

	mov	edx, DWORD PTR [ebp+328]
	add	DWORD PTR [esi+112], edx

; 1744 : 			m_iPlotBuyCostModifier += trait->GetPlotBuyCostModifier();

	mov	eax, DWORD PTR [ebp+332]
	add	DWORD PTR [esi+116], eax

; 1745 : 			m_iPlotCultureCostModifier += trait->GetPlotCultureCostModifier();

	mov	ecx, DWORD PTR [ebp+336]
	add	DWORD PTR [esi+120], ecx

; 1746 : #ifdef NQ_SCIENCE_PER_GREAT_PERSON_BORN
; 1747 : 			m_iSciencePerGreatPersonBorn += trait->GetSciencePerGreatPersonBorn();

	mov	edx, DWORD PTR [ebp+340]
	add	DWORD PTR [esi+124], edx

; 1748 : #endif
; 1749 : #ifdef NQ_NUM_TURNS_BEFORE_MINOR_ALLIES_REFUSE_BRIBES_FROM_TRAIT
; 1750 : 			m_iNumTurnsBeforeMinorAlliesRefuseBribes += trait->GetNumTurnsBeforeMinorAlliesRefuseBribes();

	mov	eax, DWORD PTR [ebp+344]
	add	DWORD PTR [esi+128], eax

; 1751 : #endif
; 1752 : #ifdef NQ_GOLDEN_PILGRIMAGE
; 1753 : 			m_iGoldenAgeTileBonusFaith += trait->GetGoldenAgeTileBonusFaith();

	mov	ecx, DWORD PTR [ebp+348]
	add	DWORD PTR [esi+132], ecx

; 1754 : #endif
; 1755 : 			m_iCultureFromKills += trait->GetCultureFromKills();

	mov	edx, DWORD PTR [ebp+352]
	add	DWORD PTR [esi+136], edx

; 1756 : 			m_iFaithFromKills += trait->GetFaithFromKills();

	mov	eax, DWORD PTR [ebp+356]
	add	DWORD PTR [esi+140], eax

; 1757 : 			m_iCityCultureBonus += trait->GetCityCultureBonus();

	mov	ecx, DWORD PTR [ebp+360]
	add	DWORD PTR [esi+144], ecx

; 1758 : 			m_iCapitalThemingBonusModifier += trait->GetCapitalThemingBonusModifier();

	mov	edx, DWORD PTR [ebp+364]
	add	DWORD PTR [esi+148], edx

; 1759 : 			m_iPolicyCostModifier += trait->GetPolicyCostModifier();

	mov	eax, DWORD PTR [ebp+368]
	add	DWORD PTR [esi+152], eax

; 1760 : 			m_iCityConnectionTradeRouteChange += trait->GetCityConnectionTradeRouteChange();

	mov	ecx, DWORD PTR [ebp+372]
	add	DWORD PTR [esi+156], ecx

; 1761 : 			m_iWonderProductionModifier += trait->GetWonderProductionModifier();

	mov	edx, DWORD PTR [ebp+376]
	add	DWORD PTR [esi+160], edx

; 1762 : 			m_iPlunderModifier += trait->GetPlunderModifier();

	mov	eax, DWORD PTR [ebp+380]
	add	DWORD PTR [esi+164], eax

; 1763 : 			m_iImprovementMaintenanceModifier += trait->GetImprovementMaintenanceModifier();

	mov	ecx, DWORD PTR [ebp+384]
	add	DWORD PTR [esi+168], ecx

; 1764 : 			m_iGoldenAgeDurationModifier += trait->GetGoldenAgeDurationModifier();

	mov	edx, DWORD PTR [ebp+388]
	add	DWORD PTR [esi+172], edx

; 1765 : 			m_iGoldenAgeMoveChange += trait->GetGoldenAgeMoveChange();

	mov	eax, DWORD PTR [ebp+392]
	add	DWORD PTR [esi+176], eax

; 1766 : 			m_iGoldenAgeCombatModifier += trait->GetGoldenAgeCombatModifier();

	mov	ecx, DWORD PTR [ebp+396]
	add	DWORD PTR [esi+180], ecx

; 1767 : 			m_iGoldenAgeTourismModifier += trait->GetGoldenAgeTourismModifier();

	mov	edx, DWORD PTR [ebp+400]
	add	DWORD PTR [esi+184], edx

; 1768 : 			m_iGoldenAgeGreatArtistRateModifier += trait->GetGoldenAgeGreatArtistRateModifier();

	mov	eax, DWORD PTR [ebp+404]
	add	DWORD PTR [esi+188], eax

; 1769 : 			m_iGoldenAgeGreatMusicianRateModifier += trait->GetGoldenAgeGreatMusicianRateModifier();

	mov	ecx, DWORD PTR [ebp+408]
	add	DWORD PTR [esi+192], ecx

; 1770 : 			m_iGoldenAgeGreatWriterRateModifier += trait->GetGoldenAgeGreatWriterRateModifier();

	mov	edx, DWORD PTR [ebp+412]
	add	DWORD PTR [esi+196], edx

; 1771 : 			m_iExtraEmbarkMoves += trait->GetExtraEmbarkMoves();

	mov	eax, DWORD PTR [ebp+424]
	add	DWORD PTR [esi+200], eax

; 1772 : 			m_iNaturalWonderFirstFinderGold += trait->GetNaturalWonderFirstFinderGold();

	mov	ecx, DWORD PTR [ebp+432]
	add	DWORD PTR [esi+204], ecx

; 1773 : 			m_iNaturalWonderSubsequentFinderGold += trait->GetNaturalWonderSubsequentFinderGold();

	mov	edx, DWORD PTR [ebp+436]
	add	DWORD PTR [esi+208], edx

; 1774 : 		
; 1775 : 			//EAP: Natural wonder faith for the finder
; 1776 : 			m_iNaturalWonderFirstFinderFaith += trait->GetNaturalWonderFirstFinderFaith();

	mov	eax, DWORD PTR [ebp+440]
	add	DWORD PTR [esi+216], eax

; 1777 : 			m_iNaturalWonderSubsequentFinderFaith += trait->GetNaturalWonderSubsequentFinderFaith();

	mov	ecx, DWORD PTR [ebp+444]
	add	DWORD PTR [esi+220], ecx

; 1778 : 
; 1779 : 			m_iNaturalWonderYieldModifier += trait->GetNaturalWonderYieldModifier();

	mov	edx, DWORD PTR [ebp+448]
	add	DWORD PTR [esi+212], edx

; 1780 : 			m_iNaturalWonderHappinessModifier += trait->GetNaturalWonderHappinessModifier();

	mov	eax, DWORD PTR [ebp+452]
	add	DWORD PTR [esi+224], eax

; 1781 : 			m_iNearbyImprovementCombatBonus += trait->GetNearbyImprovementCombatBonus();

	mov	ecx, DWORD PTR [ebp+456]
	add	DWORD PTR [esi+228], ecx

; 1782 : 			m_iNearbyImprovementBonusRange += trait->GetNearbyImprovementBonusRange();

	mov	edx, DWORD PTR [ebp+460]
	add	DWORD PTR [esi+232], edx

; 1783 : 			m_iCultureBuildingYieldChange += trait->GetCultureBuildingYieldChange();

	mov	eax, DWORD PTR [ebp+464]
	add	DWORD PTR [esi+236], eax

; 1784 : 			m_iCombatBonusVsHigherTech += trait->GetCombatBonusVsHigherTech();

	mov	ecx, DWORD PTR [ebp+468]
	add	DWORD PTR [esi+240], ecx

; 1785 : 			m_iCombatBonusVsLargerCiv += trait->GetCombatBonusVsLargerCiv();

	mov	edx, DWORD PTR [ebp+472]
	add	DWORD PTR [esi+244], edx

; 1786 : 			m_iLandUnitMaintenanceModifier += trait->GetLandUnitMaintenanceModifier();

	mov	eax, DWORD PTR [ebp+476]
	add	DWORD PTR [esi+248], eax

; 1787 : 			m_iNavalUnitMaintenanceModifier += trait->GetNavalUnitMaintenanceModifier();

	mov	ecx, DWORD PTR [ebp+480]
	add	DWORD PTR [esi+252], ecx

; 1788 : 			m_iRazeSpeedModifier += trait->GetRazeSpeedModifier();

	mov	edx, DWORD PTR [ebp+484]
	add	DWORD PTR [esi+256], edx

; 1789 : 			m_iDOFGreatPersonModifier += trait->GetDOFGreatPersonModifier();

	mov	eax, DWORD PTR [ebp+488]
	add	DWORD PTR [esi+260], eax

; 1790 : 			m_iLuxuryHappinessRetention += trait->GetLuxuryHappinessRetention();

	mov	ecx, DWORD PTR [ebp+492]
	add	DWORD PTR [esi+264], ecx

; 1791 : 			m_iExtraHappinessPerLuxury += trait->GetExtraHappinessPerLuxury(); // NQMP GJS - New Netherlands UA

	mov	edx, DWORD PTR [ebp+496]
	add	DWORD PTR [esi+268], edx

; 1792 : 			m_iExtraSpies += trait->GetExtraSpies();

	mov	eax, DWORD PTR [ebp+500]
	add	DWORD PTR [esi+272], eax

; 1793 : 			m_iHappinessPerReligion += trait->GetHappinessPerReligion(); // NQMP GJS - New Ottoman UA

	mov	ecx, DWORD PTR [ebp+504]
	add	DWORD PTR [esi+276], ecx

; 1794 : 			m_iUnresearchedTechBonusFromKills += trait->GetUnresearchedTechBonusFromKills();

	mov	edx, DWORD PTR [ebp+508]
	add	DWORD PTR [esi+280], edx

; 1795 : 			m_iExtraFoundedCityTerritoryClaimRange += trait->GetExtraFoundedCityTerritoryClaimRange();

	mov	eax, DWORD PTR [ebp+512]
	add	DWORD PTR [esi+284], eax

; 1796 : 			m_iFreeSocialPoliciesPerEra += trait->GetFreeSocialPoliciesPerEra();

	mov	ecx, DWORD PTR [ebp+516]
	add	DWORD PTR [esi+288], ecx

; 1797 : 			m_iNumTradeRoutesModifier += trait->GetNumTradeRoutesModifier();

	mov	edx, DWORD PTR [ebp+520]
	add	DWORD PTR [esi+292], edx

; 1798 : 			m_iTradeRouteResourceModifier += trait->GetTradeRouteResourceModifier();

	mov	eax, DWORD PTR [ebp+524]
	add	DWORD PTR [esi+296], eax

; 1799 : 			m_iUniqueLuxuryCities += trait->GetUniqueLuxuryCities();

	mov	ecx, DWORD PTR [ebp+528]
	add	DWORD PTR [esi+300], ecx

; 1800 : 			m_iUniqueLuxuryQuantity	+= trait->GetUniqueLuxuryQuantity();

	mov	edx, DWORD PTR [ebp+532]
	add	DWORD PTR [esi+304], edx

; 1801 : 			m_iWorkerSpeedModifier += trait->GetWorkerSpeedModifier();

	mov	eax, DWORD PTR [ebp+536]
	add	DWORD PTR [esi+312], eax

; 1802 : 			m_iAfraidMinorPerTurnInfluence += trait->GetAfraidMinorPerTurnInfluence();

	mov	ecx, DWORD PTR [ebp+540]
	add	DWORD PTR [esi+316], ecx

; 1803 : 			m_iLandTradeRouteRangeBonus += trait->GetLandTradeRouteRangeBonus();

	mov	edx, DWORD PTR [ebp+544]
	add	DWORD PTR [esi+320], edx

; 1804 : 			m_iTradeReligionModifier += trait->GetTradeReligionModifier();

	mov	eax, DWORD PTR [ebp+548]
	add	DWORD PTR [esi+324], eax

; 1805 : 			m_iTradeBuildingModifier += trait->GetTradeBuildingModifier();

	mov	ecx, DWORD PTR [ebp+552]
	add	DWORD PTR [esi+328], ecx

; 1806 : 
; 1807 : 			if(trait->IsFightWellDamaged())

	cmp	BYTE PTR [ebp+584], 0
	je	SHORT $LN57@InitPlayer

; 1808 : 			{
; 1809 : 				m_bFightWellDamaged = true;
; 1810 : 				// JON: Changing the way this works. Above line can/should probably be removed at some point
; 1811 : 				int iWoundedUnitDamageMod = /*-50*/ GC.getTRAIT_WOUNDED_DAMAGE_MOD();
; 1812 : 				m_pPlayer->ChangeWoundedUnitDamageMod(iWoundedUnitDamageMod);

	mov	ecx, DWORD PTR [esi+4]
	mov	BYTE PTR [esi+332], 1
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7460
	push	edx
	call	?ChangeWoundedUnitDamageMod@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeWoundedUnitDamageMod
$LN57@InitPlayer:

; 1813 : 			}
; 1814 : 			if(trait->IsMoveFriendlyWoodsAsRoad())

	cmp	BYTE PTR [ebp+585], 0
	je	SHORT $LN56@InitPlayer

; 1815 : 			{
; 1816 : 				m_bMoveFriendlyWoodsAsRoad = true;

	mov	BYTE PTR [esi+333], 1
$LN56@InitPlayer:

; 1817 : 			}
; 1818 : 			if(trait->IsFasterAlongRiver())

	cmp	BYTE PTR [ebp+586], 0
	je	SHORT $LN55@InitPlayer

; 1819 : 			{
; 1820 : 				m_bFasterAlongRiver = true;

	mov	BYTE PTR [esi+334], 1
$LN55@InitPlayer:

; 1821 : 			}
; 1822 : 			if(trait->IsFasterInHills())

	cmp	BYTE PTR [ebp+587], 0
	je	SHORT $LN54@InitPlayer

; 1823 : 			{
; 1824 : 				m_bFasterInHills = true;

	mov	BYTE PTR [esi+335], 1
$LN54@InitPlayer:

; 1825 : 			}
; 1826 : 			if(trait->IsEmbarkedAllWater())

	cmp	BYTE PTR [ebp+588], 0
	je	SHORT $LN53@InitPlayer

; 1827 : 			{
; 1828 : 				m_bEmbarkedAllWater = true;

	mov	BYTE PTR [esi+336], 1
$LN53@InitPlayer:

; 1829 : 			}
; 1830 : 			if(trait->IsEmbarkedToLandFlatCost())

	cmp	BYTE PTR [ebp+589], 0
	je	SHORT $LN52@InitPlayer

; 1831 : 			{
; 1832 : 				m_bEmbarkedToLandFlatCost = true;

	mov	BYTE PTR [esi+337], 1
$LN52@InitPlayer:

; 1833 : 			}
; 1834 : 			if(trait->IsNoHillsImprovementMaintenance())

	cmp	BYTE PTR [ebp+590], 0
	je	SHORT $LN51@InitPlayer

; 1835 : 			{
; 1836 : 				m_bNoHillsImprovementMaintenance = true;

	mov	BYTE PTR [esi+338], 1
$LN51@InitPlayer:

; 1837 : 			}
; 1838 : 			if(trait->IsTechBoostFromCapitalScienceBuildings())

	cmp	BYTE PTR [ebp+591], 0
	je	SHORT $LN50@InitPlayer

; 1839 : 			{
; 1840 : 				m_bTechBoostFromCapitalScienceBuildings = true;

	mov	BYTE PTR [esi+339], 1
$LN50@InitPlayer:

; 1841 : 			}
; 1842 : 			if(trait->IsStaysAliveZeroCities())

	cmp	BYTE PTR [ebp+592], 0
	je	SHORT $LN49@InitPlayer

; 1843 : 			{
; 1844 : 				m_bStaysAliveZeroCities = true;

	mov	BYTE PTR [esi+340], 1
$LN49@InitPlayer:

; 1845 : 			}
; 1846 : 			if(trait->IsFaithFromUnimprovedForest())

	cmp	BYTE PTR [ebp+593], 0
	je	SHORT $LN48@InitPlayer

; 1847 : 			{
; 1848 : 				m_bFaithFromUnimprovedForest = true;

	mov	BYTE PTR [esi+341], 1
$LN48@InitPlayer:

; 1849 : 			}
; 1850 : #ifdef NQ_UNIT_IMMUNE_TO_PLUNDER_FROM_TRAIT
; 1851 : 			if(trait->IsSeaTradeRoutesArePlunderImmune())

	cmp	BYTE PTR [ebp+594], 0
	je	SHORT $LN47@InitPlayer

; 1852 : 			{
; 1853 : 				m_bSeaTradeRoutesArePlunderImmune = true;

	mov	BYTE PTR [esi+342], 1
$LN47@InitPlayer:

; 1854 : 			}
; 1855 : #endif
; 1856 : 			// NQMP GJS - New France UA begin
; 1857 : 			if(trait->IsEarnsGreatPersonOnSlotOrGuild())

	cmp	BYTE PTR [ebp+595], 0
	je	SHORT $LN46@InitPlayer

; 1858 : 			{
; 1859 : 				m_bEarnsGreatPersonOnSlotOrGuild = true;

	mov	BYTE PTR [esi+343], 1
$LN46@InitPlayer:

; 1860 : 			}
; 1861 : 			// NQMP GJS - New France UA end
; 1862 : 			if(trait->IsBonusReligiousBelief())

	cmp	BYTE PTR [ebp+599], 0
	je	SHORT $LN45@InitPlayer

; 1863 : 			{
; 1864 : 				m_bBonusReligiousBelief = true;

	mov	BYTE PTR [esi+347], 1
$LN45@InitPlayer:

; 1865 : 			}
; 1866 : 			if(trait->IsAbleToAnnexCityStates())

	cmp	BYTE PTR [ebp+600], 0
	je	SHORT $LN44@InitPlayer

; 1867 : 			{
; 1868 : 				m_bAbleToAnnexCityStates = true;

	mov	BYTE PTR [esi+348], 1
$LN44@InitPlayer:

; 1869 : 			}
; 1870 : 			if(trait->IsCrossesMountainsAfterGreatGeneral())

	cmp	BYTE PTR [ebp+601], 0
	je	SHORT $LN43@InitPlayer

; 1871 : 			{
; 1872 : 				m_bCrossesMountainsAfterGreatGeneral = true;

	mov	BYTE PTR [esi+349], 1
$LN43@InitPlayer:

; 1873 : 			}
; 1874 : 			if(trait->IsMayaCalendarBonuses())

	cmp	BYTE PTR [ebp+602], 0
	je	SHORT $LN42@InitPlayer

; 1875 : 			{
; 1876 : 				m_bMayaCalendarBonuses = true;

	mov	BYTE PTR [esi+350], 1
$LN42@InitPlayer:

; 1877 : 			}
; 1878 : 			if (trait->IsNoAnnexing())

	cmp	BYTE PTR [ebp+603], 0
	je	SHORT $LN41@InitPlayer

; 1879 : 			{
; 1880 : 				m_bNoAnnexing = true;

	mov	BYTE PTR [esi+351], 1
$LN41@InitPlayer:

; 1881 : 			}
; 1882 : 			if (trait->IsTechFromCityConquer())

	cmp	BYTE PTR [ebp+604], 0
	je	SHORT $LN40@InitPlayer

; 1883 : 			{
; 1884 : 				m_bTechFromCityConquer = true;

	mov	BYTE PTR [esi+352], 1
$LN40@InitPlayer:

; 1885 : 			}
; 1886 : 			if (trait->IsUniqueLuxuryRequiresNewArea())

	cmp	BYTE PTR [ebp+605], 0
	je	SHORT $LN39@InitPlayer

; 1887 : 			{
; 1888 : 				m_bUniqueLuxuryRequiresNewArea = true;

	mov	BYTE PTR [esi+353], 1
$LN39@InitPlayer:

; 1889 : 			}
; 1890 : 			if (trait->IsRiverTradeRoad())

	cmp	BYTE PTR [ebp+606], 0
	je	SHORT $LN38@InitPlayer

; 1891 : 			{
; 1892 : 				m_bRiverTradeRoad = true;

	mov	BYTE PTR [esi+354], 1
$LN38@InitPlayer:

; 1893 : 			}
; 1894 : 			if (trait->IsAngerFreeIntrusionOfCityStates())

	cmp	BYTE PTR [ebp+607], 0
	je	SHORT $LN37@InitPlayer

; 1895 : 			{
; 1896 : 				m_bAngerFreeIntrusionOfCityStates = true;

	mov	BYTE PTR [esi+355], 1
$LN37@InitPlayer:

; 1897 : 			}
; 1898 : 
; 1899 : 			for(int iYield = 0; iYield < NUM_YIELD_TYPES; iYield++)

	lea	eax, DWORD PTR [esi+384]
	xor	ebx, ebx
	mov	DWORD PTR tv4477[esp+116], eax
$LL36@InitPlayer:

; 1900 : 			{
; 1901 : 				if(trait->GetExtraYieldThreshold(iYield) > m_iExtraYieldThreshold[iYield])

	mov	ecx, DWORD PTR [ebp+636]
	test	ecx, ecx
	je	SHORT $LN387@InitPlayer
	mov	edx, DWORD PTR [ecx+ebx]
	jmp	SHORT $LN388@InitPlayer
$LN387@InitPlayer:
	or	edx, -1
$LN388@InitPlayer:
	mov	eax, DWORD PTR tv4477[esp+116]
	cmp	edx, DWORD PTR [eax]
	jle	SHORT $LN731@InitPlayer

; 1902 : 				{
; 1903 : 					m_iExtraYieldThreshold[iYield] = trait->GetExtraYieldThreshold(iYield);

	test	ecx, ecx
	je	SHORT $LN391@InitPlayer
	mov	ecx, DWORD PTR [ecx+ebx]
	jmp	SHORT $LN392@InitPlayer
$LN391@InitPlayer:
	or	ecx, -1
$LN392@InitPlayer:
	mov	DWORD PTR [eax], ecx
$LN731@InitPlayer:

; 1904 : 				}
; 1905 : 				m_iFreeCityYield[iYield] = trait->GetYieldChange(iYield);

	mov	ecx, DWORD PTR [ebp+640]
	test	ecx, ecx
	je	SHORT $LN395@InitPlayer
	mov	ecx, DWORD PTR [ecx+ebx]
	jmp	SHORT $LN396@InitPlayer
$LN395@InitPlayer:
	or	ecx, -1
$LN396@InitPlayer:
	mov	DWORD PTR [eax+24], ecx

; 1906 : 				m_iYieldChangeStrategicResources[iYield] = trait->GetYieldChangeStrategicResources(iYield);

	mov	ecx, DWORD PTR [ebp+644]
	test	ecx, ecx
	je	SHORT $LN399@InitPlayer
	mov	ecx, DWORD PTR [ecx+ebx]
	jmp	SHORT $LN400@InitPlayer
$LN399@InitPlayer:
	or	ecx, -1
$LN400@InitPlayer:
	mov	DWORD PTR [eax+48], ecx

; 1907 : 				m_iYieldChangeLuxuryResources[iYield] = trait->GetYieldChangeLuxuryResources(iYield); // NQMP GJS - New Netherlands UA

	mov	ecx, DWORD PTR [ebp+648]
	test	ecx, ecx
	je	SHORT $LN403@InitPlayer
	mov	ecx, DWORD PTR [ecx+ebx]
	jmp	SHORT $LN404@InitPlayer
$LN403@InitPlayer:
	or	ecx, -1
$LN404@InitPlayer:
	mov	DWORD PTR [eax+72], ecx

; 1908 : 				m_iYieldChangeNaturalWonder[iYield] = trait->GetYieldChangeNaturalWonder(iYield);

	mov	ecx, DWORD PTR [ebp+652]
	test	ecx, ecx
	je	SHORT $LN407@InitPlayer
	mov	ecx, DWORD PTR [ecx+ebx]
	jmp	SHORT $LN408@InitPlayer
$LN407@InitPlayer:
	or	ecx, -1
$LN408@InitPlayer:
	mov	DWORD PTR [eax+96], ecx

; 1909 : 				m_iYieldChangePerTradePartner[iYield] = trait->GetYieldChangePerTradePartner(iYield);

	mov	ecx, DWORD PTR [ebp+656]
	test	ecx, ecx
	je	SHORT $LN411@InitPlayer
	mov	ecx, DWORD PTR [ecx+ebx]
	jmp	SHORT $LN412@InitPlayer
$LN411@InitPlayer:
	or	ecx, -1
$LN412@InitPlayer:
	mov	DWORD PTR [eax+120], ecx

; 1910 : 				m_iYieldChangeIncomingTradeRoute[iYield] = trait->GetYieldChangeIncomingTradeRoute(iYield);

	mov	ecx, DWORD PTR [ebp+660]
	test	ecx, ecx
	je	SHORT $LN415@InitPlayer
	mov	ecx, DWORD PTR [ecx+ebx]
	jmp	SHORT $LN416@InitPlayer
$LN415@InitPlayer:
	or	ecx, -1
$LN416@InitPlayer:
	mov	DWORD PTR [eax+144], ecx

; 1911 : 				m_iYieldRateModifier[iYield] = trait->GetYieldModifier(iYield);

	mov	ecx, DWORD PTR [ebp+664]
	test	ecx, ecx
	je	SHORT $LN419@InitPlayer
	mov	ecx, DWORD PTR [ecx+ebx]
	jmp	SHORT $LN420@InitPlayer
$LN419@InitPlayer:
	or	ecx, -1
$LN420@InitPlayer:
	mov	DWORD PTR [eax+168], ecx

; 1912 : 
; 1913 : #ifdef AUI_WARNING_FIXES
; 1914 : 				for (uint iFeatureLoop = 0; iFeatureLoop < GC.getNumFeatureInfos(); iFeatureLoop++)
; 1915 : #else
; 1916 : 				for(int iFeatureLoop = 0; iFeatureLoop < GC.getNumFeatureInfos(); iFeatureLoop++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iFeatureLoop$223645[esp+116], 0
	call	?getNumFeatureInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumFeatureInfos
	test	eax, eax
	jle	$LN30@InitPlayer
	xor	edi, edi
	mov	DWORD PTR tv4000[esp+116], ebx
$LL724@InitPlayer:

; 1917 : #endif
; 1918 : 				{
; 1919 : 					int iChange = trait->GetUnimprovedFeatureYieldChanges((FeatureTypes)iFeatureLoop, (YieldTypes)iYield);

	mov	eax, DWORD PTR [ebp+692]
	test	eax, eax
	je	SHORT $LN31@InitPlayer
	mov	ecx, DWORD PTR _iFeatureLoop$223645[esp+116]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR [ebx+edx]

; 1920 : 					if(iChange > 0)

	test	ecx, ecx
	jle	SHORT $LN31@InitPlayer

; 1921 : 					{
; 1922 : 						Firaxis::Array<int, NUM_YIELD_TYPES> yields = m_ppaaiUnimprovedFeatureYieldChange[iFeatureLoop];

	mov	eax, DWORD PTR [esi+848]
	mov	edx, DWORD PTR [edi+eax]
	mov	DWORD PTR _yields$223654[esp+116], edx
	mov	edx, DWORD PTR [edi+eax+4]
	mov	DWORD PTR _yields$223654[esp+120], edx
	mov	edx, DWORD PTR [edi+eax+8]
	mov	DWORD PTR _yields$223654[esp+124], edx
	mov	edx, DWORD PTR [edi+eax+12]
	mov	DWORD PTR _yields$223654[esp+128], edx
	mov	edx, DWORD PTR [edi+eax+16]
	mov	DWORD PTR _yields$223654[esp+132], edx
	mov	edx, DWORD PTR [edi+eax+20]
	mov	DWORD PTR _yields$223654[esp+136], edx

; 1923 : 						yields[iYield] = (m_ppaaiUnimprovedFeatureYieldChange[iFeatureLoop][iYield] + iChange);

	mov	edx, DWORD PTR tv4000[esp+116]
	mov	edx, DWORD PTR [edx+eax]
	add	edx, ecx
	mov	DWORD PTR _yields$223654[esp+ebx+116], edx

; 1924 : 						m_ppaaiUnimprovedFeatureYieldChange[iFeatureLoop] = yields;

	mov	ecx, DWORD PTR _yields$223654[esp+116]
	mov	edx, DWORD PTR _yields$223654[esp+120]
	mov	DWORD PTR [edi+eax], ecx
	mov	ecx, DWORD PTR _yields$223654[esp+124]
	mov	DWORD PTR [edi+eax+4], edx
	mov	edx, DWORD PTR _yields$223654[esp+128]
	mov	DWORD PTR [edi+eax+8], ecx
	mov	ecx, DWORD PTR _yields$223654[esp+132]
	mov	DWORD PTR [edi+eax+12], edx
	mov	edx, DWORD PTR _yields$223654[esp+136]
	mov	DWORD PTR [edi+eax+16], ecx
	mov	DWORD PTR [edi+eax+20], edx
$LN31@InitPlayer:
	inc	DWORD PTR _iFeatureLoop$223645[esp+116]
	add	DWORD PTR tv4000[esp+116], 24		; 00000018H
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	add	edi, 24					; 00000018H
	call	?getNumFeatureInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumFeatureInfos
	cmp	DWORD PTR _iFeatureLoop$223645[esp+116], eax
	jl	$LL724@InitPlayer
$LN30@InitPlayer:

; 1925 : 					}
; 1926 : 				}
; 1927 : 
; 1928 : #ifdef AUI_WARNING_FIXES
; 1929 : 				for (uint iImprovementLoop = 0; iImprovementLoop < GC.getNumImprovementInfos(); iImprovementLoop++)
; 1930 : #else
; 1931 : 				for(int iImprovementLoop = 0; iImprovementLoop < GC.getNumImprovementInfos(); iImprovementLoop++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iImprovementLoop$223655[esp+116], 0
	call	?getNumImprovementInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumImprovementInfos
	test	eax, eax
	jle	$LN26@InitPlayer
	xor	edi, edi
	mov	DWORD PTR tv4099[esp+116], ebx
	npad	1
$LL725@InitPlayer:

; 1932 : #endif
; 1933 : 				{
; 1934 : 					int iChange = trait->GetImprovementYieldChanges((ImprovementTypes)iImprovementLoop, (YieldTypes)iYield);

	mov	eax, DWORD PTR [ebp+684]
	test	eax, eax
	je	SHORT $LN27@InitPlayer
	mov	ecx, DWORD PTR _iImprovementLoop$223655[esp+116]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR [ebx+edx]

; 1935 : 					if(iChange > 0)

	test	ecx, ecx
	jle	SHORT $LN27@InitPlayer

; 1936 : 					{
; 1937 : 						Firaxis::Array<int, NUM_YIELD_TYPES> yields = m_ppaaiImprovementYieldChange[iImprovementLoop];

	mov	eax, DWORD PTR [esi+816]
	mov	edx, DWORD PTR [edi+eax]
	mov	DWORD PTR _yields$223664[esp+116], edx
	mov	edx, DWORD PTR [edi+eax+4]
	mov	DWORD PTR _yields$223664[esp+120], edx
	mov	edx, DWORD PTR [edi+eax+8]
	mov	DWORD PTR _yields$223664[esp+124], edx
	mov	edx, DWORD PTR [edi+eax+12]
	mov	DWORD PTR _yields$223664[esp+128], edx
	mov	edx, DWORD PTR [edi+eax+16]
	mov	DWORD PTR _yields$223664[esp+132], edx
	mov	edx, DWORD PTR [edi+eax+20]
	mov	DWORD PTR _yields$223664[esp+136], edx

; 1938 : 						yields[iYield] = (m_ppaaiImprovementYieldChange[iImprovementLoop][iYield] + iChange);

	mov	edx, DWORD PTR tv4099[esp+116]
	mov	edx, DWORD PTR [eax+edx]
	add	edx, ecx
	mov	DWORD PTR _yields$223664[esp+ebx+116], edx

; 1939 : 						m_ppaaiImprovementYieldChange[iImprovementLoop] = yields;

	mov	ecx, DWORD PTR _yields$223664[esp+116]
	mov	edx, DWORD PTR _yields$223664[esp+120]
	mov	DWORD PTR [edi+eax], ecx
	mov	ecx, DWORD PTR _yields$223664[esp+124]
	mov	DWORD PTR [edi+eax+4], edx
	mov	edx, DWORD PTR _yields$223664[esp+128]
	mov	DWORD PTR [edi+eax+8], ecx
	mov	ecx, DWORD PTR _yields$223664[esp+132]
	mov	DWORD PTR [edi+eax+12], edx
	mov	edx, DWORD PTR _yields$223664[esp+136]
	mov	DWORD PTR [edi+eax+16], ecx
	mov	DWORD PTR [edi+eax+20], edx
$LN27@InitPlayer:
	inc	DWORD PTR _iImprovementLoop$223655[esp+116]
	add	DWORD PTR tv4099[esp+116], 24		; 00000018H
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	add	edi, 24					; 00000018H
	call	?getNumImprovementInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumImprovementInfos
	cmp	DWORD PTR _iImprovementLoop$223655[esp+116], eax
	jl	$LL725@InitPlayer
$LN26@InitPlayer:

; 1940 : 					}
; 1941 : 				}
; 1942 : 
; 1943 : #ifdef AUI_WARNING_FIXES
; 1944 : 				for (uint iSpecialistLoop = 0; iSpecialistLoop < GC.getNumSpecialistInfos(); iSpecialistLoop++)
; 1945 : #else
; 1946 : 				for(int iSpecialistLoop = 0; iSpecialistLoop < GC.getNumSpecialistInfos(); iSpecialistLoop++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iSpecialistLoop$223665[esp+116], 0
	call	?getNumSpecialistInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumSpecialistInfos
	test	eax, eax
	jle	$LN35@InitPlayer
	xor	edi, edi
	mov	DWORD PTR tv4199[esp+116], ebx
	npad	7
$LL726@InitPlayer:

; 1947 : #endif
; 1948 : 				{
; 1949 : 					int iChange = trait->GetSpecialistYieldChanges((SpecialistTypes)iSpecialistLoop, (YieldTypes)iYield);

	mov	eax, DWORD PTR [ebp+688]
	test	eax, eax
	je	$LN23@InitPlayer
	mov	ecx, DWORD PTR _iSpecialistLoop$223665[esp+116]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR [ebx+edx]

; 1950 : 					if(iChange > 0)

	test	ecx, ecx
	jle	SHORT $LN23@InitPlayer

; 1951 : 					{
; 1952 : 						Firaxis::Array<int, NUM_YIELD_TYPES> yields = m_ppaaiSpecialistYieldChange[iSpecialistLoop];

	mov	eax, DWORD PTR [esi+832]
	mov	edx, DWORD PTR [eax+edi]
	add	eax, edi
	mov	DWORD PTR _yields$223674[esp+116], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _yields$223674[esp+120], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR _yields$223674[esp+124], edx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _yields$223674[esp+128], edx
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR _yields$223674[esp+132], edx

; 1953 : 						yields[iYield] = (m_ppaaiSpecialistYieldChange[iSpecialistLoop][iYield] + iChange);

	mov	edx, DWORD PTR tv4199[esp+116]
	mov	DWORD PTR _yields$223674[esp+136], eax
	mov	eax, DWORD PTR [esi+832]
	mov	edx, DWORD PTR [eax+edx]
	add	edx, ecx
	mov	DWORD PTR _yields$223674[esp+ebx+116], edx

; 1954 : 						m_ppaaiSpecialistYieldChange[iSpecialistLoop] = yields;

	mov	ecx, DWORD PTR _yields$223674[esp+116]
	mov	edx, DWORD PTR _yields$223674[esp+120]
	mov	DWORD PTR [eax+edi], ecx
	mov	ecx, DWORD PTR _yields$223674[esp+124]
	mov	DWORD PTR [eax+edi+4], edx
	mov	edx, DWORD PTR _yields$223674[esp+128]
	mov	DWORD PTR [eax+edi+8], ecx
	mov	ecx, DWORD PTR _yields$223674[esp+132]
	mov	DWORD PTR [eax+edi+12], edx
	mov	edx, DWORD PTR _yields$223674[esp+136]
	mov	DWORD PTR [eax+edi+16], ecx
	mov	DWORD PTR [eax+edi+20], edx
$LN23@InitPlayer:
	inc	DWORD PTR _iSpecialistLoop$223665[esp+116]
	add	DWORD PTR tv4199[esp+116], 24		; 00000018H
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	add	edi, 24					; 00000018H
	call	?getNumSpecialistInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumSpecialistInfos
	cmp	DWORD PTR _iSpecialistLoop$223665[esp+116], eax
	jl	$LL726@InitPlayer
$LN35@InitPlayer:

; 1897 : 			}
; 1898 : 
; 1899 : 			for(int iYield = 0; iYield < NUM_YIELD_TYPES; iYield++)

	add	DWORD PTR tv4477[esp+116], 4
	add	ebx, 4
	cmp	ebx, 24					; 00000018H
	jl	$LL36@InitPlayer

; 1955 : 					}
; 1956 : 				}
; 1957 : #ifdef LEK_TRAIT_SPECIALIST_YIELD_MAX_ONE
; 1958 : 				for(int iSpecialistLoop = 0; iSpecialistLoop < 2; iSpecialistLoop++)
; 1959 : 
; 1960 : 				{
; 1961 : 					int iChange = trait->GetAnySpecificSpecialistYieldChanges((SpecialistTypes)iSpecialistLoop, (YieldTypes)iYield);
; 1962 : 					if(iChange > 0)
; 1963 : 					{
; 1964 : 						Firaxis::Array<int, NUM_YIELD_TYPES> yields = m_ppaaiAnySpecificSpecialistYieldChange[iSpecialistLoop];
; 1965 : 						yields[iYield] = (m_ppaaiAnySpecificSpecialistYieldChange[iSpecialistLoop][iYield] + iChange);
; 1966 : 						m_ppaaiAnySpecificSpecialistYieldChange[iSpecialistLoop] = yields;
; 1967 : 					}
; 1968 : 				}
; 1969 : #endif
; 1970 : 			}
; 1971 : 			CvAssert(GC.getNumTerrainInfos() <= NUM_TERRAIN_TYPES);
; 1972 : #ifdef AUI_WARNING_FIXES
; 1973 : 			for (uint iTerrain = 0; iTerrain < GC.getNumTerrainInfos(); iTerrain++)
; 1974 : #else
; 1975 : 			for(int iTerrain = 0; iTerrain < GC.getNumTerrainInfos(); iTerrain++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	edi, edi
	call	?getNumTerrainInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumTerrainInfos
	test	eax, eax
	jle	SHORT $LN727@InitPlayer
	lea	ebx, DWORD PTR [esi+576]
	npad	9
$LL729@InitPlayer:

; 1976 : #endif
; 1977 : 			{
; 1978 : 				m_iStrategicResourceQuantityModifier[iTerrain] = trait->GetStrategicResourceQuantityModifier(iTerrain);

	mov	eax, DWORD PTR [ebp+668]
	test	eax, eax
	je	SHORT $LN480@InitPlayer
	mov	eax, DWORD PTR [eax+edi*4]
	jmp	SHORT $LN481@InitPlayer
$LN480@InitPlayer:
	or	eax, -1
$LN481@InitPlayer:
	mov	DWORD PTR [ebx], eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	edi
	add	ebx, 4
	call	?getNumTerrainInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumTerrainInfos
	cmp	edi, eax
	jl	SHORT $LL729@InitPlayer
$LN727@InitPlayer:

; 1979 : 			}
; 1980 : 
; 1981 : #ifdef AUI_WARNING_FIXES
; 1982 : 			for (uint iResource = 0; iResource < GC.getNumResourceInfos(); iResource++)
; 1983 : #else
; 1984 : 			for(int iResource = 0; iResource < GC.getNumResourceInfos(); iResource++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	edi, edi
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	test	eax, eax
	jle	SHORT $LN15@InitPlayer
$LL17@InitPlayer:

; 1985 : #endif
; 1986 : 			{
; 1987 : 				m_aiResourceQuantityModifier[iResource] = trait->GetResourceQuantityModifier(iResource);

	mov	eax, DWORD PTR [ebp+672]
	test	eax, eax
	je	SHORT $LN484@InitPlayer
	mov	eax, DWORD PTR [eax+edi*4]
	jmp	SHORT $LN485@InitPlayer
$LN484@InitPlayer:
	or	eax, -1
$LN485@InitPlayer:
	mov	ecx, DWORD PTR [esi+616]
	mov	DWORD PTR [ecx+edi*4], eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	edi
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	cmp	edi, eax
	jl	SHORT $LL17@InitPlayer
$LN15@InitPlayer:

; 1988 : 			}
; 1989 : 
; 1990 : #ifdef AUI_WARNING_FIXES
; 1991 : 			for (uint iUnitClass = 0; iUnitClass < GC.getNumUnitClassInfos(); iUnitClass++)
; 1992 : #else
; 1993 : 			for (int iUnitClass = 0; iUnitClass < GC.getNumUnitClassInfos(); iUnitClass++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	edi, edi
	call	?getNumUnitClassInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitClassInfos
	test	eax, eax
	jle	$LN728@InitPlayer
$LL732@InitPlayer:

; 1994 : #endif
; 1995 : 			{
; 1996 : 				m_abNoTrain[iUnitClass] = trait->NoTrain((UnitClassTypes)iUnitClass);

	cmp	edi, -1
	je	SHORT $LN489@InitPlayer
	mov	eax, DWORD PTR [ebp+732]
	xor	ecx, ecx
	test	edi, edi
	je	SHORT $LN733@InitPlayer
	jge	SHORT $LN513@InitPlayer
	mov	edx, edi
	neg	edx
	je	SHORT $LN513@InitPlayer
	or	ecx, -1
	sub	ecx, edi
	shr	ecx, 5
	add	ecx, ecx
	add	ecx, ecx
	mov	edx, -4					; fffffffcH
	sub	edx, ecx
	add	eax, edx
	jmp	SHORT $LN738@InitPlayer
$LN513@InitPlayer:
	mov	ecx, edi
	shr	ecx, 5
	lea	eax, DWORD PTR [eax+ecx*4]
$LN738@InitPlayer:
	mov	ecx, edi
	and	ecx, 31					; 0000001fH
$LN733@InitPlayer:
	mov	edx, 1
	shl	edx, cl
	test	edx, DWORD PTR [eax]
	setne	dl
	jmp	SHORT $LN488@InitPlayer
$LN489@InitPlayer:
	xor	dl, dl
$LN488@InitPlayer:
	mov	eax, DWORD PTR [esi+636]
	xor	ecx, ecx
	test	edi, edi
	je	SHORT $LN551@InitPlayer
	jge	SHORT $LN552@InitPlayer
	mov	ecx, edi
	neg	ecx
	je	SHORT $LN552@InitPlayer
	or	ecx, -1
	sub	ecx, edi
	shr	ecx, 5
	add	ecx, ecx
	add	ecx, ecx
	mov	ebx, -4					; fffffffcH
	sub	ebx, ecx
	add	eax, ebx
	jmp	SHORT $LN739@InitPlayer
$LN552@InitPlayer:
	mov	ecx, edi
	shr	ecx, 5
	lea	eax, DWORD PTR [eax+ecx*4]
$LN739@InitPlayer:
	mov	ecx, edi
	and	ecx, 31					; 0000001fH
$LN551@InitPlayer:
	test	dl, dl
	mov	edx, 1
	je	SHORT $LN565@InitPlayer
	shl	edx, cl
	or	DWORD PTR [eax], edx
	jmp	SHORT $LN13@InitPlayer
$LN565@InitPlayer:
	shl	edx, cl
	not	edx
	and	DWORD PTR [eax], edx
$LN13@InitPlayer:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	edi
	call	?getNumUnitClassInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitClassInfos
	cmp	edi, eax
	jl	$LL732@InitPlayer
$LN728@InitPlayer:

; 1997 : 			}
; 1998 : 
; 1999 : 			//EAP: No Build
; 2000 : 			for (int iImprovement = 0; iImprovement < GC.getNumImprovementInfos(); iImprovement++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	edi, edi
	call	?getNumImprovementInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumImprovementInfos
	test	eax, eax
	jle	$LN9@InitPlayer
$LL734@InitPlayer:

; 2001 : 			{
; 2002 : 				m_abNoBuild[iImprovement] = trait->NoBuild((ImprovementTypes)iImprovement);

	cmp	edi, -1
	je	SHORT $LN577@InitPlayer
	mov	eax, DWORD PTR [ebp+752]
	xor	ecx, ecx
	test	edi, edi
	je	SHORT $LN736@InitPlayer
	jge	SHORT $LN601@InitPlayer
	mov	ecx, edi
	neg	ecx
	je	SHORT $LN601@InitPlayer
	or	edx, -1
	sub	edx, edi
	shr	edx, 5
	add	edx, edx
	add	edx, edx
	mov	ecx, -4					; fffffffcH
	sub	ecx, edx
	add	eax, ecx
	jmp	SHORT $LN740@InitPlayer
$LN601@InitPlayer:
	mov	edx, edi
	shr	edx, 5
	lea	eax, DWORD PTR [eax+edx*4]
$LN740@InitPlayer:
	mov	ecx, edi
	and	ecx, 31					; 0000001fH
$LN736@InitPlayer:
	mov	edx, 1
	shl	edx, cl
	test	edx, DWORD PTR [eax]
	setne	dl
	jmp	SHORT $LN576@InitPlayer
$LN577@InitPlayer:
	xor	dl, dl
$LN576@InitPlayer:
	mov	eax, DWORD PTR [esi+656]
	xor	ecx, ecx
	test	edi, edi
	je	SHORT $LN639@InitPlayer
	jge	SHORT $LN640@InitPlayer
	mov	ecx, edi
	neg	ecx
	je	SHORT $LN640@InitPlayer
	or	ecx, -1
	sub	ecx, edi
	shr	ecx, 5
	add	ecx, ecx
	add	ecx, ecx
	mov	ebx, -4					; fffffffcH
	sub	ebx, ecx
	add	eax, ebx
	jmp	SHORT $LN741@InitPlayer
$LN640@InitPlayer:
	mov	ecx, edi
	shr	ecx, 5
	lea	eax, DWORD PTR [eax+ecx*4]
$LN741@InitPlayer:
	mov	ecx, edi
	and	ecx, 31					; 0000001fH
$LN639@InitPlayer:
	test	dl, dl
	mov	edx, 1
	je	SHORT $LN653@InitPlayer
	shl	edx, cl
	or	DWORD PTR [eax], edx
	jmp	SHORT $LN10@InitPlayer
$LN653@InitPlayer:
	shl	edx, cl
	not	edx
	and	DWORD PTR [eax], edx
$LN10@InitPlayer:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	edi
	call	?getNumImprovementInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumImprovementInfos
	cmp	edi, eax
	jl	$LL734@InitPlayer
$LN9@InitPlayer:

; 2003 : 			}
; 2004 : 
; 2005 : 			FreeTraitUnit traitUnit;
; 2006 : #ifdef AUI_WARNING_FIXES
; 2007 : 			traitUnit.m_iFreeUnit = (UnitClassTypes)trait->GetFreeUnitClassType();
; 2008 : #else
; 2009 : 			traitUnit.m_iFreeUnit = (UnitTypes)trait->GetFreeUnitClassType();

	mov	eax, DWORD PTR [ebp+428]
	mov	DWORD PTR _traitUnit$223695[esp+116], eax

; 2010 : #endif
; 2011 : 			if(traitUnit.m_iFreeUnit != NO_UNITCLASS)

	cmp	eax, -1
	je	SHORT $LN669@InitPlayer

; 2012 : 			{
; 2013 : 				traitUnit.m_ePrereqTech = trait->GetFreeUnitPrereqTech();
; 2014 : 				m_aFreeTraitUnits.push_back(traitUnit);

	mov	eax, DWORD PTR [esi+676]
	mov	ebx, DWORD PTR [ebp+556]
	lea	edi, DWORD PTR [esi+668]
	mov	BYTE PTR [edi+52], 0
	cmp	DWORD PTR [edi+4], eax
	jne	SHORT $LN668@InitPlayer
	push	eax
	mov	ecx, edi
	call	?GrowSize@?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<FreeTraitUnit,5,1,297,0>::GrowSize
$LN668@InitPlayer:
	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi]
	lea	eax, DWORD PTR [ecx+eax*8]
	test	eax, eax
	je	SHORT $LN671@InitPlayer
	mov	edx, DWORD PTR _traitUnit$223695[esp+116]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ebx
$LN671@InitPlayer:
	inc	DWORD PTR [edi+4]
$LN669@InitPlayer:

; 2015 : 			}
; 2016 : 
; 2017 : 			m_eCombatBonusImprovement = trait->GetCombatBonusImprovement();

	mov	eax, DWORD PTR [ebp+560]

; 2018 : 
; 2019 : #ifdef AUI_WARNING_FIXES
; 2020 : 			for (uint jJ = 0; jJ < GC.getNumUnitCombatClassInfos(); jJ++)
; 2021 : #else
; 2022 : 			int iNumUnitCombatClassInfos = GC.getNumUnitCombatClassInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR [esi+368], eax
	call	?getNumUnitCombatClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumUnitCombatClassInfos

; 2023 : 			for(int jJ= 0; jJ < iNumUnitCombatClassInfos; jJ++)

	xor	ecx, ecx
	test	eax, eax
	jle	SHORT $LN735@InitPlayer
	npad	8
$LL7@InitPlayer:
	mov	edx, DWORD PTR [esi+784]

; 2024 : #endif
; 2025 : 			{
; 2026 : 				m_paiMovesChangeUnitCombat[jJ] += trait->GetMovesChangeUnitCombat(jJ);

	mov	edi, DWORD PTR [ebp+676]
	mov	edi, DWORD PTR [edi+ecx*4]
	add	DWORD PTR [edx+ecx*4], edi

; 2027 : 				m_paiMaintenanceModifierUnitCombat[jJ] += trait->GetMaintenanceModifierUnitCombat(jJ);

	mov	edi, DWORD PTR [ebp+680]
	mov	edi, DWORD PTR [edi+ecx*4]
	lea	edx, DWORD PTR [edx+ecx*4]
	mov	edx, DWORD PTR [esi+800]
	add	DWORD PTR [edx+ecx*4], edi
	lea	edx, DWORD PTR [edx+ecx*4]
	inc	ecx
	cmp	ecx, eax
	jl	SHORT $LL7@InitPlayer
$LN735@InitPlayer:

; 2028 : 			}
; 2029 : 
; 2030 : #ifdef AUI_WARNING_FIXES
; 2031 : 			for (uint iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)
; 2032 : #else
; 2033 : 			for(int iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	edi, edi
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	test	eax, eax
	jle	SHORT $LN60@InitPlayer
	npad	1
$LL4@InitPlayer:

; 2034 : #endif
; 2035 : 			{
; 2036 : 				FreeResourceXCities temp = trait->GetFreeResourceXCities((ResourceTypes)iResourceLoop);

	mov	eax, DWORD PTR [ebp+712]
	mov	edx, DWORD PTR [eax+edi*8]
	mov	eax, DWORD PTR [eax+edi*8+4]

; 2037 : 				if(temp.m_iResourceQuantity > 0)

	test	eax, eax
	jle	SHORT $LN3@InitPlayer

; 2038 : 				{
; 2039 : 					m_aFreeResourceXCities[iResourceLoop] = temp;

	mov	ecx, DWORD PTR [esi+864]
	mov	DWORD PTR [ecx+edi*8], edx
	mov	DWORD PTR [ecx+edi*8+4], eax
$LN3@InitPlayer:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	edi
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	cmp	edi, eax
	jl	SHORT $LL4@InitPlayer
$LN60@InitPlayer:

; 1714 : 		}
; 1715 : 	}
; 1716 : #ifdef AUI_WARNING_FIXES
; 1717 : 	for (uint iI = 0; iI < GC.getNumTraitInfos(); iI++)
; 1718 : #else
; 1719 : 	for(int iI = 0; iI < GC.getNumTraitInfos(); iI++)

	mov	edi, DWORD PTR _iI$223610[esp+116]
	inc	edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iI$223610[esp+116], edi
	call	?getNumTraitInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumTraitInfos
	cmp	edi, eax
	jl	$LL723@InitPlayer
$LN59@InitPlayer:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 2040 : 				}
; 2041 : 			}
; 2042 : 		}
; 2043 : 	}
; 2044 : }

	add	esp, 100				; 00000064H
	ret	0
?InitPlayerTraits@CvPlayerTraits@@QAEXXZ ENDP		; CvPlayerTraits::InitPlayerTraits
_TEXT	ENDS
PUBLIC	?SetUnitBaktun@CvPlayerTraits@@QAEXW4UnitTypes@@@Z ; CvPlayerTraits::SetUnitBaktun
; Function compile flags: /Ogtpy
;	COMDAT ?SetUnitBaktun@CvPlayerTraits@@QAEXW4UnitTypes@@@Z
_TEXT	SEGMENT
_choice$ = -8						; size = 8
_eUnit$ = 8						; size = 4
?SetUnitBaktun@CvPlayerTraits@@QAEXW4UnitTypes@@@Z PROC	; CvPlayerTraits::SetUnitBaktun, COMDAT
; _this$ = ecx

; 3124 : {

	sub	esp, 8

; 3125 : 	MayaBonusChoice choice;
; 3126 : 	choice.m_eUnitType = eUnit;

	mov	eax, DWORD PTR _eUnit$[esp+4]

; 3127 : 	choice.m_iBaktunJustFinished = m_iBaktun;

	mov	edx, DWORD PTR [ecx+744]
	mov	DWORD PTR _choice$[esp+8], eax

; 3128 : 	m_aMayaBonusChoices.push_back(choice);

	lea	eax, DWORD PTR _choice$[esp+8]
	push	eax
	add	ecx, 764				; 000002fcH
	mov	DWORD PTR _choice$[esp+16], edx
	call	?push_back@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAEXABUMayaBonusChoice@@@Z ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::push_back

; 3129 : }

	add	esp, 8
	ret	4
?SetUnitBaktun@CvPlayerTraits@@QAEXW4UnitTypes@@@Z ENDP	; CvPlayerTraits::SetUnitBaktun
_TEXT	ENDS
PUBLIC	?resize@?$vector@_NV?$allocator@_N@std@@@std@@QAEXI_N@Z ; std::vector<bool,std::allocator<bool> >::resize
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?resize@?$vector@_NV?$allocator@_N@std@@@std@@QAEXI_N@Z
_TEXT	SEGMENT
$T258761 = -16						; size = 8
$T258759 = -16						; size = 8
__Tmp$258982 = -8					; size = 8
$T258765 = -8						; size = 8
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 1
?resize@?$vector@_NV?$allocator@_N@std@@@std@@QAEXI_N@Z PROC ; std::vector<bool,std::allocator<bool> >::resize, COMDAT
; _this$ = ecx

; 2039 : 		{	// determine new length, padding with _Val elements as needed

	sub	esp, 16					; 00000010H
	push	ebx

; 2040 : 		if (size() < _Newsize)

	mov	ebx, DWORD PTR __Newsize$[esp+16]
	push	esi
	push	edi
	mov	edi, ecx
	mov	esi, DWORD PTR [edi]
	cmp	ebx, esi
	jbe	SHORT $LN68@resize@5

; 2041 : 			_Insert_n(end(), _Newsize - size(), _Val);

	mov	eax, DWORD PTR [edi+8]
	mov	DWORD PTR $T258759[esp+28], eax
	mov	DWORD PTR $T258759[esp+32], 0
	test	esi, esi
	jbe	SHORT $LN25@resize@5
	push	esi
	lea	ecx, DWORD PTR $T258759[esp+32]
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
$LN25@resize@5:
	mov	ecx, DWORD PTR __Val$[esp+24]
	mov	edx, DWORD PTR $T258759[esp+32]
	mov	eax, DWORD PTR $T258759[esp+28]
	push	ecx
	sub	ebx, esi
	push	ebx
	push	edx
	push	eax
	mov	ecx, edi
	call	?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@IAEXV?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@I_N@Z ; std::vector<bool,std::allocator<bool> >::_Insert_n
	pop	edi
	pop	esi
	pop	ebx

; 2044 : 		}

	add	esp, 16					; 00000010H
	ret	8
$LN68@resize@5:

; 2042 : 		else if (_Newsize < size())

	jae	SHORT $LN1@resize@5
	push	ebp

; 2043 : 			erase(begin() + _Newsize, end());

	mov	ebp, DWORD PTR [edi+8]
	mov	DWORD PTR $T258761[esp+32], ebp
	mov	DWORD PTR $T258761[esp+36], 0
	test	esi, esi
	jbe	SHORT $LN48@resize@5
	push	esi
	lea	ecx, DWORD PTR $T258761[esp+36]
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
$LN48@resize@5:
	xor	eax, eax
	push	ebx
	lea	ecx, DWORD PTR __Tmp$258982[esp+36]
	mov	DWORD PTR __Tmp$258982[esp+36], ebp
	mov	DWORD PTR __Tmp$258982[esp+40], eax
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
	mov	ecx, DWORD PTR $T258761[esp+36]
	mov	edx, DWORD PTR $T258761[esp+32]
	mov	eax, DWORD PTR __Tmp$258982[esp+36]
	push	ecx
	mov	ecx, DWORD PTR __Tmp$258982[esp+36]
	push	edx
	push	eax
	push	ecx
	lea	edx, DWORD PTR $T258765[esp+48]
	push	edx
	mov	ecx, edi
	call	?erase@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@V?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@0@Z ; std::vector<bool,std::allocator<bool> >::erase
	pop	ebp
$LN1@resize@5:
	pop	edi
	pop	esi
	pop	ebx

; 2044 : 		}

	add	esp, 16					; 00000010H
	ret	8
?resize@?$vector@_NV?$allocator@_N@std@@@std@@QAEXI_N@Z ENDP ; std::vector<bool,std::allocator<bool> >::resize
_TEXT	ENDS
PUBLIC	??$?5V?$Array@H$05@Firaxis@@@@YAAAVFDataStream@@AAV0@AAV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@Z ; operator>><Firaxis::Array<int,6> >
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fstlcontainerserialization.h
;	COMDAT ??$?5V?$Array@H$05@Firaxis@@@@YAAAVFDataStream@@AAV0@AAV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@Z
_TEXT	SEGMENT
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??$?5V?$Array@H$05@Firaxis@@@@YAAAVFDataStream@@AAV0@AAV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@Z PROC ; operator>><Firaxis::Array<int,6> >, COMDAT

; 226  : 	// The functor needs to be instantiated to properly resize the container based 
; 227  : 	// on how many elements the stream says it should have before passing it along
; 228  : 	// to std::for_each
; 229  : 	SerializeToSequenceContainer<ElementType, std::vector<ElementType> >(loadFrom, writeTo);

	mov	eax, DWORD PTR _writeTo$[esp-4]
	push	esi
	mov	esi, DWORD PTR _loadFrom$[esp]
	push	eax
	push	esi
	call	??$SerializeToSequenceContainer@V?$Array@H$05@Firaxis@@V?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@YAXAAVFDataStream@@AAV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@Z ; SerializeToSequenceContainer<Firaxis::Array<int,6>,std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > > >
	add	esp, 8

; 230  : 
; 231  : 	//std::for_each(writeTo.begin(), writeTo.end(), func);
; 232  : 	return loadFrom;

	mov	eax, esi
	pop	esi

; 233  : }

	ret	0
??$?5V?$Array@H$05@Firaxis@@@@YAAAVFDataStream@@AAV0@AAV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@Z ENDP ; operator>><Firaxis::Array<int,6> >
_TEXT	ENDS
PUBLIC	?insert@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@V?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@_N@Z ; std::vector<bool,std::allocator<bool> >::insert
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?insert@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@V?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@_N@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Tmp$259104 = 12					; size = 8
__Where$ = 12						; size = 8
__Val$ = 20						; size = 1
?insert@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@V?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@_N@Z PROC ; std::vector<bool,std::allocator<bool> >::insert, COMDAT
; _this$ = ecx

; 2151 : 		size_type _Off = _Where - begin();
; 2152 : 		_Insert_n(_Where, (size_type)1, _Val);

	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR __Where$[esp+4]
	mov	eax, DWORD PTR [edi+8]
	mov	esi, ecx
	sub	esi, eax
	mov	eax, DWORD PTR __Where$[esp+8]
	push	edx
	push	1
	sar	esi, 2
	push	eax
	push	ecx
	shl	esi, 5
	mov	ecx, edi
	add	esi, eax
	call	?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@IAEXV?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@I_N@Z ; std::vector<bool,std::allocator<bool> >::_Insert_n

; 2153 : 		return (begin() + _Off);

	mov	edi, DWORD PTR [edi+8]
	xor	eax, eax
	push	esi
	lea	ecx, DWORD PTR __Tmp$259104[esp+8]
	mov	DWORD PTR __Tmp$259104[esp+8], edi
	mov	DWORD PTR __Tmp$259104[esp+12], eax
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	ecx, DWORD PTR __Tmp$259104[esp+4]
	mov	edx, DWORD PTR __Tmp$259104[esp+8]
	pop	edi
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	pop	esi

; 2154 : 		}

	ret	16					; 00000010H
?insert@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@V?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@_N@Z ENDP ; std::vector<bool,std::allocator<bool> >::insert
_TEXT	ENDS
PUBLIC	?Reset@CvPlayerTraits@@QAEXXZ			; CvPlayerTraits::Reset
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Reset@CvPlayerTraits@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Reset@CvPlayerTraits@@QAEXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Reset@CvPlayerTraits@@QAEXXZ$0
__ehfuncinfo$?Reset@CvPlayerTraits@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Reset@CvPlayerTraits@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
xdata$x	ENDS
;	COMDAT ?Reset@CvPlayerTraits@@QAEXXZ
_TEXT	SEGMENT
tv4130 = -60						; size = 4
tv3978 = -56						; size = 4
tv3942 = -56						; size = 4
tv3906 = -56						; size = 4
__Result$261616 = -56					; size = 4
_temp$223771 = -56					; size = 8
$T262747 = -48						; size = 1
__Cat$262751 = -48					; size = 1
$T260024 = -48						; size = 1
__Cat$260028 = -48					; size = 1
$T260026 = -48						; size = 1
tv3183 = -48						; size = 4
tv3047 = -48						; size = 4
$T259829 = -48						; size = 1
__Cat$259834 = -48					; size = 1
$T259831 = -48						; size = 1
$T259633 = -48						; size = 1
__Cat$259639 = -48					; size = 1
$T259635 = -48						; size = 1
$T262501 = -48						; size = 4
$T262492 = -48						; size = 4
$T262133 = -48						; size = 4
__Result$261830 = -48					; size = 4
$T262123 = -48						; size = 4
$T261212 = -48						; size = 8
$T260820 = -48						; size = 8
$T260582 = -48						; size = 4
$T260573 = -48						; size = 4
tv243 = -48						; size = 4
$T259173 = -48						; size = 4
$T260038 = -40						; size = 24
$T259843 = -40						; size = 24
$T259648 = -40						; size = 24
$T259108 = -40						; size = 20
__$EHRec$ = -12						; size = 12
?Reset@CvPlayerTraits@@QAEXXZ PROC			; CvPlayerTraits::Reset, COMDAT
; _this$ = ecx

; 2069 : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	-1
	push	__ehhandler$?Reset@CvPlayerTraits@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 52					; 00000034H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	esi, ecx

; 2070 : 	Uninit();

	call	?Uninit@CvPlayerTraits@@QAEXXZ		; CvPlayerTraits::Uninit

; 2071 : 
; 2072 : 
; 2073 : 	m_vLeaderHasTrait = std::vector<bool>( GC.getNumTraitInfos(), false );

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumTraitInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumTraitInfos
	mov	edi, eax
	lea	eax, DWORD PTR $T259173[esp+80]
	lea	ecx, DWORD PTR [edi+31]
	shr	ecx, 5
	push	eax
	xor	ebx, ebx
	push	ecx
	lea	ecx, DWORD PTR $T259108[esp+92]
	mov	DWORD PTR $T259108[esp+88], ebx
	mov	DWORD PTR $T259173[esp+88], ebx
	call	?_Construct_n@?$vector@IV?$allocator@I@std@@@std@@QAEXIABI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Construct_n
	push	edi
	lea	ecx, DWORD PTR $T259108[esp+84]
	mov	DWORD PTR __$EHRec$[esp+92], ebx
	call	?_Trim@?$vector@_NV?$allocator@_N@std@@@std@@IAEXI@Z ; std::vector<bool,std::allocator<bool> >::_Trim
	mov	edx, DWORD PTR $T259108[esp+80]
	lea	eax, DWORD PTR $T259108[esp+84]
	push	eax
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR [esi+8], edx
	call	??4?$vector@IV?$allocator@I@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::operator=
	mov	eax, DWORD PTR $T259108[esp+88]
	or	edi, -1
	mov	DWORD PTR __$EHRec$[esp+88], edi
	cmp	eax, ebx
	je	SHORT $LN69@Reset
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN69@Reset:

; 2074 : 	m_vPotentiallyActiveLeaderTraits.clear();

	mov	ecx, DWORD PTR [esi+36]
	mov	edx, DWORD PTR [esi+32]
	cmp	edx, ecx
	je	SHORT $LN87@Reset
	mov	eax, ecx
	cmp	ecx, ecx
	je	SHORT $LN112@Reset
$LL114@Reset:
	mov	ebp, DWORD PTR [eax]
	mov	DWORD PTR [edx], ebp
	add	eax, 4
	add	edx, 4
	cmp	eax, ecx
	jne	SHORT $LL114@Reset
$LN112@Reset:
	mov	DWORD PTR [esi+36], edx
$LN87@Reset:

; 2075 : 
; 2076 : 	m_iGreatPeopleRateModifier = 0;

	mov	DWORD PTR [esi+44], ebx

; 2077 : 	m_iGreatScientistRateModifier = 0;

	mov	DWORD PTR [esi+48], ebx

; 2078 : 	m_iGreatGeneralRateModifier = 0;

	mov	DWORD PTR [esi+52], ebx

; 2079 : 	m_iGreatGeneralExtraBonus = 0;

	mov	DWORD PTR [esi+56], ebx

; 2080 : 	m_iGreatPersonGiftInfluence = 0;

	mov	DWORD PTR [esi+60], ebx

; 2081 : 	m_iLevelExperienceModifier= 0;

	mov	DWORD PTR [esi+64], ebx

; 2082 : 	m_iMaxGlobalBuildingProductionModifier = 0;

	mov	DWORD PTR [esi+68], ebx

; 2083 : 	m_iMaxTeamBuildingProductionModifier = 0;

	mov	DWORD PTR [esi+72], ebx

; 2084 : 	m_iMaxPlayerBuildingProductionModifier = 0;

	mov	DWORD PTR [esi+76], ebx

; 2085 : 	m_iCityUnhappinessModifier = 0;

	mov	DWORD PTR [esi+80], ebx

; 2086 : 	m_iPopulationUnhappinessModifier = 0;

	mov	DWORD PTR [esi+84], ebx

; 2087 : 	m_iCityStateBonusModifier = 0;

	mov	DWORD PTR [esi+88], ebx

; 2088 : 	m_iCityStateFriendshipModifier = 0;

	mov	DWORD PTR [esi+92], ebx

; 2089 : 	m_iCityStateCombatModifier = 0;

	mov	DWORD PTR [esi+96], ebx

; 2090 : 	m_iLandBarbarianConversionPercent = 0;

	mov	DWORD PTR [esi+100], ebx

; 2091 : 	m_iLandBarbarianConversionExtraUnits = 0;

	mov	DWORD PTR [esi+104], ebx

; 2092 : 	m_iSeaBarbarianConversionPercent = 0;

	mov	DWORD PTR [esi+108], ebx

; 2093 : 	m_iCapitalBuildingModifier = 0;

	mov	DWORD PTR [esi+112], ebx

; 2094 : 	m_iPlotBuyCostModifier = 0;

	mov	DWORD PTR [esi+116], ebx

; 2095 : 	m_iPlotCultureCostModifier = 0;

	mov	DWORD PTR [esi+120], ebx

; 2096 : #ifdef NQ_SCIENCE_PER_GREAT_PERSON_BORN
; 2097 : 	m_iSciencePerGreatPersonBorn = 0;

	mov	DWORD PTR [esi+124], ebx

; 2098 : #endif
; 2099 : #ifdef NQ_NUM_TURNS_BEFORE_MINOR_ALLIES_REFUSE_BRIBES_FROM_TRAIT
; 2100 : 	m_iNumTurnsBeforeMinorAlliesRefuseBribes = 0;

	mov	DWORD PTR [esi+128], ebx

; 2101 : #endif
; 2102 : #ifdef NQ_GOLDEN_PILGRIMAGE
; 2103 : 	m_iGoldenAgeTileBonusFaith = 0;

	mov	DWORD PTR [esi+132], ebx

; 2104 : #endif
; 2105 : 	m_iCultureFromKills = 0;

	mov	DWORD PTR [esi+136], ebx

; 2106 : 	m_iFaithFromKills = 0;

	mov	DWORD PTR [esi+140], ebx

; 2107 : 	m_iCityCultureBonus = 0;

	mov	DWORD PTR [esi+144], ebx

; 2108 : 	m_iCapitalThemingBonusModifier = 0;

	mov	DWORD PTR [esi+148], ebx

; 2109 : 	m_iPolicyCostModifier = 0;

	mov	DWORD PTR [esi+152], ebx

; 2110 : 	m_iCityConnectionTradeRouteChange = 0;

	mov	DWORD PTR [esi+156], ebx

; 2111 : 	m_iWonderProductionModifier = 0;

	mov	DWORD PTR [esi+160], ebx

; 2112 : 	m_iPlunderModifier = 0;

	mov	DWORD PTR [esi+164], ebx

; 2113 : 	m_iImprovementMaintenanceModifier = 0;

	mov	DWORD PTR [esi+168], ebx

; 2114 : 	m_iGoldenAgeDurationModifier = 0;

	mov	DWORD PTR [esi+172], ebx

; 2115 : 	m_iGoldenAgeMoveChange = 0;

	mov	DWORD PTR [esi+176], ebx

; 2116 : 	m_iGoldenAgeCombatModifier = 0;

	mov	DWORD PTR [esi+180], ebx

; 2117 : 	m_iGoldenAgeTourismModifier = 0;

	mov	DWORD PTR [esi+184], ebx

; 2118 : 	m_iGoldenAgeGreatArtistRateModifier = 0;

	mov	DWORD PTR [esi+188], ebx

; 2119 : 	m_iGoldenAgeGreatMusicianRateModifier = 0;

	mov	DWORD PTR [esi+192], ebx

; 2120 : 	m_iGoldenAgeGreatWriterRateModifier = 0;

	mov	DWORD PTR [esi+196], ebx

; 2121 : 	m_iExtraEmbarkMoves = 0;

	mov	DWORD PTR [esi+200], ebx

; 2122 : 	m_iNaturalWonderFirstFinderGold = 0;

	mov	DWORD PTR [esi+204], ebx

; 2123 : 	m_iNaturalWonderSubsequentFinderGold = 0;

	mov	DWORD PTR [esi+208], ebx

; 2124 : 
; 2125 : 	//EAP: Natural wonder faith for the finder
; 2126 : 	m_iNaturalWonderFirstFinderFaith = 0;

	mov	DWORD PTR [esi+216], ebx

; 2127 : 	m_iNaturalWonderSubsequentFinderFaith = 0;

	mov	DWORD PTR [esi+220], ebx

; 2128 : 
; 2129 : 	m_iNaturalWonderYieldModifier = 0;

	mov	DWORD PTR [esi+212], ebx

; 2130 : 	m_iNaturalWonderHappinessModifier = 0;

	mov	DWORD PTR [esi+224], ebx

; 2131 : 	m_iNearbyImprovementCombatBonus = 0;

	mov	DWORD PTR [esi+228], ebx

; 2132 : 	m_iNearbyImprovementBonusRange = 0;

	mov	DWORD PTR [esi+232], ebx

; 2133 : 	m_iCultureBuildingYieldChange = 0;

	mov	DWORD PTR [esi+236], ebx

; 2134 : 	m_iCombatBonusVsHigherTech = 0;

	mov	DWORD PTR [esi+240], ebx

; 2135 : 	m_iCombatBonusVsLargerCiv = 0;

	mov	DWORD PTR [esi+244], ebx

; 2136 : 	m_iLandUnitMaintenanceModifier = 0;

	mov	DWORD PTR [esi+248], ebx

; 2137 : 	m_iNavalUnitMaintenanceModifier = 0;

	mov	DWORD PTR [esi+252], ebx

; 2138 : 	m_iRazeSpeedModifier = 0;

	mov	DWORD PTR [esi+256], ebx

; 2139 : 	m_iDOFGreatPersonModifier = 0;

	mov	DWORD PTR [esi+260], ebx

; 2140 : 	m_iLuxuryHappinessRetention = 0;

	mov	DWORD PTR [esi+264], ebx

; 2141 : 	m_iExtraHappinessPerLuxury = 0; // NQMP GJS - New Netherlands UA

	mov	DWORD PTR [esi+268], ebx

; 2142 : 	m_iExtraSpies = 0;

	mov	DWORD PTR [esi+272], ebx

; 2143 : 	m_iHappinessPerReligion = 0; // NQMP GJS - New Ottoman UA

	mov	DWORD PTR [esi+276], ebx

; 2144 : 	m_iUnresearchedTechBonusFromKills = 0;

	mov	DWORD PTR [esi+280], ebx

; 2145 : 	m_iExtraFoundedCityTerritoryClaimRange = 0;

	mov	DWORD PTR [esi+284], ebx

; 2146 : 	m_iFreeSocialPoliciesPerEra = 0;

	mov	DWORD PTR [esi+288], ebx

; 2147 : 	m_iNumTradeRoutesModifier = 0;

	mov	DWORD PTR [esi+292], ebx

; 2148 : 	m_iTradeRouteResourceModifier = 0;

	mov	DWORD PTR [esi+296], ebx

; 2149 : 	m_iUniqueLuxuryCities = 0;

	mov	DWORD PTR [esi+300], ebx

; 2150 : 	m_iUniqueLuxuryQuantity = 0;

	mov	DWORD PTR [esi+304], ebx

; 2151 : 	m_iWorkerSpeedModifier = 0;

	mov	DWORD PTR [esi+312], ebx

; 2152 : 	m_iAfraidMinorPerTurnInfluence = 0;

	mov	DWORD PTR [esi+316], ebx

; 2153 : 	m_iLandTradeRouteRangeBonus = 0;

	mov	DWORD PTR [esi+320], ebx

; 2154 : 	m_iTradeReligionModifier = 0;

	mov	DWORD PTR [esi+324], ebx

; 2155 : 	m_iTradeBuildingModifier = 0;

	mov	DWORD PTR [esi+328], ebx

; 2156 : 
; 2157 : 	m_bFightWellDamaged = false;

	mov	BYTE PTR [esi+332], bl

; 2158 : 	m_bMoveFriendlyWoodsAsRoad = false;

	mov	BYTE PTR [esi+333], bl

; 2159 : 	m_bFasterAlongRiver = false;

	mov	BYTE PTR [esi+334], bl

; 2160 : 	m_bFasterInHills = false;

	mov	BYTE PTR [esi+335], bl

; 2161 : 	m_bEmbarkedAllWater = false;

	mov	BYTE PTR [esi+336], bl

; 2162 : 	m_bEmbarkedToLandFlatCost = false;

	mov	BYTE PTR [esi+337], bl

; 2163 : 	m_bNoHillsImprovementMaintenance = false;

	mov	BYTE PTR [esi+338], bl

; 2164 : 	m_bTechBoostFromCapitalScienceBuildings = false;

	mov	BYTE PTR [esi+339], bl

; 2165 : 	m_bStaysAliveZeroCities = false;

	mov	BYTE PTR [esi+340], bl

; 2166 : 	m_bFaithFromUnimprovedForest = false;

	mov	BYTE PTR [esi+341], bl

; 2167 : #ifdef NQ_UNIT_IMMUNE_TO_PLUNDER_FROM_TRAIT
; 2168 : 	m_bSeaTradeRoutesArePlunderImmune = false;
; 2169 : #endif
; 2170 : 	
; 2171 : 	// NQMP GJS - New France UA begin
; 2172 : 	m_bEarnsGreatPersonOnSlotOrGuild = false;
; 2173 : 	m_bHasBuiltWritersGuild = false;
; 2174 : 	m_bHasBuiltArtistsGuild = false;
; 2175 : 	m_bHasBuiltMusiciansGuild = false;
; 2176 : 	// NQMP GJS - New France UA end
; 2177 : 	
; 2178 : 	m_bBonusReligiousBelief = false;
; 2179 : 	m_bAbleToAnnexCityStates = false;
; 2180 : 	m_bCrossesMountainsAfterGreatGeneral = false;
; 2181 : 	m_bMayaCalendarBonuses = false;
; 2182 : 	m_bNoAnnexing = false;
; 2183 : 	m_bTechFromCityConquer = false;
; 2184 : 	m_bUniqueLuxuryRequiresNewArea = false;
; 2185 : 	m_bRiverTradeRoad = false;
; 2186 : 	m_bAngerFreeIntrusionOfCityStates = false;
; 2187 : 
; 2188 : 	m_eCampGuardType = NO_UNIT;

	mov	DWORD PTR [esi+356], edi
	mov	BYTE PTR [esi+342], bl
	mov	BYTE PTR [esi+343], bl
	mov	BYTE PTR [esi+344], bl
	mov	BYTE PTR [esi+345], bl
	mov	BYTE PTR [esi+346], bl
	mov	BYTE PTR [esi+347], bl
	mov	BYTE PTR [esi+348], bl
	mov	BYTE PTR [esi+349], bl
	mov	BYTE PTR [esi+350], bl
	mov	BYTE PTR [esi+351], bl
	mov	BYTE PTR [esi+352], bl
	mov	BYTE PTR [esi+353], bl
	mov	BYTE PTR [esi+354], bl
	mov	BYTE PTR [esi+355], bl

; 2189 : 	m_eCombatBonusImprovement = NO_IMPROVEMENT;

	mov	DWORD PTR [esi+368], edi

; 2190 : 
; 2191 : 	m_ppaaiImprovementYieldChange.clear();

	mov	eax, DWORD PTR [esi+820]
	mov	ecx, DWORD PTR [esi+816]
	lea	edi, DWORD PTR [esi+812]
	cmp	ecx, eax
	je	SHORT $LN131@Reset
	mov	BYTE PTR $T259633[esp+80], bl
	mov	edx, DWORD PTR $T259633[esp+80]
	push	edx
	mov	edx, DWORD PTR __Cat$259639[esp+84]
	push	edx
	mov	edx, DWORD PTR $T259635[esp+88]
	push	edx
	push	ecx
	push	eax
	push	eax
	call	??$_Copy_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::random_access_iterator_tag>
	add	esp, 24					; 00000018H
	mov	DWORD PTR [edi+8], eax
$LN131@Reset:

; 2192 : 	m_ppaaiImprovementYieldChange.resize(GC.getNumImprovementInfos());

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumImprovementInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumImprovementInfos
	mov	edx, DWORD PTR $T259648[esp+80]
	sub	esp, 24					; 00000018H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR $T259648[esp+108]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR $T259648[esp+112]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR $T259648[esp+116]
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR $T259648[esp+120]
	mov	DWORD PTR [ecx+16], edx
	mov	edx, DWORD PTR $T259648[esp+124]
	mov	DWORD PTR [ecx+20], edx
	push	eax
	mov	ecx, edi
	call	?resize@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEXIV?$Array@H$05@Firaxis@@@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::resize

; 2193 : 	m_ppaaiSpecialistYieldChange.clear();

	mov	eax, DWORD PTR [esi+836]
	mov	ecx, DWORD PTR [esi+832]
	lea	edi, DWORD PTR [esi+828]
	cmp	ecx, eax
	je	SHORT $LN172@Reset
	mov	BYTE PTR $T259829[esp+80], bl
	mov	edx, DWORD PTR $T259829[esp+80]
	push	edx
	mov	edx, DWORD PTR __Cat$259834[esp+84]
	push	edx
	mov	edx, DWORD PTR $T259831[esp+88]
	push	edx
	push	ecx
	push	eax
	push	eax
	call	??$_Copy_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::random_access_iterator_tag>
	add	esp, 24					; 00000018H
	mov	DWORD PTR [edi+8], eax
$LN172@Reset:

; 2194 : #ifdef LEK_TRAIT_SPECIALIST_YIELD_MAX_ONE
; 2195 : 	m_ppaaiAnySpecificSpecialistYieldChange.clear();
; 2196 : #endif
; 2197 : 	m_ppaaiSpecialistYieldChange.resize(GC.getNumSpecialistInfos());

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumSpecialistInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumSpecialistInfos
	mov	edx, DWORD PTR $T259843[esp+80]
	sub	esp, 24					; 00000018H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR $T259843[esp+108]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR $T259843[esp+112]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR $T259843[esp+116]
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR $T259843[esp+120]
	mov	DWORD PTR [ecx+16], edx
	mov	edx, DWORD PTR $T259843[esp+124]
	mov	DWORD PTR [ecx+20], edx
	push	eax
	mov	ecx, edi
	call	?resize@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEXIV?$Array@H$05@Firaxis@@@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::resize

; 2198 : #ifdef LEK_TRAIT_SPECIALIST_YIELD_MAX_ONE
; 2199 : 	m_ppaaiAnySpecificSpecialistYieldChange.resize(GC.getNumSpecialistInfos());
; 2200 : #endif
; 2201 : 
; 2202 : 	m_ppaaiUnimprovedFeatureYieldChange.clear();

	mov	eax, DWORD PTR [esi+852]
	mov	ecx, DWORD PTR [esi+848]
	lea	edi, DWORD PTR [esi+844]
	cmp	ecx, eax
	je	SHORT $LN213@Reset
	mov	BYTE PTR $T260024[esp+80], bl
	mov	edx, DWORD PTR $T260024[esp+80]
	push	edx
	mov	edx, DWORD PTR __Cat$260028[esp+84]
	push	edx
	mov	edx, DWORD PTR $T260026[esp+88]
	push	edx
	push	ecx
	push	eax
	push	eax
	call	??$_Copy_opt@PAV?$Array@H$05@Firaxis@@PAV12@Urandom_access_iterator_tag@std@@@std@@YAPAV?$Array@H$05@Firaxis@@PAV12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<Firaxis::Array<int,6> *,Firaxis::Array<int,6> *,std::random_access_iterator_tag>
	add	esp, 24					; 00000018H
	mov	DWORD PTR [edi+8], eax
$LN213@Reset:

; 2203 : 	m_ppaaiUnimprovedFeatureYieldChange.resize(GC.getNumFeatureInfos());

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumFeatureInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumFeatureInfos
	mov	edx, DWORD PTR $T260038[esp+80]
	sub	esp, 24					; 00000018H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR $T260038[esp+108]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR $T260038[esp+112]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR $T260038[esp+116]
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR $T260038[esp+120]
	mov	DWORD PTR [ecx+16], edx
	mov	edx, DWORD PTR $T260038[esp+124]
	mov	DWORD PTR [ecx+20], edx
	push	eax
	mov	ecx, edi
	call	?resize@?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@QAEXIV?$Array@H$05@Firaxis@@@Z ; std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > >::resize

; 2204 : 
; 2205 : 	Firaxis::Array< int, NUM_YIELD_TYPES > yield;
; 2206 : 	for(unsigned int j = 0; j < NUM_YIELD_TYPES; ++j)
; 2207 : 	{
; 2208 : 		yield[j] = 0;
; 2209 : 	}
; 2210 : 
; 2211 : 	for(int iYield = 0; iYield < NUM_YIELD_TYPES; iYield++)

	lea	eax, DWORD PTR [esi+408]
	xor	edi, edi
	mov	DWORD PTR tv4130[esp+80], eax
	mov	DWORD PTR tv243[esp+80], 6
	npad	9
$LL30@Reset:

; 2212 : 	{
; 2213 : 		m_iExtraYieldThreshold[iYield] = 0;

	mov	eax, DWORD PTR tv4130[esp+80]

; 2214 : 		m_iFreeCityYield[iYield] = 0;
; 2215 : 		m_iYieldChangeStrategicResources[iYield] = 0;
; 2216 : 		m_iYieldChangeLuxuryResources[iYield] = 0; // NQMP GJS - New Netherlands UA
; 2217 : 		m_iYieldChangeNaturalWonder[iYield] = 0;
; 2218 : 		m_iYieldChangePerTradePartner[iYield] = 0;
; 2219 : 		m_iYieldChangeIncomingTradeRoute[iYield] = 0;
; 2220 : 		m_iYieldRateModifier[iYield] = 0;
; 2221 : 
; 2222 : #ifdef AUI_WARNING_FIXES
; 2223 : 		for (uint iImprovement = 0; iImprovement < GC.getNumImprovementInfos(); iImprovement++)
; 2224 : 		{
; 2225 : 			m_ppaaiImprovementYieldChange[iImprovement] = yield;
; 2226 : 		}
; 2227 : 		for (uint iSpecialist = 0; iSpecialist < GC.getNumSpecialistInfos(); iSpecialist++)
; 2228 : 		{
; 2229 : 			m_ppaaiSpecialistYieldChange[iSpecialist] = yield;
; 2230 : 		}
; 2231 : 		for (uint iFeature = 0; iFeature < GC.getNumFeatureInfos(); iFeature++)
; 2232 : #else
; 2233 : 		for(int iImprovement = 0; iImprovement < GC.getNumImprovementInfos(); iImprovement++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR [eax-24], ebx
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [eax+24], ebx
	mov	DWORD PTR [eax+48], ebx
	mov	DWORD PTR [eax+72], ebx
	mov	DWORD PTR [eax+96], ebx
	mov	DWORD PTR [eax+120], ebx
	mov	DWORD PTR [eax+144], ebx
	xor	ebp, ebp
	call	?getNumImprovementInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumImprovementInfos
	test	eax, eax
	jle	SHORT $LN25@Reset

; 2212 : 	{
; 2213 : 		m_iExtraYieldThreshold[iYield] = 0;

	mov	DWORD PTR tv3906[esp+80], ebx
$LL27@Reset:

; 2234 : 		{
; 2235 : 			m_ppaaiImprovementYieldChange[iImprovement] = yield;

	mov	eax, DWORD PTR [esi+816]
	mov	ecx, DWORD PTR tv3906[esp+80]
	add	eax, ecx
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], edi
	mov	DWORD PTR [eax+8], edi
	add	ecx, 24					; 00000018H
	mov	DWORD PTR [eax+12], edi
	mov	DWORD PTR tv3906[esp+80], ecx
	mov	DWORD PTR [eax+16], edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR [eax+20], edi
	inc	ebp
	call	?getNumImprovementInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumImprovementInfos
	cmp	ebp, eax
	jl	SHORT $LL27@Reset
$LN25@Reset:

; 2236 : 		}
; 2237 : 		for(int iSpecialist = 0; iSpecialist < GC.getNumSpecialistInfos(); iSpecialist++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	ebp, ebp
	call	?getNumSpecialistInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumSpecialistInfos
	test	eax, eax
	jle	SHORT $LN22@Reset
	xor	ecx, ecx
	jmp	SHORT $LN24@Reset
	npad	7
$LL854@Reset:
	mov	ecx, DWORD PTR tv3942[esp+80]
$LN24@Reset:

; 2238 : 		{
; 2239 : 			m_ppaaiSpecialistYieldChange[iSpecialist] = yield;

	mov	eax, DWORD PTR [esi+832]
	add	eax, ecx
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], edi
	mov	DWORD PTR [eax+8], edi
	add	ecx, 24					; 00000018H
	mov	DWORD PTR [eax+12], edi
	mov	DWORD PTR tv3942[esp+80], ecx
	mov	DWORD PTR [eax+16], edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR [eax+20], edi
	inc	ebp
	call	?getNumSpecialistInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumSpecialistInfos
	cmp	ebp, eax
	jl	SHORT $LL854@Reset
$LN22@Reset:

; 2240 : 		}
; 2241 : #ifdef LEK_TRAIT_SPECIALIST_YIELD_MAX_ONE
; 2242 : 		for(int iSpecialist = 0; iSpecialist < 2; iSpecialist++)
; 2243 : 		{
; 2244 : 			m_ppaaiAnySpecificSpecialistYieldChange[iSpecialist] = yield;
; 2245 : 		}
; 2246 : #endif
; 2247 : 		for(int iFeature = 0; iFeature < GC.getNumFeatureInfos(); iFeature++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	ebp, ebp
	call	?getNumFeatureInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumFeatureInfos
	test	eax, eax
	jle	SHORT $LN29@Reset
	mov	DWORD PTR tv3978[esp+80], ebx
	npad	9
$LL21@Reset:

; 2248 : #endif
; 2249 : 		{
; 2250 : 			m_ppaaiUnimprovedFeatureYieldChange[iFeature] = yield;

	mov	eax, DWORD PTR [esi+848]
	mov	ecx, DWORD PTR tv3978[esp+80]
	add	eax, ecx
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], edi
	mov	DWORD PTR [eax+8], edi
	add	ecx, 24					; 00000018H
	mov	DWORD PTR [eax+12], edi
	mov	DWORD PTR tv3978[esp+80], ecx
	mov	DWORD PTR [eax+16], edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR [eax+20], edi
	inc	ebp
	call	?getNumFeatureInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumFeatureInfos
	cmp	ebp, eax
	jl	SHORT $LL21@Reset
$LN29@Reset:

; 2204 : 
; 2205 : 	Firaxis::Array< int, NUM_YIELD_TYPES > yield;
; 2206 : 	for(unsigned int j = 0; j < NUM_YIELD_TYPES; ++j)
; 2207 : 	{
; 2208 : 		yield[j] = 0;
; 2209 : 	}
; 2210 : 
; 2211 : 	for(int iYield = 0; iYield < NUM_YIELD_TYPES; iYield++)

	add	DWORD PTR tv4130[esp+80], 4
	sub	DWORD PTR tv243[esp+80], 1
	jne	$LL30@Reset

; 2251 : 		}
; 2252 : 	}
; 2253 : 
; 2254 : #ifdef AUI_WARNING_FIXES
; 2255 : 	for (uint iTerrain = 0; iTerrain < GC.getNumTerrainInfos(); iTerrain++)
; 2256 : #else
; 2257 : 	for(int iTerrain = 0; iTerrain < GC.getNumTerrainInfos(); iTerrain++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	edi, edi
	call	?getNumTerrainInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumTerrainInfos
	test	eax, eax
	jle	SHORT $LN16@Reset
	lea	ebp, DWORD PTR [esi+576]
	npad	7
$LL18@Reset:

; 2258 : #endif
; 2259 : 	{
; 2260 : 		m_iStrategicResourceQuantityModifier[iTerrain] = 0;

	mov	DWORD PTR [ebp], ebx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	edi
	add	ebp, 4
	call	?getNumTerrainInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumTerrainInfos
	cmp	edi, eax
	jl	SHORT $LL18@Reset
$LN16@Reset:

; 2261 : 	}
; 2262 : 
; 2263 : 	m_aiResourceQuantityModifier.clear();

	mov	ecx, DWORD PTR [esi+620]
	mov	edx, DWORD PTR [esi+616]
	lea	edi, DWORD PTR [esi+612]
	cmp	edx, ecx
	je	SHORT $LN277@Reset
	mov	eax, ecx
	sub	eax, ecx
	sar	eax, 2
	lea	ebp, DWORD PTR [eax*4]
	mov	DWORD PTR tv3047[esp+80], ebp
	add	ebp, edx
	cmp	eax, ebx
	jle	SHORT $LN302@Reset
	mov	eax, DWORD PTR tv3047[esp+80]
	push	eax
	push	ecx
	push	eax
	push	edx
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN302@Reset:
	mov	DWORD PTR [edi+8], ebp
$LN277@Reset:

; 2264 : 	m_aiResourceQuantityModifier.resize(GC.getNumResourceInfos());

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	mov	edx, DWORD PTR [edi+8]
	mov	ebp, DWORD PTR [edi+4]
	mov	ecx, edx
	sub	ecx, ebp
	sar	ecx, 2
	mov	DWORD PTR $T260573[esp+80], ebx
	cmp	eax, ecx
	jbe	SHORT $LN860@Reset
	lea	ebp, DWORD PTR $T260573[esp+80]
	push	ebp
	sub	eax, ecx
	push	eax
	push	edx
	mov	ecx, edi
	call	?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z ; std::vector<int,std::allocator<int> >::_Insert_n
	jmp	SHORT $LN342@Reset
$LN860@Reset:
	jae	SHORT $LN342@Reset
	lea	ebp, DWORD PTR [ebp+eax*4]
	mov	DWORD PTR $T260582[esp+80], ebp
	cmp	ebp, edx
	je	SHORT $LN342@Reset
	mov	eax, edx
	sub	eax, edx
	sar	eax, 2
	lea	ecx, DWORD PTR [eax*4]
	add	ebp, ecx
	cmp	eax, ebx
	jle	SHORT $LN367@Reset
	push	ecx
	push	edx
	push	ecx
	mov	ecx, DWORD PTR $T260582[esp+92]
	push	ecx
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN367@Reset:
	mov	DWORD PTR [edi+8], ebp
$LN342@Reset:

; 2265 : 
; 2266 : #ifdef AUI_WARNING_FIXES
; 2267 : 	for (uint iResource = 0; iResource < GC.getNumResourceInfos(); iResource++)
; 2268 : #else
; 2269 : 	for(int iResource = 0; iResource < GC.getNumResourceInfos(); iResource++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	edi, edi
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	test	eax, eax
	jle	SHORT $LN13@Reset
	npad	2
$LL15@Reset:

; 2270 : #endif
; 2271 : 	{
; 2272 : 		m_aiResourceQuantityModifier[iResource] = 0;

	mov	edx, DWORD PTR [esi+616]
	mov	DWORD PTR [edx+edi*4], ebx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	edi
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	cmp	edi, eax
	jl	SHORT $LL15@Reset
$LN13@Reset:

; 2273 : 	}
; 2274 : 
; 2275 : 	m_abNoTrain.clear();

	mov	eax, DWORD PTR [esi+628]
	mov	ecx, DWORD PTR [esi+636]
	lea	edi, DWORD PTR [esi+628]
	xor	edx, edx
	cmp	eax, ebx
	jbe	SHORT $LN393@Reset
	jge	SHORT $LN394@Reset
	mov	edx, eax
	neg	edx
	je	SHORT $LN394@Reset
	or	edx, -1
	sub	edx, eax
	shr	edx, 5
	add	edx, edx
	add	edx, edx
	mov	ebp, -4					; fffffffcH
	sub	ebp, edx
	add	ecx, ebp
	jmp	SHORT $LN861@Reset
$LN394@Reset:
	mov	edx, eax
	shr	edx, 5
	lea	ecx, DWORD PTR [ecx+edx*4]
$LN861@Reset:
	and	eax, 31					; 0000001fH
	mov	edx, eax
$LN393@Reset:
	mov	eax, DWORD PTR [edi+8]
	push	edx
	push	ecx
	push	ebx
	push	eax
	lea	eax, DWORD PTR $T260820[esp+96]
	push	eax
	mov	ecx, edi
	call	?erase@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@V?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@0@Z ; std::vector<bool,std::allocator<bool> >::erase

; 2276 : 	m_abNoTrain.resize(GC.getNumUnitClassInfos());

	push	ebx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumUnitClassInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitClassInfos
	push	eax
	mov	ecx, edi
	call	?resize@?$vector@_NV?$allocator@_N@std@@@std@@QAEXI_N@Z ; std::vector<bool,std::allocator<bool> >::resize

; 2277 : #ifdef AUI_WARNING_FIXES
; 2278 : 	for (uint iUnitClass = 0; iUnitClass < GC.getNumUnitClassInfos(); iUnitClass++)
; 2279 : #else
; 2280 : 	for (int iUnitClass = 0; iUnitClass < GC.getNumUnitClassInfos(); iUnitClass++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	edi, edi
	call	?getNumUnitClassInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitClassInfos
	test	eax, eax
	jle	SHORT $LN10@Reset
$LN12@Reset:

; 2281 : #endif
; 2282 : 	{
; 2283 : 		m_abNoTrain[iUnitClass] = false;

	mov	eax, DWORD PTR [esi+636]
	mov	ecx, ebx
	cmp	edi, ebx
	je	SHORT $LN434@Reset
	jge	SHORT $LN435@Reset
	mov	ecx, edi
	neg	ecx
	je	SHORT $LN435@Reset
	or	edx, -1
	sub	edx, edi
	shr	edx, 5
	add	edx, edx
	add	edx, edx
	mov	ecx, -4					; fffffffcH
	sub	ecx, edx
	add	eax, ecx
	jmp	SHORT $LN862@Reset
$LN435@Reset:
	mov	edx, edi
	shr	edx, 5
	lea	eax, DWORD PTR [eax+edx*4]
$LN862@Reset:
	mov	ecx, edi
	and	ecx, 31					; 0000001fH
$LN434@Reset:
	mov	edx, 1
	shl	edx, cl
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	edi
	not	edx
	and	DWORD PTR [eax], edx
	call	?getNumUnitClassInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitClassInfos
	cmp	edi, eax
	jl	SHORT $LN12@Reset
$LN10@Reset:

; 2284 : 	}
; 2285 : 
; 2286 : 	// EAP: No build
; 2287 : 	m_abNoBuild.clear();

	mov	eax, DWORD PTR [esi+648]
	mov	ecx, DWORD PTR [esi+656]
	lea	edi, DWORD PTR [esi+648]
	xor	edx, edx
	cmp	eax, ebx
	jbe	SHORT $LN480@Reset
	jge	SHORT $LN481@Reset
	mov	edx, eax
	neg	edx
	je	SHORT $LN481@Reset
	or	edx, -1
	sub	edx, eax
	shr	edx, 5
	add	edx, edx
	add	edx, edx
	mov	ebp, -4					; fffffffcH
	sub	ebp, edx
	add	ecx, ebp
	jmp	SHORT $LN863@Reset
$LN481@Reset:
	mov	edx, eax
	shr	edx, 5
	lea	ecx, DWORD PTR [ecx+edx*4]
$LN863@Reset:
	and	eax, 31					; 0000001fH
	mov	edx, eax
$LN480@Reset:
	mov	eax, DWORD PTR [edi+8]
	push	edx
	push	ecx
	push	ebx
	push	eax
	lea	eax, DWORD PTR $T261212[esp+96]
	push	eax
	mov	ecx, edi
	call	?erase@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@V?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@0@Z ; std::vector<bool,std::allocator<bool> >::erase

; 2288 : 	m_abNoBuild.resize(GC.getNumImprovementInfos());

	push	ebx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumImprovementInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumImprovementInfos
	push	eax
	mov	ecx, edi
	call	?resize@?$vector@_NV?$allocator@_N@std@@@std@@QAEXI_N@Z ; std::vector<bool,std::allocator<bool> >::resize

; 2289 : 	for (int iImprovement = 0; iImprovement < GC.getNumUnitClassInfos(); iImprovement++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	edi, edi
	call	?getNumUnitClassInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitClassInfos
	test	eax, eax
	jle	SHORT $LN7@Reset
$LN9@Reset:

; 2290 : 	{
; 2291 : 		m_abNoBuild[iImprovement] = false;

	mov	eax, DWORD PTR [esi+656]
	mov	ecx, ebx
	cmp	edi, ebx
	je	SHORT $LN521@Reset
	jge	SHORT $LN522@Reset
	mov	ecx, edi
	neg	ecx
	je	SHORT $LN522@Reset
	or	edx, -1
	sub	edx, edi
	shr	edx, 5
	add	edx, edx
	add	edx, edx
	mov	ecx, -4					; fffffffcH
	sub	ecx, edx
	add	eax, ecx
	jmp	SHORT $LN864@Reset
$LN522@Reset:
	mov	edx, edi
	shr	edx, 5
	lea	eax, DWORD PTR [eax+edx*4]
$LN864@Reset:
	mov	ecx, edi
	and	ecx, 31					; 0000001fH
$LN521@Reset:
	mov	edx, 1
	shl	edx, cl
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	edi
	not	edx
	and	DWORD PTR [eax], edx
	call	?getNumUnitClassInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitClassInfos
	cmp	edi, eax
	jl	SHORT $LN9@Reset
$LN7@Reset:

; 2292 : 	}
; 2293 : 
; 2294 : 	m_aFreeTraitUnits.clear();
; 2295 : 
; 2296 : #ifdef AUI_WARNING_FIXES
; 2297 : 	uint iNumUnitCombatClassInfos = GC.getNumUnitCombatClassInfos();
; 2298 : 	CvAssertMsg((0 < iNumUnitCombatClassInfos), "GC.getNumUnitCombatClassInfos() is not greater than zero but an array is being allocated in CvPlayerTraits::Reset");
; 2299 : 	m_paiMovesChangeUnitCombat.clear();
; 2300 : 	m_paiMaintenanceModifierUnitCombat.clear();
; 2301 : 	m_paiMovesChangeUnitCombat.resize(iNumUnitCombatClassInfos);
; 2302 : 	m_paiMaintenanceModifierUnitCombat.resize(iNumUnitCombatClassInfos);
; 2303 : 	for (uint iI = 0; iI < iNumUnitCombatClassInfos; iI++)
; 2304 : #else
; 2305 : 	int iNumUnitCombatClassInfos = GC.getNumUnitCombatClassInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR [esi+672], ebx
	call	?getNumUnitCombatClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumUnitCombatClassInfos

; 2306 : 	CvAssertMsg((0 < iNumUnitCombatClassInfos),  "GC.getNumUnitCombatClassInfos() is not greater than zero but an array is being allocated in CvPlayerTraits::Reset");
; 2307 : 	m_paiMovesChangeUnitCombat.clear();

	mov	ecx, DWORD PTR [esi+788]
	mov	edx, DWORD PTR [esi+784]
	lea	ebp, DWORD PTR [esi+780]
	mov	edi, eax
	cmp	edx, ecx
	je	SHORT $LN568@Reset
	mov	eax, ecx
	sub	eax, ecx
	sar	eax, 2
	lea	ebp, DWORD PTR [eax*4]
	mov	DWORD PTR tv3183[esp+80], ebp
	add	ebp, edx
	cmp	eax, ebx
	mov	DWORD PTR __Result$261616[esp+80], ebp
	jle	SHORT $LN593@Reset
	mov	eax, DWORD PTR tv3183[esp+80]
	push	eax
	push	ecx
	push	eax
	push	edx
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN593@Reset:
	mov	eax, DWORD PTR __Result$261616[esp+80]
	lea	ebp, DWORD PTR [esi+780]
	mov	DWORD PTR [ebp+8], eax
$LN568@Reset:

; 2308 : 	m_paiMaintenanceModifierUnitCombat.clear();

	mov	eax, DWORD PTR [esi+804]
	mov	edx, DWORD PTR [esi+800]
	cmp	edx, eax
	je	SHORT $LN610@Reset
	sub	eax, eax
	sar	eax, 2
	lea	ecx, DWORD PTR [eax*4]
	add	edx, ecx
	cmp	eax, ebx
	mov	DWORD PTR __Result$261830[esp+80], edx
	jle	SHORT $LN635@Reset
	mov	eax, DWORD PTR [esi+804]
	push	ecx
	push	eax
	mov	eax, DWORD PTR [esi+800]
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN635@Reset:
	mov	ecx, DWORD PTR __Result$261830[esp+80]
	mov	DWORD PTR [esi+804], ecx
$LN610@Reset:

; 2309 : 	m_paiMovesChangeUnitCombat.resize(iNumUnitCombatClassInfos);

	mov	ecx, DWORD PTR [ebp+8]
	mov	edx, DWORD PTR [ebp+4]
	mov	eax, ecx
	sub	eax, edx
	sar	eax, 2
	mov	DWORD PTR $T262123[esp+80], ebx
	cmp	edi, eax
	jbe	SHORT $LN865@Reset
	lea	edx, DWORD PTR $T262123[esp+80]
	push	edx
	mov	edx, edi
	sub	edx, eax
	push	edx
	push	ecx
	mov	ecx, ebp
	call	?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z ; std::vector<int,std::allocator<int> >::_Insert_n
	jmp	SHORT $LN675@Reset
$LN865@Reset:
	jae	SHORT $LN675@Reset
	lea	ebp, DWORD PTR [edx+edi*4]
	mov	DWORD PTR $T262133[esp+80], ebp
	cmp	ebp, ecx
	je	SHORT $LN675@Reset
	mov	eax, ecx
	sub	eax, ecx
	sar	eax, 2
	lea	edx, DWORD PTR [eax*4]
	add	ebp, edx
	cmp	eax, ebx
	jle	SHORT $LN700@Reset
	mov	eax, DWORD PTR $T262133[esp+80]
	push	edx
	push	ecx
	push	edx
	push	eax
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN700@Reset:
	mov	DWORD PTR [esi+788], ebp
$LN675@Reset:

; 2310 : 	m_paiMaintenanceModifierUnitCombat.resize(iNumUnitCombatClassInfos);

	mov	ecx, DWORD PTR [esi+804]
	mov	ebp, DWORD PTR [esi+800]
	lea	edx, DWORD PTR [esi+796]
	mov	eax, ecx
	sub	eax, ebp
	sar	eax, 2
	mov	DWORD PTR $T262492[esp+80], ebx
	cmp	edi, eax
	jbe	SHORT $LN866@Reset
	lea	ebp, DWORD PTR $T262492[esp+80]
	push	ebp
	mov	ebp, edi
	sub	ebp, eax
	push	ebp
	push	ecx
	mov	ecx, edx
	call	?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z ; std::vector<int,std::allocator<int> >::_Insert_n
	jmp	SHORT $LN740@Reset
$LN866@Reset:
	jae	SHORT $LN740@Reset
	lea	ebp, DWORD PTR [ebp+edi*4]
	mov	DWORD PTR $T262501[esp+80], ebp
	cmp	ebp, ecx
	je	SHORT $LN740@Reset
	mov	eax, ecx
	sub	eax, ecx
	sar	eax, 2
	lea	edx, DWORD PTR [eax*4]
	add	ebp, edx
	cmp	eax, ebx
	jle	SHORT $LN765@Reset
	push	edx
	push	ecx
	mov	ecx, DWORD PTR $T262501[esp+88]
	push	edx
	push	ecx
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN765@Reset:
	mov	DWORD PTR [esi+804], ebp
$LN740@Reset:

; 2311 : 	for(int iI = 0; iI < iNumUnitCombatClassInfos; iI++)

	xor	eax, eax
	cmp	edi, ebx
	jle	SHORT $LN4@Reset
$LL6@Reset:

; 2312 : #endif
; 2313 : 	{
; 2314 : 		m_paiMovesChangeUnitCombat[iI] = 0;

	mov	edx, DWORD PTR [esi+784]
	mov	DWORD PTR [edx+eax*4], ebx

; 2315 : 		m_paiMaintenanceModifierUnitCombat[iI] = 0;

	mov	ecx, DWORD PTR [esi+800]
	mov	DWORD PTR [ecx+eax*4], ebx
	inc	eax
	cmp	eax, edi
	jl	SHORT $LL6@Reset
$LN4@Reset:

; 2316 : 	}
; 2317 : 
; 2318 : #ifdef AUI_WARNING_FIXES
; 2319 : 	for (uint iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)
; 2320 : #else
; 2321 : 	int iResourceLoop;
; 2322 : 	for(iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	ebp, ebp
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	test	eax, eax
	jle	SHORT $LN1@Reset

; 2323 : #endif
; 2324 : 	{
; 2325 : 		FreeResourceXCities temp;

	mov	DWORD PTR _temp$223771[esp+80], ebx
	mov	DWORD PTR _temp$223771[esp+84], ebx
	add	esi, 860				; 0000035cH
$LL3@Reset:

; 2326 : 		m_aFreeResourceXCities.push_back(temp);

	mov	ecx, DWORD PTR [esi+4]
	cmp	ecx, ebx
	jne	SHORT $LN782@Reset
	xor	eax, eax
	jmp	SHORT $LN783@Reset
$LN782@Reset:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, ecx
	sar	eax, 3
$LN783@Reset:
	mov	edi, DWORD PTR [esi+8]
	mov	edx, edi
	sub	edx, ecx
	sar	edx, 3
	cmp	edx, eax
	jae	SHORT $LN775@Reset
	mov	BYTE PTR $T262747[esp+80], bl
	mov	eax, DWORD PTR $T262747[esp+80]
	mov	ecx, DWORD PTR __Cat$262751[esp+80]
	push	eax
	push	ecx
	push	esi
	lea	edx, DWORD PTR _temp$223771[esp+92]
	push	edx
	push	1
	push	edi
	call	??$_Uninit_fill_n@PAUFreeResourceXCities@@IU1@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAXPAUFreeResourceXCities@@IABU1@AAV?$allocator@UFreeResourceXCities@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<FreeResourceXCities *,unsigned int,FreeResourceXCities,std::allocator<FreeResourceXCities> >
	add	esp, 24					; 00000018H
	add	edi, 8
	mov	DWORD PTR [esi+8], edi
	jmp	SHORT $LN2@Reset
$LN775@Reset:
	lea	eax, DWORD PTR _temp$223771[esp+80]
	push	eax
	push	1
	push	edi
	mov	ecx, esi
	call	?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Insert_n
$LN2@Reset:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	ebp
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	cmp	ebp, eax
	jl	SHORT $LL3@Reset
$LN1@Reset:

; 2327 : 	}
; 2328 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+80]
	pop	edi
	mov	DWORD PTR fs:0, ecx
	pop	esi
	pop	ebp
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Reset@CvPlayerTraits@@QAEXXZ$1:
	lea	ecx, DWORD PTR $T259108[ebp+4]
	jmp	??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >
__unwindfunclet$?Reset@CvPlayerTraits@@QAEXXZ$0:
	lea	ecx, DWORD PTR $T259108[ebp]
	jmp	??1?$vector@_NV?$allocator@_N@std@@@std@@QAE@XZ ; std::vector<bool,std::allocator<bool> >::~vector<bool,std::allocator<bool> >
__ehhandler$?Reset@CvPlayerTraits@@QAEXXZ:
	mov	eax, OFFSET __ehfuncinfo$?Reset@CvPlayerTraits@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Reset@CvPlayerTraits@@QAEXXZ ENDP			; CvPlayerTraits::Reset
PUBLIC	?ChooseMayaBoost@CvPlayerTraits@@QAEXXZ		; CvPlayerTraits::ChooseMayaBoost
EXTRN	?ChangeNumMayaBoosts@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::ChangeNumMayaBoosts
EXTRN	?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z:PROC ; CvCityCitizens::DoSpawnGreatPerson
EXTRN	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ:PROC ; CvCity::GetCityCitizens
EXTRN	?GetGreatPersonSpawnCity@CvPlayer@@QAEPAVCvCity@@W4UnitTypes@@@Z:PROC ; CvPlayer::GetGreatPersonSpawnCity
EXTRN	?GetActiveGrandStrategy@CvGrandStrategyAI@@QBE?AW4AIGrandStrategyTypes@@XZ:PROC ; CvGrandStrategyAI::GetActiveGrandStrategy
EXTRN	?GetGrandStrategyAI@CvPlayer@@QBEPAVCvGrandStrategyAI@@XZ:PROC ; CvPlayer::GetGrandStrategyAI
EXTRN	?getGameTurn@CvGame@@QAEHXZ:PROC		; CvGame::getGameTurn
EXTRN	?getEstimateEndTurn@CvGame@@QBEHXZ:PROC		; CvGame::getEstimateEndTurn
EXTRN	?GetWonderCompetitiveness@CvDiplomacyAI@@QBEHXZ:PROC ; CvDiplomacyAI::GetWonderCompetitiveness
EXTRN	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ:PROC ; CvPlayer::GetDiplomacyAI
EXTRN	?GetNumReligionsStillToFound@CvGameReligions@@QBEHXZ:PROC ; CvGameReligions::GetNumReligionsStillToFound
EXTRN	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z:PROC ; CvGameReligions::GetReligion
EXTRN	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z:PROC ; CvGameReligions::GetReligionCreatedByPlayer
EXTRN	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ:PROC ; CvGame::GetGameReligions
; Function compile flags: /Ogtpy
;	COMDAT ?ChooseMayaBoost@CvPlayerTraits@@QAEXXZ
_TEXT	SEGMENT
_choice$263551 = -8					; size = 8
_ePossibleGreatPerson$ = -8				; size = 4
?ChooseMayaBoost@CvPlayerTraits@@QAEXXZ PROC		; CvPlayerTraits::ChooseMayaBoost, COMDAT
; _this$ = ecx

; 2900 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi
	push	edi

; 2901 : 	UnitTypes eDesiredGreatPerson = NO_UNIT;
; 2902 : 	UnitTypes ePossibleGreatPerson;
; 2903 : 
; 2904 : 	// Go for a prophet?
; 2905 : 	ePossibleGreatPerson = (UnitTypes)GC.getInfoTypeForString("UNIT_PROPHET", true);

	push	1
	mov	esi, ecx
	push	OFFSET $SG224073
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	or	edi, -1
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR [esi+772]
	mov	ebp, eax

; 2906 : 	if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	mov	eax, DWORD PTR [esi+768]
	cmp	eax, ecx
	je	SHORT $LN319@ChooseMaya
	npad	1
$LL57@ChooseMaya:
	cmp	DWORD PTR [eax], ebp
	je	SHORT $LN292@ChooseMaya
	add	eax, 8
	cmp	eax, ecx
	jne	SHORT $LL57@ChooseMaya

; 2995 : 		if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	jmp	SHORT $LN319@ChooseMaya
$LN292@ChooseMaya:

; 2906 : 	if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN320@ChooseMaya
$LN319@ChooseMaya:

; 2907 : 	{
; 2908 : 		CvGameReligions* pReligions = GC.getGame().GetGameReligions();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ebx, eax

; 2909 : 		ReligionTypes eReligion = pReligions->GetReligionCreatedByPlayer(m_pPlayer->GetID());

	mov	eax, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax+44]
	push	eax
	mov	ecx, ebx
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer

; 2910 : 
; 2911 : 		// Have a religion that isn't enhanced yet?
; 2912 : 		if(eReligion != NO_RELIGION)

	cmp	eax, -1
	je	SHORT $LN39@ChooseMaya

; 2913 : 		{
; 2914 : 			const CvReligion* pMyReligion = pReligions->GetReligion(eReligion, m_pPlayer->GetID());

	mov	ecx, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [ecx+44]
	push	ecx
	push	eax
	mov	ecx, ebx
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 2915 : 			if(!pMyReligion->m_bEnhanced)

	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN320@ChooseMaya

; 2916 : 			{
; 2917 : 				eDesiredGreatPerson = ePossibleGreatPerson;
; 2918 : 			}
; 2919 : 		}
; 2920 : 
; 2921 : 		// Don't have a religion and they can still be founded?
; 2922 : 		else

	jmp	SHORT $LN330@ChooseMaya
$LN39@ChooseMaya:

; 2923 : 		{
; 2924 : 			if(pReligions->GetNumReligionsStillToFound() > 0)

	mov	ecx, ebx
	call	?GetNumReligionsStillToFound@CvGameReligions@@QBEHXZ ; CvGameReligions::GetNumReligionsStillToFound
	test	eax, eax
	jle	SHORT $LN320@ChooseMaya
$LN330@ChooseMaya:

; 2925 : 			{
; 2926 : 				eDesiredGreatPerson = ePossibleGreatPerson;

	mov	edi, ebp

; 2927 : 			}
; 2928 : 		}
; 2929 : 	}
; 2930 : 
; 2931 : 	// Highly wonder competitive and still early in game?
; 2932 : 	if(eDesiredGreatPerson == NO_UNIT)

	cmp	ebp, -1
	jne	SHORT $LN321@ChooseMaya
$LN320@ChooseMaya:

; 2933 : 	{
; 2934 : 		ePossibleGreatPerson = (UnitTypes)GC.getInfoTypeForString("UNIT_ENGINEER");

	push	0
	push	OFFSET $SG224084
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR [esi+772]
	mov	edx, eax

; 2935 : 		if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	mov	eax, DWORD PTR [esi+768]
	mov	DWORD PTR _ePossibleGreatPerson$[esp+24], edx
	cmp	eax, ecx
	je	SHORT $LN309@ChooseMaya
$LL99@ChooseMaya:
	cmp	DWORD PTR [eax], edx
	je	SHORT $LN293@ChooseMaya
	add	eax, 8
	cmp	eax, ecx
	jne	SHORT $LL99@ChooseMaya

; 2995 : 		if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	jmp	SHORT $LN309@ChooseMaya
$LN293@ChooseMaya:

; 2935 : 		if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN321@ChooseMaya
$LN309@ChooseMaya:

; 2936 : 		{
; 2937 : 			if(m_pPlayer->GetDiplomacyAI()->GetWonderCompetitiveness() >= 8 && GC.getGame().getGameTurn() <= (GC.getGame().getEstimateEndTurn() / 2))

	mov	ecx, DWORD PTR [esi+4]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetWonderCompetitiveness@CvDiplomacyAI@@QBEHXZ ; CvDiplomacyAI::GetWonderCompetitiveness
	cmp	eax, 8
	jl	SHORT $LN321@ChooseMaya
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	ebp, ecx
	call	?getEstimateEndTurn@CvGame@@QBEHXZ	; CvGame::getEstimateEndTurn
	cdq
	sub	eax, edx
	mov	ebx, eax
	mov	ecx, ebp
	sar	ebx, 1
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	cmp	eax, ebx
	jg	SHORT $LN321@ChooseMaya

; 2938 : 			{
; 2939 : 				eDesiredGreatPerson = ePossibleGreatPerson;

	mov	edi, DWORD PTR _ePossibleGreatPerson$[esp+24]
$LN321@ChooseMaya:

; 2940 : 			}
; 2941 : 		}
; 2942 : 	}
; 2943 : 
; 2944 : 	// Does our grand strategy match one that is available?
; 2945 : 	AIGrandStrategyTypes eVictoryStrategy = m_pPlayer->GetGrandStrategyAI()->GetActiveGrandStrategy();

	mov	ecx, DWORD PTR [esi+4]
	call	?GetGrandStrategyAI@CvPlayer@@QBEPAVCvGrandStrategyAI@@XZ ; CvPlayer::GetGrandStrategyAI
	mov	ecx, eax
	call	?GetActiveGrandStrategy@CvGrandStrategyAI@@QBE?AW4AIGrandStrategyTypes@@XZ ; CvGrandStrategyAI::GetActiveGrandStrategy
	mov	ebx, eax

; 2946 : 	if(eDesiredGreatPerson == NO_UNIT)

	cmp	edi, -1
	jne	$LN324@ChooseMaya

; 2947 : 	{
; 2948 : 		ePossibleGreatPerson = (UnitTypes)GC.getInfoTypeForString("UNIT_SCIENTIST");

	push	0
	push	OFFSET $SG224090
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR [esi+772]
	mov	edi, eax

; 2949 : 		if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	mov	eax, DWORD PTR [esi+768]
	cmp	eax, ecx
	je	SHORT $LN326@ChooseMaya
	npad	6
$LL135@ChooseMaya:
	cmp	DWORD PTR [eax], edi
	je	SHORT $LN294@ChooseMaya
	add	eax, 8
	cmp	eax, ecx
	jne	SHORT $LL135@ChooseMaya

; 2995 : 		if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	jmp	SHORT $LN326@ChooseMaya
$LN294@ChooseMaya:

; 2949 : 		if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN311@ChooseMaya
$LN326@ChooseMaya:

; 2950 : 		{
; 2951 : 			if(eVictoryStrategy == (AIGrandStrategyTypes) GC.getInfoTypeForString("AIGRANDSTRATEGY_SPACESHIP"))

	push	0
	push	OFFSET $SG224094
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	ebx, eax
	jne	SHORT $LN311@ChooseMaya

; 2952 : 			{
; 2953 : 				eDesiredGreatPerson = ePossibleGreatPerson;
; 2954 : 			}
; 2955 : 		}
; 2956 : 	}
; 2957 : 	if(eDesiredGreatPerson == NO_UNIT)

	cmp	edi, -1
	jne	$LN324@ChooseMaya
$LN311@ChooseMaya:

; 2958 : 	{
; 2959 : 		ePossibleGreatPerson = (UnitTypes)GC.getInfoTypeForString("UNIT_ARTIST");

	push	0
	push	OFFSET $SG224097
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR [esi+772]
	mov	edi, eax

; 2960 : 		if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	mov	eax, DWORD PTR [esi+768]
	cmp	eax, ecx
	je	SHORT $LN327@ChooseMaya
$LL167@ChooseMaya:
	cmp	DWORD PTR [eax], edi
	je	SHORT $LN295@ChooseMaya
	add	eax, 8
	cmp	eax, ecx
	jne	SHORT $LL167@ChooseMaya

; 2995 : 		if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	jmp	SHORT $LN327@ChooseMaya
$LN295@ChooseMaya:

; 2960 : 		if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN313@ChooseMaya
$LN327@ChooseMaya:

; 2961 : 		{
; 2962 : 			if(eVictoryStrategy == (AIGrandStrategyTypes) GC.getInfoTypeForString("AIGRANDSTRATEGY_CULTURE"))

	push	0
	push	OFFSET $SG224101
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	ebx, eax
	jne	SHORT $LN313@ChooseMaya

; 2963 : 			{
; 2964 : 				eDesiredGreatPerson = ePossibleGreatPerson;
; 2965 : 			}
; 2966 : 		}
; 2967 : 	}
; 2968 : 	if(eDesiredGreatPerson == NO_UNIT)

	cmp	edi, -1
	jne	$LN324@ChooseMaya
$LN313@ChooseMaya:

; 2969 : 	{
; 2970 : 		ePossibleGreatPerson = (UnitTypes)GC.getInfoTypeForString("UNIT_MERCHANT");

	push	0
	push	OFFSET $SG224104
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR [esi+772]
	mov	edi, eax

; 2971 : 		if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	mov	eax, DWORD PTR [esi+768]
	cmp	eax, ecx
	je	SHORT $LN328@ChooseMaya
$LL199@ChooseMaya:
	cmp	DWORD PTR [eax], edi
	je	SHORT $LN296@ChooseMaya
	add	eax, 8
	cmp	eax, ecx
	jne	SHORT $LL199@ChooseMaya

; 2995 : 		if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	jmp	SHORT $LN328@ChooseMaya
$LN296@ChooseMaya:

; 2971 : 		if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN315@ChooseMaya
$LN328@ChooseMaya:

; 2972 : 		{
; 2973 : 			if(eVictoryStrategy == (AIGrandStrategyTypes) GC.getInfoTypeForString("AIGRANDSTRATEGY_UNITED_NATIONS"))

	push	0
	push	OFFSET $SG224108
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	ebx, eax
	jne	SHORT $LN315@ChooseMaya

; 2974 : 			{
; 2975 : 				eDesiredGreatPerson = ePossibleGreatPerson;
; 2976 : 			}
; 2977 : 		}
; 2978 : 	}
; 2979 : 	if(eDesiredGreatPerson == NO_UNIT)

	cmp	edi, -1
	jne	$LN324@ChooseMaya
$LN315@ChooseMaya:

; 2980 : 	{
; 2981 : 		ePossibleGreatPerson = (UnitTypes)GC.getInfoTypeForString("UNIT_GREAT_GENERAL");

	push	0
	push	OFFSET $SG224111
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR [esi+772]
	mov	edi, eax

; 2982 : 		if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	mov	eax, DWORD PTR [esi+768]
	cmp	eax, ecx
	je	SHORT $LN329@ChooseMaya
	npad	4
$LL231@ChooseMaya:
	cmp	DWORD PTR [eax], edi
	je	SHORT $LN297@ChooseMaya
	add	eax, 8
	cmp	eax, ecx
	jne	SHORT $LL231@ChooseMaya

; 2995 : 		if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	jmp	SHORT $LN329@ChooseMaya
$LN297@ChooseMaya:

; 2982 : 		if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN317@ChooseMaya
$LN329@ChooseMaya:

; 2983 : 		{
; 2984 : 			if(eVictoryStrategy == (AIGrandStrategyTypes) GC.getInfoTypeForString("AIGRANDSTRATEGY_CONQUEST"))

	push	0
	push	OFFSET $SG224115
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	ebx, eax
	jne	SHORT $LN317@ChooseMaya

; 2985 : 			{
; 2986 : 				eDesiredGreatPerson = ePossibleGreatPerson;
; 2987 : 			}
; 2988 : 		}
; 2989 : 	}
; 2990 : 
; 2991 : 	// No obvious strategic choice, just go for first one available in a reasonable order
; 2992 : 	if(eDesiredGreatPerson == NO_UNIT)

	cmp	edi, -1
	jne	$LN324@ChooseMaya
$LN317@ChooseMaya:

; 2993 : 	{
; 2994 : 		ePossibleGreatPerson = (UnitTypes)GC.getInfoTypeForString("UNIT_PROPHET", true);

	push	1
	push	OFFSET $SG224118
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR [esi+772]
	mov	edi, eax

; 2995 : 		if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	mov	eax, DWORD PTR [esi+768]
	cmp	eax, ecx
	je	$LN3@ChooseMaya
$LL263@ChooseMaya:
	cmp	DWORD PTR [eax], edi
	je	SHORT $LN298@ChooseMaya
	add	eax, 8
	cmp	eax, ecx
	jne	SHORT $LL263@ChooseMaya
	jmp	$LN3@ChooseMaya
$LN298@ChooseMaya:
	cmp	DWORD PTR [eax+4], 0

; 2996 : 		{
; 2997 : 			eDesiredGreatPerson = ePossibleGreatPerson;
; 2998 : 		}
; 2999 : 		else

	je	$LN3@ChooseMaya

; 3000 : 		{
; 3001 : 			ePossibleGreatPerson = (UnitTypes)GC.getInfoTypeForString("UNIT_ENGINEER");

	push	0
	push	OFFSET $SG224122
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	edi, eax

; 3002 : 			if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	push	edi
	mov	ecx, esi
	call	?GetUnitBaktun@CvPlayerTraits@@QBEHW4UnitTypes@@@Z ; CvPlayerTraits::GetUnitBaktun
	test	eax, eax

; 3003 : 			{
; 3004 : 				eDesiredGreatPerson = ePossibleGreatPerson;
; 3005 : 			}
; 3006 : 			else

	je	$LN3@ChooseMaya

; 3007 : 			{
; 3008 : 				ePossibleGreatPerson = (UnitTypes)GC.getInfoTypeForString("UNIT_WRITER");

	push	0
	push	OFFSET $SG224126
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	edi, eax

; 3009 : 				if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	push	edi
	mov	ecx, esi
	call	?GetUnitBaktun@CvPlayerTraits@@QBEHW4UnitTypes@@@Z ; CvPlayerTraits::GetUnitBaktun
	test	eax, eax

; 3010 : 				{
; 3011 : 					eDesiredGreatPerson = ePossibleGreatPerson;
; 3012 : 				}
; 3013 : 				else

	je	$LN3@ChooseMaya

; 3014 : 				{
; 3015 : 					ePossibleGreatPerson = (UnitTypes)GC.getInfoTypeForString("UNIT_MERCHANT");

	push	0
	push	OFFSET $SG224130
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	edi, eax

; 3016 : 					if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	push	edi
	mov	ecx, esi
	call	?GetUnitBaktun@CvPlayerTraits@@QBEHW4UnitTypes@@@Z ; CvPlayerTraits::GetUnitBaktun
	test	eax, eax

; 3017 : 					{
; 3018 : 						eDesiredGreatPerson = ePossibleGreatPerson;
; 3019 : 					}
; 3020 : 					else

	je	$LN3@ChooseMaya

; 3021 : 					{
; 3022 : 						ePossibleGreatPerson = (UnitTypes)GC.getInfoTypeForString("UNIT_SCIENTIST");

	push	0
	push	OFFSET $SG224134
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	edi, eax

; 3023 : 						if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	push	edi
	mov	ecx, esi
	call	?GetUnitBaktun@CvPlayerTraits@@QBEHW4UnitTypes@@@Z ; CvPlayerTraits::GetUnitBaktun
	test	eax, eax

; 3024 : 						{
; 3025 : 							eDesiredGreatPerson = ePossibleGreatPerson;
; 3026 : 						}
; 3027 : 						else

	je	SHORT $LN3@ChooseMaya

; 3028 : 						{
; 3029 : 							ePossibleGreatPerson = (UnitTypes)GC.getInfoTypeForString("UNIT_ARTIST");

	push	0
	push	OFFSET $SG224138
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	edi, eax

; 3030 : 							if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	push	edi
	mov	ecx, esi
	call	?GetUnitBaktun@CvPlayerTraits@@QBEHW4UnitTypes@@@Z ; CvPlayerTraits::GetUnitBaktun
	test	eax, eax

; 3031 : 							{
; 3032 : 								eDesiredGreatPerson = ePossibleGreatPerson;
; 3033 : 							}
; 3034 : 							else

	je	SHORT $LN3@ChooseMaya

; 3035 : 							{
; 3036 : 								ePossibleGreatPerson = (UnitTypes)GC.getInfoTypeForString("UNIT_MUSICIAN");

	push	0
	push	OFFSET $SG224142
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	edi, eax

; 3037 : 								if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	push	edi
	mov	ecx, esi
	call	?GetUnitBaktun@CvPlayerTraits@@QBEHW4UnitTypes@@@Z ; CvPlayerTraits::GetUnitBaktun
	test	eax, eax

; 3038 : 								{
; 3039 : 									eDesiredGreatPerson = ePossibleGreatPerson;
; 3040 : 								}
; 3041 : 								else

	je	SHORT $LN3@ChooseMaya

; 3042 : 								{
; 3043 : 									ePossibleGreatPerson = (UnitTypes)GC.getInfoTypeForString("UNIT_GREAT_GENERAL");

	push	0
	push	OFFSET $SG224146
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	edi, eax

; 3044 : 									if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	push	edi
	mov	ecx, esi
	call	?GetUnitBaktun@CvPlayerTraits@@QBEHW4UnitTypes@@@Z ; CvPlayerTraits::GetUnitBaktun
	test	eax, eax

; 3045 : 									{
; 3046 : 										eDesiredGreatPerson = ePossibleGreatPerson;
; 3047 : 									}
; 3048 : 									else

	je	SHORT $LN3@ChooseMaya

; 3049 : 									{
; 3050 : 										ePossibleGreatPerson = (UnitTypes)GC.getInfoTypeForString("UNIT_GREAT_ADMIRAL");

	push	0
	push	OFFSET $SG224150
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	edi, eax

; 3051 : 										if(GetUnitBaktun(ePossibleGreatPerson) == 0)

	push	edi
	mov	ecx, esi
	call	?GetUnitBaktun@CvPlayerTraits@@QBEHW4UnitTypes@@@Z ; CvPlayerTraits::GetUnitBaktun
	test	eax, eax
	jne	SHORT $LN2@ChooseMaya
$LN3@ChooseMaya:

; 3052 : 										{
; 3053 : 											eDesiredGreatPerson = ePossibleGreatPerson;
; 3054 : 										}
; 3055 : 									}
; 3056 : 								}
; 3057 : 							}
; 3058 : 						}
; 3059 : 					}
; 3060 : 				}
; 3061 : 			}
; 3062 : 		}
; 3063 : 	}
; 3064 : 
; 3065 : 	// Actually get the great person
; 3066 : 	if(eDesiredGreatPerson != NO_UNIT)

	cmp	edi, -1
	je	SHORT $LN2@ChooseMaya
$LN324@ChooseMaya:

; 3067 : 	{
; 3068 : 		CvCity* pCity = m_pPlayer->GetGreatPersonSpawnCity(eDesiredGreatPerson);

	mov	ecx, DWORD PTR [esi+4]
	push	edi
	call	?GetGreatPersonSpawnCity@CvPlayer@@QAEPAVCvCity@@W4UnitTypes@@@Z ; CvPlayer::GetGreatPersonSpawnCity

; 3069 : 		if(pCity)

	test	eax, eax
	je	SHORT $LN281@ChooseMaya

; 3070 : 		{
; 3071 : 			pCity->GetCityCitizens()->DoSpawnGreatPerson(eDesiredGreatPerson, true, false);

	push	0
	push	1
	push	edi
	mov	ecx, eax
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z ; CvCityCitizens::DoSpawnGreatPerson

; 3072 : 			SetUnitBaktun(eDesiredGreatPerson);

	mov	edx, DWORD PTR [esi+744]
	lea	eax, DWORD PTR _choice$263551[esp+24]
	push	eax
	lea	ecx, DWORD PTR [esi+764]
	mov	DWORD PTR _choice$263551[esp+28], edi
	mov	DWORD PTR _choice$263551[esp+32], edx
	call	?push_back@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@QAEXABUMayaBonusChoice@@@Z ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::push_back
$LN281@ChooseMaya:

; 3073 : 		}
; 3074 : 		m_pPlayer->ChangeNumMayaBoosts(-1);

	mov	ecx, DWORD PTR [esi+4]
	push	-1
	call	?ChangeNumMayaBoosts@CvPlayer@@QAEXH@Z	; CvPlayer::ChangeNumMayaBoosts
$LN2@ChooseMaya:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 3075 : 	}
; 3076 : }

	add	esp, 8
	ret	0
?ChooseMayaBoost@CvPlayerTraits@@QAEXXZ ENDP		; CvPlayerTraits::ChooseMayaBoost
_TEXT	ENDS
PUBLIC	?push_back@?$vector@_NV?$allocator@_N@std@@@std@@QAEX_N@Z ; std::vector<bool,std::allocator<bool> >::push_back
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?push_back@?$vector@_NV?$allocator@_N@std@@@std@@QAEX_N@Z
_TEXT	SEGMENT
$T263613 = -8						; size = 8
$T263612 = -8						; size = 8
__Val$ = 8						; size = 1
?push_back@?$vector@_NV?$allocator@_N@std@@@std@@QAEX_N@Z PROC ; std::vector<bool,std::allocator<bool> >::push_back, COMDAT
; _this$ = ecx

; 2115 : 		{	// insert element at end

	sub	esp, 8
	push	esi
	mov	esi, ecx

; 2116 : 		insert(end(), _Val);

	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR $T263612[esp+12], eax
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR $T263612[esp+16], 0
	test	eax, eax
	jbe	SHORT $LN20@push_back@7
	push	eax
	lea	ecx, DWORD PTR $T263612[esp+16]
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
$LN20@push_back@7:
	mov	ecx, DWORD PTR __Val$[esp+8]
	mov	edx, DWORD PTR $T263612[esp+16]
	mov	eax, DWORD PTR $T263612[esp+12]
	push	ecx
	push	edx
	push	eax
	lea	ecx, DWORD PTR $T263613[esp+24]
	push	ecx
	mov	ecx, esi
	call	?insert@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@V?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@_N@Z ; std::vector<bool,std::allocator<bool> >::insert
	pop	esi

; 2117 : 		}

	add	esp, 8
	ret	4
?push_back@?$vector@_NV?$allocator@_N@std@@@std@@QAEX_N@Z ENDP ; std::vector<bool,std::allocator<bool> >::push_back
_TEXT	ENDS
EXTRN	?Initialize2DArray@CvDatabaseUtility@@QAE_NAAPAPAHPBD1H@Z:PROC ; CvDatabaseUtility::Initialize2DArray
EXTRN	?MaxRows@CvDatabaseUtility@@QAEHPBD@Z:PROC	; CvDatabaseUtility::MaxRows
EXTRN	?PopulateArrayByValue@CvDatabaseUtility@@QAE_NAAPAHPBD11111HH@Z:PROC ; CvDatabaseUtility::PopulateArrayByValue
EXTRN	__imp_?Reset@Results@Database@@QAE_NXZ:PROC
EXTRN	__imp_?GetInt@Results@Database@@QAEHH@Z:PROC
EXTRN	__imp_?Step@Results@Database@@QAE_NXZ:PROC
EXTRN	__imp_?Bind@Results@Database@@QAE_NHPBD_N@Z:PROC
EXTRN	?PrepareResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z:PROC ; CvDatabaseUtility::PrepareResults
EXTRN	?GetResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; CvDatabaseUtility::GetResults
EXTRN	?SetYields@CvDatabaseUtility@@QAE_NAAPAHPBD11@Z:PROC ; CvDatabaseUtility::SetYields
EXTRN	__imp_?GetBool@Results@Database@@QAE_NPBD@Z:PROC
EXTRN	__imp_?GetInt@Results@Database@@QAEHPBD@Z:PROC
EXTRN	__imp_?GetText@Results@Database@@QAEPBDPBD@Z:PROC
EXTRN	?CacheResults@CvBaseInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z:PROC ; CvBaseInfo::CacheResults
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$8
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$10
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
xdata$x	ENDS
;	COMDAT ?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z
_TEXT	SEGMENT
_szTraitType$ = -96					; size = 4
_iResourceLoop$223373 = -92				; size = 4
_iImprovementLoop$223359 = -92				; size = 4
_YieldID$223342 = -92					; size = 4
_YieldID$223329 = -92					; size = 4
_YieldID$223316 = -92					; size = 4
$T265530 = -88						; size = 1
__Tmp$265148 = -88					; size = 8
$T263748 = -88						; size = 8
_temp$223386 = -80					; size = 8
_temp$223377 = -80					; size = 8
$T263695 = -80						; size = 12
$T263692 = -80						; size = 8
_strKey$223363 = -68					; size = 28
_strKey$223348 = -68					; size = 28
_strKey$223333 = -68					; size = 28
_strKey$223320 = -68					; size = 28
_strKey$223307 = -68					; size = 28
_sqlKey$223294 = -68					; size = 28
_sqlKey$223281 = -68					; size = 28
_sqlKey$223189 = -68					; size = 28
_sqlKey$223176 = -68					; size = 28
_strKey$223378 = -40					; size = 28
__$EHRec$ = -12						; size = 12
tv3254 = 8						; size = 4
$T264866 = 8						; size = 1
$T263895 = 8						; size = 4
_pResults$223365 = 8					; size = 4
_pResults$223350 = 8					; size = 4
_iUnitClassLoop$223344 = 8				; size = 4
_FeatureID$223341 = 8					; size = 4
_SpecialistID$223328 = 8				; size = 4
_ImprovementID$223315 = 8				; size = 4
_iUnitCombatID$223303 = 8				; size = 4
_iUnitCombatID$223290 = 8				; size = 4
_unitPromotionID$223198 = 8				; size = 4
_iTerrainID$223185 = 8					; size = 4
_kResults$ = 8						; size = 4
__Cat$265534 = 12					; size = 1
_kUtility$ = 12						; size = 4
?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z PROC ; CvTraitEntry::CacheResults, COMDAT
; _this$ = ecx

; 1094 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 1095 : 	if(!CvBaseInfo::CacheResults(kResults, kUtility))

	mov	eax, DWORD PTR _kUtility$[esp+8]
	sub	esp, 84					; 00000054H
	push	esi
	push	edi
	mov	edi, DWORD PTR _kResults$[esp+100]
	push	eax
	push	edi
	mov	esi, ecx
	call	?CacheResults@CvBaseInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z ; CvBaseInfo::CacheResults
	test	al, al
	jne	SHORT $LN50@CacheResul
	pop	edi
	pop	esi

; 1614 : 
; 1615 : 	return true;
; 1616 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+96]
	mov	DWORD PTR fs:0, ecx
	add	esp, 96					; 00000060H
	ret	8
$LN50@CacheResul:
	push	ebx

; 1096 : 		return false;
; 1097 : 
; 1098 : 	//Basic Properties
; 1099 : 	setShortDescription(kResults.GetText("ShortDescription"));

	mov	ebx, DWORD PTR __imp_?GetText@Results@Database@@QAEPBDPBD@Z
	push	ebp
	push	OFFSET $SG223032
	mov	ecx, edi
	call	ebx
	lea	ecx, DWORD PTR [esi+608]
	test	eax, eax
	je	SHORT $LN67@CacheResul
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN66@CacheResul
$LN67@CacheResul:
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN66@CacheResul:

; 1100 : 
; 1101 : 	m_iLevelExperienceModifier				= kResults.GetInt("LevelExperienceModifier");

	mov	ebp, DWORD PTR __imp_?GetInt@Results@Database@@QAEHPBD@Z
	push	OFFSET $SG223033
	mov	ecx, edi
	call	ebp

; 1102 : 	m_iGreatPeopleRateModifier				= kResults.GetInt("GreatPeopleRateModifier");

	push	OFFSET $SG223034
	mov	ecx, edi
	mov	DWORD PTR [esi+260], eax
	call	ebp

; 1103 : 	m_iGreatScientistRateModifier			= kResults.GetInt("GreatScientistRateModifier");

	push	OFFSET $SG223035
	mov	ecx, edi
	mov	DWORD PTR [esi+264], eax
	call	ebp

; 1104 : 	m_iGreatGeneralRateModifier				= kResults.GetInt("GreatGeneralRateModifier");

	push	OFFSET $SG223036
	mov	ecx, edi
	mov	DWORD PTR [esi+268], eax
	call	ebp

; 1105 : 	m_iGreatGeneralExtraBonus				= kResults.GetInt("GreatGeneralExtraBonus");

	push	OFFSET $SG223037
	mov	ecx, edi
	mov	DWORD PTR [esi+272], eax
	call	ebp

; 1106 : 	m_iGreatPersonGiftInfluence				= kResults.GetInt("GreatPersonGiftInfluence");

	push	OFFSET $SG223038
	mov	ecx, edi
	mov	DWORD PTR [esi+276], eax
	call	ebp

; 1107 : 	m_iMaxGlobalBuildingProductionModifier	= kResults.GetInt("MaxGlobalBuildingProductionModifier");

	push	OFFSET $SG223039
	mov	ecx, edi
	mov	DWORD PTR [esi+280], eax
	call	ebp

; 1108 : 	m_iMaxTeamBuildingProductionModifier	= kResults.GetInt("MaxTeamBuildingProductionModifier");

	push	OFFSET $SG223040
	mov	ecx, edi
	mov	DWORD PTR [esi+284], eax
	call	ebp

; 1109 : 	m_iMaxPlayerBuildingProductionModifier	= kResults.GetInt("MaxPlayerBuildingProductionModifier");

	push	OFFSET $SG223041
	mov	ecx, edi
	mov	DWORD PTR [esi+288], eax
	call	ebp

; 1110 : 	m_iCityUnhappinessModifier           	= kResults.GetInt("CityUnhappinessModifier");

	push	OFFSET $SG223042
	mov	ecx, edi
	mov	DWORD PTR [esi+292], eax
	call	ebp

; 1111 : 	m_iPopulationUnhappinessModifier    	= kResults.GetInt("PopulationUnhappinessModifier");

	push	OFFSET $SG223043
	mov	ecx, edi
	mov	DWORD PTR [esi+296], eax
	call	ebp

; 1112 : 	m_iCityStateBonusModifier               = kResults.GetInt("CityStateBonusModifier");

	push	OFFSET $SG223044
	mov	ecx, edi
	mov	DWORD PTR [esi+300], eax
	call	ebp

; 1113 : 	m_iCityStateFriendshipModifier          = kResults.GetInt("CityStateFriendshipModifier");

	push	OFFSET $SG223045
	mov	ecx, edi
	mov	DWORD PTR [esi+304], eax
	call	ebp

; 1114 : 	m_iCityStateCombatModifier				= kResults.GetInt("CityStateCombatModifier");

	push	OFFSET $SG223046
	mov	ecx, edi
	mov	DWORD PTR [esi+308], eax
	call	ebp

; 1115 : 	m_iLandBarbarianConversionPercent       = kResults.GetInt("LandBarbarianConversionPercent");

	push	OFFSET $SG223047
	mov	ecx, edi
	mov	DWORD PTR [esi+312], eax
	call	ebp

; 1116 : 	m_iLandBarbarianConversionExtraUnits    = kResults.GetInt("LandBarbarianConversionExtraUnits");

	push	OFFSET $SG223048
	mov	ecx, edi
	mov	DWORD PTR [esi+316], eax
	call	ebp

; 1117 : 	m_iSeaBarbarianConversionPercent        = kResults.GetInt("SeaBarbarianConversionPercent");

	push	OFFSET $SG223049
	mov	ecx, edi
	mov	DWORD PTR [esi+320], eax
	call	ebp

; 1118 : 	m_iCapitalBuildingModifier				= kResults.GetInt("CapitalBuildingModifier");

	push	OFFSET $SG223050
	mov	ecx, edi
	mov	DWORD PTR [esi+324], eax
	call	ebp

; 1119 : 	m_iPlotBuyCostModifier					= kResults.GetInt("PlotBuyCostModifier");

	push	OFFSET $SG223051
	mov	ecx, edi
	mov	DWORD PTR [esi+328], eax
	call	ebp

; 1120 : 	m_iPlotCultureCostModifier              = kResults.GetInt("PlotCultureCostModifier");

	push	OFFSET $SG223052
	mov	ecx, edi
	mov	DWORD PTR [esi+332], eax
	call	ebp
	mov	DWORD PTR [esi+336], eax

; 1121 : #ifdef NQ_SCIENCE_PER_GREAT_PERSON_BORN
; 1122 : 	m_iSciencePerGreatPersonBorn			= kResults.GetInt("SciencePerGreatPersonBorn");

	push	OFFSET $SG223053
	mov	ecx, edi
	call	ebp

; 1123 : #endif
; 1124 : #ifdef NQ_NUM_TURNS_BEFORE_MINOR_ALLIES_REFUSE_BRIBES_FROM_TRAIT
; 1125 : 	m_iNumTurnsBeforeMinorAlliesRefuseBribes = kResults.GetInt("NumTurnsBeforeMinorAlliesRefuseBribes");

	push	OFFSET $SG223054
	mov	ecx, edi
	mov	DWORD PTR [esi+340], eax
	call	ebp

; 1126 : #endif
; 1127 : #ifdef NQ_GOLDEN_PILGRIMAGE
; 1128 : 	m_iGoldenAgeTileBonusFaith              = kResults.GetInt("GoldenAgeTileBonusFaith");

	push	OFFSET $SG223055
	mov	ecx, edi
	mov	DWORD PTR [esi+344], eax
	call	ebp

; 1129 : #endif
; 1130 : 	m_iCultureFromKills						= kResults.GetInt("CultureFromKills");

	push	OFFSET $SG223056
	mov	ecx, edi
	mov	DWORD PTR [esi+348], eax
	call	ebp

; 1131 : 	m_iFaithFromKills						= kResults.GetInt("FaithFromKills");

	push	OFFSET $SG223057
	mov	ecx, edi
	mov	DWORD PTR [esi+352], eax
	call	ebp

; 1132 : 	m_iCityCultureBonus						= kResults.GetInt("CityCultureBonus");

	push	OFFSET $SG223058
	mov	ecx, edi
	mov	DWORD PTR [esi+356], eax
	call	ebp

; 1133 : 	m_iCapitalThemingBonusModifier          = kResults.GetInt("CapitalThemingBonusModifier");

	push	OFFSET $SG223059
	mov	ecx, edi
	mov	DWORD PTR [esi+360], eax
	call	ebp

; 1134 : 	m_iPolicyCostModifier					= kResults.GetInt("PolicyCostModifier");

	push	OFFSET $SG223060
	mov	ecx, edi
	mov	DWORD PTR [esi+364], eax
	call	ebp

; 1135 : 	m_iCityConnectionTradeRouteChange		= kResults.GetInt("CityConnectionTradeRouteChange");

	push	OFFSET $SG223061
	mov	ecx, edi
	mov	DWORD PTR [esi+368], eax
	call	ebp

; 1136 : 	m_iWonderProductionModifier				= kResults.GetInt("WonderProductionModifier");

	push	OFFSET $SG223062
	mov	ecx, edi
	mov	DWORD PTR [esi+372], eax
	call	ebp

; 1137 : 	m_iPlunderModifier						= kResults.GetInt("PlunderModifier");

	push	OFFSET $SG223063
	mov	ecx, edi
	mov	DWORD PTR [esi+376], eax
	call	ebp

; 1138 : 	m_iImprovementMaintenanceModifier       = kResults.GetInt("ImprovementMaintenanceModifier");

	push	OFFSET $SG223064
	mov	ecx, edi
	mov	DWORD PTR [esi+380], eax
	call	ebp

; 1139 : 	m_iGoldenAgeDurationModifier			= kResults.GetInt("GoldenAgeDurationModifier");

	push	OFFSET $SG223065
	mov	ecx, edi
	mov	DWORD PTR [esi+384], eax
	call	ebp

; 1140 : 	m_iGoldenAgeMoveChange				    = kResults.GetInt("GoldenAgeMoveChange");

	push	OFFSET $SG223066
	mov	ecx, edi
	mov	DWORD PTR [esi+388], eax
	call	ebp

; 1141 : 	m_iGoldenAgeCombatModifier				= kResults.GetInt("GoldenAgeCombatModifier");

	push	OFFSET $SG223067
	mov	ecx, edi
	mov	DWORD PTR [esi+392], eax
	call	ebp

; 1142 : 	m_iGoldenAgeTourismModifier				= kResults.GetInt("GoldenAgeTourismModifier");

	push	OFFSET $SG223068
	mov	ecx, edi
	mov	DWORD PTR [esi+396], eax
	call	ebp

; 1143 : 	m_iGoldenAgeGreatArtistRateModifier		= kResults.GetInt("GoldenAgeGreatArtistRateModifier");

	push	OFFSET $SG223069
	mov	ecx, edi
	mov	DWORD PTR [esi+400], eax
	call	ebp

; 1144 : 	m_iGoldenAgeGreatMusicianRateModifier	= kResults.GetInt("GoldenAgeGreatMusicianRateModifier");

	push	OFFSET $SG223070
	mov	ecx, edi
	mov	DWORD PTR [esi+404], eax
	call	ebp

; 1145 : 	m_iGoldenAgeGreatWriterRateModifier		= kResults.GetInt("GoldenAgeGreatWriterRateModifier");

	push	OFFSET $SG223071
	mov	ecx, edi
	mov	DWORD PTR [esi+408], eax
	call	ebp

; 1146 : 	m_iExtraEmbarkMoves						= kResults.GetInt("ExtraEmbarkMoves");

	push	OFFSET $SG223072
	mov	ecx, edi
	mov	DWORD PTR [esi+412], eax
	call	ebp
	mov	DWORD PTR [esi+424], eax

; 1147 : 	m_iNaturalWonderFirstFinderGold         = kResults.GetInt("NaturalWonderFirstFinderGold");

	push	OFFSET $SG223073
	mov	ecx, edi
	call	ebp

; 1148 : 	m_iNaturalWonderSubsequentFinderGold    = kResults.GetInt("NaturalWonderSubsequentFinderGold");

	push	OFFSET $SG223074
	mov	ecx, edi
	mov	DWORD PTR [esi+432], eax
	call	ebp

; 1149 : 
; 1150 : 	//EAP: Faith for the Natural wonder findor
; 1151 : 	m_iNaturalWonderFirstFinderFaith         = kResults.GetInt("NaturalWonderFirstFinderFaith");

	push	OFFSET $SG223075
	mov	ecx, edi
	mov	DWORD PTR [esi+436], eax
	call	ebp

; 1152 : 	m_iNaturalWonderSubsequentFinderFaith    = kResults.GetInt("NaturalWonderSubsequentFinderFaith");

	push	OFFSET $SG223076
	mov	ecx, edi
	mov	DWORD PTR [esi+440], eax
	call	ebp

; 1153 : 
; 1154 : 	m_iNaturalWonderYieldModifier           = kResults.GetInt("NaturalWonderYieldModifier");

	push	OFFSET $SG223077
	mov	ecx, edi
	mov	DWORD PTR [esi+444], eax
	call	ebp

; 1155 : 	m_iNaturalWonderHappinessModifier       = kResults.GetInt("NaturalWonderHappinessModifier");

	push	OFFSET $SG223078
	mov	ecx, edi
	mov	DWORD PTR [esi+448], eax
	call	ebp

; 1156 : 	m_iNearbyImprovementCombatBonus			= kResults.GetInt("NearbyImprovementCombatBonus");

	push	OFFSET $SG223079
	mov	ecx, edi
	mov	DWORD PTR [esi+452], eax
	call	ebp

; 1157 : 	m_iNearbyImprovementBonusRange			= kResults.GetInt("NearbyImprovementBonusRange");

	push	OFFSET $SG223080
	mov	ecx, edi
	mov	DWORD PTR [esi+456], eax
	call	ebp

; 1158 : 	m_iCultureBuildingYieldChange			= kResults.GetInt("CultureBuildingYieldChange");

	push	OFFSET $SG223081
	mov	ecx, edi
	mov	DWORD PTR [esi+460], eax
	call	ebp

; 1159 : 	m_iCombatBonusVsHigherTech				= kResults.GetInt("CombatBonusVsHigherTech");

	push	OFFSET $SG223082
	mov	ecx, edi
	mov	DWORD PTR [esi+464], eax
	call	ebp

; 1160 : 	m_iCombatBonusVsLargerCiv				= kResults.GetInt("CombatBonusVsLargerCiv");

	push	OFFSET $SG223083
	mov	ecx, edi
	mov	DWORD PTR [esi+468], eax
	call	ebp

; 1161 : 	m_iLandUnitMaintenanceModifier          = kResults.GetInt("LandUnitMaintenanceModifier");

	push	OFFSET $SG223084
	mov	ecx, edi
	mov	DWORD PTR [esi+472], eax
	call	ebp

; 1162 : 	m_iNavalUnitMaintenanceModifier         = kResults.GetInt("NavalUnitMaintenanceModifier");

	push	OFFSET $SG223085
	mov	ecx, edi
	mov	DWORD PTR [esi+476], eax
	call	ebp

; 1163 : 	m_iRazeSpeedModifier					= kResults.GetInt("RazeSpeedModifier");

	push	OFFSET $SG223086
	mov	ecx, edi
	mov	DWORD PTR [esi+480], eax
	call	ebp

; 1164 : 	m_iDOFGreatPersonModifier				= kResults.GetInt("DOFGreatPersonModifier");

	push	OFFSET $SG223087
	mov	ecx, edi
	mov	DWORD PTR [esi+484], eax
	call	ebp

; 1165 : 	m_iLuxuryHappinessRetention				= kResults.GetInt("LuxuryHappinessRetention");

	push	OFFSET $SG223088
	mov	ecx, edi
	mov	DWORD PTR [esi+488], eax
	call	ebp

; 1166 : 	m_iExtraHappinessPerLuxury				= kResults.GetInt("ExtraHappinessPerLuxury"); // NQMP GJS - New Netherlands UA

	push	OFFSET $SG223089
	mov	ecx, edi
	mov	DWORD PTR [esi+492], eax
	call	ebp

; 1167 : 	m_iExtraSpies							= kResults.GetInt("ExtraSpies");

	push	OFFSET $SG223090
	mov	ecx, edi
	mov	DWORD PTR [esi+496], eax
	call	ebp

; 1168 : 	m_iHappinessPerReligion					= kResults.GetInt("HappinessPerReligion"); // NQMP GJS - New Ottoman UA

	push	OFFSET $SG223091
	mov	ecx, edi
	mov	DWORD PTR [esi+500], eax
	call	ebp

; 1169 : 	m_iUnresearchedTechBonusFromKills		= kResults.GetInt("UnresearchedTechBonusFromKills");

	push	OFFSET $SG223092
	mov	ecx, edi
	mov	DWORD PTR [esi+504], eax
	call	ebp
	mov	DWORD PTR [esi+508], eax

; 1170 : 	m_iExtraFoundedCityTerritoryClaimRange  = kResults.GetInt("ExtraFoundedCityTerritoryClaimRange");

	push	OFFSET $SG223093
	mov	ecx, edi
	call	ebp

; 1171 : 	m_iFreeSocialPoliciesPerEra				= kResults.GetInt("FreeSocialPoliciesPerEra");

	push	OFFSET $SG223094
	mov	ecx, edi
	mov	DWORD PTR [esi+512], eax
	call	ebp

; 1172 : 	m_iNumTradeRoutesModifier				= kResults.GetInt("NumTradeRoutesModifier");

	push	OFFSET $SG223095
	mov	ecx, edi
	mov	DWORD PTR [esi+516], eax
	call	ebp

; 1173 : 	m_iTradeRouteResourceModifier			= kResults.GetInt("TradeRouteResourceModifier");

	push	OFFSET $SG223096
	mov	ecx, edi
	mov	DWORD PTR [esi+520], eax
	call	ebp

; 1174 : 	m_iUniqueLuxuryCities					= kResults.GetInt("UniqueLuxuryCities");

	push	OFFSET $SG223097
	mov	ecx, edi
	mov	DWORD PTR [esi+524], eax
	call	ebp

; 1175 : 	m_iUniqueLuxuryQuantity					= kResults.GetInt("UniqueLuxuryQuantity");

	push	OFFSET $SG223098
	mov	ecx, edi
	mov	DWORD PTR [esi+528], eax
	call	ebp

; 1176 : 	m_iWorkerSpeedModifier					= kResults.GetInt("WorkerSpeedModifier");

	push	OFFSET $SG223099
	mov	ecx, edi
	mov	DWORD PTR [esi+532], eax
	call	ebp

; 1177 : 	m_iAfraidMinorPerTurnInfluence			= kResults.GetInt("AfraidMinorPerTurnInfluence");

	push	OFFSET $SG223100
	mov	ecx, edi
	mov	DWORD PTR [esi+536], eax
	call	ebp

; 1178 : 	m_iLandTradeRouteRangeBonus				= kResults.GetInt("LandTradeRouteRangeBonus");

	push	OFFSET $SG223101
	mov	ecx, edi
	mov	DWORD PTR [esi+540], eax
	call	ebp

; 1179 : 	m_iTradeReligionModifier				= kResults.GetInt("TradeReligionModifier");

	push	OFFSET $SG223102
	mov	ecx, edi
	mov	DWORD PTR [esi+544], eax
	call	ebp

; 1180 : 	m_iTradeBuildingModifier				= kResults.GetInt("TradeBuildingModifier");

	push	OFFSET $SG223103
	mov	ecx, edi
	mov	DWORD PTR [esi+548], eax
	call	ebp

; 1181 : 
; 1182 : 	const char* szTextVal = NULL;
; 1183 : 	szTextVal = kResults.GetText("FreeUnit");

	push	OFFSET $SG223105
	mov	ecx, edi
	mov	DWORD PTR [esi+552], eax
	call	ebx

; 1184 : 	if(szTextVal)

	test	eax, eax
	je	SHORT $LN49@CacheResul

; 1185 : 	{
; 1186 : 		m_iFreeUnitClassType = GC.getInfoTypeForString(szTextVal, true);

	push	1
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [esi+428], eax
$LN49@CacheResul:

; 1187 : 	}
; 1188 : 
; 1189 : 	szTextVal = kResults.GetText("FreeUnitPrereqTech");

	push	OFFSET $SG223107
	mov	ecx, edi
	call	ebx

; 1190 : 	if(szTextVal)

	test	eax, eax
	je	SHORT $LN48@CacheResul

; 1191 : 	{
; 1192 : 		m_eFreeUnitPrereqTech = (TechTypes)GC.getInfoTypeForString(szTextVal, true);

	push	1
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [esi+556], eax
$LN48@CacheResul:

; 1193 : 	}
; 1194 : 
; 1195 : 	//// CMP DLL THING
; 1196 : 
; 1197 : 	szTextVal = kResults.GetText("FreeBuildingPrereqTech");

	push	OFFSET $SG223110
	mov	ecx, edi
	call	ebx

; 1198 : 	if(szTextVal)

	test	eax, eax
	je	SHORT $LN47@CacheResul

; 1199 : 	{
; 1200 : 		m_eFreeBuildingPrereqTech = (TechTypes)GC.getInfoTypeForString(szTextVal, true);

	push	1
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [esi+572], eax
$LN47@CacheResul:

; 1201 : 	}
; 1202 : 	szTextVal = kResults.GetText("CapitalFreeBuildingPrereqTech");

	push	OFFSET $SG223113
	mov	ecx, edi
	call	ebx

; 1203 : 	if(szTextVal)

	test	eax, eax
	je	SHORT $LN46@CacheResul

; 1204 : 	{
; 1205 : 		m_eCapitalFreeBuildingPrereqTech = (TechTypes)GC.getInfoTypeForString(szTextVal, true);

	push	1
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [esi+576], eax
$LN46@CacheResul:

; 1206 : 	}
; 1207 : 
; 1208 : 	///
; 1209 : 
; 1210 : 
; 1211 : 	szTextVal = kResults.GetText("CombatBonusImprovement");

	push	OFFSET $SG223116
	mov	ecx, edi
	call	ebx

; 1212 : 	if(szTextVal)

	test	eax, eax
	je	SHORT $LN45@CacheResul

; 1213 : 	{
; 1214 : 		m_eCombatBonusImprovement = (ImprovementTypes)GC.getInfoTypeForString(szTextVal, true);

	push	1
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [esi+560], eax
$LN45@CacheResul:

; 1215 : 	}
; 1216 : 
; 1217 : 	szTextVal = kResults.GetText("ObsoleteTech");

	push	OFFSET $SG223119
	mov	ecx, edi
	call	ebx

; 1218 : 	if(szTextVal)

	test	eax, eax
	je	SHORT $LN44@CacheResul

; 1219 : 	{
; 1220 : 		m_iObsoleteTech = GC.getInfoTypeForString(szTextVal, true);

	push	1
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [esi+416], eax
$LN44@CacheResul:

; 1221 : 	}
; 1222 : 
; 1223 : 	szTextVal = kResults.GetText("PrereqTech");

	push	OFFSET $SG223121
	mov	ecx, edi
	call	ebx

; 1224 : 	if(szTextVal)

	test	eax, eax
	je	SHORT $LN43@CacheResul

; 1225 : 	{
; 1226 : 		m_iPrereqTech = GC.getInfoTypeForString(szTextVal, true);

	push	1
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [esi+420], eax
$LN43@CacheResul:

; 1227 : 	}
; 1228 : 
; 1229 : 	szTextVal = kResults.GetText("FreeBuilding");

	push	OFFSET $SG223123
	mov	ecx, edi
	call	ebx

; 1230 : 	if(szTextVal)

	test	eax, eax
	je	SHORT $LN42@CacheResul

; 1231 : 	{
; 1232 : 		m_eFreeBuilding = (BuildingTypes)GC.getInfoTypeForString(szTextVal, true);

	push	1
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [esi+564], eax
$LN42@CacheResul:

; 1233 : 	}
; 1234 : 
; 1235 : 	szTextVal = kResults.GetText("FreeCapitalBuilding");

	push	OFFSET $SG223126
	mov	ecx, edi
	call	ebx

; 1236 : 	if(szTextVal)

	test	eax, eax
	je	SHORT $LN41@CacheResul

; 1237 : 	{
; 1238 : 		m_eFreeCapitalBuilding = (BuildingTypes)GC.getInfoTypeForString(szTextVal, true);

	push	1
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [esi+568], eax
$LN41@CacheResul:

; 1239 : 	}
; 1240 : 
; 1241 : 	szTextVal = kResults.GetText("FreeBuildingOnConquest");

	push	OFFSET $SG223129
	mov	ecx, edi
	call	ebx

; 1242 : 	if(szTextVal)

	test	eax, eax
	je	SHORT $LN40@CacheResul

; 1243 : 	{
; 1244 : 		m_eFreeBuildingOnConquest = (BuildingTypes)GC.getInfoTypeForString(szTextVal, true);

	push	1
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [esi+580], eax
$LN40@CacheResul:

; 1245 : 	}
; 1246 : 
; 1247 : 	m_bFightWellDamaged = kResults.GetBool("FightWellDamaged");

	mov	ebx, DWORD PTR __imp_?GetBool@Results@Database@@QAE_NPBD@Z
	push	OFFSET $SG223132
	mov	ecx, edi
	call	ebx

; 1248 : 	m_bMoveFriendlyWoodsAsRoad = kResults.GetBool("MoveFriendlyWoodsAsRoad");

	push	OFFSET $SG223133
	mov	ecx, edi
	mov	BYTE PTR [esi+584], al
	call	ebx

; 1249 : 	m_bFasterAlongRiver = kResults.GetBool("FasterAlongRiver");

	push	OFFSET $SG223134
	mov	ecx, edi
	mov	BYTE PTR [esi+585], al
	call	ebx

; 1250 : 	m_bFasterInHills = kResults.GetBool("FasterInHills");

	push	OFFSET $SG223135
	mov	ecx, edi
	mov	BYTE PTR [esi+586], al
	call	ebx

; 1251 : 	m_bEmbarkedAllWater = kResults.GetBool("EmbarkedAllWater");

	push	OFFSET $SG223136
	mov	ecx, edi
	mov	BYTE PTR [esi+587], al
	call	ebx

; 1252 : 	m_bEmbarkedToLandFlatCost = kResults.GetBool("EmbarkedToLandFlatCost");

	push	OFFSET $SG223137
	mov	ecx, edi
	mov	BYTE PTR [esi+588], al
	call	ebx

; 1253 : 	m_bNoHillsImprovementMaintenance = kResults.GetBool("NoHillsImprovementMaintenance");

	push	OFFSET $SG223138
	mov	ecx, edi
	mov	BYTE PTR [esi+589], al
	call	ebx

; 1254 : 	m_bTechBoostFromCapitalScienceBuildings = kResults.GetBool("TechBoostFromCapitalScienceBuildings");

	push	OFFSET $SG223139
	mov	ecx, edi
	mov	BYTE PTR [esi+590], al
	call	ebx

; 1255 : 	m_bStaysAliveZeroCities = kResults.GetBool("StaysAliveZeroCities");

	push	OFFSET $SG223140
	mov	ecx, edi
	mov	BYTE PTR [esi+591], al
	call	ebx

; 1256 : 	m_bFaithFromUnimprovedForest = kResults.GetBool("FaithFromUnimprovedForest");

	push	OFFSET $SG223141
	mov	ecx, edi
	mov	BYTE PTR [esi+592], al
	call	ebx

; 1257 : #ifdef NQ_UNIT_IMMUNE_TO_PLUNDER_FROM_TRAIT
; 1258 : 	m_bSeaTradeRoutesArePlunderImmune = kResults.GetBool("SeaTradeRoutesArePlunderImmune");

	push	OFFSET $SG223142
	mov	ecx, edi
	mov	BYTE PTR [esi+593], al
	call	ebx

; 1259 : #endif
; 1260 : 	m_bEarnsGreatPersonOnSlotOrGuild = kResults.GetBool("EarnsGreatPersonOnSlotOrGuild"); // NQMP GJS - New France UA

	push	OFFSET $SG223143
	mov	ecx, edi
	mov	BYTE PTR [esi+594], al
	call	ebx

; 1261 : 	m_bBonusReligiousBelief = kResults.GetBool("BonusReligiousBelief");

	push	OFFSET $SG223144
	mov	ecx, edi
	mov	BYTE PTR [esi+595], al
	call	ebx

; 1262 : 	m_bAbleToAnnexCityStates = kResults.GetBool("AbleToAnnexCityStates");

	push	OFFSET $SG223145
	mov	ecx, edi
	mov	BYTE PTR [esi+599], al
	call	ebx

; 1263 : 	m_bCrossesMountainsAfterGreatGeneral = kResults.GetBool("CrossesMountainsAfterGreatGeneral");

	push	OFFSET $SG223146
	mov	ecx, edi
	mov	BYTE PTR [esi+600], al
	call	ebx

; 1264 : 	m_bMayaCalendarBonuses = kResults.GetBool("MayaCalendarBonuses");

	push	OFFSET $SG223147
	mov	ecx, edi
	mov	BYTE PTR [esi+601], al
	call	ebx

; 1265 : 	m_bNoAnnexing = kResults.GetBool("NoAnnexing");

	push	OFFSET $SG223148
	mov	ecx, edi
	mov	BYTE PTR [esi+602], al
	call	ebx

; 1266 : 	m_bTechFromCityConquer = kResults.GetBool("TechFromCityConquer");

	push	OFFSET $SG223149
	mov	ecx, edi
	mov	BYTE PTR [esi+603], al
	call	ebx

; 1267 : 	m_bUniqueLuxuryRequiresNewArea = kResults.GetBool("UniqueLuxuryRequiresNewArea");

	push	OFFSET $SG223150
	mov	ecx, edi
	mov	BYTE PTR [esi+604], al
	call	ebx

; 1268 : 	m_bRiverTradeRoad = kResults.GetBool("RiverTradeRoad");

	push	OFFSET $SG223151
	mov	ecx, edi
	mov	BYTE PTR [esi+605], al
	call	ebx
	mov	BYTE PTR [esi+606], al

; 1269 : 	m_bAngerFreeIntrusionOfCityStates = kResults.GetBool("AngerFreeIntrusionOfCityStates");

	push	OFFSET $SG223152
	mov	ecx, edi
	call	ebx

; 1270 : 
; 1271 : 	//Arrays
; 1272 : 	const char* szTraitType = GetType();

	lea	ecx, DWORD PTR [esi+176]
	mov	BYTE PTR [esi+607], al
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 1273 : 	kUtility.SetYields(m_paiExtraYieldThreshold, "Trait_ExtraYieldThresholds", "TraitType", szTraitType);

	mov	edi, DWORD PTR _kUtility$[esp+108]
	mov	ebx, eax
	push	ebx
	push	OFFSET $SG223154
	push	OFFSET $SG223155
	lea	ecx, DWORD PTR [esi+636]
	push	ecx
	mov	ecx, edi
	mov	DWORD PTR _szTraitType$[esp+128], ebx
	call	?SetYields@CvDatabaseUtility@@QAE_NAAPAHPBD11@Z ; CvDatabaseUtility::SetYields

; 1274 : 
; 1275 : 	kUtility.SetYields(m_paiYieldChange, "Trait_YieldChanges", "TraitType", szTraitType);

	push	ebx
	push	OFFSET $SG223156
	push	OFFSET $SG223157
	lea	edx, DWORD PTR [esi+640]
	push	edx
	mov	ecx, edi
	call	?SetYields@CvDatabaseUtility@@QAE_NAAPAHPBD11@Z ; CvDatabaseUtility::SetYields

; 1276 : 	kUtility.SetYields(m_paiYieldChangeStrategicResources, "Trait_YieldChangesStrategicResources", "TraitType", szTraitType);

	push	ebx
	push	OFFSET $SG223158
	push	OFFSET $SG223159
	lea	eax, DWORD PTR [esi+644]
	push	eax
	mov	ecx, edi
	call	?SetYields@CvDatabaseUtility@@QAE_NAAPAHPBD11@Z ; CvDatabaseUtility::SetYields

; 1277 : 	kUtility.SetYields(m_paiYieldChangeLuxuryResources, "Trait_YieldChangesLuxuryResources", "TraitType", szTraitType); // NQMP GJS - New Netherlands UA

	push	ebx
	push	OFFSET $SG223160
	push	OFFSET $SG223161
	lea	ecx, DWORD PTR [esi+648]
	push	ecx
	mov	ecx, edi
	call	?SetYields@CvDatabaseUtility@@QAE_NAAPAHPBD11@Z ; CvDatabaseUtility::SetYields

; 1278 : 	kUtility.SetYields(m_paiYieldChangeNaturalWonder, "Trait_YieldChangesNaturalWonder", "TraitType", szTraitType);

	push	ebx
	push	OFFSET $SG223162
	push	OFFSET $SG223163
	lea	edx, DWORD PTR [esi+652]
	push	edx
	mov	ecx, edi
	call	?SetYields@CvDatabaseUtility@@QAE_NAAPAHPBD11@Z ; CvDatabaseUtility::SetYields

; 1279 : 	kUtility.SetYields(m_paiYieldChangePerTradePartner, "Trait_YieldChangesPerTradePartner", "TraitType", szTraitType);

	push	ebx
	push	OFFSET $SG223164
	push	OFFSET $SG223165
	lea	eax, DWORD PTR [esi+656]
	push	eax
	mov	ecx, edi
	call	?SetYields@CvDatabaseUtility@@QAE_NAAPAHPBD11@Z ; CvDatabaseUtility::SetYields

; 1280 : 	kUtility.SetYields(m_paiYieldChangeIncomingTradeRoute, "Trait_YieldChangesIncomingTradeRoute", "TraitType", szTraitType);

	push	ebx
	push	OFFSET $SG223166
	push	OFFSET $SG223167
	lea	ecx, DWORD PTR [esi+660]
	push	ecx
	mov	ecx, edi
	call	?SetYields@CvDatabaseUtility@@QAE_NAAPAHPBD11@Z ; CvDatabaseUtility::SetYields

; 1281 : 	kUtility.SetYields(m_paiYieldModifier, "Trait_YieldModifiers", "TraitType", szTraitType);

	push	ebx
	push	OFFSET $SG223168
	push	OFFSET $SG223169
	lea	edx, DWORD PTR [esi+664]
	push	edx
	mov	ecx, edi
	call	?SetYields@CvDatabaseUtility@@QAE_NAAPAHPBD11@Z ; CvDatabaseUtility::SetYields

; 1282 : 
; 1283 : 	const int iNumTerrains = GC.getNumTerrainInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumTerrainInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumTerrainInfos

; 1284 : 
; 1285 : 	//Trait_Terrains
; 1286 : 	{
; 1287 : 		kUtility.InitializeArray(m_piStrategicResourceQuantityModifier, iNumTerrains, 0);

	xor	ecx, ecx
	mov	ebx, eax
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	lea	ecx, DWORD PTR [ebx*4]
	push	ecx
	push	0
	mov	DWORD PTR [esi+668], eax
	push	eax
	call	_memset
	add	esp, 16					; 00000010H

; 1288 : 
; 1289 : 		std::string sqlKey = "Trait_Terrains";

	push	OFFSET $SG223177
	lea	ecx, DWORD PTR _sqlKey$223176[esp+116]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 1290 : 		Database::Results* pResults = kUtility.GetResults(sqlKey);

	lea	edx, DWORD PTR _sqlKey$223176[esp+112]
	push	edx
	mov	ecx, edi
	mov	DWORD PTR __$EHRec$[esp+124], 0
	call	?GetResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvDatabaseUtility::GetResults
	mov	edi, eax

; 1291 : 		if(pResults == NULL)

	test	edi, edi
	jne	SHORT $LN497@CacheResul

; 1292 : 		{
; 1293 : 			const char* szSQL = "select TraitType, Terrains.ID as TerrainID, StrategicResourceQuantityModifier from Trait_Terrains join Terrains on Terrains.Type = TerrainType where TraitType = ?";
; 1294 : 			pResults = kUtility.PrepareResults(sqlKey, szSQL);

	mov	ecx, DWORD PTR _kUtility$[esp+108]
	push	OFFSET $SG223181
	lea	eax, DWORD PTR _sqlKey$223176[esp+116]
	push	eax
	call	?PrepareResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CvDatabaseUtility::PrepareResults
	mov	edi, eax
$LN497@CacheResul:

; 1295 : 		}
; 1296 : 
; 1297 : 		pResults->Bind(1, szTraitType);

	mov	ecx, DWORD PTR _szTraitType$[esp+112]
	push	1
	push	ecx
	push	1
	mov	ecx, edi
	call	DWORD PTR __imp_?Bind@Results@Database@@QAE_NHPBD_N@Z

; 1298 : 
; 1299 : 		while(pResults->Step())

	mov	ebx, DWORD PTR __imp_?Step@Results@Database@@QAE_NXZ
	mov	ecx, edi
	call	ebx
	test	al, al
	je	SHORT $LN37@CacheResul
$LL38@CacheResul:

; 1300 : 		{
; 1301 : 			const int iTerrainID = pResults->GetInt("TerrainID");

	push	OFFSET $SG223186
	mov	ecx, edi
	call	ebp

; 1302 : 			CvAssert(iTerrainID > -1 && iTerrainID < iNumTerrains);
; 1303 : 
; 1304 : 			const int iStrategicResourceQuantityModifier = pResults->GetInt("StrategicResourceQuantityModifier");

	push	OFFSET $SG223188
	mov	ecx, edi
	mov	DWORD PTR _iTerrainID$223185[esp+112], eax
	call	ebp

; 1305 : 			m_piStrategicResourceQuantityModifier[iTerrainID] = iStrategicResourceQuantityModifier;

	mov	edx, DWORD PTR [esi+668]
	mov	ecx, DWORD PTR _iTerrainID$223185[esp+108]
	mov	DWORD PTR [edx+ecx*4], eax
	mov	ecx, edi
	call	ebx
	test	al, al
	jne	SHORT $LL38@CacheResul
$LN37@CacheResul:

; 1306 : 		}
; 1307 : 	}

	lea	ecx, DWORD PTR _sqlKey$223176[esp+112]
	mov	DWORD PTR __$EHRec$[esp+120], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1308 : 
; 1309 : 	//Populate m_FreePromotionUnitCombats
; 1310 : 	{
; 1311 : 		std::string sqlKey = "FreePromotionUnitCombats";

	push	OFFSET $SG223190
	lea	ecx, DWORD PTR _sqlKey$223189[esp+116]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 1312 : 		Database::Results* pResults = kUtility.GetResults(sqlKey);

	mov	edi, DWORD PTR _kUtility$[esp+108]
	lea	edx, DWORD PTR _sqlKey$223189[esp+112]
	push	edx
	mov	ecx, edi
	mov	DWORD PTR __$EHRec$[esp+124], 1
	call	?GetResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvDatabaseUtility::GetResults
	mov	ebp, eax

; 1313 : 		if(pResults == NULL)

	test	ebp, ebp
	jne	SHORT $LN36@CacheResul

; 1314 : 		{
; 1315 : 			const char* szSQL = "select UnitPromotions.ID, UnitCombatInfos.ID from Trait_FreePromotionUnitCombats, UnitPromotions, UnitCombatInfos where TraitType = ? and PromotionType = UnitPromotions.Type and UnitCombatType = UnitCombatInfos.Type";
; 1316 : 			pResults = kUtility.PrepareResults(sqlKey, szSQL);

	push	OFFSET $SG223194
	lea	eax, DWORD PTR _sqlKey$223189[esp+116]
	push	eax
	mov	ecx, edi
	call	?PrepareResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CvDatabaseUtility::PrepareResults
	mov	ebp, eax
$LN36@CacheResul:

; 1317 : 		}
; 1318 : 
; 1319 : 		pResults->Bind(1, szTraitType);

	mov	ecx, DWORD PTR _szTraitType$[esp+112]
	push	1
	push	ecx
	push	1
	mov	ecx, ebp
	call	DWORD PTR __imp_?Bind@Results@Database@@QAE_NHPBD_N@Z

; 1320 : 
; 1321 : 		while(pResults->Step())

	mov	ecx, ebp
	call	ebx
	mov	edi, DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z
	test	al, al
	je	SHORT $LN34@CacheResul
	npad	2
$LL35@CacheResul:

; 1322 : 		{
; 1323 : 			const int unitPromotionID = pResults->GetInt(0);

	push	0
	mov	ecx, ebp
	call	edi

; 1324 : 			const int unitCombatInfoID = pResults->GetInt(1);

	push	1
	mov	ecx, ebp
	mov	DWORD PTR _unitPromotionID$223198[esp+112], eax
	call	edi

; 1325 : 
; 1326 : 			m_FreePromotionUnitCombats.insert(std::pair<int, int>(unitPromotionID, unitCombatInfoID));

	mov	edx, DWORD PTR _unitPromotionID$223198[esp+108]
	mov	DWORD PTR $T263692[esp+116], eax
	lea	eax, DWORD PTR $T263692[esp+112]
	push	eax
	lea	ecx, DWORD PTR $T263748[esp+116]
	push	ecx
	lea	ecx, DWORD PTR [esi+696]
	mov	DWORD PTR $T263692[esp+120], edx
	call	?insert@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@_N@2@ABU?$pair@$$CBHH@2@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::insert
	mov	ecx, ebp
	call	ebx
	test	al, al
	jne	SHORT $LL35@CacheResul
$LN34@CacheResul:

; 1327 : 		}
; 1328 : 
; 1329 : 		pResults->Reset();

	mov	ecx, ebp
	call	DWORD PTR __imp_?Reset@Results@Database@@QAE_NXZ

; 1330 : 
; 1331 : 		//Trim extra memory off container since this is mostly read-only.
; 1332 : 		std::multimap<int,int>(m_FreePromotionUnitCombats).swap(m_FreePromotionUnitCombats);

	lea	ebp, DWORD PTR [esi+696]
	push	ebp
	lea	ecx, DWORD PTR $T263695[esp+116]
	call	??0?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE@ABV01@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >
	push	ebp
	lea	ecx, DWORD PTR $T263695[esp+116]
	mov	BYTE PTR __$EHRec$[esp+124], 2
	call	?swap@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAEXAAV12@@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::swap
	mov	eax, DWORD PTR $T263695[esp+116]
	mov	ecx, DWORD PTR [eax]
	push	eax
	push	ecx
	lea	edx, DWORD PTR $T263895[esp+116]
	push	edx
	lea	ecx, DWORD PTR $T263695[esp+124]
	mov	BYTE PTR __$EHRec$[esp+132], 1
	call	?erase@?$_Tree@V?$_Tmap_traits@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@$00@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<int,int,std::less<int>,std::allocator<std::pair<int const ,int> >,1> >::erase
	mov	eax, DWORD PTR $T263695[esp+116]
	push	eax
	call	??3@YAXPAX@Z				; operator delete

; 1333 : 
; 1334 : 		kUtility.PopulateArrayByValue(m_piResourceQuantityModifiers, "Resources", "Trait_ResourceQuantityModifiers", "ResourceType", "TraitType", szTraitType, "ResourceQuantityModifier");

	mov	ecx, DWORD PTR _szTraitType$[esp+116]
	mov	ebp, DWORD PTR _kUtility$[esp+112]
	add	esp, 4
	push	0
	push	0
	push	OFFSET $SG223274
	push	ecx
	push	OFFSET $SG223275
	push	OFFSET $SG223276
	push	OFFSET $SG223277
	push	OFFSET $SG223278
	lea	edx, DWORD PTR [esi+672]
	push	edx
	mov	ecx, ebp
	call	?PopulateArrayByValue@CvDatabaseUtility@@QAE_NAAPAHPBD11111HH@Z ; CvDatabaseUtility::PopulateArrayByValue

; 1335 : 	}

	lea	ecx, DWORD PTR _sqlKey$223189[esp+112]
	mov	DWORD PTR __$EHRec$[esp+120], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1336 : 
; 1337 : 	//Populate m_MovesChangeUnitCombats
; 1338 : 	{
; 1339 : 		const int iNumUnitCombatClasses = kUtility.MaxRows("UnitCombatInfos");

	push	OFFSET $SG223280
	mov	ecx, ebp
	call	?MaxRows@CvDatabaseUtility@@QAEHPBD@Z	; CvDatabaseUtility::MaxRows

; 1340 : 		kUtility.InitializeArray(m_piMovesChangeUnitCombats, iNumUnitCombatClasses, 0);

	xor	ecx, ecx
	mov	ebp, eax
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	lea	ecx, DWORD PTR [ebp*4]
	push	ecx
	push	0
	push	eax
	mov	DWORD PTR [esi+676], eax
	call	_memset
	add	esp, 16					; 00000010H

; 1341 : 
; 1342 : 		std::string sqlKey = "Trait_MovesChangeUnitCombats";

	push	OFFSET $SG223282
	lea	ecx, DWORD PTR _sqlKey$223281[esp+116]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 1343 : 		Database::Results* pResults = kUtility.GetResults(sqlKey);

	mov	ecx, DWORD PTR _kUtility$[esp+108]
	lea	edx, DWORD PTR _sqlKey$223281[esp+112]
	push	edx
	mov	DWORD PTR __$EHRec$[esp+124], 3
	call	?GetResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvDatabaseUtility::GetResults
	mov	ebp, eax

; 1344 : 		if(pResults == NULL)

	test	ebp, ebp
	jne	SHORT $LN33@CacheResul

; 1345 : 		{
; 1346 : 			const char* szSQL = "select UnitCombatInfos.ID, MovesChange from Trait_MovesChangeUnitCombats inner join UnitCombatInfos on UnitCombatInfos.Type = UnitCombatType where TraitType = ?;";
; 1347 : 			pResults = kUtility.PrepareResults(sqlKey, szSQL);

	mov	ecx, DWORD PTR _kUtility$[esp+108]
	push	OFFSET $SG223286
	lea	eax, DWORD PTR _sqlKey$223281[esp+116]
	push	eax
	call	?PrepareResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CvDatabaseUtility::PrepareResults
	mov	ebp, eax
$LN33@CacheResul:

; 1348 : 		}
; 1349 : 
; 1350 : 		pResults->Bind(1, szTraitType);

	mov	ecx, DWORD PTR _szTraitType$[esp+112]
	push	1
	push	ecx
	push	1
	mov	ecx, ebp
	call	DWORD PTR __imp_?Bind@Results@Database@@QAE_NHPBD_N@Z

; 1351 : 
; 1352 : 		while(pResults->Step())

	mov	ecx, ebp
	call	ebx
	test	al, al
	je	SHORT $LN31@CacheResul
$LL32@CacheResul:

; 1353 : 		{
; 1354 : 			const int iUnitCombatID = pResults->GetInt(0);

	push	0
	mov	ecx, ebp
	call	edi

; 1355 : 			CvAssert(iUnitCombatID > -1 && iUnitCombatID < iNumUnitCombatClasses);
; 1356 : 
; 1357 : 			const int iMovesChange = pResults->GetInt(1);

	push	1
	mov	ecx, ebp
	mov	DWORD PTR _iUnitCombatID$223290[esp+112], eax
	call	edi

; 1358 : 			m_piMovesChangeUnitCombats[iUnitCombatID] = iMovesChange;

	mov	edx, DWORD PTR [esi+676]
	mov	ecx, DWORD PTR _iUnitCombatID$223290[esp+108]
	mov	DWORD PTR [edx+ecx*4], eax
	mov	ecx, ebp
	call	ebx
	test	al, al
	jne	SHORT $LL32@CacheResul
$LN31@CacheResul:

; 1359 : 		}
; 1360 : 
; 1361 : 		pResults->Reset();

	mov	ecx, ebp
	call	DWORD PTR __imp_?Reset@Results@Database@@QAE_NXZ

; 1362 : 	}

	lea	ecx, DWORD PTR _sqlKey$223281[esp+112]
	mov	DWORD PTR __$EHRec$[esp+120], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1363 : 
; 1364 : 	//Populate m_MaintenanceModifierUnitCombats
; 1365 : 	{
; 1366 : 		const int iNumUnitCombatClasses = kUtility.MaxRows("UnitCombatInfos");

	mov	ecx, DWORD PTR _kUtility$[esp+108]
	push	OFFSET $SG223293
	call	?MaxRows@CvDatabaseUtility@@QAEHPBD@Z	; CvDatabaseUtility::MaxRows

; 1367 : 		kUtility.InitializeArray(m_piMaintenanceModifierUnitCombats, iNumUnitCombatClasses, 0);

	xor	ecx, ecx
	mov	ebp, eax
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	lea	ecx, DWORD PTR [ebp*4]
	push	ecx
	push	0
	push	eax
	mov	DWORD PTR [esi+680], eax
	call	_memset
	add	esp, 16					; 00000010H

; 1368 : 
; 1369 : 		std::string sqlKey = "Trait_MaintenanceModifierUnitCombats";

	push	OFFSET $SG223295
	lea	ecx, DWORD PTR _sqlKey$223294[esp+116]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 1370 : 		Database::Results* pResults = kUtility.GetResults(sqlKey);

	mov	ecx, DWORD PTR _kUtility$[esp+108]
	lea	edx, DWORD PTR _sqlKey$223294[esp+112]
	push	edx
	mov	DWORD PTR __$EHRec$[esp+124], 4
	call	?GetResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvDatabaseUtility::GetResults
	mov	ebp, eax

; 1371 : 		if(pResults == NULL)

	test	ebp, ebp
	jne	SHORT $LN30@CacheResul

; 1372 : 		{
; 1373 : 			const char* szSQL = "select UnitCombatInfos.ID, MaintenanceModifier from Trait_MaintenanceModifierUnitCombats inner join UnitCombatInfos on UnitCombatInfos.Type = UnitCombatType where TraitType = ?;";
; 1374 : 			pResults = kUtility.PrepareResults(sqlKey, szSQL);

	mov	ecx, DWORD PTR _kUtility$[esp+108]
	push	OFFSET $SG223299
	lea	eax, DWORD PTR _sqlKey$223294[esp+116]
	push	eax
	call	?PrepareResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CvDatabaseUtility::PrepareResults
	mov	ebp, eax
$LN30@CacheResul:

; 1375 : 		}
; 1376 : 
; 1377 : 		pResults->Bind(1, szTraitType);

	mov	ecx, DWORD PTR _szTraitType$[esp+112]
	push	1
	push	ecx
	push	1
	mov	ecx, ebp
	call	DWORD PTR __imp_?Bind@Results@Database@@QAE_NHPBD_N@Z

; 1378 : 
; 1379 : 		while(pResults->Step())

	mov	ecx, ebp
	call	ebx
	test	al, al
	je	SHORT $LN28@CacheResul
	npad	5
$LL29@CacheResul:

; 1380 : 		{
; 1381 : 			const int iUnitCombatID = pResults->GetInt(0);

	push	0
	mov	ecx, ebp
	call	edi

; 1382 : 			CvAssert(iUnitCombatID > -1 && iUnitCombatID < iNumUnitCombatClasses);
; 1383 : 
; 1384 : 			const int iMaintenanceModifier = pResults->GetInt(1);

	push	1
	mov	ecx, ebp
	mov	DWORD PTR _iUnitCombatID$223303[esp+112], eax
	call	edi

; 1385 : 			m_piMaintenanceModifierUnitCombats[iUnitCombatID] = iMaintenanceModifier;

	mov	edx, DWORD PTR [esi+680]
	mov	ecx, DWORD PTR _iUnitCombatID$223303[esp+108]
	mov	DWORD PTR [edx+ecx*4], eax
	mov	ecx, ebp
	call	ebx
	test	al, al
	jne	SHORT $LL29@CacheResul
$LN28@CacheResul:

; 1386 : 		}
; 1387 : 
; 1388 : 		pResults->Reset();

	mov	ecx, ebp
	call	DWORD PTR __imp_?Reset@Results@Database@@QAE_NXZ

; 1389 : 	}

	lea	ecx, DWORD PTR _sqlKey$223294[esp+112]
	mov	DWORD PTR __$EHRec$[esp+120], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1390 : 
; 1391 : 	//ImprovementYieldChanges
; 1392 : 	{
; 1393 : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 1394 : 		kUtility.Initialize2DArray(m_ppiImprovementYieldChanges.first, "Improvements", "Yields");
; 1395 : 		m_ppiImprovementYieldChanges.second = kUtility.MaxRows("Improvements");
; 1396 : #else
; 1397 : 		kUtility.Initialize2DArray(m_ppiImprovementYieldChanges, "Improvements", "Yields");

	mov	ebp, DWORD PTR _kUtility$[esp+108]
	push	0
	push	OFFSET $SG223305
	lea	eax, DWORD PTR [esi+684]
	push	OFFSET $SG223306
	push	eax
	mov	ecx, ebp
	call	?Initialize2DArray@CvDatabaseUtility@@QAE_NAAPAPAHPBD1H@Z ; CvDatabaseUtility::Initialize2DArray

; 1398 : #endif
; 1399 : 
; 1400 : 		std::string strKey("Trait_ImprovementYieldChanges");

	push	OFFSET $SG223308
	lea	ecx, DWORD PTR _strKey$223307[esp+116]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 1401 : 		Database::Results* pResults = kUtility.GetResults(strKey);

	lea	edx, DWORD PTR _strKey$223307[esp+112]
	push	edx
	mov	ecx, ebp
	mov	DWORD PTR __$EHRec$[esp+124], 5
	call	?GetResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvDatabaseUtility::GetResults
	mov	ebp, eax

; 1402 : 		if(pResults == NULL)

	test	ebp, ebp
	jne	SHORT $LN27@CacheResul

; 1403 : 		{
; 1404 : 			pResults = kUtility.PrepareResults(strKey, "select Improvements.ID as ImprovementID, Yields.ID as YieldID, Yield from Trait_ImprovementYieldChanges inner join Improvements on Improvements.Type = ImprovementType inner join Yields on Yields.Type = YieldType where TraitType = ?");

	mov	ecx, DWORD PTR _kUtility$[esp+108]
	push	OFFSET $SG223311
	lea	eax, DWORD PTR _strKey$223307[esp+116]
	push	eax
	call	?PrepareResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CvDatabaseUtility::PrepareResults
	mov	ebp, eax
$LN27@CacheResul:

; 1405 : 		}
; 1406 : 
; 1407 : 		pResults->Bind(1, szTraitType);

	mov	ecx, DWORD PTR _szTraitType$[esp+112]
	push	1
	push	ecx
	push	1
	mov	ecx, ebp
	call	DWORD PTR __imp_?Bind@Results@Database@@QAE_NHPBD_N@Z

; 1408 : 
; 1409 : 		while(pResults->Step())

	mov	ecx, ebp
	call	ebx
	test	al, al
	je	SHORT $LN25@CacheResul
$LL26@CacheResul:

; 1410 : 		{
; 1411 : 			const int ImprovementID = pResults->GetInt(0);

	push	0
	mov	ecx, ebp
	call	edi

; 1412 : 			const int YieldID = pResults->GetInt(1);

	push	1
	mov	ecx, ebp
	mov	DWORD PTR _ImprovementID$223315[esp+112], eax
	call	edi

; 1413 : 			const int yield = pResults->GetInt(2);

	push	2
	mov	ecx, ebp
	mov	DWORD PTR _YieldID$223316[esp+116], eax
	call	edi

; 1414 : 
; 1415 : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 1416 : 			m_ppiImprovementYieldChanges.first[ImprovementID][YieldID] = yield;
; 1417 : #else
; 1418 : 			m_ppiImprovementYieldChanges[ImprovementID][YieldID] = yield;

	mov	edx, DWORD PTR [esi+684]
	mov	ecx, DWORD PTR _ImprovementID$223315[esp+108]
	mov	edx, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _YieldID$223316[esp+112]
	mov	DWORD PTR [edx+ecx*4], eax
	mov	ecx, ebp
	call	ebx
	test	al, al
	jne	SHORT $LL26@CacheResul
$LN25@CacheResul:

; 1419 : #endif
; 1420 : 		}
; 1421 : 	}

	lea	ecx, DWORD PTR _strKey$223307[esp+112]
	mov	DWORD PTR __$EHRec$[esp+120], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1422 : 
; 1423 : 	//SpecialistYieldChanges
; 1424 : 	{
; 1425 : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 1426 : 		kUtility.Initialize2DArray(m_ppiSpecialistYieldChanges.first, "Specialists", "Yields");
; 1427 : 		m_ppiSpecialistYieldChanges.second = kUtility.MaxRows("Specialists");
; 1428 : #else
; 1429 : 		kUtility.Initialize2DArray(m_ppiSpecialistYieldChanges, "Specialists", "Yields");

	mov	ebp, DWORD PTR _kUtility$[esp+108]
	push	0
	push	OFFSET $SG223318
	lea	eax, DWORD PTR [esi+688]
	push	OFFSET $SG223319
	push	eax
	mov	ecx, ebp
	call	?Initialize2DArray@CvDatabaseUtility@@QAE_NAAPAPAHPBD1H@Z ; CvDatabaseUtility::Initialize2DArray

; 1430 : #endif
; 1431 : 
; 1432 : 
; 1433 : 		std::string strKey("Building_SpecialistYieldChanges");

	push	OFFSET $SG223321
	lea	ecx, DWORD PTR _strKey$223320[esp+116]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 1434 : 		Database::Results* pResults = kUtility.GetResults(strKey);

	lea	edx, DWORD PTR _strKey$223320[esp+112]
	push	edx
	mov	ecx, ebp
	mov	DWORD PTR __$EHRec$[esp+124], 6
	call	?GetResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvDatabaseUtility::GetResults
	mov	ebp, eax

; 1435 : 		if(pResults == NULL)

	test	ebp, ebp
	jne	SHORT $LN24@CacheResul

; 1436 : 		{
; 1437 : 			pResults = kUtility.PrepareResults(strKey, "select Specialists.ID as SpecialistID, Yields.ID as YieldID, Yield from Trait_SpecialistYieldChanges inner join Specialists on Specialists.Type = SpecialistType inner join Yields on Yields.Type = YieldType where TraitType = ?");

	mov	ecx, DWORD PTR _kUtility$[esp+108]
	push	OFFSET $SG223324
	lea	eax, DWORD PTR _strKey$223320[esp+116]
	push	eax
	call	?PrepareResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CvDatabaseUtility::PrepareResults
	mov	ebp, eax
$LN24@CacheResul:

; 1438 : 		}
; 1439 : 
; 1440 : 		pResults->Bind(1, szTraitType);

	mov	ecx, DWORD PTR _szTraitType$[esp+112]
	push	1
	push	ecx
	push	1
	mov	ecx, ebp
	call	DWORD PTR __imp_?Bind@Results@Database@@QAE_NHPBD_N@Z

; 1441 : 
; 1442 : 		while(pResults->Step())

	mov	ecx, ebp
	call	ebx
	test	al, al
	je	SHORT $LN22@CacheResul
$LL23@CacheResul:

; 1443 : 		{
; 1444 : 			const int SpecialistID = pResults->GetInt(0);

	push	0
	mov	ecx, ebp
	call	edi

; 1445 : 			const int YieldID = pResults->GetInt(1);

	push	1
	mov	ecx, ebp
	mov	DWORD PTR _SpecialistID$223328[esp+112], eax
	call	edi

; 1446 : 			const int yield = pResults->GetInt(2);

	push	2
	mov	ecx, ebp
	mov	DWORD PTR _YieldID$223329[esp+116], eax
	call	edi

; 1447 : 
; 1448 : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 1449 : 			m_ppiSpecialistYieldChanges.first[SpecialistID][YieldID] = yield;
; 1450 : #else
; 1451 : 			m_ppiSpecialistYieldChanges[SpecialistID][YieldID] = yield;

	mov	edx, DWORD PTR [esi+688]
	mov	ecx, DWORD PTR _SpecialistID$223328[esp+108]
	mov	edx, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _YieldID$223329[esp+112]
	mov	DWORD PTR [edx+ecx*4], eax
	mov	ecx, ebp
	call	ebx
	test	al, al
	jne	SHORT $LL23@CacheResul
$LN22@CacheResul:

; 1452 : #endif
; 1453 : 
; 1454 : 		}
; 1455 : 	}

	lea	ecx, DWORD PTR _strKey$223320[esp+112]
	mov	DWORD PTR __$EHRec$[esp+120], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1456 : 
; 1457 : #ifdef LEK_TRAIT_SPECIALIST_YIELD_MAX_ONE
; 1458 : 	//AnySpecificSpecialistYieldChanges
; 1459 : 	{
; 1460 : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 1461 : 		kUtility.Initialize2DArray(m_ppiAnySpecificSpecialistYieldChanges.first, "Specialists", "Yields");
; 1462 : 		m_ppiAnySpecificSpecialistYieldChanges.second = kUtility.MaxRows("Specialists");
; 1463 : #else
; 1464 : 		kUtility.Initialize2DArray(m_ppiAnySpecificSpecialistYieldChanges, "Specialists", "Yields");
; 1465 : #endif
; 1466 : 
; 1467 : 
; 1468 : 		std::string strKey("Building_SpecialistYieldChanges");
; 1469 : 		Database::Results* pResults = kUtility.GetResults(strKey);
; 1470 : 		if(pResults == NULL)
; 1471 : 		{
; 1472 : 			pResults = kUtility.PrepareResults(strKey, "select Specialists.ID as SpecialistID, Yields.ID as YieldID, Yield from Trait_AnySpecificSpecialistYieldChanges inner join Specialists on Specialists.Type = SpecialistType inner join Yields on Yields.Type = YieldType where TraitType = ?");
; 1473 : 		}
; 1474 : 
; 1475 : 		pResults->Bind(1, szTraitType);
; 1476 : 
; 1477 : 		while(pResults->Step())
; 1478 : 		{
; 1479 : 			const int SpecialistID = pResults->GetInt(0);
; 1480 : 			const int YieldID = pResults->GetInt(1);
; 1481 : 			const int yield = pResults->GetInt(2);
; 1482 : 
; 1483 : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 1484 : 			m_ppiAnySpecificSpecialistYieldChanges.first[SpecialistID][YieldID] = yield;
; 1485 : #else
; 1486 : 			m_ppiAnySpecificSpecialistYieldChanges[SpecialistID][YieldID] = yield;
; 1487 : #endif
; 1488 : 
; 1489 : 		}
; 1490 : 	}
; 1491 : #endif
; 1492 : 	//UnimprovedFeatureYieldChanges
; 1493 : 	{
; 1494 : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 1495 : 		kUtility.Initialize2DArray(m_ppiUnimprovedFeatureYieldChanges.first, "Features", "Yields");
; 1496 : 		m_ppiUnimprovedFeatureYieldChanges.second = kUtility.MaxRows("Features");
; 1497 : #else
; 1498 : 		kUtility.Initialize2DArray(m_ppiUnimprovedFeatureYieldChanges, "Features", "Yields");

	mov	ebp, DWORD PTR _kUtility$[esp+108]
	push	0
	push	OFFSET $SG223331
	lea	eax, DWORD PTR [esi+692]
	push	OFFSET $SG223332
	push	eax
	mov	ecx, ebp
	call	?Initialize2DArray@CvDatabaseUtility@@QAE_NAAPAPAHPBD1H@Z ; CvDatabaseUtility::Initialize2DArray

; 1499 : #endif
; 1500 : 
; 1501 : 		std::string strKey("Trait_UnimprovedFeatureYieldChanges");

	push	OFFSET $SG223334
	lea	ecx, DWORD PTR _strKey$223333[esp+116]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 1502 : 		Database::Results* pResults = kUtility.GetResults(strKey);

	lea	edx, DWORD PTR _strKey$223333[esp+112]
	push	edx
	mov	ecx, ebp
	mov	DWORD PTR __$EHRec$[esp+124], 7
	call	?GetResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvDatabaseUtility::GetResults
	mov	ebp, eax

; 1503 : 		if(pResults == NULL)

	test	ebp, ebp
	jne	SHORT $LN21@CacheResul

; 1504 : 		{
; 1505 : 			pResults = kUtility.PrepareResults(strKey, "select Features.ID as FeatureID, Yields.ID as YieldID, Yield from Trait_UnimprovedFeatureYieldChanges inner join Features on Features.Type = FeatureType inner join Yields on Yields.Type = YieldType where TraitType = ?");

	mov	ecx, DWORD PTR _kUtility$[esp+108]
	push	OFFSET $SG223337
	lea	eax, DWORD PTR _strKey$223333[esp+116]
	push	eax
	call	?PrepareResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CvDatabaseUtility::PrepareResults
	mov	ebp, eax
$LN21@CacheResul:

; 1506 : 		}
; 1507 : 
; 1508 : 		pResults->Bind(1, szTraitType);

	mov	ecx, DWORD PTR _szTraitType$[esp+112]
	push	1
	push	ecx
	push	1
	mov	ecx, ebp
	call	DWORD PTR __imp_?Bind@Results@Database@@QAE_NHPBD_N@Z

; 1509 : 
; 1510 : 		while(pResults->Step())

	mov	ecx, ebp
	call	ebx
	test	al, al
	je	SHORT $LN19@CacheResul
	npad	2
$LL20@CacheResul:

; 1511 : 		{
; 1512 : 			const int FeatureID = pResults->GetInt(0);

	push	0
	mov	ecx, ebp
	call	edi

; 1513 : 			const int YieldID = pResults->GetInt(1);

	push	1
	mov	ecx, ebp
	mov	DWORD PTR _FeatureID$223341[esp+112], eax
	call	edi

; 1514 : 			const int yield = pResults->GetInt(2);

	push	2
	mov	ecx, ebp
	mov	DWORD PTR _YieldID$223342[esp+116], eax
	call	edi

; 1515 : 
; 1516 : #ifdef AUI_DATABASE_UTILITY_PROPER_2D_ALLOCATION_AND_DESTRUCTION
; 1517 : 			m_ppiUnimprovedFeatureYieldChanges.first[FeatureID][YieldID] = yield;
; 1518 : #else
; 1519 : 			m_ppiUnimprovedFeatureYieldChanges[FeatureID][YieldID] = yield;

	mov	edx, DWORD PTR [esi+692]
	mov	ecx, DWORD PTR _FeatureID$223341[esp+108]
	mov	edx, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _YieldID$223342[esp+112]
	mov	DWORD PTR [edx+ecx*4], eax
	mov	ecx, ebp
	call	ebx
	test	al, al
	jne	SHORT $LL20@CacheResul
$LN19@CacheResul:

; 1520 : #endif
; 1521 : 		}
; 1522 : 	}

	lea	ecx, DWORD PTR _strKey$223333[esp+112]
	mov	DWORD PTR __$EHRec$[esp+120], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1523 : 
; 1524 : 	// NoTrain
; 1525 : 	{
; 1526 : #ifdef AUI_WARNING_FIXES
; 1527 : 		for (uint iUnitClassLoop = 0; iUnitClassLoop < GC.getNumUnitClassInfos(); iUnitClassLoop++)
; 1528 : #else
; 1529 : 		int iUnitClassLoop;
; 1530 : 		for (iUnitClassLoop = 0; iUnitClassLoop < GC.getNumUnitClassInfos(); iUnitClassLoop++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iUnitClassLoop$223344[esp+108], 0
	call	?getNumUnitClassInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitClassInfos
	test	eax, eax
	jle	SHORT $LN500@CacheResul
	lea	ebp, DWORD PTR [esi+724]
$LL18@CacheResul:

; 1531 : #endif
; 1532 : 		{
; 1533 : 			m_abNoTrainUnitClass.push_back(false);

	mov	eax, DWORD PTR [ebp]
	mov	ecx, DWORD PTR [ebp+8]
	xor	edx, edx
	test	eax, eax
	jbe	SHORT $LN154@CacheResul
	jge	SHORT $LN155@CacheResul
	mov	edx, eax
	neg	edx
	je	SHORT $LN155@CacheResul
	or	edx, -1
	sub	edx, eax
	shr	edx, 5
	add	edx, edx
	add	edx, edx
	mov	ebp, -4					; fffffffcH
	sub	ebp, edx
	add	ecx, ebp
	jmp	SHORT $LN505@CacheResul
$LN155@CacheResul:
	mov	edx, eax
	shr	edx, 5
	lea	ecx, DWORD PTR [ecx+edx*4]
$LN505@CacheResul:
	and	eax, 31					; 0000001fH
	mov	edx, eax
$LN154@CacheResul:
	push	0
	push	1
	push	edx
	push	ecx
	lea	ebp, DWORD PTR [esi+724]
	mov	ecx, ebp
	call	?_Insert_n@?$vector@_NV?$allocator@_N@std@@@std@@IAEXV?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@I_N@Z ; std::vector<bool,std::allocator<bool> >::_Insert_n
	inc	DWORD PTR _iUnitClassLoop$223344[esp+108]
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumUnitClassInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitClassInfos
	cmp	DWORD PTR _iUnitClassLoop$223344[esp+108], eax
	jl	SHORT $LL18@CacheResul
$LN500@CacheResul:

; 1534 : 		}
; 1535 : 
; 1536 : 		std::string strKey("Trait_NoTrain");

	push	OFFSET $SG223349
	lea	ecx, DWORD PTR _strKey$223348[esp+116]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 1537 : 		Database::Results* pResults = kUtility.GetResults(strKey);

	mov	ecx, DWORD PTR _kUtility$[esp+108]
	lea	eax, DWORD PTR _strKey$223348[esp+112]
	push	eax
	mov	DWORD PTR __$EHRec$[esp+124], 8
	call	?GetResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvDatabaseUtility::GetResults
	mov	ebp, eax
	mov	DWORD PTR _pResults$223350[esp+108], ebp

; 1538 : 		if (pResults == NULL)

	test	ebp, ebp
	jne	SHORT $LN15@CacheResul

; 1539 : 		{
; 1540 : 			pResults = kUtility.PrepareResults(strKey, "SELECT Traits.ID, UnitClasses.ID FROM Trait_NoTrain inner join Traits on Trait_NoTrain.TraitType = Traits.Type inner join UnitClasses on Trait_NoTrain.UnitClassType = UnitClasses.Type where TraitType = ?");

	push	OFFSET $SG223352
	lea	ecx, DWORD PTR _strKey$223348[esp+116]
	push	ecx
	mov	ecx, DWORD PTR _kUtility$[esp+116]
	call	?PrepareResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CvDatabaseUtility::PrepareResults
	mov	ebp, eax
	mov	DWORD PTR _pResults$223350[esp+108], eax
$LN15@CacheResul:

; 1541 : 		}
; 1542 : 
; 1543 : 		pResults->Bind(1, szTraitType);

	mov	edx, DWORD PTR _szTraitType$[esp+112]
	push	1
	push	edx
	push	1
	mov	ecx, ebp
	call	DWORD PTR __imp_?Bind@Results@Database@@QAE_NHPBD_N@Z

; 1544 : 
; 1545 : 		while (pResults->Step())

	mov	ecx, ebp
	call	ebx
	test	al, al
	je	SHORT $LN13@CacheResul
$LL14@CacheResul:

; 1546 : 		{
; 1547 : 			const int iUnitClass = pResults->GetInt(1);

	push	1
	mov	ecx, ebp
	call	edi

; 1548 : 			m_abNoTrainUnitClass[iUnitClass] = true;

	mov	edx, DWORD PTR [esi+732]
	xor	ecx, ecx
	test	eax, eax
	je	SHORT $LN224@CacheResul
	jge	SHORT $LN225@CacheResul
	mov	ecx, eax
	neg	ecx
	je	SHORT $LN225@CacheResul
	or	ecx, -1
	sub	ecx, eax
	shr	ecx, 5
	add	ecx, ecx
	add	ecx, ecx
	mov	ebp, -4					; fffffffcH
	sub	ebp, ecx
	add	edx, ebp
	mov	ebp, DWORD PTR _pResults$223350[esp+108]
	jmp	SHORT $LN506@CacheResul
$LN225@CacheResul:
	mov	ecx, eax
	shr	ecx, 5
	lea	edx, DWORD PTR [edx+ecx*4]
$LN506@CacheResul:
	and	eax, 31					; 0000001fH
	mov	ecx, eax
$LN224@CacheResul:
	mov	eax, 1
	shl	eax, cl
	mov	ecx, ebp
	or	DWORD PTR [edx], eax
	call	ebx
	test	al, al
	jne	SHORT $LL14@CacheResul
$LN13@CacheResul:

; 1549 : 		}
; 1550 : 	}

	lea	ecx, DWORD PTR _strKey$223348[esp+112]
	mov	DWORD PTR __$EHRec$[esp+120], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1551 : 
; 1552 : 
; 1553 : 	// EAP: NoBuild
; 1554 : 	{
; 1555 : 
; 1556 : 		int iImprovementLoop;
; 1557 : 		for(int iImprovementLoop = 0; iImprovementLoop < GC.getNumImprovementInfos(); iImprovementLoop++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iImprovementLoop$223359[esp+112], 0
	call	?getNumImprovementInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumImprovementInfos
	test	eax, eax
	jle	$LN10@CacheResul

; 1558 : 
; 1559 : 		{
; 1560 : 			m_abNoBuildImprovement.push_back(false);

	mov	BYTE PTR $T264866[esp+108], 0
	npad	5
$LL12@CacheResul:
	mov	eax, DWORD PTR [esi+744]
	mov	ecx, DWORD PTR [esi+752]
	lea	ebp, DWORD PTR [esi+744]
	xor	edx, edx
	test	eax, eax
	jbe	SHORT $LN501@CacheResul
	jge	SHORT $LN271@CacheResul
	mov	edx, eax
	neg	edx
	je	SHORT $LN271@CacheResul
	or	edx, -1
	sub	edx, eax
	shr	edx, 5
	add	edx, edx
	add	edx, edx
	mov	ebx, -4					; fffffffcH
	sub	ebx, edx
	add	ecx, ebx
	jmp	SHORT $LN507@CacheResul
$LN271@CacheResul:
	mov	edx, eax
	shr	edx, 5
	lea	ecx, DWORD PTR [ecx+edx*4]
$LN507@CacheResul:
	and	eax, 31					; 0000001fH
	mov	edx, eax
$LN501@CacheResul:
	push	1
	push	edx
	push	ecx
	mov	ecx, ebp
	call	?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@IAEIV?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@I@Z ; std::vector<bool,std::allocator<bool> >::_Insert_x
	mov	edx, DWORD PTR [ebp+8]
	lea	ecx, DWORD PTR [eax+1]
	xor	ebx, ebx
	mov	ebp, edx
	mov	DWORD PTR __Tmp$265148[esp+116], ebx
	test	ecx, ecx
	je	SHORT $LN498@CacheResul
	jge	SHORT $LN316@CacheResul
	mov	ebx, ecx
	neg	ebx
	je	SHORT $LN316@CacheResul
	or	ebx, -1
	sub	ebx, ecx
	shr	ebx, 5
	lea	ebx, DWORD PTR [ebx*4+4]
	sub	ebp, ebx
	jmp	SHORT $LN508@CacheResul
$LN316@CacheResul:
	mov	ebx, ecx
	shr	ebx, 5
	lea	ebp, DWORD PTR [edx+ebx*4]
$LN508@CacheResul:
	and	ecx, 31					; 0000001fH
	mov	DWORD PTR __Tmp$265148[esp+116], ecx
$LN498@CacheResul:
	xor	ecx, ecx
	test	eax, eax
	je	SHORT $LN499@CacheResul
	jge	SHORT $LN341@CacheResul
	mov	ecx, eax
	neg	ecx
	je	SHORT $LN341@CacheResul
	or	ecx, -1
	sub	ecx, eax
	shr	ecx, 5
	lea	ecx, DWORD PTR [ecx*4+4]
	sub	edx, ecx
	jmp	SHORT $LN509@CacheResul
$LN341@CacheResul:
	mov	ecx, eax
	shr	ecx, 5
	lea	edx, DWORD PTR [edx+ecx*4]
$LN509@CacheResul:
	and	eax, 31					; 0000001fH
	mov	ecx, eax
$LN499@CacheResul:
	lea	eax, DWORD PTR $T264866[esp+108]
	push	eax
	mov	eax, DWORD PTR __Tmp$265148[esp+120]
	push	eax
	push	ebp
	push	ecx
	push	edx
	call	??$_Fill@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@_N@std@@YAXV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@0AB_N@Z ; std::_Fill<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,bool>
	mov	ebx, DWORD PTR _iImprovementLoop$223359[esp+132]
	inc	ebx
	add	esp, 20					; 00000014H
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iImprovementLoop$223359[esp+112], ebx
	call	?getNumImprovementInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumImprovementInfos
	cmp	ebx, eax
	jl	$LL12@CacheResul

; 1551 : 
; 1552 : 
; 1553 : 	// EAP: NoBuild
; 1554 : 	{
; 1555 : 
; 1556 : 		int iImprovementLoop;
; 1557 : 		for(int iImprovementLoop = 0; iImprovementLoop < GC.getNumImprovementInfos(); iImprovementLoop++)

	mov	ebx, DWORD PTR __imp_?Step@Results@Database@@QAE_NXZ
$LN10@CacheResul:

; 1561 : 		}
; 1562 : 
; 1563 : 		std::string strKey("Trait_NoBuild");

	push	OFFSET $SG223364
	lea	ecx, DWORD PTR _strKey$223363[esp+116]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 1564 : 		Database::Results* pResults = kUtility.GetResults(strKey);

	lea	ecx, DWORD PTR _strKey$223363[esp+112]
	push	ecx
	mov	ecx, DWORD PTR _kUtility$[esp+112]
	mov	DWORD PTR __$EHRec$[esp+124], 9
	call	?GetResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvDatabaseUtility::GetResults
	mov	ebp, eax
	mov	DWORD PTR _pResults$223365[esp+108], ebp

; 1565 : 		if (pResults == NULL)

	test	ebp, ebp
	jne	SHORT $LN9@CacheResul

; 1566 : 		{
; 1567 : 			pResults = kUtility.PrepareResults(strKey, "SELECT Traits.ID, Improvements.ID FROM Trait_NoBuild inner join Traits on Trait_NoBuild.TraitType = Traits.Type inner join Improvements on Trait_NoBuild.ImprovementType = Improvements.Type where TraitType = ?");

	mov	ecx, DWORD PTR _kUtility$[esp+108]
	push	OFFSET $SG223367
	lea	edx, DWORD PTR _strKey$223363[esp+116]
	push	edx
	call	?PrepareResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CvDatabaseUtility::PrepareResults
	mov	ebp, eax
	mov	DWORD PTR _pResults$223365[esp+108], eax
$LN9@CacheResul:

; 1568 : 		}
; 1569 : 
; 1570 : 		pResults->Bind(1, szTraitType);

	mov	eax, DWORD PTR _szTraitType$[esp+112]
	push	1
	push	eax
	push	1
	mov	ecx, ebp
	call	DWORD PTR __imp_?Bind@Results@Database@@QAE_NHPBD_N@Z

; 1571 : 
; 1572 : 		while (pResults->Step())

	mov	ecx, ebp
	call	ebx
	test	al, al
	je	SHORT $LN502@CacheResul
$LL8@CacheResul:

; 1573 : 		{
; 1574 : 			const int iImprovementID = pResults->GetInt(1);

	push	1
	mov	ecx, ebp
	call	edi

; 1575 : 			m_abNoBuildImprovement[iImprovementID] = true;

	mov	edx, DWORD PTR [esi+752]
	xor	ecx, ecx
	test	eax, eax
	je	SHORT $LN394@CacheResul
	jge	SHORT $LN395@CacheResul
	mov	ecx, eax
	neg	ecx
	je	SHORT $LN395@CacheResul
	or	ecx, -1
	sub	ecx, eax
	shr	ecx, 5
	add	ecx, ecx
	add	ecx, ecx
	mov	ebp, -4					; fffffffcH
	sub	ebp, ecx
	add	edx, ebp
	mov	ebp, DWORD PTR _pResults$223365[esp+108]
	jmp	SHORT $LN510@CacheResul
$LN395@CacheResul:
	mov	ecx, eax
	shr	ecx, 5
	lea	edx, DWORD PTR [edx+ecx*4]
$LN510@CacheResul:
	and	eax, 31					; 0000001fH
	mov	ecx, eax
$LN394@CacheResul:
	mov	eax, 1
	shl	eax, cl
	mov	ecx, ebp
	or	DWORD PTR [edx], eax
	call	ebx
	test	al, al
	jne	SHORT $LL8@CacheResul
$LN502@CacheResul:

; 1576 : 		}
; 1577 : 	}

	lea	ecx, DWORD PTR _strKey$223363[esp+112]
	mov	DWORD PTR __$EHRec$[esp+120], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1578 : 	
; 1579 : 
; 1580 : 	// FreeResourceXCities
; 1581 : 	{
; 1582 : 		// Init vector
; 1583 : #ifdef AUI_WARNING_FIXES
; 1584 : 		for (uint iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)
; 1585 : #else
; 1586 : 		int iResourceLoop;
; 1587 : 		for(iResourceLoop = 0; iResourceLoop < GC.getNumResourceInfos(); iResourceLoop++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iResourceLoop$223373[esp+112], 0
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	test	eax, eax
	jle	$LN4@CacheResul

; 1588 : #endif
; 1589 : 		{
; 1590 : 			FreeResourceXCities temp;

	xor	eax, eax
	mov	DWORD PTR _temp$223377[esp+112], eax
	mov	DWORD PTR _temp$223377[esp+116], eax
	lea	ebp, DWORD PTR [esi+708]
	npad	1
$LL503@CacheResul:

; 1591 : 			m_aFreeResourceXCities.push_back(temp);

	mov	ecx, DWORD PTR [ebp+4]
	test	ecx, ecx
	jne	SHORT $LN429@CacheResul
	xor	eax, eax
	jmp	SHORT $LN430@CacheResul
$LN429@CacheResul:
	mov	eax, DWORD PTR [ebp+12]
	sub	eax, ecx
	sar	eax, 3
$LN430@CacheResul:
	mov	edx, DWORD PTR [ebp+8]
	mov	DWORD PTR tv3254[esp+108], edx
	sub	edx, ecx
	sar	edx, 3
	cmp	edx, eax
	lea	eax, DWORD PTR _temp$223377[esp+112]
	jae	SHORT $LN422@CacheResul
	mov	edx, DWORD PTR __Cat$265534[esp+108]
	mov	BYTE PTR $T265530[esp+112], 0
	mov	ecx, DWORD PTR $T265530[esp+112]
	push	ecx
	mov	ecx, DWORD PTR tv3254[esp+112]
	push	edx
	push	ebp
	push	eax
	push	1
	push	ecx
	call	??$_Uninit_fill_n@PAUFreeResourceXCities@@IU1@V?$allocator@UFreeResourceXCities@@@std@@@std@@YAXPAUFreeResourceXCities@@IABU1@AAV?$allocator@UFreeResourceXCities@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<FreeResourceXCities *,unsigned int,FreeResourceXCities,std::allocator<FreeResourceXCities> >
	mov	edx, DWORD PTR tv3254[esp+132]
	add	esp, 24					; 00000018H
	add	edx, 8
	mov	DWORD PTR [ebp+8], edx
	jmp	SHORT $LN5@CacheResul
$LN422@CacheResul:
	mov	ecx, DWORD PTR tv3254[esp+108]
	push	eax
	push	1
	push	ecx
	mov	ecx, ebp
	call	?_Insert_n@?$vector@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@std@@IAEXV?$_Vector_const_iterator@UFreeResourceXCities@@V?$allocator@UFreeResourceXCities@@@std@@@2@IABUFreeResourceXCities@@@Z ; std::vector<FreeResourceXCities,std::allocator<FreeResourceXCities> >::_Insert_n
$LN5@CacheResul:
	inc	DWORD PTR _iResourceLoop$223373[esp+112]
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	cmp	DWORD PTR _iResourceLoop$223373[esp+112], eax
	jl	SHORT $LL503@CacheResul
$LN4@CacheResul:

; 1592 : 		}
; 1593 : 
; 1594 : 		std::string strKey("Trait_FreeResourceFirstXCities");

	push	OFFSET $SG223379
	lea	ecx, DWORD PTR _strKey$223378[esp+116]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 1595 : 		Database::Results* pResults = kUtility.GetResults(strKey);

	mov	ecx, DWORD PTR _kUtility$[esp+108]
	lea	edx, DWORD PTR _strKey$223378[esp+112]
	push	edx
	mov	DWORD PTR __$EHRec$[esp+124], 10	; 0000000aH
	call	?GetResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvDatabaseUtility::GetResults
	mov	ebp, eax

; 1596 : 		if(pResults == NULL)

	test	ebp, ebp
	jne	SHORT $LN3@CacheResul

; 1597 : 		{
; 1598 : 			pResults = kUtility.PrepareResults(strKey, "select Resources.ID as ResourceID, ResourceQuantity, NumCities from Trait_FreeResourceFirstXCities inner join Resources on Resources.Type = ResourceType where TraitType = ?");

	mov	ecx, DWORD PTR _kUtility$[esp+108]
	push	OFFSET $SG223382
	lea	eax, DWORD PTR _strKey$223378[esp+116]
	push	eax
	call	?PrepareResults@CvDatabaseUtility@@QAEPAVResults@Database@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CvDatabaseUtility::PrepareResults
	mov	ebp, eax
$LN3@CacheResul:

; 1599 : 		}
; 1600 : 
; 1601 : 		pResults->Bind(1, szTraitType);

	mov	ecx, DWORD PTR _szTraitType$[esp+112]
	push	1
	push	ecx
	push	1
	mov	ecx, ebp
	call	DWORD PTR __imp_?Bind@Results@Database@@QAE_NHPBD_N@Z

; 1602 : 
; 1603 : 		while(pResults->Step())

	mov	ecx, ebp
	call	ebx
	test	al, al
	je	SHORT $LN1@CacheResul
$LL2@CacheResul:

; 1604 : 		{
; 1605 : 			FreeResourceXCities temp;
; 1606 : 
; 1607 : 			const int iResource = pResults->GetInt(0);

	push	0
	mov	ecx, ebp
	call	edi

; 1608 : 			temp.m_iResourceQuantity = pResults->GetInt(1);

	push	1
	mov	ecx, ebp
	mov	ebx, eax
	call	edi

; 1609 : 			temp.m_iNumCities = pResults->GetInt(2);

	push	2
	mov	ecx, ebp
	mov	DWORD PTR _temp$223386[esp+120], eax
	call	edi

; 1610 : 
; 1611 : 			m_aFreeResourceXCities[iResource] = temp;

	mov	ecx, DWORD PTR [esi+712]
	mov	edx, DWORD PTR _temp$223386[esp+116]
	mov	DWORD PTR [ecx+ebx*8], eax
	mov	DWORD PTR [ecx+ebx*8+4], edx
	mov	ecx, ebp
	call	DWORD PTR __imp_?Step@Results@Database@@QAE_NXZ
	test	al, al
	jne	SHORT $LL2@CacheResul
$LN1@CacheResul:

; 1612 : 		}
; 1613 : 	}

	lea	ecx, DWORD PTR _strKey$223378[esp+112]
	mov	DWORD PTR __$EHRec$[esp+120], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1614 : 
; 1615 : 	return true;
; 1616 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+112]
	pop	ebp
	pop	ebx
	pop	edi
	mov	al, 1
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 96					; 00000060H
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$0:
	lea	ecx, DWORD PTR _sqlKey$223176[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$1:
	lea	ecx, DWORD PTR _sqlKey$223189[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$2:
	lea	ecx, DWORD PTR $T263695[ebp]
	jmp	??1?$multimap@HHU?$less@H@std@@V?$allocator@U?$pair@$$CBHH@std@@@2@@std@@QAE@XZ
__unwindfunclet$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$3:
	lea	ecx, DWORD PTR _sqlKey$223281[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$4:
	lea	ecx, DWORD PTR _sqlKey$223294[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$5:
	lea	ecx, DWORD PTR _strKey$223307[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$6:
	lea	ecx, DWORD PTR _strKey$223320[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$7:
	lea	ecx, DWORD PTR _strKey$223333[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$8:
	lea	ecx, DWORD PTR _strKey$223348[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$9:
	lea	ecx, DWORD PTR _strKey$223363[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z$10:
	lea	ecx, DWORD PTR _strKey$223378[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CacheResults@CvTraitEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z ENDP ; CvTraitEntry::CacheResults
PUBLIC	?Init@CvPlayerTraits@@QAEXPAVCvTraitXMLEntries@@PAVCvPlayer@@@Z ; CvPlayerTraits::Init
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?Init@CvPlayerTraits@@QAEXPAVCvTraitXMLEntries@@PAVCvPlayer@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Init@CvPlayerTraits@@QAEXPAVCvTraitXMLEntries@@PAVCvPlayer@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Init@CvPlayerTraits@@QAEXPAVCvTraitXMLEntries@@PAVCvPlayer@@@Z$0
__ehfuncinfo$?Init@CvPlayerTraits@@QAEXPAVCvTraitXMLEntries@@PAVCvPlayer@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Init@CvPlayerTraits@@QAEXPAVCvTraitXMLEntries@@PAVCvPlayer@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.cpp
xdata$x	ENDS
;	COMDAT ?Init@CvPlayerTraits@@QAEXPAVCvTraitXMLEntries@@PAVCvPlayer@@@Z
_TEXT	SEGMENT
$T265628 = -32						; size = 20
__$EHRec$ = -12						; size = 12
$T266120 = 8						; size = 4
_pTraits$ = 8						; size = 4
_pPlayer$ = 12						; size = 4
?Init@CvPlayerTraits@@QAEXPAVCvTraitXMLEntries@@PAVCvPlayer@@@Z PROC ; CvPlayerTraits::Init, COMDAT
; _this$ = ecx

; 1678 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?Init@CvPlayerTraits@@QAEXPAVCvTraitXMLEntries@@PAVCvPlayer@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 1679 : 	// Store off the pointers to objects we'll need later
; 1680 : 	m_pTraits = pTraits;

	mov	eax, DWORD PTR _pTraits$[esp+8]
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	mov	esi, ecx

; 1681 : 	m_pPlayer = pPlayer;

	mov	ecx, DWORD PTR _pPlayer$[esp+36]
	mov	DWORD PTR [esi+4], ecx
	push	edi

; 1682 : 
; 1683 : 	Reset();

	mov	ecx, esi
	mov	DWORD PTR [esi], eax
	call	?Reset@CvPlayerTraits@@QAEXXZ		; CvPlayerTraits::Reset

; 1684 : 
; 1685 : 	// Initialize items that can't be reset everytime we earn a new tech (which resets all the other
; 1686 : 	// trait data that can rebuilt from the trait entries)
; 1687 : 	m_iBaktunPreviousTurn = 0;

	xor	ebx, ebx
	mov	DWORD PTR [esi+740], ebx

; 1688 : 	m_aMayaBonusChoices.clear();

	mov	edx, DWORD PTR [esi+772]
	mov	ecx, DWORD PTR [esi+768]
	cmp	ecx, edx
	je	SHORT $LN18@Init
	mov	eax, edx
	cmp	edx, edx
	je	SHORT $LN43@Init
	npad	1
$LL45@Init:
	mov	edi, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edi
	mov	edi, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edi
	add	eax, 8
	add	ecx, 8
	cmp	eax, edx
	jne	SHORT $LL45@Init
$LN43@Init:
	mov	DWORD PTR [esi+772], ecx
$LN18@Init:

; 1689 : 	m_iBaktun = 0;

	mov	DWORD PTR [esi+744], ebx

; 1690 : 	m_iKatun = 0;

	mov	DWORD PTR [esi+748], ebx

; 1691 : 	m_iTun = 0;

	mov	DWORD PTR [esi+752], ebx

; 1692 : 	m_iWinal = 0;

	mov	DWORD PTR [esi+756], ebx

; 1693 : 	m_iKin = 0;

	mov	DWORD PTR [esi+760], ebx

; 1694 : 
; 1695 : 	m_aUniqueLuxuryAreas.clear();

	mov	ecx, DWORD PTR [esi+732]
	mov	edi, DWORD PTR [esi+728]
	cmp	edi, ecx
	je	SHORT $LN62@Init
	mov	eax, ecx
	sub	eax, ecx
	sar	eax, 2
	cmp	eax, ebx
	lea	edx, DWORD PTR [eax*4]
	push	ebp
	lea	ebp, DWORD PTR [edx+edi]
	jle	SHORT $LN87@Init
	push	edx
	push	ecx
	push	edx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN87@Init:
	mov	DWORD PTR [esi+732], ebp
	pop	ebp
$LN62@Init:

; 1696 : 	m_iUniqueLuxuryCitiesPlaced = 0;
; 1697 : 
; 1698 : 	m_vLeaderHasTrait = std::vector<bool>( GC.getNumTraitInfos(), false );

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR [esi+308], ebx
	call	?getNumTraitInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumTraitInfos
	mov	edi, eax
	lea	edx, DWORD PTR $T266120[esp+40]
	lea	eax, DWORD PTR [edi+31]
	push	edx
	shr	eax, 5
	push	eax
	lea	ecx, DWORD PTR $T265628[esp+56]
	mov	DWORD PTR $T265628[esp+52], ebx
	mov	DWORD PTR $T266120[esp+48], ebx
	call	?_Construct_n@?$vector@IV?$allocator@I@std@@@std@@QAEXIABI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Construct_n
	push	edi
	lea	ecx, DWORD PTR $T265628[esp+48]
	mov	DWORD PTR __$EHRec$[esp+56], ebx
	call	?_Trim@?$vector@_NV?$allocator@_N@std@@@std@@IAEXI@Z ; std::vector<bool,std::allocator<bool> >::_Trim
	mov	ecx, DWORD PTR $T265628[esp+44]
	lea	edx, DWORD PTR $T265628[esp+48]
	mov	DWORD PTR [esi+8], ecx
	push	edx
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR __$EHRec$[esp+56], 1
	call	??4?$vector@IV?$allocator@I@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::operator=
	mov	eax, DWORD PTR $T265628[esp+52]
	pop	edi
	pop	esi
	cmp	eax, ebx
	pop	ebx
	je	SHORT $LN122@Init
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN122@Init:

; 1699 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR fs:0, ecx
	add	esp, 32					; 00000020H
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Init@CvPlayerTraits@@QAEXPAVCvTraitXMLEntries@@PAVCvPlayer@@@Z$1:
	lea	ecx, DWORD PTR $T265628[ebp+4]
	jmp	??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >
__unwindfunclet$?Init@CvPlayerTraits@@QAEXPAVCvTraitXMLEntries@@PAVCvPlayer@@@Z$0:
	lea	ecx, DWORD PTR $T265628[ebp]
	jmp	??1?$vector@_NV?$allocator@_N@std@@@std@@QAE@XZ ; std::vector<bool,std::allocator<bool> >::~vector<bool,std::allocator<bool> >
__ehhandler$?Init@CvPlayerTraits@@QAEXPAVCvTraitXMLEntries@@PAVCvPlayer@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?Init@CvPlayerTraits@@QAEXPAVCvTraitXMLEntries@@PAVCvPlayer@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Init@CvPlayerTraits@@QAEXPAVCvTraitXMLEntries@@PAVCvPlayer@@@Z ENDP ; CvPlayerTraits::Init
PUBLIC	?Read@CvPlayerTraits@@QAEXAAVFDataStream@@@Z	; CvPlayerTraits::Read
EXTRN	??5@YAAAVFDataStream@@AAV0@AAW4TechTypes@@@Z:PROC ; operator>>
EXTRN	??5@YAAAVFDataStream@@AAV0@AAW4ImprovementTypes@@@Z:PROC ; operator>>
EXTRN	??5@YAAAVFDataStream@@AAV0@AAW4UnitTypes@@@Z:PROC ; operator>>
; Function compile flags: /Ogtpy
;	COMDAT ?Read@CvPlayerTraits@@QAEXAAVFDataStream@@@Z
_TEXT	SEGMENT
$T269198 = -36						; size = 1
$T268257 = -36						; size = 1
_uiVersion$ = -32					; size = 4
_iNumEntries$ = -28					; size = 4
$T267420 = -24						; size = 1
__Tmp$266689 = -24					; size = 8
_i$224451 = -24						; size = 4
_i$224446 = -24						; size = 4
_choice$ = -16						; size = 8
__Tmp$269404 = -8					; size = 8
__Tmp$268523 = -8					; size = 8
$T268758 = -8						; size = 8
$T267817 = -8						; size = 8
_trait$224460 = -8					; size = 8
__Cat$267423 = 8					; size = 1
$T269887 = 8						; size = 4
$T269877 = 8						; size = 4
_iAreaID$224484 = 8					; size = 4
_bValue$224455 = 8					; size = 1
_bValue$224450 = 8					; size = 1
_iI$224363 = 8						; size = 4
$T266200 = 8						; size = 4
_kStream$ = 8						; size = 4
?Read@CvPlayerTraits@@QAEXAAVFDataStream@@@Z PROC	; CvPlayerTraits::Read, COMDAT
; _this$ = ecx

; 3171 : {

	sub	esp, 36					; 00000024H
	push	ebx
	push	ebp
	push	esi
	push	edi

; 3172 : 	int iNumEntries;
; 3173 : 
; 3174 : 	// Version number to maintain backwards compatibility
; 3175 : 	uint uiVersion;
; 3176 : 	kStream >> uiVersion;

	mov	edi, DWORD PTR _kStream$[esp+48]
	lea	eax, DWORD PTR _uiVersion$[esp+52]
	mov	esi, ecx
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 3177 : 
; 3178 : 	// precompute the traits our leader has
; 3179 : 	m_vPotentiallyActiveLeaderTraits.clear();

	mov	eax, DWORD PTR [esi+36]
	mov	edx, DWORD PTR [esi+32]
	lea	ebx, DWORD PTR [esi+28]
	cmp	edx, eax
	je	SHORT $LN92@Read
	mov	ecx, eax
	cmp	eax, eax
	je	SHORT $LN117@Read
	npad	4
$LL119@Read:
	mov	ebp, DWORD PTR [ecx]
	mov	DWORD PTR [edx], ebp
	add	ecx, 4
	add	edx, 4
	cmp	ecx, eax
	jne	SHORT $LL119@Read
$LN117@Read:
	mov	DWORD PTR [ebx+8], edx
$LN92@Read:

; 3180 : 	for(int iI = 0; iI < GC.getNumTraitInfos(); iI++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	ebp, ebp
	call	?getNumTraitInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumTraitInfos
	test	eax, eax
	jle	$LN71@Read
$LL1250@Read:

; 3181 : 	{
; 3182 : 		m_vLeaderHasTrait[iI] = false;

	mov	eax, DWORD PTR [esi+16]
	xor	ecx, ecx
	test	ebp, ebp
	je	SHORT $LN142@Read
	jge	SHORT $LN143@Read
	mov	ecx, ebp
	neg	ecx
	je	SHORT $LN143@Read
	or	edx, -1
	sub	edx, ebp
	shr	edx, 5
	add	edx, edx
	add	edx, edx
	mov	ecx, -4					; fffffffcH
	sub	ecx, edx
	add	eax, ecx
	jmp	SHORT $LN1251@Read
$LN143@Read:
	mov	edx, ebp
	shr	edx, 5
	lea	eax, DWORD PTR [eax+edx*4]
$LN1251@Read:
	mov	ecx, ebp
	and	ecx, 31					; 0000001fH
$LN142@Read:
	mov	edx, 1
	shl	edx, cl
	not	edx
	and	DWORD PTR [eax], edx

; 3183 : 		if (m_pPlayer && m_pPlayer->isMajorCiv() && m_pPlayer->isAlive() && m_pPlayer->getLeaderInfo().hasTrait( (TraitTypes)iI ))

	mov	ecx, DWORD PTR [esi+4]
	test	ecx, ecx
	je	SHORT $LN72@Read
	call	?isMajorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMajorCiv
	test	al, al
	je	SHORT $LN72@Read
	mov	ecx, DWORD PTR [esi+4]
	cmp	BYTE PTR [ecx+2256], 0
	je	SHORT $LN72@Read
	push	ebp
	call	?getLeaderInfo@CvPlayer@@QBEAAVCvLeaderHeadInfo@@XZ ; CvPlayer::getLeaderInfo
	mov	ecx, eax
	call	?hasTrait@CvLeaderHeadInfo@@QBE_NH@Z	; CvLeaderHeadInfo::hasTrait
	test	al, al
	je	SHORT $LN72@Read

; 3184 : 		{
; 3185 : 			m_vLeaderHasTrait[iI] = true;

	mov	eax, DWORD PTR [esi+16]
	xor	ecx, ecx
	mov	DWORD PTR __Tmp$266689[esp+56], ecx
	push	ebp
	lea	ecx, DWORD PTR __Tmp$266689[esp+56]
	mov	DWORD PTR __Tmp$266689[esp+56], eax
	call	??Y?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vb_const_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >::operator+=
	mov	ecx, DWORD PTR __Tmp$266689[esp+56]
	mov	eax, DWORD PTR __Tmp$266689[esp+52]
	mov	edx, 1
	shl	edx, cl

; 3186 : 			m_vPotentiallyActiveLeaderTraits.push_back( (TraitTypes)iI );

	mov	ecx, ebx
	mov	DWORD PTR $T266200[esp+48], ebp
	or	DWORD PTR [eax], edx
	lea	eax, DWORD PTR $T266200[esp+48]
	push	eax
	call	?push_back@?$vector@W4TraitTypes@@V?$allocator@W4TraitTypes@@@std@@@std@@QAEXABW4TraitTypes@@@Z ; std::vector<enum TraitTypes,std::allocator<enum TraitTypes> >::push_back
$LN72@Read:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	ebp
	call	?getNumTraitInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumTraitInfos
	cmp	ebp, eax
	jl	$LL1250@Read
$LN71@Read:

; 3187 : 		}
; 3188 : 	}
; 3189 : 
; 3190 : 	kStream >> m_iGreatPeopleRateModifier;

	lea	ecx, DWORD PTR [esi+44]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3191 : 	kStream >> m_iGreatScientistRateModifier;

	lea	edx, DWORD PTR [esi+48]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3192 : 	kStream >> m_iGreatGeneralRateModifier;

	lea	eax, DWORD PTR [esi+52]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3193 : 	kStream >> m_iGreatGeneralExtraBonus;

	lea	ecx, DWORD PTR [esi+56]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3194 : 
; 3195 : 	kStream >> m_iGreatPersonGiftInfluence;

	lea	edx, DWORD PTR [esi+60]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3196 : 
; 3197 : 	kStream >> m_iLevelExperienceModifier;

	lea	eax, DWORD PTR [esi+64]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3198 : 	kStream >> m_iMaxGlobalBuildingProductionModifier;

	lea	ecx, DWORD PTR [esi+68]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3199 : 	kStream >> m_iMaxTeamBuildingProductionModifier;

	lea	edx, DWORD PTR [esi+72]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3200 : 	kStream >> m_iMaxPlayerBuildingProductionModifier;

	lea	eax, DWORD PTR [esi+76]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3201 : 	kStream >> m_iCityUnhappinessModifier;

	lea	ecx, DWORD PTR [esi+80]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3202 : 	kStream >> m_iPopulationUnhappinessModifier;

	lea	edx, DWORD PTR [esi+84]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3203 : 	kStream >> m_iCityStateBonusModifier;

	lea	eax, DWORD PTR [esi+88]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3204 : 	kStream >> m_iCityStateFriendshipModifier;

	lea	ecx, DWORD PTR [esi+92]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3205 : 	kStream >> m_iCityStateCombatModifier;

	lea	edx, DWORD PTR [esi+96]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3206 : 	kStream >> m_iLandBarbarianConversionPercent;

	lea	eax, DWORD PTR [esi+100]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3207 : 	kStream >> m_iLandBarbarianConversionExtraUnits;

	lea	ecx, DWORD PTR [esi+104]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3208 : 	kStream >> m_iSeaBarbarianConversionPercent;

	lea	edx, DWORD PTR [esi+108]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3209 : 	kStream >> m_iCapitalBuildingModifier;

	lea	eax, DWORD PTR [esi+112]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3210 : 	kStream >> m_iPlotBuyCostModifier;

	lea	ecx, DWORD PTR [esi+116]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3211 : 	kStream >> m_iPlotCultureCostModifier;

	lea	edx, DWORD PTR [esi+120]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3212 : #ifdef NQ_SCIENCE_PER_GREAT_PERSON_BORN
; 3213 : 	kStream >> m_iSciencePerGreatPersonBorn;

	lea	eax, DWORD PTR [esi+124]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3214 : #endif
; 3215 : #ifdef NQ_NUM_TURNS_BEFORE_MINOR_ALLIES_REFUSE_BRIBES_FROM_TRAIT
; 3216 : 	kStream >> m_iNumTurnsBeforeMinorAlliesRefuseBribes;

	lea	ecx, DWORD PTR [esi+128]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3217 : #endif
; 3218 : #ifdef NQ_GOLDEN_PILGRIMAGE
; 3219 : 	kStream >> m_iGoldenAgeTileBonusFaith;

	lea	edx, DWORD PTR [esi+132]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3220 : #endif
; 3221 : 	kStream >> m_iCultureFromKills;

	lea	eax, DWORD PTR [esi+136]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3222 : 	if (uiVersion >= 19)

	cmp	DWORD PTR _uiVersion$[esp+52], 19	; 00000013H
	jb	SHORT $LN69@Read

; 3223 : 	{
; 3224 : 		kStream >> m_iFaithFromKills;

	lea	ecx, DWORD PTR [esi+140]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3225 : 	}
; 3226 : 	else

	xor	ebx, ebx
	jmp	SHORT $LN68@Read
$LN69@Read:

; 3227 : 	{
; 3228 : 		m_iFaithFromKills = 0;

	xor	ebx, ebx
	mov	DWORD PTR [esi+140], ebx
$LN68@Read:

; 3229 : 	}
; 3230 : 	kStream >> m_iCityCultureBonus;

	lea	edx, DWORD PTR [esi+144]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3231 : 
; 3232 : 	if (uiVersion >= 17)

	cmp	DWORD PTR _uiVersion$[esp+52], 17	; 00000011H
	jb	SHORT $LN67@Read

; 3233 : 	{
; 3234 : 		kStream >> m_iCapitalThemingBonusModifier;

	lea	eax, DWORD PTR [esi+148]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3235 : 	}
; 3236 : 	else

	jmp	SHORT $LN66@Read
$LN67@Read:

; 3237 : 	{
; 3238 : 		m_iCapitalThemingBonusModifier = 0;

	mov	DWORD PTR [esi+148], ebx
$LN66@Read:

; 3239 : 	}
; 3240 : 
; 3241 : 	kStream >> m_iPolicyCostModifier;

	lea	ecx, DWORD PTR [esi+152]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3242 : 	kStream >> m_iCityConnectionTradeRouteChange;

	lea	edx, DWORD PTR [esi+156]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3243 : 	kStream >> m_iWonderProductionModifier;

	lea	eax, DWORD PTR [esi+160]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3244 : 	kStream >> m_iPlunderModifier;

	lea	ecx, DWORD PTR [esi+164]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3245 : 
; 3246 : 	kStream >> m_iImprovementMaintenanceModifier;

	lea	edx, DWORD PTR [esi+168]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3247 : 
; 3248 : 	kStream >> m_iGoldenAgeDurationModifier;

	lea	eax, DWORD PTR [esi+172]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3249 : 	kStream >> m_iGoldenAgeMoveChange;

	lea	ecx, DWORD PTR [esi+176]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3250 : 	kStream >> m_iGoldenAgeCombatModifier;

	lea	edx, DWORD PTR [esi+180]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3251 : 
; 3252 : 	if (uiVersion >= 2)

	cmp	DWORD PTR _uiVersion$[esp+52], 2
	jb	SHORT $LN65@Read

; 3253 : 	{
; 3254 : 		kStream >> m_iGoldenAgeTourismModifier;

	lea	eax, DWORD PTR [esi+184]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3255 : 		kStream >> m_iGoldenAgeGreatArtistRateModifier;

	lea	ecx, DWORD PTR [esi+188]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3256 : 		kStream >> m_iGoldenAgeGreatMusicianRateModifier;

	lea	edx, DWORD PTR [esi+192]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3257 : 		kStream >> m_iGoldenAgeGreatWriterRateModifier;

	lea	eax, DWORD PTR [esi+196]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3258 : 	}
; 3259 : 	else

	jmp	SHORT $LN64@Read
$LN65@Read:

; 3260 : 	{
; 3261 : 		m_iGoldenAgeTourismModifier = 0;

	mov	DWORD PTR [esi+184], ebx

; 3262 : 		m_iGoldenAgeGreatArtistRateModifier = 0;

	mov	DWORD PTR [esi+188], ebx

; 3263 : 		m_iGoldenAgeGreatMusicianRateModifier = 0;

	mov	DWORD PTR [esi+192], ebx

; 3264 : 		m_iGoldenAgeGreatWriterRateModifier = 0;

	mov	DWORD PTR [esi+196], ebx
$LN64@Read:

; 3265 : 	}
; 3266 : 
; 3267 : 	kStream >> m_iExtraEmbarkMoves;

	lea	ecx, DWORD PTR [esi+200]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3268 : 
; 3269 : 	kStream >> m_iNaturalWonderFirstFinderGold;

	lea	edx, DWORD PTR [esi+204]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3270 : 
; 3271 : 	kStream >> m_iNaturalWonderSubsequentFinderGold;

	lea	eax, DWORD PTR [esi+208]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3272 : 
; 3273 : 
; 3274 : 	//EAP: Natural wonder faith for the finder:
; 3275 : 
; 3276 : 	kStream >> m_iNaturalWonderFirstFinderFaith;

	lea	ecx, DWORD PTR [esi+216]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3277 : 
; 3278 : 	kStream >> m_iNaturalWonderSubsequentFinderFaith;

	lea	edx, DWORD PTR [esi+220]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3279 : 
; 3280 : 	//
; 3281 : 
; 3282 : 	kStream >> m_iNaturalWonderYieldModifier;

	lea	eax, DWORD PTR [esi+212]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3283 : 	kStream >> m_iNaturalWonderHappinessModifier;

	lea	ecx, DWORD PTR [esi+224]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3284 : 
; 3285 : 	kStream >> m_iNearbyImprovementCombatBonus;

	lea	edx, DWORD PTR [esi+228]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3286 : 	kStream >> m_iNearbyImprovementBonusRange;

	lea	eax, DWORD PTR [esi+232]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3287 : 
; 3288 : 	kStream >> m_iCultureBuildingYieldChange;

	lea	ecx, DWORD PTR [esi+236]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3289 : 
; 3290 : 	kStream >> m_iCombatBonusVsHigherTech;

	lea	edx, DWORD PTR [esi+240]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3291 : 
; 3292 : 	kStream >> m_iCombatBonusVsLargerCiv;

	lea	eax, DWORD PTR [esi+244]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3293 : 
; 3294 : 	kStream >> m_iLandUnitMaintenanceModifier;

	lea	ecx, DWORD PTR [esi+248]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3295 : 
; 3296 : 	kStream >> m_iNavalUnitMaintenanceModifier;

	lea	edx, DWORD PTR [esi+252]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3297 : 
; 3298 : 	kStream >> m_iRazeSpeedModifier;

	lea	eax, DWORD PTR [esi+256]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3299 : 
; 3300 : 	kStream >> m_iDOFGreatPersonModifier;

	lea	ecx, DWORD PTR [esi+260]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3301 : 
; 3302 : 	kStream >> m_iLuxuryHappinessRetention;

	lea	edx, DWORD PTR [esi+264]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3303 : 
; 3304 : 	kStream >> m_iExtraHappinessPerLuxury; // NQMP GJS - New Netherlands UA

	lea	eax, DWORD PTR [esi+268]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3305 : 
; 3306 : 	kStream >> m_iExtraSpies;

	lea	ecx, DWORD PTR [esi+272]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3307 : 
; 3308 : 	kStream >> m_iHappinessPerReligion; // NQMP GJS - New Ottoman UA

	lea	edx, DWORD PTR [esi+276]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3309 : 
; 3310 : 	kStream >> m_iUnresearchedTechBonusFromKills;

	lea	eax, DWORD PTR [esi+280]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3311 : 
; 3312 : 	if (uiVersion >= 4)

	cmp	DWORD PTR _uiVersion$[esp+52], 4
	jb	SHORT $LN63@Read

; 3313 : 	{
; 3314 : 		kStream >> m_iExtraFoundedCityTerritoryClaimRange;

	lea	ecx, DWORD PTR [esi+284]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3315 : 	}
; 3316 : 	else

	jmp	SHORT $LN62@Read
$LN63@Read:

; 3317 : 	{
; 3318 : 		m_iExtraFoundedCityTerritoryClaimRange = 0;

	mov	DWORD PTR [esi+284], ebx
$LN62@Read:

; 3319 : 	}
; 3320 : 
; 3321 : 	if (uiVersion >= 5)

	cmp	DWORD PTR _uiVersion$[esp+52], 5
	jb	SHORT $LN61@Read

; 3322 : 	{
; 3323 : 		kStream >> m_iFreeSocialPoliciesPerEra;

	lea	edx, DWORD PTR [esi+288]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3324 : 	}
; 3325 : 	else

	jmp	SHORT $LN60@Read
$LN61@Read:

; 3326 : 	{
; 3327 : 		m_iFreeSocialPoliciesPerEra = 0;

	mov	DWORD PTR [esi+288], ebx
$LN60@Read:

; 3328 : 	}
; 3329 : 
; 3330 : 	if (uiVersion >= 6)

	cmp	DWORD PTR _uiVersion$[esp+52], 6
	jb	SHORT $LN59@Read

; 3331 : 	{
; 3332 : 		kStream >> m_iNumTradeRoutesModifier;

	lea	eax, DWORD PTR [esi+292]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3333 : 	}
; 3334 : 	else

	jmp	SHORT $LN58@Read
$LN59@Read:

; 3335 : 	{
; 3336 : 		m_iNumTradeRoutesModifier = 0;

	mov	DWORD PTR [esi+292], ebx
$LN58@Read:

; 3337 : 	}
; 3338 : 
; 3339 : 	if (uiVersion >= 8)

	cmp	DWORD PTR _uiVersion$[esp+52], 8
	jb	SHORT $LN57@Read

; 3340 : 	{
; 3341 : 		kStream >> m_iTradeRouteResourceModifier;

	lea	ecx, DWORD PTR [esi+296]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3342 : 	}
; 3343 : 	else

	jmp	SHORT $LN56@Read
$LN57@Read:

; 3344 : 	{
; 3345 : 		m_iTradeRouteResourceModifier = 0;

	mov	DWORD PTR [esi+296], ebx
$LN56@Read:

; 3346 : 	}
; 3347 : 
; 3348 : 	if (uiVersion >= 9)

	cmp	DWORD PTR _uiVersion$[esp+52], 9
	jb	SHORT $LN55@Read

; 3349 : 	{
; 3350 : 		kStream >> m_iUniqueLuxuryCities;

	lea	edx, DWORD PTR [esi+300]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3351 : 		kStream >> m_iUniqueLuxuryQuantity;

	lea	eax, DWORD PTR [esi+304]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3352 : 	}
; 3353 : 	else

	jmp	SHORT $LN54@Read
$LN55@Read:

; 3354 : 	{
; 3355 : 		m_iUniqueLuxuryCities = 0;

	mov	DWORD PTR [esi+300], ebx

; 3356 : 		m_iUniqueLuxuryQuantity = 0;

	mov	DWORD PTR [esi+304], ebx
$LN54@Read:

; 3357 : 	}
; 3358 : 
; 3359 : 	if (uiVersion >= 11)

	cmp	DWORD PTR _uiVersion$[esp+52], 11	; 0000000bH
	jb	SHORT $LN53@Read

; 3360 : 	{
; 3361 : 		kStream >> m_iUniqueLuxuryCitiesPlaced;

	lea	ecx, DWORD PTR [esi+308]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3362 : 	}
; 3363 : 	else

	jmp	SHORT $LN52@Read
$LN53@Read:

; 3364 : 	{
; 3365 : 		m_iUniqueLuxuryCitiesPlaced = 0;

	mov	DWORD PTR [esi+308], ebx
$LN52@Read:

; 3366 : 	}
; 3367 : 
; 3368 : 	if (uiVersion >= 13)

	cmp	DWORD PTR _uiVersion$[esp+52], 13	; 0000000dH
	jb	SHORT $LN51@Read

; 3369 : 	{
; 3370 : 		kStream >> m_iWorkerSpeedModifier;

	lea	edx, DWORD PTR [esi+312]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3371 : 	}
; 3372 : 	else

	jmp	SHORT $LN50@Read
$LN51@Read:

; 3373 : 	{
; 3374 : 		m_iWorkerSpeedModifier = 0;

	mov	DWORD PTR [esi+312], ebx
$LN50@Read:

; 3375 : 	}
; 3376 : 
; 3377 : 	if (uiVersion >= 14)

	cmp	DWORD PTR _uiVersion$[esp+52], 14	; 0000000eH
	jb	SHORT $LN49@Read

; 3378 : 	{
; 3379 : 		kStream >> m_iAfraidMinorPerTurnInfluence;

	lea	eax, DWORD PTR [esi+316]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3380 : 	}
; 3381 : 	else

	jmp	SHORT $LN48@Read
$LN49@Read:

; 3382 : 	{
; 3383 : 		m_iAfraidMinorPerTurnInfluence = 0;

	mov	DWORD PTR [esi+316], ebx
$LN48@Read:

; 3384 : 	}
; 3385 : 	
; 3386 : 	if (uiVersion >= 15)

	cmp	DWORD PTR _uiVersion$[esp+52], 15	; 0000000fH
	jb	SHORT $LN47@Read

; 3387 : 	{
; 3388 : 		kStream >> m_iLandTradeRouteRangeBonus;

	lea	ecx, DWORD PTR [esi+320]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3389 : 		kStream >> m_iTradeReligionModifier;

	lea	edx, DWORD PTR [esi+324]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3390 : 	}
; 3391 : 	else

	jmp	SHORT $LN46@Read
$LN47@Read:

; 3392 : 	{
; 3393 : 		m_iLandTradeRouteRangeBonus = 0;

	mov	DWORD PTR [esi+320], ebx

; 3394 : 		m_iTradeReligionModifier = 0;

	mov	DWORD PTR [esi+324], ebx
$LN46@Read:

; 3395 : 	}
; 3396 : 
; 3397 : 	if (uiVersion >= 16)

	cmp	DWORD PTR _uiVersion$[esp+52], 16	; 00000010H
	jb	SHORT $LN45@Read

; 3398 : 	{
; 3399 : 		kStream >> m_iTradeBuildingModifier;

	lea	eax, DWORD PTR [esi+328]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3400 : 	}
; 3401 : 	else

	jmp	SHORT $LN44@Read
$LN45@Read:

; 3402 : 	{
; 3403 : 		m_iTradeBuildingModifier = 0;

	mov	DWORD PTR [esi+328], ebx
$LN44@Read:

; 3404 : 	}
; 3405 : 
; 3406 : 	kStream >> m_bFightWellDamaged;

	lea	ecx, DWORD PTR [esi+332]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3407 : 	kStream >> m_bMoveFriendlyWoodsAsRoad;

	lea	edx, DWORD PTR [esi+333]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3408 : 	kStream >> m_bFasterAlongRiver;

	lea	eax, DWORD PTR [esi+334]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3409 : 
; 3410 : 	kStream >> m_bFasterInHills;

	lea	ecx, DWORD PTR [esi+335]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3411 : 
; 3412 : 	kStream >> m_bEmbarkedAllWater;

	lea	edx, DWORD PTR [esi+336]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3413 : 
; 3414 : 	kStream >> m_bEmbarkedToLandFlatCost;

	lea	eax, DWORD PTR [esi+337]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3415 : 
; 3416 : 	kStream >> m_bNoHillsImprovementMaintenance;

	lea	ecx, DWORD PTR [esi+338]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3417 : 
; 3418 : 	kStream >> m_bTechBoostFromCapitalScienceBuildings;

	lea	edx, DWORD PTR [esi+339]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3419 : 	kStream >> m_bStaysAliveZeroCities;

	lea	eax, DWORD PTR [esi+340]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3420 : 
; 3421 : 	kStream >> m_bFaithFromUnimprovedForest;

	lea	ecx, DWORD PTR [esi+341]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3422 : #ifdef NQ_UNIT_IMMUNE_TO_PLUNDER_FROM_TRAIT
; 3423 : 	kStream >> m_bSeaTradeRoutesArePlunderImmune;

	lea	edx, DWORD PTR [esi+342]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3424 : #endif
; 3425 : 
; 3426 : 	// NQMP GJS - New France UA begin
; 3427 : 	kStream >> m_bEarnsGreatPersonOnSlotOrGuild;

	lea	eax, DWORD PTR [esi+343]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3428 : 	kStream >> m_bHasBuiltWritersGuild;

	lea	ecx, DWORD PTR [esi+344]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3429 : 	kStream >> m_bHasBuiltArtistsGuild;

	lea	edx, DWORD PTR [esi+345]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3430 : 	kStream >> m_bHasBuiltMusiciansGuild;

	lea	eax, DWORD PTR [esi+346]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3431 : 	// NQMP GJS - New France UA end
; 3432 : 
; 3433 : 
; 3434 : 	kStream >> m_bBonusReligiousBelief;

	lea	ecx, DWORD PTR [esi+347]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3435 : 
; 3436 : 	kStream >> m_bAbleToAnnexCityStates;

	lea	edx, DWORD PTR [esi+348]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3437 : 
; 3438 : 	kStream >> m_bCrossesMountainsAfterGreatGeneral;

	lea	eax, DWORD PTR [esi+349]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3439 : 
; 3440 : 	kStream >> m_bMayaCalendarBonuses;

	lea	ecx, DWORD PTR [esi+350]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3441 : 	kStream >> m_iBaktunPreviousTurn;

	lea	edx, DWORD PTR [esi+740]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3442 : 
; 3443 : 	kStream >> iNumEntries;

	lea	eax, DWORD PTR _iNumEntries$[esp+52]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3444 : 	m_aMayaBonusChoices.clear();

	mov	edx, DWORD PTR [esi+772]
	mov	ecx, DWORD PTR [esi+768]
	lea	ebp, DWORD PTR [esi+764]
	cmp	ecx, edx
	je	SHORT $LN409@Read
	mov	eax, edx
	cmp	edx, edx
	je	SHORT $LN434@Read
$LL436@Read:
	mov	ebx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], ebx
	mov	ebx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], ebx
	add	eax, 8
	add	ecx, 8
	cmp	eax, edx
	jne	SHORT $LL436@Read
$LN434@Read:
	mov	DWORD PTR [ebp+8], ecx
	xor	ebx, ebx
$LN409@Read:

; 3445 : 	MayaBonusChoice choice;
; 3446 : 	for(int iI = 0; iI < iNumEntries; iI++)

	cmp	DWORD PTR _iNumEntries$[esp+52], ebx
	mov	DWORD PTR _choice$[esp+52], -1
	mov	DWORD PTR _choice$[esp+56], ebx
	mov	DWORD PTR _iI$224363[esp+48], ebx
	jle	$LN41@Read
$LL1244@Read:

; 3447 : 	{
; 3448 : 		kStream >> choice.m_eUnitType;

	lea	ecx, DWORD PTR _choice$[esp+52]
	push	ecx
	push	edi
	call	??5@YAAAVFDataStream@@AAV0@AAW4UnitTypes@@@Z ; operator>>
	add	esp, 8

; 3449 : 		kStream >> choice.m_iBaktunJustFinished;

	lea	edx, DWORD PTR _choice$[esp+56]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3450 : 		m_aMayaBonusChoices.push_back(choice);

	mov	ecx, DWORD PTR [ebp+4]
	test	ecx, ecx
	jne	SHORT $LN451@Read
	xor	eax, eax
	jmp	SHORT $LN452@Read
$LN451@Read:
	mov	eax, DWORD PTR [ebp+12]
	sub	eax, ecx
	sar	eax, 3
$LN452@Read:
	mov	ebx, DWORD PTR [ebp+8]
	mov	edx, ebx
	sub	edx, ecx
	sar	edx, 3
	cmp	edx, eax
	jae	SHORT $LN444@Read
	mov	ecx, DWORD PTR __Cat$267423[esp+48]
	mov	BYTE PTR $T267420[esp+52], 0
	mov	eax, DWORD PTR $T267420[esp+52]
	push	eax
	push	ecx
	push	ebp
	lea	edx, DWORD PTR _choice$[esp+64]
	push	edx
	push	1
	push	ebx
	call	??$_Uninit_fill_n@PAUMayaBonusChoice@@IU1@V?$allocator@UMayaBonusChoice@@@std@@@std@@YAXPAUMayaBonusChoice@@IABU1@AAV?$allocator@UMayaBonusChoice@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<MayaBonusChoice *,unsigned int,MayaBonusChoice,std::allocator<MayaBonusChoice> >
	add	esp, 24					; 00000018H
	add	ebx, 8
	mov	DWORD PTR [ebp+8], ebx
	jmp	SHORT $LN42@Read
$LN444@Read:
	lea	eax, DWORD PTR _choice$[esp+52]
	push	eax
	push	1
	push	ebx
	mov	ecx, ebp
	call	?_Insert_n@?$vector@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@std@@IAEXV?$_Vector_const_iterator@UMayaBonusChoice@@V?$allocator@UMayaBonusChoice@@@std@@@2@IABUMayaBonusChoice@@@Z ; std::vector<MayaBonusChoice,std::allocator<MayaBonusChoice> >::_Insert_n
$LN42@Read:
	mov	eax, DWORD PTR _iI$224363[esp+48]
	inc	eax
	cmp	eax, DWORD PTR _iNumEntries$[esp+52]
	mov	DWORD PTR _iI$224363[esp+48], eax
	jl	$LL1244@Read
$LN41@Read:

; 3451 : 	}
; 3452 : 
; 3453 : 	kStream >> m_bNoAnnexing;

	lea	ecx, DWORD PTR [esi+351]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3454 : 	if (uiVersion >= 3)

	cmp	DWORD PTR _uiVersion$[esp+52], 3
	jb	SHORT $LN40@Read

; 3455 : 	{
; 3456 : 		kStream >> m_bTechFromCityConquer;

	lea	edx, DWORD PTR [esi+352]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3457 : 	}
; 3458 : 	else

	jmp	SHORT $LN39@Read
$LN40@Read:

; 3459 : 	{
; 3460 : 		m_bTechFromCityConquer = false;

	mov	BYTE PTR [esi+352], 0
$LN39@Read:

; 3461 : 	}
; 3462 : 
; 3463 : 	if (uiVersion >= 9)

	cmp	DWORD PTR _uiVersion$[esp+52], 9
	jb	SHORT $LN38@Read

; 3464 : 	{
; 3465 : 		kStream >> m_bUniqueLuxuryRequiresNewArea;

	lea	eax, DWORD PTR [esi+353]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3466 : 	}
; 3467 : 	else

	jmp	SHORT $LN37@Read
$LN38@Read:

; 3468 : 	{
; 3469 : 		m_bUniqueLuxuryRequiresNewArea = false;

	mov	BYTE PTR [esi+353], 0
$LN37@Read:

; 3470 : 	}
; 3471 : 
; 3472 : 	if (uiVersion >= 12)

	cmp	DWORD PTR _uiVersion$[esp+52], 12	; 0000000cH
	jb	SHORT $LN36@Read

; 3473 : 	{
; 3474 : 		kStream >> m_bRiverTradeRoad;

	lea	ecx, DWORD PTR [esi+354]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3475 : 	}
; 3476 : 	else

	jmp	SHORT $LN35@Read
$LN36@Read:

; 3477 : 	{
; 3478 : 		m_bRiverTradeRoad = false;

	mov	BYTE PTR [esi+354], 0
$LN35@Read:

; 3479 : 	}
; 3480 : 
; 3481 : 	if (uiVersion >= 18)

	cmp	DWORD PTR _uiVersion$[esp+52], 18	; 00000012H
	jb	SHORT $LN34@Read

; 3482 : 	{
; 3483 : 		kStream >> m_bAngerFreeIntrusionOfCityStates;

	lea	edx, DWORD PTR [esi+355]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3484 : 	}
; 3485 : 	else

	jmp	SHORT $LN33@Read
$LN34@Read:

; 3486 : 	{
; 3487 : 		m_bAngerFreeIntrusionOfCityStates = false;

	mov	BYTE PTR [esi+355], 0
$LN33@Read:

; 3488 : 	}
; 3489 : 
; 3490 : 	kStream >> m_eCampGuardType;

	lea	eax, DWORD PTR [esi+356]
	push	eax
	push	edi
	call	??5@YAAAVFDataStream@@AAV0@AAW4UnitTypes@@@Z ; operator>>

; 3491 : 
; 3492 : 	kStream >> m_eCombatBonusImprovement;

	lea	ecx, DWORD PTR [esi+368]
	push	ecx
	push	edi
	call	??5@YAAAVFDataStream@@AAV0@AAW4ImprovementTypes@@@Z ; operator>>
	add	esp, 16					; 00000010H

; 3493 : 
; 3494 : 	ArrayWrapper<int> kExtraYieldThreshold(NUM_YIELD_TYPES, m_iExtraYieldThreshold);

	lea	ebp, DWORD PTR [esi+384]
	mov	ebx, 6
	npad	7

; 3495 : 	kStream >> kExtraYieldThreshold;

$LL505@Read:
	push	ebp
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	add	ebp, 4
	sub	ebx, 1
	jne	SHORT $LL505@Read

; 3496 : 
; 3497 : 	ArrayWrapper<int> kFreeCityYield(NUM_YIELD_TYPES, m_iFreeCityYield);

	lea	ebp, DWORD PTR [esi+408]
	mov	ebx, 6
	npad	5

; 3498 : 	kStream >> kFreeCityYield;

$LL518@Read:
	push	ebp
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	add	ebp, 4
	sub	ebx, 1
	jne	SHORT $LL518@Read

; 3499 : 
; 3500 : 	ArrayWrapper<int> kYieldChangeResourcesWrapper(NUM_YIELD_TYPES, m_iYieldChangeStrategicResources);

	lea	ebp, DWORD PTR [esi+432]
	mov	ebx, 6
	npad	5

; 3501 : 	kStream >> kYieldChangeResourcesWrapper;

$LL531@Read:
	push	ebp
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	add	ebp, 4
	sub	ebx, 1
	jne	SHORT $LL531@Read

; 3502 : 
; 3503 : 	ArrayWrapper<int> kYieldChangeLuxuryResourcesWrapper(NUM_YIELD_TYPES, m_iYieldChangeLuxuryResources); // NQMP GJS - New Netherlands UA

	lea	ebp, DWORD PTR [esi+456]
	mov	ebx, 6
	npad	5

; 3504 : 	kStream >> kYieldChangeLuxuryResourcesWrapper; // NQMP GJS - New Netherlands UA

$LL544@Read:
	push	ebp
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	add	ebp, 4
	sub	ebx, 1
	jne	SHORT $LL544@Read

; 3505 : 
; 3506 : 	ArrayWrapper<int> kYieldRateModifierWrapper(NUM_YIELD_TYPES, m_iYieldRateModifier);

	lea	ebp, DWORD PTR [esi+552]
	mov	ebx, 6
	npad	5

; 3507 : 	kStream >> kYieldRateModifierWrapper;

$LL557@Read:
	push	ebp
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	add	ebp, 4
	sub	ebx, 1
	jne	SHORT $LL557@Read

; 3508 : 
; 3509 : 	ArrayWrapper<int> kYieldChangeNaturalWonderWrapper(NUM_YIELD_TYPES, m_iYieldChangeNaturalWonder);

	lea	ebp, DWORD PTR [esi+480]
	mov	ebx, 6
	npad	5

; 3510 : 	kStream >> kYieldChangeNaturalWonderWrapper;

$LL570@Read:
	push	ebp
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	add	ebp, 4
	sub	ebx, 1
	jne	SHORT $LL570@Read

; 3511 : 
; 3512 : 	if (uiVersion >= 7)

	cmp	DWORD PTR _uiVersion$[esp+52], 7
	jb	SHORT $LN32@Read

; 3513 : 	{
; 3514 : 		ArrayWrapper<int> kYieldChangePerTradePartnerWrapper(NUM_YIELD_TYPES, m_iYieldChangePerTradePartner);

	lea	ebp, DWORD PTR [esi+504]
	mov	ebx, 6

; 3515 : 		kStream >> kYieldChangePerTradePartnerWrapper;

$LL583@Read:
	push	ebp
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	add	ebp, 4
	sub	ebx, 1
	jne	SHORT $LL583@Read

; 3516 : 
; 3517 : 		ArrayWrapper<int> kYieldChangeIncomingTradeRouteWrapper(NUM_YIELD_TYPES, m_iYieldChangeIncomingTradeRoute);

	lea	ebp, DWORD PTR [esi+528]
	mov	ebx, 6
	npad	3

; 3518 : 		kStream >> kYieldChangeIncomingTradeRouteWrapper;

$LL596@Read:
	push	ebp
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	add	ebp, 4
	sub	ebx, 1
	jne	SHORT $LL596@Read

; 3519 : 	}
; 3520 : 	else

	jmp	SHORT $LN28@Read
$LN32@Read:

; 3521 : 	{
; 3522 : 		for(int iYield = 0; iYield < NUM_YIELD_TYPES; iYield++)

	lea	eax, DWORD PTR [esi+528]
	mov	ecx, 6
	npad	3
$LL30@Read:

; 3523 : 		{
; 3524 : 			m_iYieldChangePerTradePartner[iYield] = 0;

	mov	DWORD PTR [eax-24], 0

; 3525 : 			m_iYieldChangeIncomingTradeRoute[iYield] = 0;

	mov	DWORD PTR [eax], 0
	add	eax, 4
	sub	ecx, 1
	jne	SHORT $LL30@Read
$LN28@Read:

; 3526 : 		}
; 3527 : 	}
; 3528 : 
; 3529 : 	CvAssert(GC.getNumTerrainInfos() == NUM_TERRAIN_TYPES);	// If this is not true, m_iStrategicResourceQuantityModifier must be resized dynamically
; 3530 : 	CvInfosSerializationHelper::ReadHashedDataArray(kStream, &m_iStrategicResourceQuantityModifier[0], GC.getNumTerrainInfos());

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumTerrainInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumTerrainInfos
	push	eax
	lea	edx, DWORD PTR [esi+576]
	push	edx
	push	edi
	call	??$ReadHashedDataArray@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHH@Z ; CvInfosSerializationHelper::ReadHashedDataArray<int>

; 3531 : 
; 3532 : 	CvInfosSerializationHelper::ReadHashedDataArray(kStream, m_aiResourceQuantityModifier);

	lea	eax, DWORD PTR [esi+612]
	push	eax
	push	edi
	call	??$ReadHashedDataArray@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@AAV?$vector@HV?$allocator@H@std@@@std@@@Z ; CvInfosSerializationHelper::ReadHashedDataArray<int>
	add	esp, 20					; 00000014H

; 3533 : 
; 3534 : 	kStream >> iNumEntries;

	lea	ecx, DWORD PTR _iNumEntries$[esp+52]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3535 : 	m_abNoTrain.clear();

	mov	eax, DWORD PTR [esi+628]
	mov	edx, DWORD PTR [esi+636]
	lea	ecx, DWORD PTR [esi+628]
	xor	ebp, ebp
	test	eax, eax
	jbe	SHORT $LN628@Read
	jge	SHORT $LN629@Read
	mov	ebx, eax
	neg	ebx
	je	SHORT $LN629@Read
	or	ebx, -1
	sub	ebx, eax
	shr	ebx, 5
	add	ebx, ebx
	add	ebx, ebx
	mov	ebp, -4					; fffffffcH
	sub	ebp, ebx
	add	edx, ebp
	jmp	SHORT $LN1252@Read
$LN629@Read:
	mov	ebx, eax
	shr	ebx, 5
	lea	edx, DWORD PTR [edx+ebx*4]
$LN1252@Read:
	and	eax, 31					; 0000001fH
	mov	ebp, eax
$LN628@Read:
	push	ebp
	push	edx
	xor	eax, eax
	push	eax
	mov	eax, DWORD PTR [ecx+8]
	push	eax
	lea	edx, DWORD PTR $T267817[esp+68]
	push	edx
	call	?erase@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@V?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@0@Z ; std::vector<bool,std::allocator<bool> >::erase

; 3536 : 	for (int i = 0; i < iNumEntries; i++)

	cmp	DWORD PTR _iNumEntries$[esp+52], 0
	mov	DWORD PTR _i$224446[esp+52], 0
	jle	$LN25@Read
$LL27@Read:

; 3537 : 	{
; 3538 : 		bool bValue;
; 3539 : 		kStream >> bValue;

	lea	eax, DWORD PTR _bValue$224450[esp+48]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3540 : 		m_abNoTrain.push_back(bValue);

	mov	eax, DWORD PTR [esi+628]
	mov	ecx, DWORD PTR [esi+636]
	lea	ebp, DWORD PTR [esi+628]
	xor	edx, edx
	test	eax, eax
	jbe	SHORT $LN672@Read
	jge	SHORT $LN673@Read
	mov	edx, eax
	neg	edx
	je	SHORT $LN673@Read
	or	edx, -1
	sub	edx, eax
	shr	edx, 5
	add	edx, edx
	add	edx, edx
	mov	ebx, -4					; fffffffcH
	sub	ebx, edx
	add	ecx, ebx
	jmp	SHORT $LN1253@Read
$LN673@Read:
	mov	edx, eax
	shr	edx, 5
	lea	ecx, DWORD PTR [ecx+edx*4]
$LN1253@Read:
	and	eax, 31					; 0000001fH
	mov	edx, eax
$LN672@Read:
	mov	al, BYTE PTR _bValue$224450[esp+48]
	push	1
	push	edx
	push	ecx
	mov	ecx, ebp
	mov	BYTE PTR $T268257[esp+64], al
	call	?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@IAEIV?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@I@Z ; std::vector<bool,std::allocator<bool> >::_Insert_x
	mov	edx, DWORD PTR [ebp+8]
	lea	ecx, DWORD PTR [eax+1]
	xor	ebx, ebx
	mov	ebp, edx
	mov	DWORD PTR __Tmp$268523[esp+56], ebx
	test	ecx, ecx
	je	SHORT $LN1241@Read
	jge	SHORT $LN718@Read
	mov	ebx, ecx
	neg	ebx
	je	SHORT $LN718@Read
	or	ebx, -1
	sub	ebx, ecx
	shr	ebx, 5
	lea	ebx, DWORD PTR [ebx*4+4]
	sub	ebp, ebx
	jmp	SHORT $LN1254@Read
$LN718@Read:
	mov	ebx, ecx
	shr	ebx, 5
	lea	ebp, DWORD PTR [edx+ebx*4]
$LN1254@Read:
	and	ecx, 31					; 0000001fH
	mov	DWORD PTR __Tmp$268523[esp+56], ecx
$LN1241@Read:
	xor	ecx, ecx
	test	eax, eax
	je	SHORT $LN1243@Read
	jge	SHORT $LN743@Read
	mov	ecx, eax
	neg	ecx
	je	SHORT $LN743@Read
	or	ecx, -1
	sub	ecx, eax
	shr	ecx, 5
	lea	ecx, DWORD PTR [ecx*4+4]
	sub	edx, ecx
	jmp	SHORT $LN1255@Read
$LN743@Read:
	mov	ecx, eax
	shr	ecx, 5
	lea	edx, DWORD PTR [edx+ecx*4]
$LN1255@Read:
	and	eax, 31					; 0000001fH
	mov	ecx, eax
$LN1243@Read:
	lea	eax, DWORD PTR $T268257[esp+52]
	push	eax
	mov	eax, DWORD PTR __Tmp$268523[esp+60]
	push	eax
	push	ebp
	push	ecx
	push	edx
	call	??$_Fill@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@_N@std@@YAXV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@0AB_N@Z ; std::_Fill<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,bool>
	mov	eax, DWORD PTR _i$224446[esp+72]
	inc	eax
	add	esp, 20					; 00000014H
	cmp	eax, DWORD PTR _iNumEntries$[esp+52]
	mov	DWORD PTR _i$224446[esp+52], eax
	jl	$LL27@Read
$LN25@Read:

; 3541 : 	}
; 3542 : 	
; 3543 : 	//EAP: No build
; 3544 : 	kStream >> iNumEntries;

	lea	ecx, DWORD PTR _iNumEntries$[esp+52]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3545 : 	m_abNoBuild.clear();

	mov	eax, DWORD PTR [esi+648]
	mov	edx, DWORD PTR [esi+656]
	lea	ecx, DWORD PTR [esi+648]
	xor	ebx, ebx
	test	eax, eax
	jbe	SHORT $LN799@Read
	jge	SHORT $LN800@Read
	mov	ebx, eax
	neg	ebx
	je	SHORT $LN800@Read
	or	ebx, -1
	sub	ebx, eax
	shr	ebx, 5
	add	ebx, ebx
	add	ebx, ebx
	mov	ebp, -4					; fffffffcH
	sub	ebp, ebx
	add	edx, ebp
	jmp	SHORT $LN1256@Read
$LN800@Read:
	mov	ebx, eax
	shr	ebx, 5
	lea	edx, DWORD PTR [edx+ebx*4]
$LN1256@Read:
	and	eax, 31					; 0000001fH
	mov	ebx, eax
$LN799@Read:
	push	ebx
	push	edx
	xor	eax, eax
	push	eax
	mov	eax, DWORD PTR [ecx+8]
	push	eax
	lea	edx, DWORD PTR $T268758[esp+68]
	push	edx
	call	?erase@?$vector@_NV?$allocator@_N@std@@@std@@QAE?AV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@V?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@0@Z ; std::vector<bool,std::allocator<bool> >::erase

; 3546 : 	for (int i = 0; i < iNumEntries; i++)

	cmp	DWORD PTR _iNumEntries$[esp+52], 0
	mov	DWORD PTR _i$224451[esp+52], 0
	jle	$LN22@Read
	npad	2
$LL24@Read:

; 3547 : 	{
; 3548 : 		bool bValue;
; 3549 : 		kStream >> bValue;

	lea	eax, DWORD PTR _bValue$224455[esp+48]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 3550 : 		m_abNoBuild.push_back(bValue);

	mov	eax, DWORD PTR [esi+648]
	mov	ecx, DWORD PTR [esi+656]
	lea	ebp, DWORD PTR [esi+648]
	xor	edx, edx
	test	eax, eax
	jbe	SHORT $LN843@Read
	jge	SHORT $LN844@Read
	mov	edx, eax
	neg	edx
	je	SHORT $LN844@Read
	or	edx, -1
	sub	edx, eax
	shr	edx, 5
	add	edx, edx
	add	edx, edx
	mov	ebx, -4					; fffffffcH
	sub	ebx, edx
	add	ecx, ebx
	jmp	SHORT $LN1257@Read
$LN844@Read:
	mov	edx, eax
	shr	edx, 5
	lea	ecx, DWORD PTR [ecx+edx*4]
$LN1257@Read:
	and	eax, 31					; 0000001fH
	mov	edx, eax
$LN843@Read:
	mov	al, BYTE PTR _bValue$224455[esp+48]
	push	1
	push	edx
	push	ecx
	mov	ecx, ebp
	mov	BYTE PTR $T269198[esp+64], al
	call	?_Insert_x@?$vector@_NV?$allocator@_N@std@@@std@@IAEIV?$_Vb_const_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@2@I@Z ; std::vector<bool,std::allocator<bool> >::_Insert_x
	mov	edx, DWORD PTR [ebp+8]
	lea	ecx, DWORD PTR [eax+1]
	xor	ebx, ebx
	mov	ebp, edx
	mov	DWORD PTR __Tmp$269404[esp+56], ebx
	test	ecx, ecx
	je	SHORT $LN1240@Read
	jge	SHORT $LN889@Read
	mov	ebx, ecx
	neg	ebx
	je	SHORT $LN889@Read
	or	ebx, -1
	sub	ebx, ecx
	shr	ebx, 5
	lea	ebx, DWORD PTR [ebx*4+4]
	sub	ebp, ebx
	jmp	SHORT $LN1258@Read
$LN889@Read:
	mov	ebx, ecx
	shr	ebx, 5
	lea	ebp, DWORD PTR [edx+ebx*4]
$LN1258@Read:
	and	ecx, 31					; 0000001fH
	mov	DWORD PTR __Tmp$269404[esp+56], ecx
$LN1240@Read:
	xor	ecx, ecx
	test	eax, eax
	je	SHORT $LN1242@Read
	jge	SHORT $LN914@Read
	mov	ecx, eax
	neg	ecx
	je	SHORT $LN914@Read
	or	ecx, -1
	sub	ecx, eax
	shr	ecx, 5
	lea	ecx, DWORD PTR [ecx*4+4]
	sub	edx, ecx
	jmp	SHORT $LN1259@Read
$LN914@Read:
	mov	ecx, eax
	shr	ecx, 5
	lea	edx, DWORD PTR [edx+ecx*4]
$LN1259@Read:
	and	eax, 31					; 0000001fH
	mov	ecx, eax
$LN1242@Read:
	lea	eax, DWORD PTR $T269198[esp+52]
	push	eax
	mov	eax, DWORD PTR __Tmp$269404[esp+60]
	push	eax
	push	ebp
	push	ecx
	push	edx
	call	??$_Fill@V?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@std@@_N@std@@YAXV?$_Vb_iterator@IHV?$vector@_NV?$allocator@_N@std@@@std@@@0@0AB_N@Z ; std::_Fill<std::_Vb_iterator<unsigned int,int,std::vector<bool,std::allocator<bool> > >,bool>
	mov	eax, DWORD PTR _i$224451[esp+72]
	inc	eax
	add	esp, 20					; 00000014H
	cmp	eax, DWORD PTR _iNumEntries$[esp+52]
	mov	DWORD PTR _i$224451[esp+52], eax
	jl	$LL24@Read
$LN22@Read:

; 3551 : 	}
; 3552 : 
; 3553 : 	kStream >> iNumEntries;

	lea	ecx, DWORD PTR _iNumEntries$[esp+52]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3554 : 	m_aFreeTraitUnits.clear();

	xor	ebx, ebx

; 3555 : 	for(int iI = 0; iI < iNumEntries; iI++)

	cmp	DWORD PTR _iNumEntries$[esp+52], ebx
	mov	DWORD PTR [esi+672], ebx
	jle	SHORT $LN1245@Read
	lea	ebp, DWORD PTR [esi+668]
$LL21@Read:

; 3556 : 	{
; 3557 : 		FreeTraitUnit trait;
; 3558 : 		kStream >> trait.m_iFreeUnit;

	lea	edx, DWORD PTR _trait$224460[esp+52]
	push	edx
	push	edi
	call	??5@YAAAVFDataStream@@AAV0@AAW4UnitTypes@@@Z ; operator>>

; 3559 : 		kStream >> trait.m_ePrereqTech;

	lea	eax, DWORD PTR _trait$224460[esp+64]
	push	eax
	push	edi
	call	??5@YAAAVFDataStream@@AAV0@AAW4TechTypes@@@Z ; operator>>

; 3560 : 		m_aFreeTraitUnits.push_back(trait);

	mov	eax, DWORD PTR [ebp+8]
	add	esp, 16					; 00000010H
	mov	BYTE PTR [ebp+52], 0
	cmp	DWORD PTR [ebp+4], eax
	jne	SHORT $LN957@Read
	push	eax
	mov	ecx, ebp
	call	?GrowSize@?$FStaticVector@UFreeTraitUnit@@$04$00$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<FreeTraitUnit,5,1,297,0>::GrowSize
$LN957@Read:
	mov	ecx, DWORD PTR [ebp+4]
	mov	edx, DWORD PTR [ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
	test	eax, eax
	je	SHORT $LN960@Read
	mov	ecx, DWORD PTR _trait$224460[esp+52]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _trait$224460[esp+56]
	mov	DWORD PTR [eax+4], edx
$LN960@Read:
	inc	DWORD PTR [ebp+4]
	inc	ebx
	cmp	ebx, DWORD PTR _iNumEntries$[esp+52]
	jl	SHORT $LL21@Read
$LN1245@Read:

; 3561 : 	}
; 3562 : 
; 3563 : 	kStream >> iNumEntries;

	lea	eax, DWORD PTR _iNumEntries$[esp+52]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3564 : 	for(int iI = 0; iI < iNumEntries; iI++)

	mov	eax, DWORD PTR _iNumEntries$[esp+52]
	xor	ebp, ebp
	test	eax, eax
	jle	SHORT $LN16@Read
	npad	4
$LL18@Read:
	mov	ecx, DWORD PTR [esi+784]
	lea	edx, DWORD PTR [ecx+ebp*4]

; 3565 : 	{
; 3566 : 		kStream >> m_paiMovesChangeUnitCombat[iI];

	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	mov	eax, DWORD PTR _iNumEntries$[esp+52]
	inc	ebp
	cmp	ebp, eax
	jl	SHORT $LL18@Read
$LN16@Read:

; 3567 : 	}
; 3568 : 	if (uiVersion >= 10)

	cmp	DWORD PTR _uiVersion$[esp+52], 10	; 0000000aH
	jb	SHORT $LN15@Read

; 3569 : 	{
; 3570 : 		for(int iI = 0; iI < iNumEntries; iI++)

	xor	ebx, ebx
	test	eax, eax
	jle	$LN8@Read
	npad	5
$LL14@Read:
	mov	eax, DWORD PTR [esi+800]
	lea	ecx, DWORD PTR [eax+ebx*4]

; 3571 : 		{
; 3572 : 			kStream >> m_paiMaintenanceModifierUnitCombat[iI];

	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	inc	ebx
	cmp	ebx, DWORD PTR _iNumEntries$[esp+52]
	jl	SHORT $LL14@Read

; 3573 : 		}
; 3574 : 	}
; 3575 : 	else

	jmp	$LN8@Read
$LN15@Read:

; 3576 : 	{
; 3577 : 		int iNumUnitCombatClassInfos = GC.getNumUnitCombatClassInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumUnitCombatClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumUnitCombatClassInfos

; 3578 : 		m_paiMaintenanceModifierUnitCombat.resize(iNumUnitCombatClassInfos);

	mov	ecx, DWORD PTR [esi+804]
	mov	ebx, DWORD PTR [esi+800]
	lea	edx, DWORD PTR [esi+796]
	mov	ebp, eax
	mov	eax, ecx
	sub	eax, ebx
	sar	eax, 2
	mov	DWORD PTR $T269877[esp+48], 0
	cmp	ebp, eax
	jbe	SHORT $LN1260@Read
	lea	ebx, DWORD PTR $T269877[esp+48]
	push	ebx
	mov	ebx, ebp
	sub	ebx, eax
	push	ebx
	push	ecx
	mov	ecx, edx
	call	?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z ; std::vector<int,std::allocator<int> >::_Insert_n
	jmp	SHORT $LN1248@Read
$LN1260@Read:
	jae	SHORT $LN1248@Read
	lea	ebx, DWORD PTR [ebx+ebp*4]
	mov	DWORD PTR $T269887[esp+48], ebx
	cmp	ebx, ecx
	je	SHORT $LN1248@Read
	mov	eax, ecx
	sub	eax, ecx
	sar	eax, 2
	lea	edx, DWORD PTR [eax*4]
	add	ebx, edx
	test	eax, eax
	jle	SHORT $LN1246@Read
	push	edx
	push	ecx
	push	edx
	mov	edx, DWORD PTR $T269887[esp+60]
	push	edx
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN1246@Read:
	mov	DWORD PTR [esi+804], ebx
$LN1248@Read:

; 3579 : 		for(int iI = 0; iI < iNumUnitCombatClassInfos; iI++)

	xor	eax, eax
	test	ebp, ebp
	jle	SHORT $LN8@Read
$LL10@Read:

; 3580 : 		{
; 3581 : 			m_paiMaintenanceModifierUnitCombat[iI] = 0;

	mov	ecx, DWORD PTR [esi+800]
	mov	DWORD PTR [ecx+eax*4], 0
	inc	eax
	cmp	eax, ebp
	jl	SHORT $LL10@Read
$LN8@Read:

; 3582 : 		}
; 3583 : 	}
; 3584 : 
; 3585 : 	kStream >> m_ppaaiImprovementYieldChange;

	lea	edx, DWORD PTR [esi+812]
	push	edx
	push	edi
	call	??$SerializeToSequenceContainer@V?$Array@H$05@Firaxis@@V?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@YAXAAVFDataStream@@AAV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@Z ; SerializeToSequenceContainer<Firaxis::Array<int,6>,std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > > >

; 3586 : 	kStream >> m_ppaaiSpecialistYieldChange;

	lea	eax, DWORD PTR [esi+828]
	push	eax
	push	edi
	call	??$SerializeToSequenceContainer@V?$Array@H$05@Firaxis@@V?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@YAXAAVFDataStream@@AAV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@Z ; SerializeToSequenceContainer<Firaxis::Array<int,6>,std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > > >

; 3587 : #ifdef LEK_TRAIT_SPECIALIST_YIELD_MAX_ONE
; 3588 : 	kStream >> m_ppaaiAnySpecificSpecialistYieldChange;
; 3589 : #endif
; 3590 : 	kStream >> m_ppaaiUnimprovedFeatureYieldChange;

	lea	ecx, DWORD PTR [esi+844]
	push	ecx
	push	edi
	call	??$SerializeToSequenceContainer@V?$Array@H$05@Firaxis@@V?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@@YAXAAVFDataStream@@AAV?$vector@V?$Array@H$05@Firaxis@@V?$allocator@V?$Array@H$05@Firaxis@@@std@@@std@@@Z ; SerializeToSequenceContainer<Firaxis::Array<int,6>,std::vector<Firaxis::Array<int,6>,std::allocator<Firaxis::Array<int,6> > > >

; 3591 : 
; 3592 : 	if (uiVersion >= 11)

	mov	eax, DWORD PTR _uiVersion$[esp+76]
	add	esp, 24					; 00000018H
	cmp	eax, 11					; 0000000bH
	jb	$LN7@Read

; 3593 : 	{
; 3594 : 		kStream >> iNumEntries;

	lea	edx, DWORD PTR _iNumEntries$[esp+52]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3595 : 		m_aUniqueLuxuryAreas.clear();

	mov	ecx, DWORD PTR [esi+732]
	mov	ebx, DWORD PTR [esi+728]
	add	esi, 724				; 000002d4H
	cmp	ebx, ecx
	je	SHORT $LN1247@Read
	mov	eax, ecx
	sub	eax, ecx
	sar	eax, 2
	lea	edx, DWORD PTR [eax*4]
	lea	ebp, DWORD PTR [edx+ebx]
	test	eax, eax
	jle	SHORT $LN1088@Read
	push	edx
	push	ecx
	push	edx
	push	ebx
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN1088@Read:
	mov	DWORD PTR [esi+8], ebp
$LN1247@Read:

; 3596 : 		for (int iI = 0; iI < iNumEntries; iI++)

	xor	ebx, ebx
	cmp	DWORD PTR _iNumEntries$[esp+52], ebx
	jle	$LN1170@Read
	npad	4
$LL1249@Read:

; 3597 : 		{
; 3598 : 			int iAreaID;
; 3599 : 			kStream >> iAreaID;

	lea	eax, DWORD PTR _iAreaID$224484[esp+48]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 3600 : 			m_aUniqueLuxuryAreas.push_back(iAreaID);

	mov	edx, DWORD PTR [esi+4]
	test	edx, edx
	jne	SHORT $LN1101@Read
	xor	eax, eax
	jmp	SHORT $LN1102@Read
$LN1101@Read:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, edx
	sar	eax, 2
$LN1102@Read:
	mov	ecx, DWORD PTR [esi+8]
	mov	ebp, ecx
	sub	ebp, edx
	sar	ebp, 2
	cmp	ebp, eax
	jae	SHORT $LN1094@Read
	mov	edx, DWORD PTR _iAreaID$224484[esp+48]
	mov	DWORD PTR [ecx], edx
	add	ecx, 4
	mov	DWORD PTR [esi+8], ecx
	jmp	SHORT $LN5@Read
$LN1094@Read:
	lea	eax, DWORD PTR _iAreaID$224484[esp+48]
	push	eax
	push	1
	push	ecx
	mov	ecx, esi
	call	?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z ; std::vector<int,std::allocator<int> >::_Insert_n
$LN5@Read:
	inc	ebx
	cmp	ebx, DWORD PTR _iNumEntries$[esp+52]
	jl	SHORT $LL1249@Read
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 3610 : 	}
; 3611 : }

	add	esp, 36					; 00000024H
	ret	4
$LN7@Read:

; 3601 : 		}
; 3602 : 	}
; 3603 : 	else if (uiVersion >= 9)

	cmp	eax, 9
	jb	SHORT $LN2@Read

; 3604 : 	{
; 3605 : 		kStream >> m_aUniqueLuxuryAreas;

	add	esi, 724				; 000002d4H
	push	esi
	push	edi
	call	??$SerializeToSequenceContainer@HV?$vector@HV?$allocator@H@std@@@std@@@@YAXAAVFDataStream@@AAV?$vector@HV?$allocator@H@std@@@std@@@Z ; SerializeToSequenceContainer<int,std::vector<int,std::allocator<int> > >
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 3610 : 	}
; 3611 : }

	add	esp, 36					; 00000024H
	ret	4
$LN2@Read:

; 3606 : 	}
; 3607 : 	else
; 3608 : 	{
; 3609 : 		m_aUniqueLuxuryAreas.clear();

	mov	ecx, DWORD PTR [esi+732]
	mov	edi, DWORD PTR [esi+728]
	cmp	edi, ecx
	je	SHORT $LN1170@Read
	mov	eax, ecx
	sub	eax, ecx
	sar	eax, 2
	lea	edx, DWORD PTR [eax*4]
	lea	ebx, DWORD PTR [edx+edi]
	test	eax, eax
	jle	SHORT $LN1195@Read
	push	edx
	push	ecx
	push	edx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN1195@Read:
	mov	DWORD PTR [esi+732], ebx
$LN1170@Read:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 3610 : 	}
; 3611 : }

	add	esp, 36					; 00000024H
	ret	4
?Read@CvPlayerTraits@@QAEXAAVFDataStream@@@Z ENDP	; CvPlayerTraits::Read
_TEXT	ENDS
END
