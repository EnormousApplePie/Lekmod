; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\EnormousApplePie\Documents\GitHub\Lekmod\LEKMOD_DLL\CvGameCoreDLL_Expansion2\Lua\CvLuaTeam.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG218060 DB	'IsNone', 00H
	ORG $+1
$SG218061 DB	'AddTeam', 00H
$SG218062 DB	'CanChangeWarPeace', 00H
	ORG $+2
$SG218063 DB	'CanDeclareWar', 00H
	ORG $+2
$SG218064 DB	'DeclareWar', 00H
	ORG $+1
$SG218065 DB	'MakePeace', 00H
	ORG $+2
$SG218066 DB	'GetNumTurnsLockedIntoWar', 00H
	ORG $+3
$SG218067 DB	'Meet', 00H
	ORG $+3
$SG218068 DB	'GetScore', 00H
	ORG $+3
$SG218069 DB	'GetPower', 00H
	ORG $+3
$SG218070 DB	'GetDefensivePower', 00H
	ORG $+2
$SG218071 DB	'GetNumNukeUnits', 00H
$SG218072 DB	'GetTeamVotingForInDiplo', 00H
$SG218073 DB	'GetProjectedVotesFromMinorAllies', 00H
	ORG $+3
$SG218074 DB	'GetProjectedVotesFromLiberatedMinors', 00H
	ORG $+3
$SG218075 DB	'GetProjectedVotesFromCivs', 00H
	ORG $+2
$SG218076 DB	'GetTotalProjectedVotes', 00H
	ORG $+1
$SG218077 DB	'GetTotalSecuredVotes', 00H
	ORG $+3
$SG218078 DB	'GetAtWarCount', 00H
	ORG $+2
$SG218079 DB	'GetHasMetCivCount', 00H
	ORG $+2
$SG218080 DB	'HasMetHuman', 00H
$SG218081 DB	'GetDefensivePactCount', 00H
	ORG $+2
$SG218082 DB	'GetUnitClassMaking', 00H
	ORG $+1
$SG218083 DB	'GetUnitClassCountPlusMaking', 00H
$SG218084 DB	'GetBuildingClassMaking', 00H
	ORG $+1
$SG218085 DB	'GetBuildingClassCountPlusMaking', 00H
$SG218086 DB	'CountNumUnitsByArea', 00H
$SG218087 DB	'CountNumCitiesByArea', 00H
	ORG $+3
$SG218088 DB	'CountTotalPopulationByArea', 00H
	ORG $+1
$SG218089 DB	'CountEnemyDangerByArea', 00H
	ORG $+1
$SG218090 DB	'IsHuman', 00H
$SG218091 DB	'IsBarbarian', 00H
$SG218092 DB	'IsMinorCiv', 00H
	ORG $+1
$SG218093 DB	'IsMinorCivWarmonger', 00H
$SG218094 DB	'GetLeaderID', 00H
$SG218095 DB	'GetSecretaryID', 00H
	ORG $+1
$SG218096 DB	'GetHandicapType', 00H
$SG218097 DB	'GetName', 00H
$SG218098 DB	'GetNameKey', 00H
	ORG $+1
$SG218099 DB	'GetNumMembers', 00H
	ORG $+2
$SG218100 DB	'IsAlive', 00H
$SG218101 DB	'IsEverAlive', 00H
$SG218102 DB	'GetNumCities', 00H
	ORG $+3
$SG218103 DB	'GetTotalPopulation', 00H
	ORG $+1
$SG218104 DB	'GetTotalLand', 00H
	ORG $+3
$SG218105 DB	'GetNukeInterception', 00H
$SG218106 DB	'ChangeNukeInterception', 00H
	ORG $+1
$SG218107 DB	'GetForceTeamVoteEligibilityCount', 00H
	ORG $+3
$SG218108 DB	'IsForceTeamVoteEligible', 00H
$SG218109 DB	'ChangeForceTeamVoteEligibilityCount', 00H
$SG218110 DB	'GetExtraWaterSeeFromCount', 00H
	ORG $+2
$SG218111 DB	'IsExtraWaterSeeFrom', 00H
$SG218112 DB	'ChangeExtraWaterSeeFromCount', 00H
	ORG $+3
$SG218113 DB	'GetMapTradingCount', 00H
	ORG $+1
$SG218114 DB	'IsMapTrading', 00H
	ORG $+3
$SG218115 DB	'ChangeMapTradingCount', 00H
	ORG $+2
$SG218116 DB	'GetTechTradingCount', 00H
$SG218117 DB	'IsTechTrading', 00H
	ORG $+2
$SG218118 DB	'ChangeTechTradingCount', 00H
	ORG $+1
$SG218119 DB	'GetGoldTradingCount', 00H
$SG218120 DB	'IsGoldTrading', 00H
	ORG $+2
$SG218121 DB	'ChangeGoldTradingCount', 00H
	ORG $+1
$SG218122 DB	'GetAllowEmbassyTradingAllowedCount', 00H
	ORG $+1
$SG218123 DB	'IsAllowEmbassyTradingAllowed', 00H
	ORG $+3
$SG218124 DB	'ChangeAllowEmbassyTradingAllowedCount', 00H
	ORG $+2
$SG218125 DB	'GetOpenBordersTradingAllowedCount', 00H
	ORG $+2
$SG218126 DB	'IsOpenBordersTradingAllowed', 00H
$SG218127 DB	'IsOpenBordersTradingAllowedWithTeam', 00H
$SG218128 DB	'ChangeOpenBordersTradingAllowedCount', 00H
	ORG $+3
$SG218129 DB	'GetDefensivePactTradingAllowedCount', 00H
$SG218130 DB	'IsDefensivePactTradingAllowed', 00H
	ORG $+2
$SG218131 DB	'IsDefensivePactTradingAllowedWithTeam', 00H
	ORG $+2
$SG218132 DB	'ChangeDefensivePactTradingAllowedCount', 00H
	ORG $+1
$SG218133 DB	'IsResearchAgreementTradingAllowed', 00H
	ORG $+2
$SG218134 DB	'IsResearchAgreementTradingAllowedWithTeam', 00H
	ORG $+2
$SG218135 DB	'IsTradeAgreementTradingAllowed', 00H
	ORG $+1
$SG218136 DB	'GetPermanentAllianceTradingCount', 00H
	ORG $+3
$SG218137 DB	'IsPermanentAllianceTrading', 00H
	ORG $+1
$SG218138 DB	'ChangePermanentAllianceTradingCount', 00H
$SG218139 DB	'GetBridgeBuildingCount', 00H
	ORG $+1
$SG218140 DB	'IsBridgeBuilding', 00H
	ORG $+3
$SG218141 DB	'ChangeBridgeBuildingCount', 00H
	ORG $+2
$SG218142 DB	'GetWaterWorkCount', 00H
	ORG $+2
$SG218143 DB	'IsWaterWork', 00H
$SG218144 DB	'ChangeWaterWorkCount', 00H
	ORG $+3
$SG218145 DB	'GetBorderObstacleCount', 00H
	ORG $+1
$SG218146 DB	'IsBorderObstacle', 00H
	ORG $+3
$SG218147 DB	'ChangeBorderObstacleCount', 00H
	ORG $+2
$SG218148 DB	'IsMapCentering', 00H
	ORG $+1
$SG218149 DB	'SetMapCentering', 00H
$SG218150 DB	'GetID', 00H
	ORG $+2
$SG218151 DB	'GetTechShareCount', 00H
	ORG $+2
$SG218152 DB	'IsTechShare', 00H
$SG218153 DB	'ChangeTechShareCount', 00H
	ORG $+3
$SG218154 DB	'GetExtraMoves', 00H
	ORG $+2
$SG218155 DB	'ChangeExtraMoves', 00H
	ORG $+3
$SG218156 DB	'CanEmbark', 00H
	ORG $+2
$SG218157 DB	'CanDefensiveEmbark', 00H
	ORG $+1
$SG218158 DB	'IsHasMet', 00H
	ORG $+3
$SG218159 DB	'IsAtWar', 00H
$SG218160 DB	'IsPermanentWarPeace', 00H
$SG218161 DB	'SetPermanentWarPeace', 00H
	ORG $+3
$SG218162 DB	'GetLiberatedByTeam', 00H
	ORG $+1
$SG218163 DB	'GetKilledByTeam', 00H
$SG218164 DB	'HasEmbassyAtTeam', 00H
	ORG $+3
$SG218165 DB	'IsAllowsOpenBordersToTeam', 00H
	ORG $+2
$SG218166 DB	'IsForcePeace', 00H
	ORG $+3
$SG218167 DB	'IsDefensivePact', 00H
$SG218168 DB	'GetRouteChange', 00H
	ORG $+1
$SG218169 DB	'ChangeRouteChange', 00H
	ORG $+2
$SG218170 DB	'GetProjectCount', 00H
$SG218171 DB	'GetProjectDefaultArtType', 00H
	ORG $+3
$SG218172 DB	'SetProjectDefaultArtType', 00H
	ORG $+3
$SG218173 DB	'GetProjectArtType', 00H
	ORG $+2
$SG218174 DB	'SetProjectArtType', 00H
	ORG $+2
$SG218175 DB	'IsProjectMaxedOut', 00H
	ORG $+2
$SG218176 DB	'IsProjectAndArtMaxedOut', 00H
$SG218177 DB	'ChangeProjectCount', 00H
	ORG $+1
$SG218178 DB	'GetProjectMaking', 00H
	ORG $+3
$SG218179 DB	'GetUnitClassCount', 00H
	ORG $+2
$SG218180 DB	'IsUnitClassMaxedOut', 00H
$SG218181 DB	'GetBuildingClassCount', 00H
	ORG $+2
$SG218182 DB	'IsBuildingClassMaxedOut', 00H
$SG218183 DB	'GetObsoleteBuildingCount', 00H
	ORG $+3
$SG218184 DB	'IsObsoleteBuilding', 00H
	ORG $+1
$SG218185 DB	'IsHasResearchAgreement', 00H
	ORG $+1
$SG218186 DB	'IsHasTradeAgreement', 00H
$SG218187 DB	'IsHasTech', 00H
	ORG $+2
$SG218188 DB	'SetHasTech', 00H
	ORG $+1
$SG218189 DB	'GetTeamTechs', 00H
	ORG $+3
$SG218190 DB	'GetImprovementYieldChange', 00H
	ORG $+2
$SG218191 DB	'ChangeImprovementYieldChange', 00H
	ORG $+3
$SG218192 DB	'IsHomeOfUnitedNations', 00H
	ORG $+2
$SG218193 DB	'GetVictoryCountdown', 00H
$SG218194 DB	'GetVictoryDelay', 00H
$SG218195 DB	'CanLaunch', 00H
	ORG $+2
$SG218196 DB	'GetVictoryPoints', 00H
	ORG $+3
$SG218197 DB	'ChangeVictoryPoints', 00H
$SG218198 DB	'GetCurrentEra', 00H
	ORG $+2
$SG218199 DB	'SetCurrentEra', 00H
	ORG $+2
$SG218200 DB	'UpdateEmbarkGraphics', 00H
	ORG $+3
$SG218203 DB	'Team', 00H
	ORG $+3
$SG218207 DB	'Teams', 00H
	ORG $+2
$SG218209 DB	'Teams', 00H
	ORG $+2
$SG219930 DB	'__instances', 00H
$SG219931 DB	'__mode', 00H
	ORG $+1
$SG219932 DB	'v', 00H
	ORG $+2
$SG219934 DB	'__instances', 00H
$SG219937 DB	'__instance', 00H
	ORG $+1
$SG219938 DB	'__index', 00H
$SG219953 DB	'__instance', 00H
	ORG $+5
$SG219959 DB	'Not a valid instance.  Either the instance is NULL or yo'
	DB	'u used ''.'' instead of '':''.', 00H
	ORG $+1
$SG219967 DB	'Instance does not exist.', 00H
	ORG $+3
$SG219978 DB	'__instances', 00H
$SG219979 DB	'__mode', 00H
	ORG $+1
$SG219980 DB	'v', 00H
	ORG $+2
$SG219982 DB	'__instances', 00H
$SG219985 DB	'__instance', 00H
	ORG $+1
$SG219986 DB	'__index', 00H
CONST	ENDS
EXTRN	_lua_tointeger:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
;	COMDAT ??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z PROC	; CvLuaArgs::toValue<int>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 19   : 		return lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 20   : 	}

	ret	0
??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ENDP	; CvLuaArgs::toValue<int>
_TEXT	ENDS
EXTRN	_lua_toboolean:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z PROC	; CvLuaArgs::toValue<bool>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 24   : 		return lua_toboolean(L, idx) != 0;

	push	eax
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	neg	eax
	sbb	eax, eax
	neg	eax

; 25   : 	}

	ret	0
??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ENDP	; CvLuaArgs::toValue<bool>
_TEXT	ENDS
EXTRN	_lua_pushinteger:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z
_TEXT	SEGMENT
??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z PROC	; CvLuaArgs::pushValue<int>, COMDAT
; _L$ = ecx
; _t$ = eax

; 39   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 40   : 	}

	ret	0
??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ENDP	; CvLuaArgs::pushValue<int>
_TEXT	ENDS
EXTRN	_lua_pushboolean:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z
_TEXT	SEGMENT
??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z PROC	; CvLuaArgs::pushValue<bool>, COMDAT
; _L$ = ecx
; _t$ = eax

; 45   : 		lua_pushboolean(L, t);

	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 46   : 	}

	ret	0
??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ENDP	; CvLuaArgs::pushValue<bool>
_TEXT	ENDS
PUBLIC	?GetTypeName@CvLuaTeam@@SAPBDXZ			; CvLuaTeam::GetTypeName
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluateam.cpp
;	COMDAT ?GetTypeName@CvLuaTeam@@SAPBDXZ
_TEXT	SEGMENT
?GetTypeName@CvLuaTeam@@SAPBDXZ PROC			; CvLuaTeam::GetTypeName, COMDAT

; 213  : 	return "Team";

	mov	eax, OFFSET $SG218203

; 214  : }

	ret	0
?GetTypeName@CvLuaTeam@@SAPBDXZ ENDP			; CvLuaTeam::GetTypeName
_TEXT	ENDS
PUBLIC	?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@KAXPAUlua_State@@@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::DefaultHandleMissingInstance
EXTRN	_luaL_error:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
;	COMDAT ?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@KAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@KAXPAUlua_State@@@Z PROC ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::DefaultHandleMissingInstance, COMDAT

; 165  : 	luaL_error(L, "Instance does not exist.");

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET $SG219967
	push	eax
	call	_luaL_error
	add	esp, 8

; 166  : }

	ret	0
?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@KAXPAUlua_State@@@Z ENDP ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::DefaultHandleMissingInstance
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAXPAUlua_State@@PAVCvTeamTechs@@@Z ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::Push
EXTRN	_lua_pushnil:PROC
EXTRN	_lua_remove:PROC
EXTRN	_lua_pushlightuserdata:PROC
EXTRN	_lua_rawget:PROC
EXTRN	?PushMethods@CvLuaTeamTech@@SAXPAUlua_State@@H@Z:PROC ; CvLuaTeamTech::PushMethods
EXTRN	_lua_gettop:PROC
EXTRN	_lua_setfield:PROC
EXTRN	_lua_pushvalue:PROC
EXTRN	_lua_setmetatable:PROC
EXTRN	_lua_rawset:PROC
EXTRN	_lua_pushstring:PROC
EXTRN	_lua_createtable:PROC
EXTRN	_lua_settop:PROC
EXTRN	_lua_type:PROC
EXTRN	_lua_getfield:PROC
EXTRN	?GetTypeName@CvLuaTeamTech@@SAPBDXZ:PROC	; CvLuaTeamTech::GetTypeName
; Function compile flags: /Ogtpy
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAXPAUlua_State@@PAVCvTeamTechs@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAXPAUlua_State@@PAVCvTeamTechs@@@Z PROC ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::Push, COMDAT

; 39   : {

	push	edi

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	mov	edi, DWORD PTR _pkType$[esp]
	test	edi, edi
	je	$LN4@Push
	push	ebx
	push	ebp
	push	esi

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaTeamTech@@SAPBDXZ	; CvLuaTeamTech::GetTypeName
	mov	esi, DWORD PTR _L$[esp+12]
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_getfield

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN7@Push

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 59   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET $SG219978
	push	esi
	call	_lua_pushstring

; 63   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET $SG219979
	push	esi
	call	_lua_pushstring

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET $SG219980
	push	esi
	call	_lua_pushstring
	add	esp, 68					; 00000044H

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	push	esi
	call	_lua_pushvalue

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaTeamTech@@SAPBDXZ	; CvLuaTeamTech::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_setfield

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	push	esi
	call	_lua_gettop
	push	eax
	push	esi
	call	?PushMethods@CvLuaTeamTech@@SAXPAUlua_State@@H@Z ; CvLuaTeamTech::PushMethods
	add	esp, 56					; 00000038H
$LN7@Push:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET $SG219982
	push	esi
	mov	ebx, eax
	call	_lua_pushstring

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	mov	ebp, eax
	call	_lua_pushlightuserdata

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	SHORT $LN2@Push

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 97   : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET $SG219985
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET $SG219986
	push	esi
	call	_lua_pushstring

; 102  : 			lua_pushvalue(L, type_index);

	push	ebx
	push	esi
	call	_lua_pushvalue
	add	esp, 68					; 00000044H

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_pushvalue

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	push	ebp
	push	esi
	call	_lua_rawset
	add	esp, 40					; 00000028H
$LN2@Push:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	push	ebp
	push	esi
	call	_lua_remove

; 114  : 		lua_remove(L, type_index);

	push	ebx
	push	esi
	call	_lua_remove
	add	esp, 16					; 00000010H
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
$LN4@Push:

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else
; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushnil
	add	esp, 4
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAXPAUlua_State@@PAVCvTeamTechs@@@Z ENDP ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::Push
_TEXT	ENDS
PUBLIC	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
; Function compile flags: /Ogtpy
;	COMDAT ?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ
_TEXT	SEGMENT
?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ PROC ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex, COMDAT

; 159  : 	return 2;

	mov	eax, 2

; 160  : }

	ret	0
?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SA?BHXZ ENDP ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetStartingArgIndex
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum TeamTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum TeamTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z PROC ; CvLuaArgs::pushValue<enum TeamTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum TeamTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum UnitClassTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum UnitClassTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum BuildingClassTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum BuildingClassTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@PAVCvArea@@@CvLuaArgs@@YAPAVCvArea@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@PAVCvArea@@@CvLuaArgs@@YAPAVCvArea@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<CvArea *>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@PAVCvArea@@@CvLuaArgs@@YAPAVCvArea@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<CvArea *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z PROC ; CvLuaArgs::pushValue<enum PlayerTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum PlayerTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z PROC ; CvLuaArgs::pushValue<enum HandicapTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum HandicapTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4VoteSourceTypes@@@CvLuaArgs@@YA?AW4VoteSourceTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4VoteSourceTypes@@@CvLuaArgs@@YA?AW4VoteSourceTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum VoteSourceTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4VoteSourceTypes@@@CvLuaArgs@@YA?AW4VoteSourceTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum VoteSourceTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4DomainTypes@@@CvLuaArgs@@YA?AW4DomainTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4DomainTypes@@@CvLuaArgs@@YA?AW4DomainTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum DomainTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4DomainTypes@@@CvLuaArgs@@YA?AW4DomainTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum DomainTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4RouteTypes@@@CvLuaArgs@@YA?AW4RouteTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4RouteTypes@@@CvLuaArgs@@YA?AW4RouteTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum RouteTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4RouteTypes@@@CvLuaArgs@@YA?AW4RouteTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum RouteTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum ProjectTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum ProjectTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum BuildingTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum BuildingTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4ImprovementTypes@@@CvLuaArgs@@YA?AW4ImprovementTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4ImprovementTypes@@@CvLuaArgs@@YA?AW4ImprovementTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum ImprovementTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4ImprovementTypes@@@CvLuaArgs@@YA?AW4ImprovementTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum ImprovementTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum YieldTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum YieldTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4VictoryTypes@@@CvLuaArgs@@YA?AW4VictoryTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4VictoryTypes@@@CvLuaArgs@@YA?AW4VictoryTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum VictoryTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4VictoryTypes@@@CvLuaArgs@@YA?AW4VictoryTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum VictoryTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4EraTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EraTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4EraTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EraTypes@@@Z PROC ; CvLuaArgs::pushValue<enum EraTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4EraTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EraTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum EraTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4EraTypes@@@CvLuaArgs@@YA?AW4EraTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4EraTypes@@@CvLuaArgs@@YA?AW4EraTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum EraTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4EraTypes@@@CvLuaArgs@@YA?AW4EraTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum EraTypes>
_TEXT	ENDS
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
_TEXT	ENDS
PUBLIC	??BCvString@@QBEPBDXZ				; CvString::operator char const *
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??BCvString@@QBEPBDXZ
_TEXT	SEGMENT
??BCvString@@QBEPBDXZ PROC				; CvString::operator char const *, COMDAT
; _this$ = ecx

; 31   : 	operator const char*() const 	{ return c_str(); }												

	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
??BCvString@@QBEPBDXZ ENDP				; CvString::operator char const *
_TEXT	ENDS
PUBLIC	?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z		; CvTeam::getTeam
EXTRN	?m_aTeams@CvTeam@@1PAV1@A:DWORD			; CvTeam::m_aTeams
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvteam.h
;	COMDAT ?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z
_TEXT	SEGMENT
_eTeam$ = 8						; size = 4
?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z PROC		; CvTeam::getTeam, COMDAT

; 29   : 		CvAssertMsg(eTeam != NO_TEAM, "eTeam is not assigned a valid value");
; 30   : 		CvAssertMsg(eTeam < MAX_TEAMS, "eTeam is not assigned a valid value");
; 31   : 		return m_aTeams[eTeam];

	mov	eax, DWORD PTR _eTeam$[esp-4]
	imul	eax, 2980				; 00000ba4H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams

; 32   : 	}

	ret	0
?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z ENDP		; CvTeam::getTeam
_TEXT	ENDS
PUBLIC	?isAlive@CvTeam@@QBE_NXZ			; CvTeam::isAlive
; Function compile flags: /Ogtpy
;	COMDAT ?isAlive@CvTeam@@QBE_NXZ
_TEXT	SEGMENT
?isAlive@CvTeam@@QBE_NXZ PROC				; CvTeam::isAlive, COMDAT
; _this$ = ecx

; 131  : 		return m_iAliveCount > 0;

	xor	eax, eax
	cmp	DWORD PTR [ecx+12], eax
	setg	al

; 132  : 	}

	ret	0
?isAlive@CvTeam@@QBE_NXZ ENDP				; CvTeam::isAlive
_TEXT	ENDS
PUBLIC	?HandleMissingInstance@CvLuaTeam@@SAXPAUlua_State@@@Z ; CvLuaTeam::HandleMissingInstance
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluateam.cpp
;	COMDAT ?HandleMissingInstance@CvLuaTeam@@SAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?HandleMissingInstance@CvLuaTeam@@SAXPAUlua_State@@@Z PROC ; CvLuaTeam::HandleMissingInstance, COMDAT

; 33   : 	DefaultHandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET $SG219967
	push	eax
	call	_luaL_error
	add	esp, 8

; 34   : }

	ret	0
?HandleMissingInstance@CvLuaTeam@@SAXPAUlua_State@@@Z ENDP ; CvLuaTeam::HandleMissingInstance
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
EXTRN	_lua_touserdata:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance, COMDAT

; 127  : {

	push	ebx
	push	ebp
	push	esi

; 128  : 	const int stack_size = lua_gettop(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	mov	ebp, eax

; 129  : 	bool bFail = true;
; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;
; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	eax, DWORD PTR _idx$[esp+16]
	push	eax
	push	esi
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN3@GetInstanc

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	mov	ecx, DWORD PTR _idx$[esp+12]
	push	OFFSET $SG219953
	push	ecx
	push	esi
	call	_lua_getfield

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN3@GetInstanc

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8

; 138  : 			if(pkInstance)

	test	edi, edi
	je	SHORT $LN3@GetInstanc

; 139  : 			{
; 140  : 				bFail = false;

	xor	bl, bl
$LN3@GetInstanc:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	test	bl, bl
	je	SHORT $LN13@GetInstanc
	cmp	BYTE PTR _bErrorOnFail$[esp+12], 0
	je	SHORT $LN13@GetInstanc

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[esp+12], 1
	jne	SHORT $LN1@GetInstanc

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc:

; 151  : 		Derived::HandleMissingInstance(L);

	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 8
$LN13@GetInstanc:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 154  : }

	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAPAVCvTeam@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::GetInstance
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes>, COMDAT

; 230  : {

	push	ebx
	push	ebp
	push	esi

; 231  : 	const int idx = Derived::GetStartingArgIndex();
; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe
	xor	bl, bl
$LN7@BasicLuaMe:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe:

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	pop	edi
	pop	esi
	pop	ebp

; 234  : 	return 0;

	xor	eax, eax
	pop	ebx

; 235  : }

	ret	0
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@2
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@2
	xor	bl, bl
$LN7@BasicLuaMe@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@2
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@2:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@_N@Z@Z
_TEXT	SEGMENT
$T220767 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes,bool>, COMDAT

; 239  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 240  : 	const int idx = Derived::GetStartingArgIndex();
; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@3
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@3
	xor	bl, bl
$LN7@BasicLuaMe@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@3
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@3:

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	push	3
	push	esi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR $T220767[esp+20], al
	mov	ecx, DWORD PTR $T220767[esp+20]
	push	ecx
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	pop	edi
	pop	esi
	pop	ebp

; 243  : 	return 0;

	xor	eax, eax
	pop	ebx

; 244  : }

	pop	ecx
	ret	0
??$BasicLuaMethod@W4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@_N2@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes,bool,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@_N2@Z@Z
_TEXT	SEGMENT
$T220803 = -8						; size = 1
$T220807 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@_N2@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes,bool,bool>, COMDAT

; 249  : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 250  : 	const int idx = Derived::GetStartingArgIndex();
; 251  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@4
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@4
	xor	bl, bl
$LN7@BasicLuaMe@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@4
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@4:

; 252  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2));

	push	4
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	3
	push	esi
	mov	BYTE PTR $T220803[esp+40], al
	call	_lua_toboolean
	mov	edx, DWORD PTR $T220803[esp+40]
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	cl
	mov	BYTE PTR $T220807[esp+24], cl
	mov	eax, DWORD PTR $T220807[esp+24]
	push	edx
	push	eax
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+32]
	pop	edi
	pop	esi
	pop	ebp

; 253  : 	return 0;

	xor	eax, eax
	pop	ebx

; 254  : }

	add	esp, 8
	ret	0
??$BasicLuaMethod@W4TeamTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@_N2@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes,bool,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum TeamTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4TeamTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4TeamTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum TeamTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@5
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@5
	xor	bl, bl
$LN7@BasicLuaMe@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@5
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@5:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4TeamTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum TeamTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@6
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@6
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@6
	xor	bl, bl
$LN5@BasicLuaMe@6:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@6
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@6:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4TeamTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4TeamTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@7
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@7
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@7
	xor	bl, bl
$LN5@BasicLuaMe@7:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@7
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@7:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4TeamTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEH_N@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEH_N@Z@Z
_TEXT	SEGMENT
$T220940 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEH_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,bool>, COMDAT

; 78   : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@8
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@8
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@8
	xor	bl, bl
$LN7@BasicLuaMe@8:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@8
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@8:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR $T220940[esp+20], al
	mov	ecx, DWORD PTR $T220940[esp+20]
	push	ecx
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	pop	ecx
	ret	0
??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEH_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@9
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@9
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@9
	xor	bl, bl
$LN5@BasicLuaMe@9:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@9
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@9:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4UnitClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum UnitClassTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4UnitClassTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4UnitClassTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum UnitClassTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@10
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@10
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@10
	xor	bl, bl
$LN7@BasicLuaMe@10:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@10
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@10:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4UnitClassTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum UnitClassTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum BuildingClassTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingClassTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingClassTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum BuildingClassTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@11
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@11
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@11
	xor	bl, bl
$LN7@BasicLuaMe@11:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@11
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@11:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingClassTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum BuildingClassTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HPAVCvArea@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHPAVCvArea@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,CvArea *>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HPAVCvArea@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHPAVCvArea@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HPAVCvArea@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHPAVCvArea@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,CvArea *>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@12
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@12
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@12
	xor	bl, bl
$LN7@BasicLuaMe@12:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@12
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@12:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HPAVCvArea@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHPAVCvArea@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,CvArea *>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum PlayerTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4PlayerTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4PlayerTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum PlayerTypes>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@13
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@13
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@13
	xor	bl, bl
$LN5@BasicLuaMe@13:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@13
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@13:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4PlayerTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum PlayerTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4HandicapTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum HandicapTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4HandicapTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4HandicapTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum HandicapTypes>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@14
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@14
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@14
	xor	bl, bl
$LN5@BasicLuaMe@14:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@14
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@14:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4HandicapTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum HandicapTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>, COMDAT

; 230  : {

	push	ebx
	push	ebp
	push	esi

; 231  : 	const int idx = Derived::GetStartingArgIndex();
; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@15
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@15
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@15
	xor	bl, bl
$LN7@BasicLuaMe@15:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@15
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@15:

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	pop	edi
	pop	esi
	pop	ebp

; 234  : 	return 0;

	xor	eax, eax
	pop	ebx

; 235  : }

	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4VoteSourceTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4VoteSourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum VoteSourceTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4VoteSourceTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4VoteSourceTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4VoteSourceTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4VoteSourceTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum VoteSourceTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@16
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@16
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@16
	xor	bl, bl
$LN7@BasicLuaMe@16:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@16
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@16:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4VoteSourceTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4VoteSourceTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum VoteSourceTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4VoteSourceTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4VoteSourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum VoteSourceTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4VoteSourceTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4VoteSourceTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4VoteSourceTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4VoteSourceTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum VoteSourceTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@17
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@17
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@17
	xor	bl, bl
$LN7@BasicLuaMe@17:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@17
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@17:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@_NW4VoteSourceTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4VoteSourceTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum VoteSourceTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4VoteSourceTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4VoteSourceTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum VoteSourceTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4VoteSourceTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4VoteSourceTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4VoteSourceTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4VoteSourceTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum VoteSourceTypes,int>, COMDAT

; 239  : {

	push	ebx
	push	ebp
	push	esi

; 240  : 	const int idx = Derived::GetStartingArgIndex();
; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@18
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@18
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@18
	xor	bl, bl
$LN7@BasicLuaMe@18:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@18
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@18:

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	push	3
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	pop	edi
	pop	esi
	pop	ebp

; 243  : 	return 0;

	xor	eax, eax
	pop	ebx

; 244  : }

	ret	0
??$BasicLuaMethod@W4VoteSourceTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4VoteSourceTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum VoteSourceTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEX_N@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEX_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>, COMDAT

; 230  : {

	push	ebx
	push	ebp
	push	esi

; 231  : 	const int idx = Derived::GetStartingArgIndex();
; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@19
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@19
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@19
	xor	bl, bl
$LN7@BasicLuaMe@19:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@19
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@19:

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	push	2
	push	esi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	movzx	ecx, al
	push	ecx
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	pop	edi
	pop	esi
	pop	ebp

; 234  : 	return 0;

	xor	eax, eax
	pop	ebx

; 235  : }

	ret	0
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEX_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHH@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,int>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@20
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@20
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@20
	xor	bl, bl
$LN7@BasicLuaMe@20:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@20
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@20:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NH@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,int>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@21
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@21
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@21
	xor	bl, bl
$LN7@BasicLuaMe@21:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@21
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@21:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@_NH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXHH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXHH@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXHH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,int>, COMDAT

; 239  : {

	push	ebx
	push	ebp
	push	esi

; 240  : 	const int idx = Derived::GetStartingArgIndex();
; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@22
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@22
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@22
	xor	bl, bl
$LN7@BasicLuaMe@22:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@22
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@22:

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	push	3
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	pop	edi
	pop	esi
	pop	ebp

; 243  : 	return 0;

	xor	eax, eax
	pop	ebx

; 244  : }

	ret	0
??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXHH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4DomainTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4DomainTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum DomainTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4DomainTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4DomainTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4DomainTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4DomainTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum DomainTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@23
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@23
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@23
	xor	bl, bl
$LN7@BasicLuaMe@23:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@23
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@23:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4DomainTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4DomainTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum DomainTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4DomainTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4DomainTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum DomainTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4DomainTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4DomainTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4DomainTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4DomainTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum DomainTypes,int>, COMDAT

; 239  : {

	push	ebx
	push	ebp
	push	esi

; 240  : 	const int idx = Derived::GetStartingArgIndex();
; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@24
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@24
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@24
	xor	bl, bl
$LN7@BasicLuaMe@24:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@24
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@24:

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	push	3
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	pop	edi
	pop	esi
	pop	ebp

; 243  : 	return 0;

	xor	eax, eax
	pop	ebx

; 244  : }

	ret	0
??$BasicLuaMethod@W4DomainTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4DomainTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum DomainTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4RouteTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4RouteTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum RouteTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4RouteTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4RouteTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4RouteTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4RouteTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum RouteTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@25
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@25
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@25
	xor	bl, bl
$LN7@BasicLuaMe@25:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@25
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@25:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4RouteTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4RouteTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum RouteTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4RouteTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4RouteTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum RouteTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4RouteTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4RouteTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4RouteTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4RouteTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum RouteTypes,int>, COMDAT

; 239  : {

	push	ebx
	push	ebp
	push	esi

; 240  : 	const int idx = Derived::GetStartingArgIndex();
; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@26
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@26
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@26
	xor	bl, bl
$LN7@BasicLuaMe@26:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@26
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@26:

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	push	3
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	pop	edi
	pop	esi
	pop	ebp

; 243  : 	return 0;

	xor	eax, eax
	pop	ebx

; 244  : }

	ret	0
??$BasicLuaMethod@W4RouteTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4RouteTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum RouteTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ProjectTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ProjectTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@27
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@27
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@27
	xor	bl, bl
$LN7@BasicLuaMe@27:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@27
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@27:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ProjectTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ProjectTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ProjectTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ProjectTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ProjectTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ProjectTypes,int>, COMDAT

; 239  : {

	push	ebx
	push	ebp
	push	esi

; 240  : 	const int idx = Derived::GetStartingArgIndex();
; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@28
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@28
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@28
	xor	bl, bl
$LN7@BasicLuaMe@28:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@28
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@28:

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	push	3
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	pop	edi
	pop	esi
	pop	ebp

; 243  : 	return 0;

	xor	eax, eax
	pop	ebx

; 244  : }

	ret	0
??$BasicLuaMethod@W4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ProjectTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ProjectTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ProjectTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ProjectTypes,int>, COMDAT

; 88   : {

	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@29
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@29
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@29
	xor	bl, bl
$LN7@BasicLuaMe@29:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@29
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@29:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	ret	0
??$BasicLuaMethod@HW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ProjectTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4ProjectTypes@@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ProjectTypes@@HH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ProjectTypes,int,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4ProjectTypes@@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ProjectTypes@@HH@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4ProjectTypes@@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ProjectTypes@@HH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ProjectTypes,int,int>, COMDAT

; 249  : {

	push	ebx
	push	ebp
	push	esi

; 250  : 	const int idx = Derived::GetStartingArgIndex();
; 251  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@30
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@30
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@30
	xor	bl, bl
$LN7@BasicLuaMe@30:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@30
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@30:

; 252  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2));

	push	4
	push	esi
	call	_lua_tointeger
	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	pop	edi
	pop	esi
	pop	ebp

; 253  : 	return 0;

	xor	eax, eax
	pop	ebx

; 254  : }

	ret	0
??$BasicLuaMethod@W4ProjectTypes@@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ProjectTypes@@HH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ProjectTypes,int,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4ProjectTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum ProjectTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4ProjectTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4ProjectTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum ProjectTypes,int>, COMDAT

; 88   : {

	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@31
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@31
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@31
	xor	bl, bl
$LN7@BasicLuaMe@31:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@31
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@31:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	ret	0
??$BasicLuaMethod@_NW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4ProjectTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum ProjectTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum ProjectTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4ProjectTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4ProjectTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum ProjectTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@32
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@32
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@32
	xor	bl, bl
$LN7@BasicLuaMe@32:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@32
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@32:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@_NW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4ProjectTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum ProjectTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4UnitClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum UnitClassTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4UnitClassTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4UnitClassTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum UnitClassTypes,int>, COMDAT

; 88   : {

	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@33
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@33
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@33
	xor	bl, bl
$LN7@BasicLuaMe@33:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@33
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@33:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	ret	0
??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4UnitClassTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum UnitClassTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4BuildingClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum BuildingClassTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4BuildingClassTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4BuildingClassTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum BuildingClassTypes,int>, COMDAT

; 88   : {

	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@34
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@34
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@34
	xor	bl, bl
$LN7@BasicLuaMe@34:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@34
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@34:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	ret	0
??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4BuildingClassTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum BuildingClassTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum BuildingTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum BuildingTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@35
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@35
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@35
	xor	bl, bl
$LN7@BasicLuaMe@35:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@35
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@35:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum BuildingTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum BuildingTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4BuildingTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4BuildingTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum BuildingTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@36
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@36
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@36
	xor	bl, bl
$LN7@BasicLuaMe@36:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@36
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@36:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4BuildingTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum BuildingTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ImprovementTypes@@W4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ImprovementTypes@@W4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ImprovementTypes,enum YieldTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4ImprovementTypes@@W4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ImprovementTypes@@W4YieldTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ImprovementTypes@@W4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ImprovementTypes@@W4YieldTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ImprovementTypes,enum YieldTypes>, COMDAT

; 88   : {

	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@37
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@37
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@37
	xor	bl, bl
$LN7@BasicLuaMe@37:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@37
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@37:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	ret	0
??$BasicLuaMethod@HW4ImprovementTypes@@W4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ImprovementTypes@@W4YieldTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ImprovementTypes,enum YieldTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4ImprovementTypes@@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ImprovementTypes@@W4YieldTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ImprovementTypes,enum YieldTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4ImprovementTypes@@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ImprovementTypes@@W4YieldTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4ImprovementTypes@@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ImprovementTypes@@W4YieldTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ImprovementTypes,enum YieldTypes,int>, COMDAT

; 249  : {

	push	ebx
	push	ebp
	push	esi

; 250  : 	const int idx = Derived::GetStartingArgIndex();
; 251  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@38
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@38
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@38
	xor	bl, bl
$LN7@BasicLuaMe@38:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@38
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@38:

; 252  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2));

	push	4
	push	esi
	call	_lua_tointeger
	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	pop	edi
	pop	esi
	pop	ebp

; 253  : 	return 0;

	xor	eax, eax
	pop	ebx

; 254  : }

	ret	0
??$BasicLuaMethod@W4ImprovementTypes@@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ImprovementTypes@@W4YieldTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ImprovementTypes,enum YieldTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4VictoryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum VictoryTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4VictoryTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4VictoryTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum VictoryTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@39
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@39
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@39
	xor	bl, bl
$LN7@BasicLuaMe@39:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@39
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@39:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4VictoryTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum VictoryTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4VictoryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum VictoryTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4VictoryTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4VictoryTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum VictoryTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@40
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@40
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@40
	xor	bl, bl
$LN7@BasicLuaMe@40:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@40
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@40:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@_NW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4VictoryTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum VictoryTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4EraTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum EraTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4EraTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4EraTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum EraTypes>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@41
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@41
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@41
	xor	bl, bl
$LN5@BasicLuaMe@41:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@41
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@41:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4EraTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum EraTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4EraTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum EraTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4EraTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4EraTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum EraTypes>, COMDAT

; 230  : {

	push	ebx
	push	ebp
	push	esi

; 231  : 	const int idx = Derived::GetStartingArgIndex();
; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@42
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@42
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@42
	xor	bl, bl
$LN7@BasicLuaMe@42:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@42
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@42:

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	pop	edi
	pop	esi
	pop	ebp

; 234  : 	return 0;

	xor	eax, eax
	pop	ebx

; 235  : }

	ret	0
??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4EraTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum EraTypes>
_TEXT	ENDS
PUBLIC	?lIsNone@CvLuaTeam@@KAHPAUlua_State@@@Z		; CvLuaTeam::lIsNone
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluateam.cpp
;	COMDAT ?lIsNone@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsNone@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lIsNone, COMDAT

; 246  : {

	push	ebx
	push	ebp
	push	esi

; 247  : #ifdef AUI_WARNING_FIXES
; 248  : 	const bool bDoesNotExist = (GetInstance(L, 1, false) == NULL);
; 249  : 	lua_pushboolean(L, bDoesNotExist ? 1 : 0);
; 250  : #else
; 251  : 	const bool bDoesNotExist = (GetInstance(L, false) == NULL);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	xor	edi, edi
	push	edi
	push	esi
	mov	ebp, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsNone
	push	OFFSET $SG219953
	push	edi
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsNone
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsNone
	xor	bl, bl
$LN5@lIsNone:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsNone
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 8
$LN12@lIsNone:
	xor	eax, eax
	test	edi, edi
	sete	al

; 252  : 	lua_pushboolean(L, bDoesNotExist);

	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 253  : #endif
; 254  : 
; 255  : 	return 1;

	mov	eax, 1
	pop	ebx

; 256  : }

	ret	0
?lIsNone@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lIsNone
_TEXT	ENDS
PUBLIC	?lAddTeam@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lAddTeam
EXTRN	?addTeam@CvTeam@@QAEXW4TeamTypes@@@Z:PROC	; CvTeam::addTeam
; Function compile flags: /Ogtpy
;	COMDAT ?lAddTeam@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddTeam@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lAddTeam, COMDAT

; 263  : 	return BasicLuaMethod(L, &CvTeam::addTeam);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?addTeam@CvTeam@@QAEXW4TeamTypes@@@Z ; CvTeam::addTeam
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes>
	add	esp, 8

; 264  : }

	ret	0
?lAddTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lAddTeam
_TEXT	ENDS
PUBLIC	?lCanChangeWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCanChangeWarPeace
EXTRN	?canChangeWarPeace@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC ; CvTeam::canChangeWarPeace
; Function compile flags: /Ogtpy
;	COMDAT ?lCanChangeWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanChangeWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lCanChangeWarPeace, COMDAT

; 271  : 	return BasicLuaMethod(L, &CvTeam::canChangeWarPeace);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?canChangeWarPeace@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::canChangeWarPeace
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 272  : }

	ret	0
?lCanChangeWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lCanChangeWarPeace
_TEXT	ENDS
PUBLIC	?lCanDeclareWar@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lCanDeclareWar
EXTRN	?canDeclareWar@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC ; CvTeam::canDeclareWar
; Function compile flags: /Ogtpy
;	COMDAT ?lCanDeclareWar@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanDeclareWar@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lCanDeclareWar, COMDAT

; 278  : 	return BasicLuaMethod(L, &CvTeam::canDeclareWar);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?canDeclareWar@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::canDeclareWar
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 279  : }

	ret	0
?lCanDeclareWar@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lCanDeclareWar
_TEXT	ENDS
PUBLIC	?lDeclareWar@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lDeclareWar
EXTRN	?declareWar@CvTeam@@QAEXW4TeamTypes@@_N@Z:PROC	; CvTeam::declareWar
; Function compile flags: /Ogtpy
;	COMDAT ?lDeclareWar@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDeclareWar@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lDeclareWar, COMDAT

; 285  : 	return BasicLuaMethod(L, &CvTeam::declareWar);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?declareWar@CvTeam@@QAEXW4TeamTypes@@_N@Z ; CvTeam::declareWar
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes,bool>
	add	esp, 8

; 286  : }

	ret	0
?lDeclareWar@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lDeclareWar
_TEXT	ENDS
PUBLIC	?lMakePeace@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lMakePeace
EXTRN	?makePeace@CvTeam@@QAEXW4TeamTypes@@_N1@Z:PROC	; CvTeam::makePeace
; Function compile flags: /Ogtpy
;	COMDAT ?lMakePeace@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lMakePeace@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lMakePeace, COMDAT

; 292  : 	return BasicLuaMethod(L, &CvTeam::makePeace);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?makePeace@CvTeam@@QAEXW4TeamTypes@@_N1@Z ; CvTeam::makePeace
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@_N2@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes,bool,bool>
	add	esp, 8

; 293  : }

	ret	0
?lMakePeace@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lMakePeace
_TEXT	ENDS
PUBLIC	?lGetNumTurnsLockedIntoWar@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetNumTurnsLockedIntoWar
EXTRN	?GetNumTurnsLockedIntoWar@CvTeam@@QBEHW4TeamTypes@@@Z:PROC ; CvTeam::GetNumTurnsLockedIntoWar
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumTurnsLockedIntoWar@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumTurnsLockedIntoWar@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetNumTurnsLockedIntoWar, COMDAT

; 299  : 	return BasicLuaMethod(L, &CvTeam::GetNumTurnsLockedIntoWar);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetNumTurnsLockedIntoWar@CvTeam@@QBEHW4TeamTypes@@@Z ; CvTeam::GetNumTurnsLockedIntoWar
	push	eax
	call	??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum TeamTypes>
	add	esp, 8

; 300  : }

	ret	0
?lGetNumTurnsLockedIntoWar@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetNumTurnsLockedIntoWar
_TEXT	ENDS
PUBLIC	?lMeet@CvLuaTeam@@KAHPAUlua_State@@@Z		; CvLuaTeam::lMeet
EXTRN	?meet@CvTeam@@QAEXW4TeamTypes@@_N@Z:PROC	; CvTeam::meet
; Function compile flags: /Ogtpy
;	COMDAT ?lMeet@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bSuppressMessages$ = -4				; size = 1
_L$ = 8							; size = 4
?lMeet@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lMeet, COMDAT

; 305  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 306  : 	CvTeam* pkTeam = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lMeet
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lMeet
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lMeet
	xor	bl, bl
$LN5@lMeet:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lMeet
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lMeet:

; 307  : 	TeamTypes eOtherTeam = (TeamTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 308  : 	const bool bSuppressMessages = lua_toboolean(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	al
	mov	BYTE PTR _bSuppressMessages$[esp+20], al

; 309  : 
; 310  : 	pkTeam->meet(eOtherTeam, bSuppressMessages);

	mov	ecx, DWORD PTR _bSuppressMessages$[esp+20]
	push	ecx
	push	ebx
	mov	ecx, edi
	call	?meet@CvTeam@@QAEXW4TeamTypes@@_N@Z	; CvTeam::meet
	pop	edi
	pop	esi
	pop	ebp

; 311  : 	return 0;

	xor	eax, eax
	pop	ebx

; 312  : }

	pop	ecx
	ret	0
?lMeet@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lMeet
_TEXT	ENDS
PUBLIC	?lGetScore@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetScore
EXTRN	?GetScore@CvTeam@@QBEHXZ:PROC			; CvTeam::GetScore
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScore@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScore@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lGetScore, COMDAT

; 317  : 	return BasicLuaMethod(L, &CvTeam::GetScore);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetScore@CvTeam@@QBEHXZ		; CvTeam::GetScore
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 318  : }

	ret	0
?lGetScore@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lGetScore
_TEXT	ENDS
PUBLIC	?lGetPower@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetPower
EXTRN	?getPower@CvTeam@@QBEHXZ:PROC			; CvTeam::getPower
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPower@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPower@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lGetPower, COMDAT

; 324  : 	return BasicLuaMethod(L, &CvTeam::getPower);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getPower@CvTeam@@QBEHXZ		; CvTeam::getPower
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 325  : }

	ret	0
?lGetPower@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lGetPower
_TEXT	ENDS
PUBLIC	?lGetDefensivePower@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetDefensivePower
EXTRN	?getDefensivePower@CvTeam@@QBEHXZ:PROC		; CvTeam::getDefensivePower
; Function compile flags: /Ogtpy
;	COMDAT ?lGetDefensivePower@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetDefensivePower@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetDefensivePower, COMDAT

; 331  : 	return BasicLuaMethod(L, &CvTeam::getDefensivePower);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getDefensivePower@CvTeam@@QBEHXZ ; CvTeam::getDefensivePower
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 332  : }

	ret	0
?lGetDefensivePower@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetDefensivePower
_TEXT	ENDS
PUBLIC	?lGetNumNukeUnits@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetNumNukeUnits
EXTRN	?getNumNukeUnits@CvTeam@@QBEHXZ:PROC		; CvTeam::getNumNukeUnits
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumNukeUnits@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumNukeUnits@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetNumNukeUnits, COMDAT

; 338  : 	return BasicLuaMethod(L, &CvTeam::getNumNukeUnits);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getNumNukeUnits@CvTeam@@QBEHXZ	; CvTeam::getNumNukeUnits
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 339  : }

	ret	0
?lGetNumNukeUnits@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetNumNukeUnits
_TEXT	ENDS
PUBLIC	?lGetTeamVotingForInDiplo@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTeamVotingForInDiplo
EXTRN	?GetTeamVotingForInDiplo@CvTeam@@QBE?AW4TeamTypes@@XZ:PROC ; CvTeam::GetTeamVotingForInDiplo
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTeamVotingForInDiplo@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTeamVotingForInDiplo@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetTeamVotingForInDiplo, COMDAT

; 345  : 	return BasicLuaMethod(L, &CvTeam::GetTeamVotingForInDiplo);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetTeamVotingForInDiplo@CvTeam@@QBE?AW4TeamTypes@@XZ ; CvTeam::GetTeamVotingForInDiplo
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes>
	add	esp, 8

; 346  : }

	ret	0
?lGetTeamVotingForInDiplo@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetTeamVotingForInDiplo
_TEXT	ENDS
PUBLIC	?lGetProjectedVotesFromMinorAllies@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectedVotesFromMinorAllies
EXTRN	?GetProjectedVotesFromMinorAllies@CvTeam@@QBEHXZ:PROC ; CvTeam::GetProjectedVotesFromMinorAllies
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProjectedVotesFromMinorAllies@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectedVotesFromMinorAllies@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetProjectedVotesFromMinorAllies, COMDAT

; 352  : 	return BasicLuaMethod(L, &CvTeam::GetProjectedVotesFromMinorAllies);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetProjectedVotesFromMinorAllies@CvTeam@@QBEHXZ ; CvTeam::GetProjectedVotesFromMinorAllies
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 353  : }

	ret	0
?lGetProjectedVotesFromMinorAllies@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetProjectedVotesFromMinorAllies
_TEXT	ENDS
PUBLIC	?lGetProjectedVotesFromLiberatedMinors@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectedVotesFromLiberatedMinors
EXTRN	?GetProjectedVotesFromLiberatedMinors@CvTeam@@QBEHXZ:PROC ; CvTeam::GetProjectedVotesFromLiberatedMinors
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProjectedVotesFromLiberatedMinors@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectedVotesFromLiberatedMinors@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetProjectedVotesFromLiberatedMinors, COMDAT

; 359  : 	return BasicLuaMethod(L, &CvTeam::GetProjectedVotesFromLiberatedMinors);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetProjectedVotesFromLiberatedMinors@CvTeam@@QBEHXZ ; CvTeam::GetProjectedVotesFromLiberatedMinors
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 360  : }

	ret	0
?lGetProjectedVotesFromLiberatedMinors@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetProjectedVotesFromLiberatedMinors
_TEXT	ENDS
PUBLIC	?lGetProjectedVotesFromCivs@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectedVotesFromCivs
EXTRN	?GetProjectedVotesFromCivs@CvTeam@@QBEHXZ:PROC	; CvTeam::GetProjectedVotesFromCivs
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProjectedVotesFromCivs@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectedVotesFromCivs@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetProjectedVotesFromCivs, COMDAT

; 366  : 	return BasicLuaMethod(L, &CvTeam::GetProjectedVotesFromCivs);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetProjectedVotesFromCivs@CvTeam@@QBEHXZ ; CvTeam::GetProjectedVotesFromCivs
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 367  : }

	ret	0
?lGetProjectedVotesFromCivs@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetProjectedVotesFromCivs
_TEXT	ENDS
PUBLIC	?lGetTotalProjectedVotes@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTotalProjectedVotes
EXTRN	?GetTotalProjectedVotes@CvTeam@@QBEHXZ:PROC	; CvTeam::GetTotalProjectedVotes
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTotalProjectedVotes@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalProjectedVotes@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetTotalProjectedVotes, COMDAT

; 373  : 	return BasicLuaMethod(L, &CvTeam::GetTotalProjectedVotes);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetTotalProjectedVotes@CvTeam@@QBEHXZ ; CvTeam::GetTotalProjectedVotes
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 374  : }

	ret	0
?lGetTotalProjectedVotes@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetTotalProjectedVotes
_TEXT	ENDS
PUBLIC	?lGetTotalSecuredVotes@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTotalSecuredVotes
EXTRN	?GetTotalSecuredVotes@CvTeam@@QBEHXZ:PROC	; CvTeam::GetTotalSecuredVotes
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTotalSecuredVotes@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalSecuredVotes@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetTotalSecuredVotes, COMDAT

; 380  : 	return BasicLuaMethod(L, &CvTeam::GetTotalSecuredVotes);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetTotalSecuredVotes@CvTeam@@QBEHXZ ; CvTeam::GetTotalSecuredVotes
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 381  : }

	ret	0
?lGetTotalSecuredVotes@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetTotalSecuredVotes
_TEXT	ENDS
PUBLIC	?lGetAtWarCount@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetAtWarCount
EXTRN	?getAtWarCount@CvTeam@@QBEH_N@Z:PROC		; CvTeam::getAtWarCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAtWarCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAtWarCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetAtWarCount, COMDAT

; 387  : 	return BasicLuaMethod(L, &CvTeam::getAtWarCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getAtWarCount@CvTeam@@QBEH_N@Z	; CvTeam::getAtWarCount
	push	eax
	call	??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEH_N@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,bool>
	add	esp, 8

; 388  : }

	ret	0
?lGetAtWarCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetAtWarCount
_TEXT	ENDS
PUBLIC	?lGetHasMetCivCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetHasMetCivCount
EXTRN	?getHasMetCivCount@CvTeam@@QBEH_N@Z:PROC	; CvTeam::getHasMetCivCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHasMetCivCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHasMetCivCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetHasMetCivCount, COMDAT

; 394  : 	return BasicLuaMethod(L, &CvTeam::getHasMetCivCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getHasMetCivCount@CvTeam@@QBEH_N@Z ; CvTeam::getHasMetCivCount
	push	eax
	call	??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEH_N@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,bool>
	add	esp, 8

; 395  : }

	ret	0
?lGetHasMetCivCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetHasMetCivCount
_TEXT	ENDS
PUBLIC	?lHasMetHuman@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lHasMetHuman
EXTRN	?hasMetHuman@CvTeam@@QBE_NXZ:PROC		; CvTeam::hasMetHuman
; Function compile flags: /Ogtpy
;	COMDAT ?lHasMetHuman@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasMetHuman@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lHasMetHuman, COMDAT

; 401  : 	return BasicLuaMethod(L, &CvTeam::hasMetHuman);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?hasMetHuman@CvTeam@@QBE_NXZ	; CvTeam::hasMetHuman
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 402  : }

	ret	0
?lHasMetHuman@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lHasMetHuman
_TEXT	ENDS
PUBLIC	?lGetDefensivePactCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetDefensivePactCount
EXTRN	?getDefensivePactCount@CvTeam@@QBEHW4TeamTypes@@@Z:PROC ; CvTeam::getDefensivePactCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetDefensivePactCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetDefensivePactCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetDefensivePactCount, COMDAT

; 408  : 	return BasicLuaMethod(L, &CvTeam::getDefensivePactCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getDefensivePactCount@CvTeam@@QBEHW4TeamTypes@@@Z ; CvTeam::getDefensivePactCount
	push	eax
	call	??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum TeamTypes>
	add	esp, 8

; 409  : }

	ret	0
?lGetDefensivePactCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetDefensivePactCount
_TEXT	ENDS
PUBLIC	?lGetUnitClassMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetUnitClassMaking
EXTRN	?getUnitClassMaking@CvTeam@@QBEHW4UnitClassTypes@@@Z:PROC ; CvTeam::getUnitClassMaking
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnitClassMaking@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitClassMaking@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetUnitClassMaking, COMDAT

; 415  : 	return BasicLuaMethod(L, &CvTeam::getUnitClassMaking);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getUnitClassMaking@CvTeam@@QBEHW4UnitClassTypes@@@Z ; CvTeam::getUnitClassMaking
	push	eax
	call	??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4UnitClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum UnitClassTypes>
	add	esp, 8

; 416  : }

	ret	0
?lGetUnitClassMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetUnitClassMaking
_TEXT	ENDS
PUBLIC	?lGetUnitClassCountPlusMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetUnitClassCountPlusMaking
EXTRN	?getUnitClassCountPlusMaking@CvTeam@@QBEHW4UnitClassTypes@@@Z:PROC ; CvTeam::getUnitClassCountPlusMaking
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnitClassCountPlusMaking@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitClassCountPlusMaking@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetUnitClassCountPlusMaking, COMDAT

; 422  : 	return BasicLuaMethod(L, &CvTeam::getUnitClassCountPlusMaking);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getUnitClassCountPlusMaking@CvTeam@@QBEHW4UnitClassTypes@@@Z ; CvTeam::getUnitClassCountPlusMaking
	push	eax
	call	??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4UnitClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum UnitClassTypes>
	add	esp, 8

; 423  : }

	ret	0
?lGetUnitClassCountPlusMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetUnitClassCountPlusMaking
_TEXT	ENDS
PUBLIC	?lGetBuildingClassMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetBuildingClassMaking
EXTRN	?getBuildingClassMaking@CvTeam@@QBEHW4BuildingClassTypes@@@Z:PROC ; CvTeam::getBuildingClassMaking
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingClassMaking@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingClassMaking@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetBuildingClassMaking, COMDAT

; 429  : 	return BasicLuaMethod(L, &CvTeam::getBuildingClassMaking);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getBuildingClassMaking@CvTeam@@QBEHW4BuildingClassTypes@@@Z ; CvTeam::getBuildingClassMaking
	push	eax
	call	??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum BuildingClassTypes>
	add	esp, 8

; 430  : }

	ret	0
?lGetBuildingClassMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetBuildingClassMaking
_TEXT	ENDS
PUBLIC	?lGetBuildingClassCountPlusMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetBuildingClassCountPlusMaking
EXTRN	?getBuildingClassCountPlusMaking@CvTeam@@QBEHW4BuildingClassTypes@@@Z:PROC ; CvTeam::getBuildingClassCountPlusMaking
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingClassCountPlusMaking@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingClassCountPlusMaking@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetBuildingClassCountPlusMaking, COMDAT

; 436  : 	return BasicLuaMethod(L, &CvTeam::getBuildingClassCountPlusMaking);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getBuildingClassCountPlusMaking@CvTeam@@QBEHW4BuildingClassTypes@@@Z ; CvTeam::getBuildingClassCountPlusMaking
	push	eax
	call	??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum BuildingClassTypes>
	add	esp, 8

; 437  : }

	ret	0
?lGetBuildingClassCountPlusMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetBuildingClassCountPlusMaking
_TEXT	ENDS
PUBLIC	?lCountNumUnitsByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCountNumUnitsByArea
EXTRN	?countNumUnitsByArea@CvTeam@@QBEHPAVCvArea@@@Z:PROC ; CvTeam::countNumUnitsByArea
; Function compile flags: /Ogtpy
;	COMDAT ?lCountNumUnitsByArea@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountNumUnitsByArea@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lCountNumUnitsByArea, COMDAT

; 444  : 	return BasicLuaMethod(L, &CvTeam::countNumUnitsByArea);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?countNumUnitsByArea@CvTeam@@QBEHPAVCvArea@@@Z ; CvTeam::countNumUnitsByArea
	push	eax
	call	??$BasicLuaMethod@HPAVCvArea@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHPAVCvArea@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,CvArea *>
	add	esp, 8

; 445  : }

	ret	0
?lCountNumUnitsByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lCountNumUnitsByArea
_TEXT	ENDS
PUBLIC	?lCountNumCitiesByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCountNumCitiesByArea
EXTRN	?countNumCitiesByArea@CvTeam@@QBEHPAVCvArea@@@Z:PROC ; CvTeam::countNumCitiesByArea
; Function compile flags: /Ogtpy
;	COMDAT ?lCountNumCitiesByArea@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountNumCitiesByArea@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lCountNumCitiesByArea, COMDAT

; 451  : 	return BasicLuaMethod(L, &CvTeam::countNumCitiesByArea);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?countNumCitiesByArea@CvTeam@@QBEHPAVCvArea@@@Z ; CvTeam::countNumCitiesByArea
	push	eax
	call	??$BasicLuaMethod@HPAVCvArea@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHPAVCvArea@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,CvArea *>
	add	esp, 8

; 452  : }

	ret	0
?lCountNumCitiesByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lCountNumCitiesByArea
_TEXT	ENDS
PUBLIC	?lCountTotalPopulationByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCountTotalPopulationByArea
EXTRN	?countTotalPopulationByArea@CvTeam@@QBEHPAVCvArea@@@Z:PROC ; CvTeam::countTotalPopulationByArea
; Function compile flags: /Ogtpy
;	COMDAT ?lCountTotalPopulationByArea@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountTotalPopulationByArea@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lCountTotalPopulationByArea, COMDAT

; 458  : 	return BasicLuaMethod(L, &CvTeam::countTotalPopulationByArea);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?countTotalPopulationByArea@CvTeam@@QBEHPAVCvArea@@@Z ; CvTeam::countTotalPopulationByArea
	push	eax
	call	??$BasicLuaMethod@HPAVCvArea@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHPAVCvArea@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,CvArea *>
	add	esp, 8

; 459  : }

	ret	0
?lCountTotalPopulationByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lCountTotalPopulationByArea
_TEXT	ENDS
PUBLIC	?lCountEnemyDangerByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCountEnemyDangerByArea
EXTRN	?countEnemyDangerByArea@CvTeam@@QBEHPAVCvArea@@@Z:PROC ; CvTeam::countEnemyDangerByArea
; Function compile flags: /Ogtpy
;	COMDAT ?lCountEnemyDangerByArea@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountEnemyDangerByArea@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lCountEnemyDangerByArea, COMDAT

; 465  : 	return BasicLuaMethod(L, &CvTeam::countEnemyDangerByArea);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?countEnemyDangerByArea@CvTeam@@QBEHPAVCvArea@@@Z ; CvTeam::countEnemyDangerByArea
	push	eax
	call	??$BasicLuaMethod@HPAVCvArea@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHPAVCvArea@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,CvArea *>
	add	esp, 8

; 466  : }

	ret	0
?lCountEnemyDangerByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lCountEnemyDangerByArea
_TEXT	ENDS
PUBLIC	?lIsHuman@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsHuman
EXTRN	?isHuman@CvTeam@@QBE_NXZ:PROC			; CvTeam::isHuman
; Function compile flags: /Ogtpy
;	COMDAT ?lIsHuman@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHuman@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lIsHuman, COMDAT

; 472  : 	return BasicLuaMethod(L, &CvTeam::isHuman);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isHuman@CvTeam@@QBE_NXZ		; CvTeam::isHuman
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 473  : }

	ret	0
?lIsHuman@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lIsHuman
_TEXT	ENDS
PUBLIC	?lIsBarbarian@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsBarbarian
EXTRN	?isBarbarian@CvTeam@@QBE_NXZ:PROC		; CvTeam::isBarbarian
; Function compile flags: /Ogtpy
;	COMDAT ?lIsBarbarian@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBarbarian@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsBarbarian, COMDAT

; 479  : 	return BasicLuaMethod(L, &CvTeam::isBarbarian);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isBarbarian@CvTeam@@QBE_NXZ	; CvTeam::isBarbarian
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 480  : }

	ret	0
?lIsBarbarian@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsBarbarian
_TEXT	ENDS
PUBLIC	?lIsMinorCiv@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsMinorCiv
EXTRN	?isMinorCiv@CvTeam@@QBE_NXZ:PROC		; CvTeam::isMinorCiv
; Function compile flags: /Ogtpy
;	COMDAT ?lIsMinorCiv@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMinorCiv@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsMinorCiv, COMDAT

; 486  : 	return BasicLuaMethod(L, &CvTeam::isMinorCiv);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isMinorCiv@CvTeam@@QBE_NXZ	; CvTeam::isMinorCiv
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 487  : }

	ret	0
?lIsMinorCiv@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsMinorCiv
_TEXT	ENDS
PUBLIC	?lIsMinorCivWarmonger@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsMinorCivWarmonger
EXTRN	?IsMinorCivWarmonger@CvTeam@@QBE_NXZ:PROC	; CvTeam::IsMinorCivWarmonger
; Function compile flags: /Ogtpy
;	COMDAT ?lIsMinorCivWarmonger@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMinorCivWarmonger@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsMinorCivWarmonger, COMDAT

; 493  : 	return BasicLuaMethod(L, &CvTeam::IsMinorCivWarmonger);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsMinorCivWarmonger@CvTeam@@QBE_NXZ ; CvTeam::IsMinorCivWarmonger
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 494  : }

	ret	0
?lIsMinorCivWarmonger@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsMinorCivWarmonger
_TEXT	ENDS
PUBLIC	?lGetLeaderID@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetLeaderID
EXTRN	?getLeaderID@CvTeam@@QBE?AW4PlayerTypes@@XZ:PROC ; CvTeam::getLeaderID
; Function compile flags: /Ogtpy
;	COMDAT ?lGetLeaderID@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLeaderID@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetLeaderID, COMDAT

; 500  : 	return BasicLuaMethod(L, &CvTeam::getLeaderID);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getLeaderID@CvTeam@@QBE?AW4PlayerTypes@@XZ ; CvTeam::getLeaderID
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 501  : }

	ret	0
?lGetLeaderID@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetLeaderID
_TEXT	ENDS
PUBLIC	?lGetSecretaryID@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetSecretaryID
EXTRN	?getSecretaryID@CvTeam@@QBE?AW4PlayerTypes@@XZ:PROC ; CvTeam::getSecretaryID
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSecretaryID@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSecretaryID@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetSecretaryID, COMDAT

; 507  : 	return BasicLuaMethod(L, &CvTeam::getSecretaryID);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getSecretaryID@CvTeam@@QBE?AW4PlayerTypes@@XZ ; CvTeam::getSecretaryID
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 508  : }

	ret	0
?lGetSecretaryID@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetSecretaryID
_TEXT	ENDS
PUBLIC	?lGetHandicapType@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetHandicapType
EXTRN	?getHandicapType@CvTeam@@QBE?AW4HandicapTypes@@XZ:PROC ; CvTeam::getHandicapType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHandicapType@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHandicapType@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetHandicapType, COMDAT

; 514  : 	return BasicLuaMethod(L, &CvTeam::getHandicapType);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getHandicapType@CvTeam@@QBE?AW4HandicapTypes@@XZ ; CvTeam::getHandicapType
	push	eax
	call	??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4HandicapTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum HandicapTypes>
	add	esp, 8

; 515  : }

	ret	0
?lGetHandicapType@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetHandicapType
_TEXT	ENDS
PUBLIC	?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetName
EXTRN	?getName@CvTeam@@QBE?AVCvString@@XZ:PROC	; CvTeam::getName
EXTRN	___CxxFrameHandler3:PROC
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluateam.cpp
xdata$x	ENDS
;	COMDAT ?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T222341 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lGetName, COMDAT

; 520  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 521  : 	CvTeam* pkTeam = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetName
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetName
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetName
	xor	bl, bl
$LN6@lGetName:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetName
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetName:

; 522  : 
; 523  : 	lua_pushstring(L, pkTeam->getName());

	lea	eax, DWORD PTR $T222341[esp+56]
	push	eax
	mov	ecx, edi
	call	?getName@CvTeam@@QBE?AVCvString@@XZ	; CvTeam::getName
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	lea	ecx, DWORD PTR $T222341[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 524  : 	return 1;
; 525  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T222341[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lGetName
PUBLIC	?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetNameKey
EXTRN	?getNameKey@CvTeam@@QBE?AVCvString@@XZ:PROC	; CvTeam::getNameKey
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluateam.cpp
xdata$x	ENDS
;	COMDAT ?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T222386 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetNameKey, COMDAT

; 530  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 531  : 	CvTeam* pkTeam = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetNameKe
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetNameKe
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetNameKe
	xor	bl, bl
$LN6@lGetNameKe:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetNameKe
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetNameKe:

; 532  : 
; 533  : 	lua_pushstring(L, pkTeam->getNameKey());

	lea	eax, DWORD PTR $T222386[esp+56]
	push	eax
	mov	ecx, edi
	call	?getNameKey@CvTeam@@QBE?AVCvString@@XZ	; CvTeam::getNameKey
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	lea	ecx, DWORD PTR $T222386[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 534  : 	return 1;
; 535  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T222386[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetNameKey
PUBLIC	?lGetNumMembers@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetNumMembers
EXTRN	?getNumMembers@CvTeam@@QBEHXZ:PROC		; CvTeam::getNumMembers
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumMembers@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumMembers@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetNumMembers, COMDAT

; 540  : 	return BasicLuaMethod(L, &CvTeam::getNumMembers);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getNumMembers@CvTeam@@QBEHXZ	; CvTeam::getNumMembers
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 541  : }

	ret	0
?lGetNumMembers@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetNumMembers
_TEXT	ENDS
PUBLIC	?lIsAlive@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsAlive
; Function compile flags: /Ogtpy
;	COMDAT ?lIsAlive@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAlive@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lIsAlive, COMDAT

; 547  : 	return BasicLuaMethod(L, &CvTeam::isAlive);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isAlive@CvTeam@@QBE_NXZ		; CvTeam::isAlive
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 548  : }

	ret	0
?lIsAlive@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lIsAlive
_TEXT	ENDS
PUBLIC	?lIsEverAlive@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsEverAlive
EXTRN	?isEverAlive@CvTeam@@QBEHXZ:PROC		; CvTeam::isEverAlive
; Function compile flags: /Ogtpy
;	COMDAT ?lIsEverAlive@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsEverAlive@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsEverAlive, COMDAT

; 554  : 	return BasicLuaMethod(L, &CvTeam::isEverAlive);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isEverAlive@CvTeam@@QBEHXZ	; CvTeam::isEverAlive
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 555  : }

	ret	0
?lIsEverAlive@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsEverAlive
_TEXT	ENDS
PUBLIC	?lGetNumCities@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetNumCities
EXTRN	?getNumCities@CvTeam@@QBEHXZ:PROC		; CvTeam::getNumCities
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumCities@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumCities@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetNumCities, COMDAT

; 561  : 	return BasicLuaMethod(L, &CvTeam::getNumCities);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getNumCities@CvTeam@@QBEHXZ	; CvTeam::getNumCities
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 562  : }

	ret	0
?lGetNumCities@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetNumCities
_TEXT	ENDS
PUBLIC	?lGetTotalPopulation@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTotalPopulation
EXTRN	?getTotalPopulation@CvTeam@@QBEHXZ:PROC		; CvTeam::getTotalPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTotalPopulation@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalPopulation@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetTotalPopulation, COMDAT

; 568  : 	return BasicLuaMethod(L, &CvTeam::getTotalPopulation);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getTotalPopulation@CvTeam@@QBEHXZ ; CvTeam::getTotalPopulation
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 569  : }

	ret	0
?lGetTotalPopulation@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetTotalPopulation
_TEXT	ENDS
PUBLIC	?lGetTotalLand@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetTotalLand
EXTRN	?getTotalLand@CvTeam@@QBEHXZ:PROC		; CvTeam::getTotalLand
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTotalLand@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalLand@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetTotalLand, COMDAT

; 575  : 	return BasicLuaMethod(L, &CvTeam::getTotalLand);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getTotalLand@CvTeam@@QBEHXZ	; CvTeam::getTotalLand
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 576  : }

	ret	0
?lGetTotalLand@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetTotalLand
_TEXT	ENDS
PUBLIC	?lGetNukeInterception@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetNukeInterception
EXTRN	?getNukeInterception@CvTeam@@QBEHXZ:PROC	; CvTeam::getNukeInterception
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNukeInterception@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNukeInterception@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetNukeInterception, COMDAT

; 582  : 	return BasicLuaMethod(L, &CvTeam::getNukeInterception);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getNukeInterception@CvTeam@@QBEHXZ ; CvTeam::getNukeInterception
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 583  : }

	ret	0
?lGetNukeInterception@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetNukeInterception
_TEXT	ENDS
PUBLIC	?lChangeNukeInterception@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeNukeInterception
EXTRN	?changeNukeInterception@CvTeam@@QAEXH@Z:PROC	; CvTeam::changeNukeInterception
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeNukeInterception@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeNukeInterception@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeNukeInterception, COMDAT

; 589  : 	return BasicLuaMethod(L, &CvTeam::changeNukeInterception);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeNukeInterception@CvTeam@@QAEXH@Z ; CvTeam::changeNukeInterception
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 590  : }

	ret	0
?lChangeNukeInterception@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeNukeInterception
_TEXT	ENDS
PUBLIC	?lGetForceTeamVoteEligibilityCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetForceTeamVoteEligibilityCount
EXTRN	?getForceTeamVoteEligibilityCount@CvTeam@@QBEHW4VoteSourceTypes@@@Z:PROC ; CvTeam::getForceTeamVoteEligibilityCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetForceTeamVoteEligibilityCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetForceTeamVoteEligibilityCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetForceTeamVoteEligibilityCount, COMDAT

; 597  : 	return BasicLuaMethod(L, &CvTeam::getForceTeamVoteEligibilityCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getForceTeamVoteEligibilityCount@CvTeam@@QBEHW4VoteSourceTypes@@@Z ; CvTeam::getForceTeamVoteEligibilityCount
	push	eax
	call	??$BasicLuaMethod@HW4VoteSourceTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4VoteSourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum VoteSourceTypes>
	add	esp, 8

; 598  : }

	ret	0
?lGetForceTeamVoteEligibilityCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetForceTeamVoteEligibilityCount
_TEXT	ENDS
PUBLIC	?lIsForceTeamVoteEligible@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsForceTeamVoteEligible
EXTRN	?isForceTeamVoteEligible@CvTeam@@QBE_NW4VoteSourceTypes@@@Z:PROC ; CvTeam::isForceTeamVoteEligible
; Function compile flags: /Ogtpy
;	COMDAT ?lIsForceTeamVoteEligible@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsForceTeamVoteEligible@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsForceTeamVoteEligible, COMDAT

; 604  : 	return BasicLuaMethod(L, &CvTeam::isForceTeamVoteEligible);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isForceTeamVoteEligible@CvTeam@@QBE_NW4VoteSourceTypes@@@Z ; CvTeam::isForceTeamVoteEligible
	push	eax
	call	??$BasicLuaMethod@_NW4VoteSourceTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4VoteSourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum VoteSourceTypes>
	add	esp, 8

; 605  : }

	ret	0
?lIsForceTeamVoteEligible@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsForceTeamVoteEligible
_TEXT	ENDS
PUBLIC	?lChangeForceTeamVoteEligibilityCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeForceTeamVoteEligibilityCount
EXTRN	?changeForceTeamVoteEligibilityCount@CvTeam@@QAEXW4VoteSourceTypes@@H@Z:PROC ; CvTeam::changeForceTeamVoteEligibilityCount
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeForceTeamVoteEligibilityCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeForceTeamVoteEligibilityCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeForceTeamVoteEligibilityCount, COMDAT

; 611  : 	return BasicLuaMethod(L, &CvTeam::changeForceTeamVoteEligibilityCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeForceTeamVoteEligibilityCount@CvTeam@@QAEXW4VoteSourceTypes@@H@Z ; CvTeam::changeForceTeamVoteEligibilityCount
	push	eax
	call	??$BasicLuaMethod@W4VoteSourceTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4VoteSourceTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum VoteSourceTypes,int>
	add	esp, 8

; 612  : }

	ret	0
?lChangeForceTeamVoteEligibilityCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeForceTeamVoteEligibilityCount
_TEXT	ENDS
PUBLIC	?lGetExtraWaterSeeFromCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetExtraWaterSeeFromCount
EXTRN	?getExtraWaterSeeFromCount@CvTeam@@QBEHXZ:PROC	; CvTeam::getExtraWaterSeeFromCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetExtraWaterSeeFromCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetExtraWaterSeeFromCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetExtraWaterSeeFromCount, COMDAT

; 618  : 	return BasicLuaMethod(L, &CvTeam::getExtraWaterSeeFromCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getExtraWaterSeeFromCount@CvTeam@@QBEHXZ ; CvTeam::getExtraWaterSeeFromCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 619  : }

	ret	0
?lGetExtraWaterSeeFromCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetExtraWaterSeeFromCount
_TEXT	ENDS
PUBLIC	?lIsExtraWaterSeeFrom@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsExtraWaterSeeFrom
EXTRN	?isExtraWaterSeeFrom@CvTeam@@QBE_NXZ:PROC	; CvTeam::isExtraWaterSeeFrom
; Function compile flags: /Ogtpy
;	COMDAT ?lIsExtraWaterSeeFrom@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsExtraWaterSeeFrom@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsExtraWaterSeeFrom, COMDAT

; 625  : 	return BasicLuaMethod(L, &CvTeam::isExtraWaterSeeFrom);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isExtraWaterSeeFrom@CvTeam@@QBE_NXZ ; CvTeam::isExtraWaterSeeFrom
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 626  : }

	ret	0
?lIsExtraWaterSeeFrom@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsExtraWaterSeeFrom
_TEXT	ENDS
PUBLIC	?lChangeExtraWaterSeeFromCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeExtraWaterSeeFromCount
EXTRN	?changeExtraWaterSeeFromCount@CvTeam@@QAEXH@Z:PROC ; CvTeam::changeExtraWaterSeeFromCount
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeExtraWaterSeeFromCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeExtraWaterSeeFromCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeExtraWaterSeeFromCount, COMDAT

; 632  : 	return BasicLuaMethod(L, &CvTeam::changeExtraWaterSeeFromCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeExtraWaterSeeFromCount@CvTeam@@QAEXH@Z ; CvTeam::changeExtraWaterSeeFromCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 633  : }

	ret	0
?lChangeExtraWaterSeeFromCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeExtraWaterSeeFromCount
_TEXT	ENDS
PUBLIC	?lGetMapTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetMapTradingCount
EXTRN	?getMapTradingCount@CvTeam@@QBEHXZ:PROC		; CvTeam::getMapTradingCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMapTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMapTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetMapTradingCount, COMDAT

; 639  : 	return BasicLuaMethod(L, &CvTeam::getMapTradingCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getMapTradingCount@CvTeam@@QBEHXZ ; CvTeam::getMapTradingCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 640  : }

	ret	0
?lGetMapTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetMapTradingCount
_TEXT	ENDS
PUBLIC	?lIsMapTrading@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsMapTrading
EXTRN	?isMapTrading@CvTeam@@QBE_NXZ:PROC		; CvTeam::isMapTrading
; Function compile flags: /Ogtpy
;	COMDAT ?lIsMapTrading@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMapTrading@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsMapTrading, COMDAT

; 646  : 	return BasicLuaMethod(L, &CvTeam::isMapTrading);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isMapTrading@CvTeam@@QBE_NXZ	; CvTeam::isMapTrading
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 647  : }

	ret	0
?lIsMapTrading@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsMapTrading
_TEXT	ENDS
PUBLIC	?lChangeMapTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeMapTradingCount
EXTRN	?changeMapTradingCount@CvTeam@@QAEXH@Z:PROC	; CvTeam::changeMapTradingCount
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeMapTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeMapTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeMapTradingCount, COMDAT

; 653  : 	return BasicLuaMethod(L, &CvTeam::changeMapTradingCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeMapTradingCount@CvTeam@@QAEXH@Z ; CvTeam::changeMapTradingCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 654  : }

	ret	0
?lChangeMapTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeMapTradingCount
_TEXT	ENDS
PUBLIC	?lGetTechTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTechTradingCount
EXTRN	?getTechTradingCount@CvTeam@@QBEHXZ:PROC	; CvTeam::getTechTradingCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTechTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTechTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetTechTradingCount, COMDAT

; 660  : 	return BasicLuaMethod(L, &CvTeam::getTechTradingCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getTechTradingCount@CvTeam@@QBEHXZ ; CvTeam::getTechTradingCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 661  : }

	ret	0
?lGetTechTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetTechTradingCount
_TEXT	ENDS
PUBLIC	?lIsTechTrading@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsTechTrading
EXTRN	?isTechTrading@CvTeam@@QBE_NXZ:PROC		; CvTeam::isTechTrading
; Function compile flags: /Ogtpy
;	COMDAT ?lIsTechTrading@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsTechTrading@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsTechTrading, COMDAT

; 667  : 	return BasicLuaMethod(L, &CvTeam::isTechTrading);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isTechTrading@CvTeam@@QBE_NXZ	; CvTeam::isTechTrading
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 668  : }

	ret	0
?lIsTechTrading@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsTechTrading
_TEXT	ENDS
PUBLIC	?lChangeTechTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeTechTradingCount
EXTRN	?changeTechTradingCount@CvTeam@@QAEXH@Z:PROC	; CvTeam::changeTechTradingCount
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeTechTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeTechTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeTechTradingCount, COMDAT

; 674  : 	return BasicLuaMethod(L, &CvTeam::changeTechTradingCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeTechTradingCount@CvTeam@@QAEXH@Z ; CvTeam::changeTechTradingCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 675  : }

	ret	0
?lChangeTechTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeTechTradingCount
_TEXT	ENDS
PUBLIC	?lGetGoldTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetGoldTradingCount
EXTRN	?getGoldTradingCount@CvTeam@@QBEHXZ:PROC	; CvTeam::getGoldTradingCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGoldTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetGoldTradingCount, COMDAT

; 681  : 	return BasicLuaMethod(L, &CvTeam::getGoldTradingCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGoldTradingCount@CvTeam@@QBEHXZ ; CvTeam::getGoldTradingCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 682  : }

	ret	0
?lGetGoldTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetGoldTradingCount
_TEXT	ENDS
PUBLIC	?lIsGoldTrading@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsGoldTrading
EXTRN	?isGoldTrading@CvTeam@@QBE_NXZ:PROC		; CvTeam::isGoldTrading
; Function compile flags: /Ogtpy
;	COMDAT ?lIsGoldTrading@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsGoldTrading@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsGoldTrading, COMDAT

; 688  : 	return BasicLuaMethod(L, &CvTeam::isGoldTrading);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isGoldTrading@CvTeam@@QBE_NXZ	; CvTeam::isGoldTrading
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 689  : }

	ret	0
?lIsGoldTrading@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsGoldTrading
_TEXT	ENDS
PUBLIC	?lChangeGoldTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeGoldTradingCount
EXTRN	?changeGoldTradingCount@CvTeam@@QAEXH@Z:PROC	; CvTeam::changeGoldTradingCount
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeGoldTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeGoldTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeGoldTradingCount, COMDAT

; 695  : 	return BasicLuaMethod(L, &CvTeam::changeGoldTradingCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeGoldTradingCount@CvTeam@@QAEXH@Z ; CvTeam::changeGoldTradingCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 696  : }

	ret	0
?lChangeGoldTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeGoldTradingCount
_TEXT	ENDS
PUBLIC	?lGetAllowEmbassyTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetAllowEmbassyTradingAllowedCount
EXTRN	?getAllowEmbassyTradingAllowedCount@CvTeam@@QBEHXZ:PROC ; CvTeam::getAllowEmbassyTradingAllowedCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAllowEmbassyTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAllowEmbassyTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetAllowEmbassyTradingAllowedCount, COMDAT

; 701  : 	return BasicLuaMethod(L, &CvTeam::getAllowEmbassyTradingAllowedCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getAllowEmbassyTradingAllowedCount@CvTeam@@QBEHXZ ; CvTeam::getAllowEmbassyTradingAllowedCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 702  : }

	ret	0
?lGetAllowEmbassyTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetAllowEmbassyTradingAllowedCount
_TEXT	ENDS
PUBLIC	?lIsAllowEmbassyTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsAllowEmbassyTradingAllowed
EXTRN	?isAllowEmbassyTradingAllowed@CvTeam@@QBE_NXZ:PROC ; CvTeam::isAllowEmbassyTradingAllowed
; Function compile flags: /Ogtpy
;	COMDAT ?lIsAllowEmbassyTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAllowEmbassyTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsAllowEmbassyTradingAllowed, COMDAT

; 707  : 	return BasicLuaMethod(L, &CvTeam::isAllowEmbassyTradingAllowed);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isAllowEmbassyTradingAllowed@CvTeam@@QBE_NXZ ; CvTeam::isAllowEmbassyTradingAllowed
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 708  : }

	ret	0
?lIsAllowEmbassyTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsAllowEmbassyTradingAllowed
_TEXT	ENDS
PUBLIC	?lChangeAllowEmbassyTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeAllowEmbassyTradingAllowedCount
EXTRN	?changeAllowEmbassyTradingAllowedCount@CvTeam@@QAEXH@Z:PROC ; CvTeam::changeAllowEmbassyTradingAllowedCount
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeAllowEmbassyTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeAllowEmbassyTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeAllowEmbassyTradingAllowedCount, COMDAT

; 713  : 	return BasicLuaMethod(L, &CvTeam::changeAllowEmbassyTradingAllowedCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeAllowEmbassyTradingAllowedCount@CvTeam@@QAEXH@Z ; CvTeam::changeAllowEmbassyTradingAllowedCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 714  : }

	ret	0
?lChangeAllowEmbassyTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeAllowEmbassyTradingAllowedCount
_TEXT	ENDS
PUBLIC	?lGetOpenBordersTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetOpenBordersTradingAllowedCount
EXTRN	?getOpenBordersTradingAllowedCount@CvTeam@@QBEHXZ:PROC ; CvTeam::getOpenBordersTradingAllowedCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetOpenBordersTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetOpenBordersTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetOpenBordersTradingAllowedCount, COMDAT

; 720  : 	return BasicLuaMethod(L, &CvTeam::getOpenBordersTradingAllowedCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getOpenBordersTradingAllowedCount@CvTeam@@QBEHXZ ; CvTeam::getOpenBordersTradingAllowedCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 721  : }

	ret	0
?lGetOpenBordersTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetOpenBordersTradingAllowedCount
_TEXT	ENDS
PUBLIC	?lIsOpenBordersTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsOpenBordersTradingAllowed
EXTRN	?isOpenBordersTradingAllowed@CvTeam@@QBE_NXZ:PROC ; CvTeam::isOpenBordersTradingAllowed
; Function compile flags: /Ogtpy
;	COMDAT ?lIsOpenBordersTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsOpenBordersTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsOpenBordersTradingAllowed, COMDAT

; 727  : 	return BasicLuaMethod(L, &CvTeam::isOpenBordersTradingAllowed);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isOpenBordersTradingAllowed@CvTeam@@QBE_NXZ ; CvTeam::isOpenBordersTradingAllowed
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 728  : }

	ret	0
?lIsOpenBordersTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsOpenBordersTradingAllowed
_TEXT	ENDS
PUBLIC	?lIsOpenBordersTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsOpenBordersTradingAllowedWithTeam
EXTRN	?isOpenBordersTradingAllowedWithTeam@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC ; CvTeam::isOpenBordersTradingAllowedWithTeam
; Function compile flags: /Ogtpy
;	COMDAT ?lIsOpenBordersTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsOpenBordersTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsOpenBordersTradingAllowedWithTeam, COMDAT

; 734  : 	return BasicLuaMethod(L, &CvTeam::isOpenBordersTradingAllowedWithTeam);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isOpenBordersTradingAllowedWithTeam@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::isOpenBordersTradingAllowedWithTeam
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 735  : }

	ret	0
?lIsOpenBordersTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsOpenBordersTradingAllowedWithTeam
_TEXT	ENDS
PUBLIC	?lChangeOpenBordersTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeOpenBordersTradingAllowedCount
EXTRN	?changeOpenBordersTradingAllowedCount@CvTeam@@QAEXH@Z:PROC ; CvTeam::changeOpenBordersTradingAllowedCount
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeOpenBordersTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeOpenBordersTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeOpenBordersTradingAllowedCount, COMDAT

; 741  : 	return BasicLuaMethod(L, &CvTeam::changeOpenBordersTradingAllowedCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeOpenBordersTradingAllowedCount@CvTeam@@QAEXH@Z ; CvTeam::changeOpenBordersTradingAllowedCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 742  : }

	ret	0
?lChangeOpenBordersTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeOpenBordersTradingAllowedCount
_TEXT	ENDS
PUBLIC	?lGetDefensivePactTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetDefensivePactTradingAllowedCount
EXTRN	?getDefensivePactTradingAllowedCount@CvTeam@@QBEHXZ:PROC ; CvTeam::getDefensivePactTradingAllowedCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetDefensivePactTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetDefensivePactTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetDefensivePactTradingAllowedCount, COMDAT

; 748  : 	return BasicLuaMethod(L, &CvTeam::getDefensivePactTradingAllowedCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getDefensivePactTradingAllowedCount@CvTeam@@QBEHXZ ; CvTeam::getDefensivePactTradingAllowedCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 749  : }

	ret	0
?lGetDefensivePactTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetDefensivePactTradingAllowedCount
_TEXT	ENDS
PUBLIC	?lIsDefensivePactTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsDefensivePactTradingAllowed
EXTRN	?isDefensivePactTradingAllowed@CvTeam@@QBE_NXZ:PROC ; CvTeam::isDefensivePactTradingAllowed
; Function compile flags: /Ogtpy
;	COMDAT ?lIsDefensivePactTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsDefensivePactTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsDefensivePactTradingAllowed, COMDAT

; 755  : 	return BasicLuaMethod(L, &CvTeam::isDefensivePactTradingAllowed);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isDefensivePactTradingAllowed@CvTeam@@QBE_NXZ ; CvTeam::isDefensivePactTradingAllowed
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 756  : }

	ret	0
?lIsDefensivePactTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsDefensivePactTradingAllowed
_TEXT	ENDS
PUBLIC	?lIsDefensivePactTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsDefensivePactTradingAllowedWithTeam
EXTRN	?isDefensivePactTradingAllowedWithTeam@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC ; CvTeam::isDefensivePactTradingAllowedWithTeam
; Function compile flags: /Ogtpy
;	COMDAT ?lIsDefensivePactTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsDefensivePactTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsDefensivePactTradingAllowedWithTeam, COMDAT

; 762  : 	return BasicLuaMethod(L, &CvTeam::isDefensivePactTradingAllowedWithTeam);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isDefensivePactTradingAllowedWithTeam@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::isDefensivePactTradingAllowedWithTeam
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 763  : }

	ret	0
?lIsDefensivePactTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsDefensivePactTradingAllowedWithTeam
_TEXT	ENDS
PUBLIC	?lChangeDefensivePactTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeDefensivePactTradingAllowedCount
EXTRN	?changeDefensivePactTradingAllowedCount@CvTeam@@QAEXH@Z:PROC ; CvTeam::changeDefensivePactTradingAllowedCount
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeDefensivePactTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeDefensivePactTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeDefensivePactTradingAllowedCount, COMDAT

; 769  : 	return BasicLuaMethod(L, &CvTeam::changeDefensivePactTradingAllowedCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeDefensivePactTradingAllowedCount@CvTeam@@QAEXH@Z ; CvTeam::changeDefensivePactTradingAllowedCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 770  : }

	ret	0
?lChangeDefensivePactTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeDefensivePactTradingAllowedCount
_TEXT	ENDS
PUBLIC	?lIsResearchAgreementTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsResearchAgreementTradingAllowed
EXTRN	?IsResearchAgreementTradingAllowed@CvTeam@@QBE_NXZ:PROC ; CvTeam::IsResearchAgreementTradingAllowed
; Function compile flags: /Ogtpy
;	COMDAT ?lIsResearchAgreementTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsResearchAgreementTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsResearchAgreementTradingAllowed, COMDAT

; 776  : 	return BasicLuaMethod(L, &CvTeam::IsResearchAgreementTradingAllowed);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsResearchAgreementTradingAllowed@CvTeam@@QBE_NXZ ; CvTeam::IsResearchAgreementTradingAllowed
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 777  : }

	ret	0
?lIsResearchAgreementTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsResearchAgreementTradingAllowed
_TEXT	ENDS
PUBLIC	?lIsResearchAgreementTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsResearchAgreementTradingAllowedWithTeam
EXTRN	?IsResearchAgreementTradingAllowedWithTeam@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC ; CvTeam::IsResearchAgreementTradingAllowedWithTeam
; Function compile flags: /Ogtpy
;	COMDAT ?lIsResearchAgreementTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsResearchAgreementTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsResearchAgreementTradingAllowedWithTeam, COMDAT

; 783  : 	return BasicLuaMethod(L, &CvTeam::IsResearchAgreementTradingAllowedWithTeam);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsResearchAgreementTradingAllowedWithTeam@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::IsResearchAgreementTradingAllowedWithTeam
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 784  : }

	ret	0
?lIsResearchAgreementTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsResearchAgreementTradingAllowedWithTeam
_TEXT	ENDS
PUBLIC	?lIsTradeAgreementTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsTradeAgreementTradingAllowed
EXTRN	?IsTradeAgreementTradingAllowed@CvTeam@@QBE_NXZ:PROC ; CvTeam::IsTradeAgreementTradingAllowed
; Function compile flags: /Ogtpy
;	COMDAT ?lIsTradeAgreementTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsTradeAgreementTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsTradeAgreementTradingAllowed, COMDAT

; 790  : 	return BasicLuaMethod(L, &CvTeam::IsTradeAgreementTradingAllowed);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsTradeAgreementTradingAllowed@CvTeam@@QBE_NXZ ; CvTeam::IsTradeAgreementTradingAllowed
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 791  : }

	ret	0
?lIsTradeAgreementTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsTradeAgreementTradingAllowed
_TEXT	ENDS
PUBLIC	?lGetPermanentAllianceTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetPermanentAllianceTradingCount
EXTRN	?getPermanentAllianceTradingCount@CvTeam@@QBEHXZ:PROC ; CvTeam::getPermanentAllianceTradingCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPermanentAllianceTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPermanentAllianceTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetPermanentAllianceTradingCount, COMDAT

; 797  : 	return BasicLuaMethod(L, &CvTeam::getPermanentAllianceTradingCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getPermanentAllianceTradingCount@CvTeam@@QBEHXZ ; CvTeam::getPermanentAllianceTradingCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 798  : }

	ret	0
?lGetPermanentAllianceTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetPermanentAllianceTradingCount
_TEXT	ENDS
PUBLIC	?lIsPermanentAllianceTrading@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsPermanentAllianceTrading
EXTRN	?isPermanentAllianceTrading@CvTeam@@QBE_NXZ:PROC ; CvTeam::isPermanentAllianceTrading
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPermanentAllianceTrading@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPermanentAllianceTrading@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsPermanentAllianceTrading, COMDAT

; 804  : 	return BasicLuaMethod(L, &CvTeam::isPermanentAllianceTrading);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isPermanentAllianceTrading@CvTeam@@QBE_NXZ ; CvTeam::isPermanentAllianceTrading
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 805  : }

	ret	0
?lIsPermanentAllianceTrading@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsPermanentAllianceTrading
_TEXT	ENDS
PUBLIC	?lChangePermanentAllianceTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangePermanentAllianceTradingCount
EXTRN	?changePermanentAllianceTradingCount@CvTeam@@QAEXH@Z:PROC ; CvTeam::changePermanentAllianceTradingCount
; Function compile flags: /Ogtpy
;	COMDAT ?lChangePermanentAllianceTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangePermanentAllianceTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangePermanentAllianceTradingCount, COMDAT

; 811  : 	return BasicLuaMethod(L, &CvTeam::changePermanentAllianceTradingCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changePermanentAllianceTradingCount@CvTeam@@QAEXH@Z ; CvTeam::changePermanentAllianceTradingCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 812  : }

	ret	0
?lChangePermanentAllianceTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangePermanentAllianceTradingCount
_TEXT	ENDS
PUBLIC	?lGetBridgeBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetBridgeBuildingCount
EXTRN	?getBridgeBuildingCount@CvTeam@@QBEHXZ:PROC	; CvTeam::getBridgeBuildingCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBridgeBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBridgeBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetBridgeBuildingCount, COMDAT

; 818  : 	return BasicLuaMethod(L, &CvTeam::getBridgeBuildingCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getBridgeBuildingCount@CvTeam@@QBEHXZ ; CvTeam::getBridgeBuildingCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 819  : }

	ret	0
?lGetBridgeBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetBridgeBuildingCount
_TEXT	ENDS
PUBLIC	?lIsBridgeBuilding@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsBridgeBuilding
EXTRN	?isBridgeBuilding@CvTeam@@QBE_NXZ:PROC		; CvTeam::isBridgeBuilding
; Function compile flags: /Ogtpy
;	COMDAT ?lIsBridgeBuilding@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBridgeBuilding@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsBridgeBuilding, COMDAT

; 825  : 	return BasicLuaMethod(L, &CvTeam::isBridgeBuilding);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isBridgeBuilding@CvTeam@@QBE_NXZ ; CvTeam::isBridgeBuilding
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 826  : }

	ret	0
?lIsBridgeBuilding@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsBridgeBuilding
_TEXT	ENDS
PUBLIC	?lChangeBridgeBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeBridgeBuildingCount
EXTRN	?changeBridgeBuildingCount@CvTeam@@QAEXH@Z:PROC	; CvTeam::changeBridgeBuildingCount
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeBridgeBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeBridgeBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeBridgeBuildingCount, COMDAT

; 832  : 	return BasicLuaMethod(L, &CvTeam::changeBridgeBuildingCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeBridgeBuildingCount@CvTeam@@QAEXH@Z ; CvTeam::changeBridgeBuildingCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 833  : }

	ret	0
?lChangeBridgeBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeBridgeBuildingCount
_TEXT	ENDS
PUBLIC	?lGetWaterWorkCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetWaterWorkCount
EXTRN	?getWaterWorkCount@CvTeam@@QBEHXZ:PROC		; CvTeam::getWaterWorkCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetWaterWorkCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetWaterWorkCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetWaterWorkCount, COMDAT

; 839  : 	return BasicLuaMethod(L, &CvTeam::getWaterWorkCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getWaterWorkCount@CvTeam@@QBEHXZ ; CvTeam::getWaterWorkCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 840  : }

	ret	0
?lGetWaterWorkCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetWaterWorkCount
_TEXT	ENDS
PUBLIC	?lIsWaterWork@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsWaterWork
EXTRN	?isWaterWork@CvTeam@@QBE_NXZ:PROC		; CvTeam::isWaterWork
; Function compile flags: /Ogtpy
;	COMDAT ?lIsWaterWork@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsWaterWork@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsWaterWork, COMDAT

; 846  : 	return BasicLuaMethod(L, &CvTeam::isWaterWork);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isWaterWork@CvTeam@@QBE_NXZ	; CvTeam::isWaterWork
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 847  : }

	ret	0
?lIsWaterWork@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsWaterWork
_TEXT	ENDS
PUBLIC	?lChangeWaterWorkCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeWaterWorkCount
EXTRN	?changeWaterWorkCount@CvTeam@@QAEXH@Z:PROC	; CvTeam::changeWaterWorkCount
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeWaterWorkCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeWaterWorkCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeWaterWorkCount, COMDAT

; 853  : 	return BasicLuaMethod(L, &CvTeam::changeWaterWorkCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeWaterWorkCount@CvTeam@@QAEXH@Z ; CvTeam::changeWaterWorkCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 854  : }

	ret	0
?lChangeWaterWorkCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeWaterWorkCount
_TEXT	ENDS
PUBLIC	?lGetBorderObstacleCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetBorderObstacleCount
EXTRN	?getBorderObstacleCount@CvTeam@@QBEHXZ:PROC	; CvTeam::getBorderObstacleCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBorderObstacleCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBorderObstacleCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetBorderObstacleCount, COMDAT

; 860  : 	return BasicLuaMethod(L, &CvTeam::getBorderObstacleCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getBorderObstacleCount@CvTeam@@QBEHXZ ; CvTeam::getBorderObstacleCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 861  : }

	ret	0
?lGetBorderObstacleCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetBorderObstacleCount
_TEXT	ENDS
PUBLIC	?lIsBorderObstacle@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsBorderObstacle
EXTRN	?isBorderObstacle@CvTeam@@QBE_NXZ:PROC		; CvTeam::isBorderObstacle
; Function compile flags: /Ogtpy
;	COMDAT ?lIsBorderObstacle@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBorderObstacle@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsBorderObstacle, COMDAT

; 867  : 	return BasicLuaMethod(L, &CvTeam::isBorderObstacle);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isBorderObstacle@CvTeam@@QBE_NXZ ; CvTeam::isBorderObstacle
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 868  : }

	ret	0
?lIsBorderObstacle@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsBorderObstacle
_TEXT	ENDS
PUBLIC	?lChangeBorderObstacleCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeBorderObstacleCount
EXTRN	?changeBorderObstacleCount@CvTeam@@QAEXH@Z:PROC	; CvTeam::changeBorderObstacleCount
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeBorderObstacleCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeBorderObstacleCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeBorderObstacleCount, COMDAT

; 874  : 	return BasicLuaMethod(L, &CvTeam::changeBorderObstacleCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeBorderObstacleCount@CvTeam@@QAEXH@Z ; CvTeam::changeBorderObstacleCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 875  : }

	ret	0
?lChangeBorderObstacleCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeBorderObstacleCount
_TEXT	ENDS
PUBLIC	?lIsMapCentering@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsMapCentering
EXTRN	?isMapCentering@CvTeam@@QBE_NXZ:PROC		; CvTeam::isMapCentering
; Function compile flags: /Ogtpy
;	COMDAT ?lIsMapCentering@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMapCentering@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsMapCentering, COMDAT

; 882  : 	return BasicLuaMethod(L, &CvTeam::isMapCentering);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isMapCentering@CvTeam@@QBE_NXZ	; CvTeam::isMapCentering
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 883  : }

	ret	0
?lIsMapCentering@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsMapCentering
_TEXT	ENDS
PUBLIC	?lSetMapCentering@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lSetMapCentering
EXTRN	?setMapCentering@CvTeam@@QAEX_N@Z:PROC		; CvTeam::setMapCentering
; Function compile flags: /Ogtpy
;	COMDAT ?lSetMapCentering@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetMapCentering@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lSetMapCentering, COMDAT

; 889  : 	return BasicLuaMethod(L, &CvTeam::setMapCentering);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setMapCentering@CvTeam@@QAEX_N@Z ; CvTeam::setMapCentering
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 890  : }

	ret	0
?lSetMapCentering@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lSetMapCentering
_TEXT	ENDS
PUBLIC	?lGetID@CvLuaTeam@@KAHPAUlua_State@@@Z		; CvLuaTeam::lGetID
EXTRN	?GetID@CvTeam@@QBE?AW4TeamTypes@@XZ:PROC	; CvTeam::GetID
; Function compile flags: /Ogtpy
;	COMDAT ?lGetID@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetID@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lGetID, COMDAT

; 897  : 	return BasicLuaMethod(L, &CvTeam::GetID);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetID@CvTeam@@QBE?AW4TeamTypes@@XZ ; CvTeam::GetID
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes>
	add	esp, 8

; 898  : }

	ret	0
?lGetID@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lGetID
_TEXT	ENDS
PUBLIC	?lGetTechShareCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTechShareCount
EXTRN	?getTechShareCount@CvTeam@@QBEHH@Z:PROC		; CvTeam::getTechShareCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTechShareCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTechShareCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetTechShareCount, COMDAT

; 904  : 	return BasicLuaMethod(L, &CvTeam::getTechShareCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getTechShareCount@CvTeam@@QBEHH@Z ; CvTeam::getTechShareCount
	push	eax
	call	??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,int>
	add	esp, 8

; 905  : }

	ret	0
?lGetTechShareCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetTechShareCount
_TEXT	ENDS
PUBLIC	?lIsTechShare@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsTechShare
EXTRN	?isTechShare@CvTeam@@QBE_NH@Z:PROC		; CvTeam::isTechShare
; Function compile flags: /Ogtpy
;	COMDAT ?lIsTechShare@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsTechShare@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsTechShare, COMDAT

; 911  : 	return BasicLuaMethod(L, &CvTeam::isTechShare);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isTechShare@CvTeam@@QBE_NH@Z	; CvTeam::isTechShare
	push	eax
	call	??$BasicLuaMethod@_NH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,int>
	add	esp, 8

; 912  : }

	ret	0
?lIsTechShare@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsTechShare
_TEXT	ENDS
PUBLIC	?lChangeTechShareCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeTechShareCount
EXTRN	?changeTechShareCount@CvTeam@@QAEXHH@Z:PROC	; CvTeam::changeTechShareCount
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeTechShareCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeTechShareCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeTechShareCount, COMDAT

; 918  : 	return BasicLuaMethod(L, &CvTeam::changeTechShareCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeTechShareCount@CvTeam@@QAEXHH@Z ; CvTeam::changeTechShareCount
	push	eax
	call	??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXHH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,int>
	add	esp, 8

; 919  : }

	ret	0
?lChangeTechShareCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeTechShareCount
_TEXT	ENDS
PUBLIC	?lGetExtraMoves@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetExtraMoves
EXTRN	?getExtraMoves@CvTeam@@QBEHW4DomainTypes@@@Z:PROC ; CvTeam::getExtraMoves
; Function compile flags: /Ogtpy
;	COMDAT ?lGetExtraMoves@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetExtraMoves@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetExtraMoves, COMDAT

; 926  : 	return BasicLuaMethod(L, &CvTeam::getExtraMoves);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getExtraMoves@CvTeam@@QBEHW4DomainTypes@@@Z ; CvTeam::getExtraMoves
	push	eax
	call	??$BasicLuaMethod@HW4DomainTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4DomainTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum DomainTypes>
	add	esp, 8

; 927  : }

	ret	0
?lGetExtraMoves@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetExtraMoves
_TEXT	ENDS
PUBLIC	?lChangeExtraMoves@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeExtraMoves
EXTRN	?changeExtraMoves@CvTeam@@QAEXW4DomainTypes@@H@Z:PROC ; CvTeam::changeExtraMoves
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeExtraMoves@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeExtraMoves@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lChangeExtraMoves, COMDAT

; 933  : 	return BasicLuaMethod(L, &CvTeam::changeExtraMoves);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeExtraMoves@CvTeam@@QAEXW4DomainTypes@@H@Z ; CvTeam::changeExtraMoves
	push	eax
	call	??$BasicLuaMethod@W4DomainTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4DomainTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum DomainTypes,int>
	add	esp, 8

; 934  : }

	ret	0
?lChangeExtraMoves@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lChangeExtraMoves
_TEXT	ENDS
PUBLIC	?lCanEmbark@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lCanEmbark
EXTRN	?canEmbark@CvTeam@@QBE_NXZ:PROC			; CvTeam::canEmbark
; Function compile flags: /Ogtpy
;	COMDAT ?lCanEmbark@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanEmbark@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lCanEmbark, COMDAT

; 939  : 	return BasicLuaMethod(L, &CvTeam::canEmbark);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?canEmbark@CvTeam@@QBE_NXZ	; CvTeam::canEmbark
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 940  : }

	ret	0
?lCanEmbark@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lCanEmbark
_TEXT	ENDS
PUBLIC	?lCanDefensiveEmbark@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCanDefensiveEmbark
EXTRN	?canDefensiveEmbark@CvTeam@@QBE_NXZ:PROC	; CvTeam::canDefensiveEmbark
; Function compile flags: /Ogtpy
;	COMDAT ?lCanDefensiveEmbark@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanDefensiveEmbark@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lCanDefensiveEmbark, COMDAT

; 945  : 	return BasicLuaMethod(L, &CvTeam::canDefensiveEmbark);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?canDefensiveEmbark@CvTeam@@QBE_NXZ ; CvTeam::canDefensiveEmbark
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 946  : }

	ret	0
?lCanDefensiveEmbark@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lCanDefensiveEmbark
_TEXT	ENDS
PUBLIC	?lIsHasMet@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsHasMet
EXTRN	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC	; CvTeam::isHasMet
; Function compile flags: /Ogtpy
;	COMDAT ?lIsHasMet@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHasMet@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lIsHasMet, COMDAT

; 952  : 	return BasicLuaMethod(L, &CvTeam::isHasMet);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::isHasMet
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 953  : }

	ret	0
?lIsHasMet@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lIsHasMet
_TEXT	ENDS
PUBLIC	?lIsAtWar@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsAtWar
EXTRN	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC	; CvTeam::isAtWar
; Function compile flags: /Ogtpy
;	COMDAT ?lIsAtWar@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAtWar@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lIsAtWar, COMDAT

; 959  : 	return BasicLuaMethod(L, &CvTeam::isAtWar);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::isAtWar
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 960  : }

	ret	0
?lIsAtWar@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lIsAtWar
_TEXT	ENDS
PUBLIC	?lIsPermanentWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsPermanentWarPeace
EXTRN	?isPermanentWarPeace@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC ; CvTeam::isPermanentWarPeace
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPermanentWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPermanentWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsPermanentWarPeace, COMDAT

; 966  : 	return BasicLuaMethod(L, &CvTeam::isPermanentWarPeace);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isPermanentWarPeace@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::isPermanentWarPeace
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 967  : }

	ret	0
?lIsPermanentWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsPermanentWarPeace
_TEXT	ENDS
PUBLIC	?lSetPermanentWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lSetPermanentWarPeace
EXTRN	?setPermanentWarPeace@CvTeam@@QAEXW4TeamTypes@@_N@Z:PROC ; CvTeam::setPermanentWarPeace
; Function compile flags: /Ogtpy
;	COMDAT ?lSetPermanentWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetPermanentWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lSetPermanentWarPeace, COMDAT

; 973  : 	return BasicLuaMethod(L, &CvTeam::setPermanentWarPeace);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setPermanentWarPeace@CvTeam@@QAEXW4TeamTypes@@_N@Z ; CvTeam::setPermanentWarPeace
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4TeamTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes,bool>
	add	esp, 8

; 974  : }

	ret	0
?lSetPermanentWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lSetPermanentWarPeace
_TEXT	ENDS
PUBLIC	?lGetLiberatedByTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetLiberatedByTeam
EXTRN	?GetLiberatedByTeam@CvTeam@@QBE?AW4TeamTypes@@XZ:PROC ; CvTeam::GetLiberatedByTeam
; Function compile flags: /Ogtpy
;	COMDAT ?lGetLiberatedByTeam@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLiberatedByTeam@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetLiberatedByTeam, COMDAT

; 979  : 	return BasicLuaMethod(L, &CvTeam::GetLiberatedByTeam);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetLiberatedByTeam@CvTeam@@QBE?AW4TeamTypes@@XZ ; CvTeam::GetLiberatedByTeam
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes>
	add	esp, 8

; 980  : }

	ret	0
?lGetLiberatedByTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetLiberatedByTeam
_TEXT	ENDS
PUBLIC	?lGetKilledByTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetKilledByTeam
EXTRN	?GetKilledByTeam@CvTeam@@QBE?AW4TeamTypes@@XZ:PROC ; CvTeam::GetKilledByTeam
; Function compile flags: /Ogtpy
;	COMDAT ?lGetKilledByTeam@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetKilledByTeam@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetKilledByTeam, COMDAT

; 985  : 	return BasicLuaMethod(L, &CvTeam::GetKilledByTeam);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetKilledByTeam@CvTeam@@QBE?AW4TeamTypes@@XZ ; CvTeam::GetKilledByTeam
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum TeamTypes>
	add	esp, 8

; 986  : }

	ret	0
?lGetKilledByTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetKilledByTeam
_TEXT	ENDS
PUBLIC	?lHasEmbassyAtTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lHasEmbassyAtTeam
EXTRN	?HasEmbassyAtTeam@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC ; CvTeam::HasEmbassyAtTeam
; Function compile flags: /Ogtpy
;	COMDAT ?lHasEmbassyAtTeam@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasEmbassyAtTeam@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lHasEmbassyAtTeam, COMDAT

; 990  : 	return BasicLuaMethod(L, &CvTeam::HasEmbassyAtTeam);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?HasEmbassyAtTeam@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::HasEmbassyAtTeam
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 991  : }

	ret	0
?lHasEmbassyAtTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lHasEmbassyAtTeam
_TEXT	ENDS
PUBLIC	?lIsAllowsOpenBordersToTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsAllowsOpenBordersToTeam
EXTRN	?IsAllowsOpenBordersToTeam@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC ; CvTeam::IsAllowsOpenBordersToTeam
; Function compile flags: /Ogtpy
;	COMDAT ?lIsAllowsOpenBordersToTeam@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAllowsOpenBordersToTeam@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsAllowsOpenBordersToTeam, COMDAT

; 996  : 	return BasicLuaMethod(L, &CvTeam::IsAllowsOpenBordersToTeam);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsAllowsOpenBordersToTeam@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::IsAllowsOpenBordersToTeam
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 997  : }

	ret	0
?lIsAllowsOpenBordersToTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsAllowsOpenBordersToTeam
_TEXT	ENDS
PUBLIC	?lIsForcePeace@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsForcePeace
EXTRN	?isForcePeace@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC	; CvTeam::isForcePeace
; Function compile flags: /Ogtpy
;	COMDAT ?lIsForcePeace@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsForcePeace@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsForcePeace, COMDAT

; 1003 : 	return BasicLuaMethod(L, &CvTeam::isForcePeace);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isForcePeace@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::isForcePeace
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 1004 : }

	ret	0
?lIsForcePeace@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsForcePeace
_TEXT	ENDS
PUBLIC	?lIsDefensivePact@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsDefensivePact
EXTRN	?IsHasDefensivePact@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC ; CvTeam::IsHasDefensivePact
; Function compile flags: /Ogtpy
;	COMDAT ?lIsDefensivePact@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsDefensivePact@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsDefensivePact, COMDAT

; 1010 : 	return BasicLuaMethod(L, &CvTeam::IsHasDefensivePact);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsHasDefensivePact@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::IsHasDefensivePact
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 1011 : }

	ret	0
?lIsDefensivePact@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsDefensivePact
_TEXT	ENDS
PUBLIC	?lGetRouteChange@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetRouteChange
EXTRN	?getRouteChange@CvTeam@@QBEHW4RouteTypes@@@Z:PROC ; CvTeam::getRouteChange
; Function compile flags: /Ogtpy
;	COMDAT ?lGetRouteChange@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRouteChange@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetRouteChange, COMDAT

; 1017 : 	return BasicLuaMethod(L, &CvTeam::getRouteChange);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getRouteChange@CvTeam@@QBEHW4RouteTypes@@@Z ; CvTeam::getRouteChange
	push	eax
	call	??$BasicLuaMethod@HW4RouteTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4RouteTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum RouteTypes>
	add	esp, 8

; 1018 : }

	ret	0
?lGetRouteChange@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetRouteChange
_TEXT	ENDS
PUBLIC	?lChangeRouteChange@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeRouteChange
EXTRN	?changeRouteChange@CvTeam@@QAEXW4RouteTypes@@H@Z:PROC ; CvTeam::changeRouteChange
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeRouteChange@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeRouteChange@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lChangeRouteChange, COMDAT

; 1024 : 	return BasicLuaMethod(L, &CvTeam::changeRouteChange);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeRouteChange@CvTeam@@QAEXW4RouteTypes@@H@Z ; CvTeam::changeRouteChange
	push	eax
	call	??$BasicLuaMethod@W4RouteTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4RouteTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum RouteTypes,int>
	add	esp, 8

; 1025 : }

	ret	0
?lChangeRouteChange@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lChangeRouteChange
_TEXT	ENDS
PUBLIC	?lGetProjectCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectCount
EXTRN	?getProjectCount@CvTeam@@QBEHW4ProjectTypes@@@Z:PROC ; CvTeam::getProjectCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProjectCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetProjectCount, COMDAT

; 1031 : 	return BasicLuaMethod(L, &CvTeam::getProjectCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getProjectCount@CvTeam@@QBEHW4ProjectTypes@@@Z ; CvTeam::getProjectCount
	push	eax
	call	??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ProjectTypes>
	add	esp, 8

; 1032 : }

	ret	0
?lGetProjectCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetProjectCount
_TEXT	ENDS
PUBLIC	?lGetProjectDefaultArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectDefaultArtType
EXTRN	?getProjectDefaultArtType@CvTeam@@QBEHW4ProjectTypes@@@Z:PROC ; CvTeam::getProjectDefaultArtType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProjectDefaultArtType@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectDefaultArtType@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetProjectDefaultArtType, COMDAT

; 1038 : 	return BasicLuaMethod(L, &CvTeam::getProjectDefaultArtType);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getProjectDefaultArtType@CvTeam@@QBEHW4ProjectTypes@@@Z ; CvTeam::getProjectDefaultArtType
	push	eax
	call	??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ProjectTypes>
	add	esp, 8

; 1039 : }

	ret	0
?lGetProjectDefaultArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetProjectDefaultArtType
_TEXT	ENDS
PUBLIC	?lSetProjectDefaultArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lSetProjectDefaultArtType
EXTRN	?setProjectDefaultArtType@CvTeam@@QAEXW4ProjectTypes@@H@Z:PROC ; CvTeam::setProjectDefaultArtType
; Function compile flags: /Ogtpy
;	COMDAT ?lSetProjectDefaultArtType@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetProjectDefaultArtType@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lSetProjectDefaultArtType, COMDAT

; 1045 : 	return BasicLuaMethod(L, &CvTeam::setProjectDefaultArtType);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setProjectDefaultArtType@CvTeam@@QAEXW4ProjectTypes@@H@Z ; CvTeam::setProjectDefaultArtType
	push	eax
	call	??$BasicLuaMethod@W4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ProjectTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ProjectTypes,int>
	add	esp, 8

; 1046 : }

	ret	0
?lSetProjectDefaultArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lSetProjectDefaultArtType
_TEXT	ENDS
PUBLIC	?lGetProjectArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectArtType
EXTRN	?getProjectArtType@CvTeam@@QBEHW4ProjectTypes@@H@Z:PROC ; CvTeam::getProjectArtType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProjectArtType@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectArtType@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetProjectArtType, COMDAT

; 1052 : 	return BasicLuaMethod(L, &CvTeam::getProjectArtType);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getProjectArtType@CvTeam@@QBEHW4ProjectTypes@@H@Z ; CvTeam::getProjectArtType
	push	eax
	call	??$BasicLuaMethod@HW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ProjectTypes,int>
	add	esp, 8

; 1053 : }

	ret	0
?lGetProjectArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetProjectArtType
_TEXT	ENDS
PUBLIC	?lSetProjectArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lSetProjectArtType
EXTRN	?setProjectArtType@CvTeam@@QAEXW4ProjectTypes@@HH@Z:PROC ; CvTeam::setProjectArtType
; Function compile flags: /Ogtpy
;	COMDAT ?lSetProjectArtType@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetProjectArtType@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lSetProjectArtType, COMDAT

; 1059 : 	return BasicLuaMethod(L, &CvTeam::setProjectArtType);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setProjectArtType@CvTeam@@QAEXW4ProjectTypes@@HH@Z ; CvTeam::setProjectArtType
	push	eax
	call	??$BasicLuaMethod@W4ProjectTypes@@HH@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ProjectTypes@@HH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ProjectTypes,int,int>
	add	esp, 8

; 1060 : }

	ret	0
?lSetProjectArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lSetProjectArtType
_TEXT	ENDS
PUBLIC	?lIsProjectMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsProjectMaxedOut
EXTRN	?isProjectMaxedOut@CvTeam@@QBE_NW4ProjectTypes@@H@Z:PROC ; CvTeam::isProjectMaxedOut
; Function compile flags: /Ogtpy
;	COMDAT ?lIsProjectMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProjectMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lIsProjectMaxedOut, COMDAT

; 1066 : 	return BasicLuaMethod(L, &CvTeam::isProjectMaxedOut);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isProjectMaxedOut@CvTeam@@QBE_NW4ProjectTypes@@H@Z ; CvTeam::isProjectMaxedOut
	push	eax
	call	??$BasicLuaMethod@_NW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4ProjectTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum ProjectTypes,int>
	add	esp, 8

; 1067 : }

	ret	0
?lIsProjectMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lIsProjectMaxedOut
_TEXT	ENDS
PUBLIC	?lIsProjectAndArtMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsProjectAndArtMaxedOut
EXTRN	?isProjectAndArtMaxedOut@CvTeam@@QBE_NW4ProjectTypes@@@Z:PROC ; CvTeam::isProjectAndArtMaxedOut
; Function compile flags: /Ogtpy
;	COMDAT ?lIsProjectAndArtMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProjectAndArtMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsProjectAndArtMaxedOut, COMDAT

; 1073 : 	return BasicLuaMethod(L, &CvTeam::isProjectAndArtMaxedOut);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isProjectAndArtMaxedOut@CvTeam@@QBE_NW4ProjectTypes@@@Z ; CvTeam::isProjectAndArtMaxedOut
	push	eax
	call	??$BasicLuaMethod@_NW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum ProjectTypes>
	add	esp, 8

; 1074 : }

	ret	0
?lIsProjectAndArtMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsProjectAndArtMaxedOut
_TEXT	ENDS
PUBLIC	?lChangeProjectCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeProjectCount
EXTRN	?changeProjectCount@CvTeam@@QAEXW4ProjectTypes@@H@Z:PROC ; CvTeam::changeProjectCount
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeProjectCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeProjectCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeProjectCount, COMDAT

; 1080 : 	return BasicLuaMethod(L, &CvTeam::changeProjectCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeProjectCount@CvTeam@@QAEXW4ProjectTypes@@H@Z ; CvTeam::changeProjectCount
	push	eax
	call	??$BasicLuaMethod@W4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ProjectTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ProjectTypes,int>
	add	esp, 8

; 1081 : }

	ret	0
?lChangeProjectCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeProjectCount
_TEXT	ENDS
PUBLIC	?lGetProjectMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectMaking
EXTRN	?getProjectMaking@CvTeam@@QBEHW4ProjectTypes@@@Z:PROC ; CvTeam::getProjectMaking
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProjectMaking@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectMaking@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetProjectMaking, COMDAT

; 1087 : 	return BasicLuaMethod(L, &CvTeam::getProjectMaking);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getProjectMaking@CvTeam@@QBEHW4ProjectTypes@@@Z ; CvTeam::getProjectMaking
	push	eax
	call	??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ProjectTypes>
	add	esp, 8

; 1088 : }

	ret	0
?lGetProjectMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetProjectMaking
_TEXT	ENDS
PUBLIC	?lGetUnitClassCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetUnitClassCount
EXTRN	?getUnitClassCount@CvTeam@@QBEHW4UnitClassTypes@@@Z:PROC ; CvTeam::getUnitClassCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnitClassCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitClassCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetUnitClassCount, COMDAT

; 1094 : 	return BasicLuaMethod(L, &CvTeam::getUnitClassCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getUnitClassCount@CvTeam@@QBEHW4UnitClassTypes@@@Z ; CvTeam::getUnitClassCount
	push	eax
	call	??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4UnitClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum UnitClassTypes>
	add	esp, 8

; 1095 : }

	ret	0
?lGetUnitClassCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetUnitClassCount
_TEXT	ENDS
PUBLIC	?lIsUnitClassMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsUnitClassMaxedOut
EXTRN	?isUnitClassMaxedOut@CvTeam@@QBE_NW4UnitClassTypes@@H@Z:PROC ; CvTeam::isUnitClassMaxedOut
; Function compile flags: /Ogtpy
;	COMDAT ?lIsUnitClassMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsUnitClassMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsUnitClassMaxedOut, COMDAT

; 1101 : 	return BasicLuaMethod(L, &CvTeam::isUnitClassMaxedOut);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isUnitClassMaxedOut@CvTeam@@QBE_NW4UnitClassTypes@@H@Z ; CvTeam::isUnitClassMaxedOut
	push	eax
	call	??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4UnitClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum UnitClassTypes,int>
	add	esp, 8

; 1102 : }

	ret	0
?lIsUnitClassMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsUnitClassMaxedOut
_TEXT	ENDS
PUBLIC	?lGetBuildingClassCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetBuildingClassCount
EXTRN	?getBuildingClassCount@CvTeam@@QBEHW4BuildingClassTypes@@@Z:PROC ; CvTeam::getBuildingClassCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingClassCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingClassCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetBuildingClassCount, COMDAT

; 1108 : 	return BasicLuaMethod(L, &CvTeam::getBuildingClassCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getBuildingClassCount@CvTeam@@QBEHW4BuildingClassTypes@@@Z ; CvTeam::getBuildingClassCount
	push	eax
	call	??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum BuildingClassTypes>
	add	esp, 8

; 1109 : }

	ret	0
?lGetBuildingClassCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetBuildingClassCount
_TEXT	ENDS
PUBLIC	?lIsBuildingClassMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsBuildingClassMaxedOut
EXTRN	?isBuildingClassMaxedOut@CvTeam@@QBE_NW4BuildingClassTypes@@H@Z:PROC ; CvTeam::isBuildingClassMaxedOut
; Function compile flags: /Ogtpy
;	COMDAT ?lIsBuildingClassMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBuildingClassMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsBuildingClassMaxedOut, COMDAT

; 1115 : 	return BasicLuaMethod(L, &CvTeam::isBuildingClassMaxedOut);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isBuildingClassMaxedOut@CvTeam@@QBE_NW4BuildingClassTypes@@H@Z ; CvTeam::isBuildingClassMaxedOut
	push	eax
	call	??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4BuildingClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum BuildingClassTypes,int>
	add	esp, 8

; 1116 : }

	ret	0
?lIsBuildingClassMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsBuildingClassMaxedOut
_TEXT	ENDS
PUBLIC	?lGetObsoleteBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetObsoleteBuildingCount
EXTRN	?getObsoleteBuildingCount@CvTeam@@QBEHW4BuildingTypes@@@Z:PROC ; CvTeam::getObsoleteBuildingCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetObsoleteBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetObsoleteBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetObsoleteBuildingCount, COMDAT

; 1122 : 	return BasicLuaMethod(L, &CvTeam::getObsoleteBuildingCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getObsoleteBuildingCount@CvTeam@@QBEHW4BuildingTypes@@@Z ; CvTeam::getObsoleteBuildingCount
	push	eax
	call	??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum BuildingTypes>
	add	esp, 8

; 1123 : }

	ret	0
?lGetObsoleteBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetObsoleteBuildingCount
_TEXT	ENDS
PUBLIC	?lIsObsoleteBuilding@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsObsoleteBuilding
EXTRN	?isObsoleteBuilding@CvTeam@@QBE_NW4BuildingTypes@@@Z:PROC ; CvTeam::isObsoleteBuilding
; Function compile flags: /Ogtpy
;	COMDAT ?lIsObsoleteBuilding@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsObsoleteBuilding@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsObsoleteBuilding, COMDAT

; 1129 : 	return BasicLuaMethod(L, &CvTeam::isObsoleteBuilding);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isObsoleteBuilding@CvTeam@@QBE_NW4BuildingTypes@@@Z ; CvTeam::isObsoleteBuilding
	push	eax
	call	??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum BuildingTypes>
	add	esp, 8

; 1130 : }

	ret	0
?lIsObsoleteBuilding@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsObsoleteBuilding
_TEXT	ENDS
PUBLIC	?lIsHasResearchAgreement@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsHasResearchAgreement
EXTRN	?IsHasResearchAgreement@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC ; CvTeam::IsHasResearchAgreement
; Function compile flags: /Ogtpy
;	COMDAT ?lIsHasResearchAgreement@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHasResearchAgreement@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsHasResearchAgreement, COMDAT

; 1136 : 	return BasicLuaMethod(L, &CvTeam::IsHasResearchAgreement);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsHasResearchAgreement@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::IsHasResearchAgreement
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 1137 : }

	ret	0
?lIsHasResearchAgreement@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsHasResearchAgreement
_TEXT	ENDS
PUBLIC	?lIsHasTradeAgreement@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsHasTradeAgreement
EXTRN	?IsHasTradeAgreement@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC ; CvTeam::IsHasTradeAgreement
; Function compile flags: /Ogtpy
;	COMDAT ?lIsHasTradeAgreement@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHasTradeAgreement@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsHasTradeAgreement, COMDAT

; 1143 : 	return BasicLuaMethod(L, &CvTeam::IsHasTradeAgreement);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsHasTradeAgreement@CvTeam@@QBE_NW4TeamTypes@@@Z ; CvTeam::IsHasTradeAgreement
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum TeamTypes>
	add	esp, 8

; 1144 : }

	ret	0
?lIsHasTradeAgreement@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsHasTradeAgreement
_TEXT	ENDS
PUBLIC	?lIsHasTech@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lIsHasTech
EXTRN	?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z:PROC	; CvTeamTechs::HasTech
EXTRN	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ:PROC ; CvTeam::GetTeamTechs
; Function compile flags: /Ogtpy
;	COMDAT ?lIsHasTech@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHasTech@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lIsHasTech, COMDAT

; 1149 : {

	push	ebx
	push	ebp
	push	esi

; 1150 : 	CvTeam* pkTeam = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsHasTech
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsHasTech
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsHasTech
	xor	bl, bl
$LN5@lIsHasTech:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsHasTech
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsHasTech:

; 1151 : 	const TechTypes eTech = (TechTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 1152 : 
; 1153 : 	lua_pushboolean(L, pkTeam->GetTeamTechs()->HasTech(eTech));

	push	eax
	mov	ecx, edi
	call	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ ; CvTeam::GetTeamTechs
	mov	ecx, eax
	call	?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z ; CvTeamTechs::HasTech
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1154 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1155 : }

	ret	0
?lIsHasTech@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lIsHasTech
_TEXT	ENDS
PUBLIC	?lSetHasTech@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lSetHasTech
EXTRN	?setHasTech@CvTeam@@QAEXW4TechTypes@@_NW4PlayerTypes@@11@Z:PROC ; CvTeam::setHasTech
; Function compile flags: /Ogtpy
;	COMDAT ?lSetHasTech@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bAnnounce$ = -12					; size = 1
_bFirst$ = -8						; size = 1
_bNewValue$ = -4					; size = 1
_L$ = 8							; size = 4
?lSetHasTech@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lSetHasTech, COMDAT

; 1160 : {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi

; 1161 : 	CvTeam* pkTeam = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+20]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lSetHasTec
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lSetHasTec
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lSetHasTec
	xor	bl, bl
$LN5@lSetHasTec:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lSetHasTec
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lSetHasTec:

; 1162 : 	const TechTypes eIndex = (TechTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 1163 : 	const bool bNewValue = lua_toboolean(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	test	eax, eax
	setne	al

; 1164 : 	const PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 4);

	push	4
	push	esi
	mov	BYTE PTR _bNewValue$[esp+52], al
	call	_lua_tointeger

; 1165 : 	const bool bFirst = lua_toboolean(L, 4);

	push	4
	push	esi
	mov	ebp, eax
	call	_lua_toboolean
	test	eax, eax
	setne	cl

; 1166 : 	const bool bAnnounce = lua_toboolean(L, 5);

	push	5
	push	esi
	mov	BYTE PTR _bFirst$[esp+68], cl
	call	_lua_toboolean

; 1167 : 
; 1168 : 	pkTeam->setHasTech(eIndex, bNewValue, ePlayer, bFirst, bAnnounce);

	mov	ecx, DWORD PTR _bFirst$[esp+68]
	add	esp, 40					; 00000028H
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bAnnounce$[esp+28], dl
	mov	eax, DWORD PTR _bAnnounce$[esp+28]
	mov	edx, DWORD PTR _bNewValue$[esp+28]
	push	eax
	push	ecx
	push	ebp
	push	edx
	push	ebx
	mov	ecx, edi
	call	?setHasTech@CvTeam@@QAEXW4TechTypes@@_NW4PlayerTypes@@11@Z ; CvTeam::setHasTech
	pop	edi
	pop	esi
	pop	ebp

; 1169 : 	return 0;

	xor	eax, eax
	pop	ebx

; 1170 : }

	add	esp, 12					; 0000000cH
	ret	0
?lSetHasTech@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lSetHasTech
_TEXT	ENDS
PUBLIC	?lGetTeamTechs@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetTeamTechs
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTeamTechs@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTeamTechs@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetTeamTechs, COMDAT

; 1175 : {

	push	ebx
	push	ebp
	push	esi

; 1176 : 	CvTeam* pkTeam = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetTeamTe
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetTeamTe
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetTeamTe
	xor	bl, bl
$LN5@lGetTeamTe:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetTeamTe
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetTeamTe:

; 1177 : 	CvTeamTechs* pkTeamTechs = pkTeam->GetTeamTechs();

	mov	ecx, edi
	call	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ ; CvTeam::GetTeamTechs

; 1178 : 
; 1179 : 	CvLuaTeamTech::Push(L, pkTeamTechs);

	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAXPAUlua_State@@PAVCvTeamTechs@@@Z ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1180 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1181 : }

	ret	0
?lGetTeamTechs@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetTeamTechs
_TEXT	ENDS
PUBLIC	?lGetImprovementYieldChange@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetImprovementYieldChange
EXTRN	?getImprovementYieldChange@CvTeam@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z:PROC ; CvTeam::getImprovementYieldChange
; Function compile flags: /Ogtpy
;	COMDAT ?lGetImprovementYieldChange@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetImprovementYieldChange@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetImprovementYieldChange, COMDAT

; 1187 : 	return BasicLuaMethod(L, &CvTeam::getImprovementYieldChange);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getImprovementYieldChange@CvTeam@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z ; CvTeam::getImprovementYieldChange
	push	eax
	call	??$BasicLuaMethod@HW4ImprovementTypes@@W4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4ImprovementTypes@@W4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum ImprovementTypes,enum YieldTypes>
	add	esp, 8

; 1188 : }

	ret	0
?lGetImprovementYieldChange@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetImprovementYieldChange
_TEXT	ENDS
PUBLIC	?lChangeImprovementYieldChange@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeImprovementYieldChange
EXTRN	?changeImprovementYieldChange@CvTeam@@QAEXW4ImprovementTypes@@W4YieldTypes@@H@Z:PROC ; CvTeam::changeImprovementYieldChange
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeImprovementYieldChange@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeImprovementYieldChange@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeImprovementYieldChange, COMDAT

; 1194 : 	return BasicLuaMethod(L, &CvTeam::changeImprovementYieldChange);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeImprovementYieldChange@CvTeam@@QAEXW4ImprovementTypes@@W4YieldTypes@@H@Z ; CvTeam::changeImprovementYieldChange
	push	eax
	call	??$BasicLuaMethod@W4ImprovementTypes@@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4ImprovementTypes@@W4YieldTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum ImprovementTypes,enum YieldTypes,int>
	add	esp, 8

; 1195 : }

	ret	0
?lChangeImprovementYieldChange@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeImprovementYieldChange
_TEXT	ENDS
PUBLIC	?lIsHomeOfUnitedNations@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsHomeOfUnitedNations
EXTRN	?IsHomeOfUnitedNations@CvTeam@@QBE_NXZ:PROC	; CvTeam::IsHomeOfUnitedNations
; Function compile flags: /Ogtpy
;	COMDAT ?lIsHomeOfUnitedNations@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHomeOfUnitedNations@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lIsHomeOfUnitedNations, COMDAT

; 1202 : 	return BasicLuaMethod(L, &CvTeam::IsHomeOfUnitedNations);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsHomeOfUnitedNations@CvTeam@@QBE_NXZ ; CvTeam::IsHomeOfUnitedNations
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool>
	add	esp, 8

; 1203 : }

	ret	0
?lIsHomeOfUnitedNations@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lIsHomeOfUnitedNations
_TEXT	ENDS
PUBLIC	?lGetVictoryCountdown@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetVictoryCountdown
EXTRN	?getVictoryCountdown@CvTeam@@QBEHW4VictoryTypes@@@Z:PROC ; CvTeam::getVictoryCountdown
; Function compile flags: /Ogtpy
;	COMDAT ?lGetVictoryCountdown@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetVictoryCountdown@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lGetVictoryCountdown, COMDAT

; 1209 : 	return BasicLuaMethod(L, &CvTeam::getVictoryCountdown);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getVictoryCountdown@CvTeam@@QBEHW4VictoryTypes@@@Z ; CvTeam::getVictoryCountdown
	push	eax
	call	??$BasicLuaMethod@HW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4VictoryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum VictoryTypes>
	add	esp, 8

; 1210 : }

	ret	0
?lGetVictoryCountdown@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lGetVictoryCountdown
_TEXT	ENDS
PUBLIC	?lGetVictoryDelay@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetVictoryDelay
EXTRN	?getVictoryDelay@CvTeam@@QBEHW4VictoryTypes@@@Z:PROC ; CvTeam::getVictoryDelay
; Function compile flags: /Ogtpy
;	COMDAT ?lGetVictoryDelay@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetVictoryDelay@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetVictoryDelay, COMDAT

; 1216 : 	return BasicLuaMethod(L, &CvTeam::getVictoryDelay);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getVictoryDelay@CvTeam@@QBEHW4VictoryTypes@@@Z ; CvTeam::getVictoryDelay
	push	eax
	call	??$BasicLuaMethod@HW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHW4VictoryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int,enum VictoryTypes>
	add	esp, 8

; 1217 : }

	ret	0
?lGetVictoryDelay@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetVictoryDelay
_TEXT	ENDS
PUBLIC	?lCanLaunch@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lCanLaunch
EXTRN	?canLaunch@CvTeam@@QBE_NW4VictoryTypes@@@Z:PROC	; CvTeam::canLaunch
; Function compile flags: /Ogtpy
;	COMDAT ?lCanLaunch@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanLaunch@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::lCanLaunch, COMDAT

; 1223 : 	return BasicLuaMethod(L, &CvTeam::canLaunch);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?canLaunch@CvTeam@@QBE_NW4VictoryTypes@@@Z ; CvTeam::canLaunch
	push	eax
	call	??$BasicLuaMethod@_NW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE_NW4VictoryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<bool,enum VictoryTypes>
	add	esp, 8

; 1224 : }

	ret	0
?lCanLaunch@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::lCanLaunch
_TEXT	ENDS
PUBLIC	?lGetVictoryPoints@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetVictoryPoints
EXTRN	?getVictoryPoints@CvTeam@@QBEHXZ:PROC		; CvTeam::getVictoryPoints
; Function compile flags: /Ogtpy
;	COMDAT ?lGetVictoryPoints@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetVictoryPoints@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetVictoryPoints, COMDAT

; 1231 : 	return BasicLuaMethod(L, &CvTeam::getVictoryPoints);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getVictoryPoints@CvTeam@@QBEHXZ	; CvTeam::getVictoryPoints
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 1232 : }

	ret	0
?lGetVictoryPoints@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetVictoryPoints
_TEXT	ENDS
PUBLIC	?lChangeVictoryPoints@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeVictoryPoints
EXTRN	?changeVictoryPoints@CvTeam@@QAEXH@Z:PROC	; CvTeam::changeVictoryPoints
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeVictoryPoints@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeVictoryPoints@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lChangeVictoryPoints, COMDAT

; 1238 : 	return BasicLuaMethod(L, &CvTeam::changeVictoryPoints);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeVictoryPoints@CvTeam@@QAEXH@Z ; CvTeam::changeVictoryPoints
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<int>
	add	esp, 8

; 1239 : }

	ret	0
?lChangeVictoryPoints@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lChangeVictoryPoints
_TEXT	ENDS
PUBLIC	?lGetCurrentEra@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lGetCurrentEra
EXTRN	?GetCurrentEra@CvTeam@@QBE?AW4EraTypes@@XZ:PROC	; CvTeam::GetCurrentEra
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCurrentEra@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCurrentEra@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lGetCurrentEra, COMDAT

; 1245 : 	return BasicLuaMethod(L, &CvTeam::GetCurrentEra);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetCurrentEra@CvTeam@@QBE?AW4EraTypes@@XZ ; CvTeam::GetCurrentEra
	push	eax
	call	??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@BE?AW4EraTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum EraTypes>
	add	esp, 8

; 1246 : }

	ret	0
?lGetCurrentEra@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lGetCurrentEra
_TEXT	ENDS
PUBLIC	?lSetCurrentEra@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::lSetCurrentEra
EXTRN	?SetCurrentEra@CvTeam@@QAEXW4EraTypes@@@Z:PROC	; CvTeam::SetCurrentEra
; Function compile flags: /Ogtpy
;	COMDAT ?lSetCurrentEra@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetCurrentEra@CvLuaTeam@@KAHPAUlua_State@@@Z PROC	; CvLuaTeam::lSetCurrentEra, COMDAT

; 1251 : 	return BasicLuaMethod(L, &CvTeam::SetCurrentEra);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetCurrentEra@CvTeam@@QAEXW4EraTypes@@@Z ; CvTeam::SetCurrentEra
	push	eax
	call	??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXW4EraTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod<enum EraTypes>
	add	esp, 8

; 1252 : }

	ret	0
?lSetCurrentEra@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeam::lSetCurrentEra
_TEXT	ENDS
PUBLIC	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
;	COMDAT ?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXXZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXXZ@Z PROC ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod, COMDAT

; 222  : {

	push	ebx
	push	ebp
	push	esi

; 223  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@43
	push	OFFSET $SG219953
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@43
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@43
	xor	bl, bl
$LN5@BasicLuaMe@43:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@43
	push	OFFSET $SG219959
	push	esi
	call	_luaL_error
	push	OFFSET $SG219967
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@43:

; 224  : 	(pkType->*func)();

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	pop	edi
	pop	esi
	pop	ebp

; 225  : 	return 0;

	xor	eax, eax
	pop	ebx

; 226  : }

	ret	0
?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod
_TEXT	ENDS
PUBLIC	?lUpdateEmbarkGraphics@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lUpdateEmbarkGraphics
EXTRN	?UpdateEmbarkGraphics@CvTeam@@QAEXXZ:PROC	; CvTeam::UpdateEmbarkGraphics
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluateam.cpp
;	COMDAT ?lUpdateEmbarkGraphics@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lUpdateEmbarkGraphics@CvLuaTeam@@KAHPAUlua_State@@@Z PROC ; CvLuaTeam::lUpdateEmbarkGraphics, COMDAT

; 1257 : 	return BasicLuaMethod(L, &CvTeam::UpdateEmbarkGraphics);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?UpdateEmbarkGraphics@CvTeam@@QAEXXZ ; CvTeam::UpdateEmbarkGraphics
	push	eax
	call	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaTeam@@VCvTeam@@@@KAHPAUlua_State@@P8CvTeam@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaTeam,CvTeam>::BasicLuaMethod
	add	esp, 8

; 1258 : }

	ret	0
?lUpdateEmbarkGraphics@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeam::lUpdateEmbarkGraphics
_TEXT	ENDS
PUBLIC	?PushMethods@CvLuaTeam@@SAXPAUlua_State@@H@Z	; CvLuaTeam::PushMethods
EXTRN	_lua_pushcclosure:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?PushMethods@CvLuaTeam@@SAXPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
?PushMethods@CvLuaTeam@@SAXPAUlua_State@@H@Z PROC	; CvLuaTeam::PushMethods, COMDAT

; 37   : {

	push	esi

; 38   : 	Method(IsNone);

	mov	esi, DWORD PTR _L$[esp]
	push	edi
	push	0
	push	OFFSET ?lIsNone@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsNone
	push	esi
	call	_lua_pushcclosure
	mov	edi, DWORD PTR _t$[esp+16]
	push	OFFSET $SG218060
	push	edi
	push	esi
	call	_lua_setfield

; 39   : 
; 40   : 	Method(AddTeam);

	push	0
	push	OFFSET ?lAddTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lAddTeam
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218061
	push	edi
	push	esi
	call	_lua_setfield

; 41   : 
; 42   : 	Method(CanChangeWarPeace);

	push	0
	push	OFFSET ?lCanChangeWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCanChangeWarPeace
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218062
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 43   : 	Method(CanDeclareWar);

	push	0
	push	OFFSET ?lCanDeclareWar@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCanDeclareWar
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218063
	push	edi
	push	esi
	call	_lua_setfield

; 44   : 	Method(DeclareWar);

	push	0
	push	OFFSET ?lDeclareWar@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lDeclareWar
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218064
	push	edi
	push	esi
	call	_lua_setfield

; 45   : 	Method(MakePeace);

	push	0
	push	OFFSET ?lMakePeace@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lMakePeace
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218065
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 46   : 	Method(GetNumTurnsLockedIntoWar);

	push	0
	push	OFFSET ?lGetNumTurnsLockedIntoWar@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetNumTurnsLockedIntoWar
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218066
	push	edi
	push	esi
	call	_lua_setfield

; 47   : 	Method(Meet);

	push	0
	push	OFFSET ?lMeet@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lMeet
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218067
	push	edi
	push	esi
	call	_lua_setfield

; 48   : 
; 49   : 	Method(GetScore);

	push	0
	push	OFFSET ?lGetScore@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetScore
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218068
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 50   : 	Method(GetPower);

	push	0
	push	OFFSET ?lGetPower@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetPower
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218069
	push	edi
	push	esi
	call	_lua_setfield

; 51   : 	Method(GetDefensivePower);

	push	0
	push	OFFSET ?lGetDefensivePower@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetDefensivePower
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218070
	push	edi
	push	esi
	call	_lua_setfield

; 52   : 	Method(GetNumNukeUnits);

	push	0
	push	OFFSET ?lGetNumNukeUnits@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetNumNukeUnits
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218071
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 53   : 
; 54   : 	Method(GetTeamVotingForInDiplo);

	push	0
	push	OFFSET ?lGetTeamVotingForInDiplo@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTeamVotingForInDiplo
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218072
	push	edi
	push	esi
	call	_lua_setfield

; 55   : 	Method(GetProjectedVotesFromMinorAllies);

	push	0
	push	OFFSET ?lGetProjectedVotesFromMinorAllies@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectedVotesFromMinorAllies
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218073
	push	edi
	push	esi
	call	_lua_setfield

; 56   : 	Method(GetProjectedVotesFromLiberatedMinors);

	push	0
	push	OFFSET ?lGetProjectedVotesFromLiberatedMinors@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectedVotesFromLiberatedMinors
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218074
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 57   : 	Method(GetProjectedVotesFromCivs);

	push	0
	push	OFFSET ?lGetProjectedVotesFromCivs@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectedVotesFromCivs
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218075
	push	edi
	push	esi
	call	_lua_setfield

; 58   : 	Method(GetTotalProjectedVotes);

	push	0
	push	OFFSET ?lGetTotalProjectedVotes@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTotalProjectedVotes
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218076
	push	edi
	push	esi
	call	_lua_setfield

; 59   : 	Method(GetTotalSecuredVotes); // DEPRECATED, use GetTotalProjectedVotes instead

	push	0
	push	OFFSET ?lGetTotalSecuredVotes@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTotalSecuredVotes
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218077
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 60   : 
; 61   : 	Method(GetAtWarCount);

	push	0
	push	OFFSET ?lGetAtWarCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetAtWarCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218078
	push	edi
	push	esi
	call	_lua_setfield

; 62   : 	Method(GetHasMetCivCount);

	push	0
	push	OFFSET ?lGetHasMetCivCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetHasMetCivCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218079
	push	edi
	push	esi
	call	_lua_setfield

; 63   : 	Method(HasMetHuman);

	push	0
	push	OFFSET ?lHasMetHuman@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lHasMetHuman
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218080
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 64   : 	Method(GetDefensivePactCount);

	push	0
	push	OFFSET ?lGetDefensivePactCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetDefensivePactCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218081
	push	edi
	push	esi
	call	_lua_setfield

; 65   : 
; 66   : 	Method(GetUnitClassMaking);

	push	0
	push	OFFSET ?lGetUnitClassMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetUnitClassMaking
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218082
	push	edi
	push	esi
	call	_lua_setfield

; 67   : 	Method(GetUnitClassCountPlusMaking);

	push	0
	push	OFFSET ?lGetUnitClassCountPlusMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetUnitClassCountPlusMaking
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218083
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 68   : 	Method(GetBuildingClassMaking);

	push	0
	push	OFFSET ?lGetBuildingClassMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetBuildingClassMaking
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218084
	push	edi
	push	esi
	call	_lua_setfield

; 69   : 	Method(GetBuildingClassCountPlusMaking);

	push	0
	push	OFFSET ?lGetBuildingClassCountPlusMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetBuildingClassCountPlusMaking
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218085
	push	edi
	push	esi
	call	_lua_setfield

; 70   : 
; 71   : 	Method(CountNumUnitsByArea);

	push	0
	push	OFFSET ?lCountNumUnitsByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCountNumUnitsByArea
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218086
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 72   : 	Method(CountNumCitiesByArea);

	push	0
	push	OFFSET ?lCountNumCitiesByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCountNumCitiesByArea
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218087
	push	edi
	push	esi
	call	_lua_setfield

; 73   : 	Method(CountTotalPopulationByArea);

	push	0
	push	OFFSET ?lCountTotalPopulationByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCountTotalPopulationByArea
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218088
	push	edi
	push	esi
	call	_lua_setfield

; 74   : 	Method(CountEnemyDangerByArea);

	push	0
	push	OFFSET ?lCountEnemyDangerByArea@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCountEnemyDangerByArea
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218089
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 75   : 
; 76   : 	Method(IsHuman);

	push	0
	push	OFFSET ?lIsHuman@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsHuman
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218090
	push	edi
	push	esi
	call	_lua_setfield

; 77   : 	Method(IsBarbarian);

	push	0
	push	OFFSET ?lIsBarbarian@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsBarbarian
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218091
	push	edi
	push	esi
	call	_lua_setfield

; 78   : 
; 79   : 	Method(IsMinorCiv);

	push	0
	push	OFFSET ?lIsMinorCiv@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsMinorCiv
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218092
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 80   : 	Method(IsMinorCivWarmonger);

	push	0
	push	OFFSET ?lIsMinorCivWarmonger@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsMinorCivWarmonger
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218093
	push	edi
	push	esi
	call	_lua_setfield

; 81   : 
; 82   : 	Method(GetLeaderID);

	push	0
	push	OFFSET ?lGetLeaderID@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetLeaderID
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218094
	push	edi
	push	esi
	call	_lua_setfield

; 83   : 	Method(GetSecretaryID);

	push	0
	push	OFFSET ?lGetSecretaryID@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetSecretaryID
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218095
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 84   : 	Method(GetHandicapType);

	push	0
	push	OFFSET ?lGetHandicapType@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetHandicapType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218096
	push	edi
	push	esi
	call	_lua_setfield

; 85   : 	Method(GetName);

	push	0
	push	OFFSET ?lGetName@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetName
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218097
	push	edi
	push	esi
	call	_lua_setfield

; 86   : 	Method(GetNameKey);

	push	0
	push	OFFSET ?lGetNameKey@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetNameKey
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218098
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 87   : 
; 88   : 	Method(GetNumMembers);

	push	0
	push	OFFSET ?lGetNumMembers@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetNumMembers
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218099
	push	edi
	push	esi
	call	_lua_setfield

; 89   : 	Method(IsAlive);

	push	0
	push	OFFSET ?lIsAlive@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsAlive
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218100
	push	edi
	push	esi
	call	_lua_setfield

; 90   : 	Method(IsEverAlive);

	push	0
	push	OFFSET ?lIsEverAlive@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsEverAlive
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218101
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 91   : 	Method(GetNumCities);

	push	0
	push	OFFSET ?lGetNumCities@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetNumCities
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218102
	push	edi
	push	esi
	call	_lua_setfield

; 92   : 	Method(GetTotalPopulation);

	push	0
	push	OFFSET ?lGetTotalPopulation@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTotalPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218103
	push	edi
	push	esi
	call	_lua_setfield

; 93   : 	Method(GetTotalLand);

	push	0
	push	OFFSET ?lGetTotalLand@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTotalLand
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218104
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 94   : 	Method(GetNukeInterception);

	push	0
	push	OFFSET ?lGetNukeInterception@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetNukeInterception
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218105
	push	edi
	push	esi
	call	_lua_setfield

; 95   : 	Method(ChangeNukeInterception);

	push	0
	push	OFFSET ?lChangeNukeInterception@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeNukeInterception
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218106
	push	edi
	push	esi
	call	_lua_setfield

; 96   : 
; 97   : 	Method(GetForceTeamVoteEligibilityCount);

	push	0
	push	OFFSET ?lGetForceTeamVoteEligibilityCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetForceTeamVoteEligibilityCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218107
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 98   : 	Method(IsForceTeamVoteEligible);

	push	0
	push	OFFSET ?lIsForceTeamVoteEligible@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsForceTeamVoteEligible
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218108
	push	edi
	push	esi
	call	_lua_setfield

; 99   : 	Method(ChangeForceTeamVoteEligibilityCount);

	push	0
	push	OFFSET ?lChangeForceTeamVoteEligibilityCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeForceTeamVoteEligibilityCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218109
	push	edi
	push	esi
	call	_lua_setfield

; 100  : 	Method(GetExtraWaterSeeFromCount);

	push	0
	push	OFFSET ?lGetExtraWaterSeeFromCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetExtraWaterSeeFromCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218110
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 101  : 	Method(IsExtraWaterSeeFrom);

	push	0
	push	OFFSET ?lIsExtraWaterSeeFrom@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsExtraWaterSeeFrom
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218111
	push	edi
	push	esi
	call	_lua_setfield

; 102  : 	Method(ChangeExtraWaterSeeFromCount);

	push	0
	push	OFFSET ?lChangeExtraWaterSeeFromCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeExtraWaterSeeFromCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218112
	push	edi
	push	esi
	call	_lua_setfield

; 103  : 	Method(GetMapTradingCount);

	push	0
	push	OFFSET ?lGetMapTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetMapTradingCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218113
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 104  : 	Method(IsMapTrading);

	push	0
	push	OFFSET ?lIsMapTrading@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsMapTrading
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218114
	push	edi
	push	esi
	call	_lua_setfield

; 105  : 	Method(ChangeMapTradingCount);

	push	0
	push	OFFSET ?lChangeMapTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeMapTradingCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218115
	push	edi
	push	esi
	call	_lua_setfield

; 106  : 	Method(GetTechTradingCount);

	push	0
	push	OFFSET ?lGetTechTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTechTradingCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218116
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 107  : 	Method(IsTechTrading);

	push	0
	push	OFFSET ?lIsTechTrading@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsTechTrading
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218117
	push	edi
	push	esi
	call	_lua_setfield

; 108  : 	Method(ChangeTechTradingCount);

	push	0
	push	OFFSET ?lChangeTechTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeTechTradingCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218118
	push	edi
	push	esi
	call	_lua_setfield

; 109  : 	Method(GetGoldTradingCount);

	push	0
	push	OFFSET ?lGetGoldTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetGoldTradingCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218119
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 110  : 	Method(IsGoldTrading);

	push	0
	push	OFFSET ?lIsGoldTrading@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsGoldTrading
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218120
	push	edi
	push	esi
	call	_lua_setfield

; 111  : 	Method(ChangeGoldTradingCount);

	push	0
	push	OFFSET ?lChangeGoldTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeGoldTradingCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218121
	push	edi
	push	esi
	call	_lua_setfield

; 112  : 	Method(GetAllowEmbassyTradingAllowedCount);

	push	0
	push	OFFSET ?lGetAllowEmbassyTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetAllowEmbassyTradingAllowedCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218122
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 113  : 	Method(IsAllowEmbassyTradingAllowed);

	push	0
	push	OFFSET ?lIsAllowEmbassyTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsAllowEmbassyTradingAllowed
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218123
	push	edi
	push	esi
	call	_lua_setfield

; 114  : 	Method(ChangeAllowEmbassyTradingAllowedCount);

	push	0
	push	OFFSET ?lChangeAllowEmbassyTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeAllowEmbassyTradingAllowedCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218124
	push	edi
	push	esi
	call	_lua_setfield

; 115  : 	Method(GetOpenBordersTradingAllowedCount);

	push	0
	push	OFFSET ?lGetOpenBordersTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetOpenBordersTradingAllowedCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218125
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 116  : 	Method(IsOpenBordersTradingAllowed);

	push	0
	push	OFFSET ?lIsOpenBordersTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsOpenBordersTradingAllowed
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218126
	push	edi
	push	esi
	call	_lua_setfield

; 117  : 	Method(IsOpenBordersTradingAllowedWithTeam);

	push	0
	push	OFFSET ?lIsOpenBordersTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsOpenBordersTradingAllowedWithTeam
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218127
	push	edi
	push	esi
	call	_lua_setfield

; 118  : 	Method(ChangeOpenBordersTradingAllowedCount);

	push	0
	push	OFFSET ?lChangeOpenBordersTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeOpenBordersTradingAllowedCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218128
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 119  : 	Method(GetDefensivePactTradingAllowedCount);

	push	0
	push	OFFSET ?lGetDefensivePactTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetDefensivePactTradingAllowedCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218129
	push	edi
	push	esi
	call	_lua_setfield

; 120  : 	Method(IsDefensivePactTradingAllowed);

	push	0
	push	OFFSET ?lIsDefensivePactTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsDefensivePactTradingAllowed
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218130
	push	edi
	push	esi
	call	_lua_setfield

; 121  : 	Method(IsDefensivePactTradingAllowedWithTeam);

	push	0
	push	OFFSET ?lIsDefensivePactTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsDefensivePactTradingAllowedWithTeam
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218131
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 122  : 	Method(ChangeDefensivePactTradingAllowedCount);

	push	0
	push	OFFSET ?lChangeDefensivePactTradingAllowedCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeDefensivePactTradingAllowedCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218132
	push	edi
	push	esi
	call	_lua_setfield

; 123  : 	Method(IsResearchAgreementTradingAllowed);

	push	0
	push	OFFSET ?lIsResearchAgreementTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsResearchAgreementTradingAllowed
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218133
	push	edi
	push	esi
	call	_lua_setfield

; 124  : 	Method(IsResearchAgreementTradingAllowedWithTeam);

	push	0
	push	OFFSET ?lIsResearchAgreementTradingAllowedWithTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsResearchAgreementTradingAllowedWithTeam
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218134
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 125  : 	Method(IsTradeAgreementTradingAllowed);

	push	0
	push	OFFSET ?lIsTradeAgreementTradingAllowed@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsTradeAgreementTradingAllowed
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218135
	push	edi
	push	esi
	call	_lua_setfield

; 126  : 	Method(GetPermanentAllianceTradingCount);

	push	0
	push	OFFSET ?lGetPermanentAllianceTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetPermanentAllianceTradingCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218136
	push	edi
	push	esi
	call	_lua_setfield

; 127  : 	Method(IsPermanentAllianceTrading);

	push	0
	push	OFFSET ?lIsPermanentAllianceTrading@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsPermanentAllianceTrading
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218137
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 128  : 	Method(ChangePermanentAllianceTradingCount);

	push	0
	push	OFFSET ?lChangePermanentAllianceTradingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangePermanentAllianceTradingCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218138
	push	edi
	push	esi
	call	_lua_setfield

; 129  : 	Method(GetBridgeBuildingCount);

	push	0
	push	OFFSET ?lGetBridgeBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetBridgeBuildingCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218139
	push	edi
	push	esi
	call	_lua_setfield

; 130  : 	Method(IsBridgeBuilding);

	push	0
	push	OFFSET ?lIsBridgeBuilding@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsBridgeBuilding
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218140
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 131  : 	Method(ChangeBridgeBuildingCount);

	push	0
	push	OFFSET ?lChangeBridgeBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeBridgeBuildingCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218141
	push	edi
	push	esi
	call	_lua_setfield

; 132  : 	Method(GetWaterWorkCount);

	push	0
	push	OFFSET ?lGetWaterWorkCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetWaterWorkCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218142
	push	edi
	push	esi
	call	_lua_setfield

; 133  : 	Method(IsWaterWork);

	push	0
	push	OFFSET ?lIsWaterWork@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsWaterWork
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218143
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 134  : 	Method(ChangeWaterWorkCount);

	push	0
	push	OFFSET ?lChangeWaterWorkCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeWaterWorkCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218144
	push	edi
	push	esi
	call	_lua_setfield

; 135  : 
; 136  : 	Method(GetBorderObstacleCount);

	push	0
	push	OFFSET ?lGetBorderObstacleCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetBorderObstacleCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218145
	push	edi
	push	esi
	call	_lua_setfield

; 137  : 	Method(IsBorderObstacle);

	push	0
	push	OFFSET ?lIsBorderObstacle@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsBorderObstacle
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218146
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 138  : 	Method(ChangeBorderObstacleCount);

	push	0
	push	OFFSET ?lChangeBorderObstacleCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeBorderObstacleCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218147
	push	edi
	push	esi
	call	_lua_setfield

; 139  : 
; 140  : 	Method(IsMapCentering);

	push	0
	push	OFFSET ?lIsMapCentering@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsMapCentering
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218148
	push	edi
	push	esi
	call	_lua_setfield

; 141  : 	Method(SetMapCentering);

	push	0
	push	OFFSET ?lSetMapCentering@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lSetMapCentering
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218149
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 142  : 
; 143  : 	Method(GetID);

	push	0
	push	OFFSET ?lGetID@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetID
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218150
	push	edi
	push	esi
	call	_lua_setfield

; 144  : 
; 145  : 	Method(GetTechShareCount);

	push	0
	push	OFFSET ?lGetTechShareCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTechShareCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218151
	push	edi
	push	esi
	call	_lua_setfield

; 146  : 	Method(IsTechShare);

	push	0
	push	OFFSET ?lIsTechShare@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsTechShare
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218152
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 147  : 	Method(ChangeTechShareCount);

	push	0
	push	OFFSET ?lChangeTechShareCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeTechShareCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218153
	push	edi
	push	esi
	call	_lua_setfield

; 148  : 
; 149  : 	Method(GetExtraMoves);

	push	0
	push	OFFSET ?lGetExtraMoves@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetExtraMoves
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218154
	push	edi
	push	esi
	call	_lua_setfield

; 150  : 	Method(ChangeExtraMoves);

	push	0
	push	OFFSET ?lChangeExtraMoves@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeExtraMoves
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218155
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 151  : 
; 152  : 	Method(CanEmbark);

	push	0
	push	OFFSET ?lCanEmbark@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCanEmbark
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218156
	push	edi
	push	esi
	call	_lua_setfield

; 153  : 	Method(CanDefensiveEmbark);

	push	0
	push	OFFSET ?lCanDefensiveEmbark@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCanDefensiveEmbark
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218157
	push	edi
	push	esi
	call	_lua_setfield

; 154  : 
; 155  : 	Method(IsHasMet);

	push	0
	push	OFFSET ?lIsHasMet@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsHasMet
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218158
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 156  : 	Method(IsAtWar);

	push	0
	push	OFFSET ?lIsAtWar@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsAtWar
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218159
	push	edi
	push	esi
	call	_lua_setfield

; 157  : 	Method(IsPermanentWarPeace);

	push	0
	push	OFFSET ?lIsPermanentWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsPermanentWarPeace
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218160
	push	edi
	push	esi
	call	_lua_setfield

; 158  : 	Method(SetPermanentWarPeace);

	push	0
	push	OFFSET ?lSetPermanentWarPeace@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lSetPermanentWarPeace
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218161
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 159  : 
; 160  : 	Method(GetLiberatedByTeam);

	push	0
	push	OFFSET ?lGetLiberatedByTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetLiberatedByTeam
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218162
	push	edi
	push	esi
	call	_lua_setfield

; 161  : 	Method(GetKilledByTeam);

	push	0
	push	OFFSET ?lGetKilledByTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetKilledByTeam
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218163
	push	edi
	push	esi
	call	_lua_setfield

; 162  : 
; 163  : 	Method(HasEmbassyAtTeam);

	push	0
	push	OFFSET ?lHasEmbassyAtTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lHasEmbassyAtTeam
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218164
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 164  : 	Method(IsAllowsOpenBordersToTeam);

	push	0
	push	OFFSET ?lIsAllowsOpenBordersToTeam@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsAllowsOpenBordersToTeam
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218165
	push	edi
	push	esi
	call	_lua_setfield

; 165  : 	Method(IsForcePeace);

	push	0
	push	OFFSET ?lIsForcePeace@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsForcePeace
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218166
	push	edi
	push	esi
	call	_lua_setfield

; 166  : 	Method(IsDefensivePact);

	push	0
	push	OFFSET ?lIsDefensivePact@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsDefensivePact
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218167
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 167  : 	Method(GetRouteChange);

	push	0
	push	OFFSET ?lGetRouteChange@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetRouteChange
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218168
	push	edi
	push	esi
	call	_lua_setfield

; 168  : 	Method(ChangeRouteChange);

	push	0
	push	OFFSET ?lChangeRouteChange@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeRouteChange
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218169
	push	edi
	push	esi
	call	_lua_setfield

; 169  : 	Method(GetProjectCount);

	push	0
	push	OFFSET ?lGetProjectCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218170
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 170  : 	Method(GetProjectDefaultArtType);

	push	0
	push	OFFSET ?lGetProjectDefaultArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectDefaultArtType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218171
	push	edi
	push	esi
	call	_lua_setfield

; 171  : 	Method(SetProjectDefaultArtType);

	push	0
	push	OFFSET ?lSetProjectDefaultArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lSetProjectDefaultArtType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218172
	push	edi
	push	esi
	call	_lua_setfield

; 172  : 	Method(GetProjectArtType);

	push	0
	push	OFFSET ?lGetProjectArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectArtType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218173
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 173  : 	Method(SetProjectArtType);

	push	0
	push	OFFSET ?lSetProjectArtType@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lSetProjectArtType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218174
	push	edi
	push	esi
	call	_lua_setfield

; 174  : 	Method(IsProjectMaxedOut);

	push	0
	push	OFFSET ?lIsProjectMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsProjectMaxedOut
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218175
	push	edi
	push	esi
	call	_lua_setfield

; 175  : 	Method(IsProjectAndArtMaxedOut);

	push	0
	push	OFFSET ?lIsProjectAndArtMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsProjectAndArtMaxedOut
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218176
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 176  : 	Method(ChangeProjectCount);

	push	0
	push	OFFSET ?lChangeProjectCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeProjectCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218177
	push	edi
	push	esi
	call	_lua_setfield

; 177  : 	Method(GetProjectMaking);

	push	0
	push	OFFSET ?lGetProjectMaking@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetProjectMaking
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218178
	push	edi
	push	esi
	call	_lua_setfield

; 178  : 	Method(GetUnitClassCount);

	push	0
	push	OFFSET ?lGetUnitClassCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetUnitClassCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218179
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 179  : 	Method(IsUnitClassMaxedOut);

	push	0
	push	OFFSET ?lIsUnitClassMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsUnitClassMaxedOut
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218180
	push	edi
	push	esi
	call	_lua_setfield

; 180  : 	Method(GetBuildingClassCount);

	push	0
	push	OFFSET ?lGetBuildingClassCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetBuildingClassCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218181
	push	edi
	push	esi
	call	_lua_setfield

; 181  : 	Method(IsBuildingClassMaxedOut);

	push	0
	push	OFFSET ?lIsBuildingClassMaxedOut@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsBuildingClassMaxedOut
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218182
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 182  : 	Method(GetObsoleteBuildingCount);

	push	0
	push	OFFSET ?lGetObsoleteBuildingCount@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetObsoleteBuildingCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218183
	push	edi
	push	esi
	call	_lua_setfield

; 183  : 	Method(IsObsoleteBuilding);

	push	0
	push	OFFSET ?lIsObsoleteBuilding@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsObsoleteBuilding
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218184
	push	edi
	push	esi
	call	_lua_setfield

; 184  : 
; 185  : 	Method(IsHasResearchAgreement);

	push	0
	push	OFFSET ?lIsHasResearchAgreement@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsHasResearchAgreement
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218185
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 186  : 	Method(IsHasTradeAgreement);

	push	0
	push	OFFSET ?lIsHasTradeAgreement@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsHasTradeAgreement
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218186
	push	edi
	push	esi
	call	_lua_setfield

; 187  : 
; 188  : 	Method(IsHasTech);

	push	0
	push	OFFSET ?lIsHasTech@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsHasTech
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218187
	push	edi
	push	esi
	call	_lua_setfield

; 189  : 	Method(SetHasTech);

	push	0
	push	OFFSET ?lSetHasTech@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lSetHasTech
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218188
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 190  : 
; 191  : 	Method(GetTeamTechs);

	push	0
	push	OFFSET ?lGetTeamTechs@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetTeamTechs
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218189
	push	edi
	push	esi
	call	_lua_setfield

; 192  : 
; 193  : 	Method(GetImprovementYieldChange);

	push	0
	push	OFFSET ?lGetImprovementYieldChange@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetImprovementYieldChange
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218190
	push	edi
	push	esi
	call	_lua_setfield

; 194  : 	Method(ChangeImprovementYieldChange);

	push	0
	push	OFFSET ?lChangeImprovementYieldChange@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeImprovementYieldChange
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218191
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 195  : 
; 196  : 	Method(IsHomeOfUnitedNations);

	push	0
	push	OFFSET ?lIsHomeOfUnitedNations@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lIsHomeOfUnitedNations
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218192
	push	edi
	push	esi
	call	_lua_setfield

; 197  : 
; 198  : 	Method(GetVictoryCountdown);

	push	0
	push	OFFSET ?lGetVictoryCountdown@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetVictoryCountdown
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218193
	push	edi
	push	esi
	call	_lua_setfield

; 199  : 	Method(GetVictoryDelay);

	push	0
	push	OFFSET ?lGetVictoryDelay@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetVictoryDelay
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218194
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 200  : 	Method(CanLaunch);

	push	0
	push	OFFSET ?lCanLaunch@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lCanLaunch
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218195
	push	edi
	push	esi
	call	_lua_setfield

; 201  : 
; 202  : 	Method(GetVictoryPoints);

	push	0
	push	OFFSET ?lGetVictoryPoints@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetVictoryPoints
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218196
	push	edi
	push	esi
	call	_lua_setfield

; 203  : 	Method(ChangeVictoryPoints);

	push	0
	push	OFFSET ?lChangeVictoryPoints@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lChangeVictoryPoints
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218197
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 204  : 
; 205  : 	Method(GetCurrentEra);

	push	0
	push	OFFSET ?lGetCurrentEra@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lGetCurrentEra
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218198
	push	edi
	push	esi
	call	_lua_setfield

; 206  : 	Method(SetCurrentEra);

	push	0
	push	OFFSET ?lSetCurrentEra@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lSetCurrentEra
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218199
	push	edi
	push	esi
	call	_lua_setfield

; 207  : 
; 208  : 	Method(UpdateEmbarkGraphics);

	push	0
	push	OFFSET ?lUpdateEmbarkGraphics@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::lUpdateEmbarkGraphics
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218200
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H
	pop	edi
	pop	esi

; 209  : }

	ret	0
?PushMethods@CvLuaTeam@@SAXPAUlua_State@@H@Z ENDP	; CvLuaTeam::PushMethods
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAXPAUlua_State@@PAVCvTeam@@@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::Push
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAXPAUlua_State@@PAVCvTeam@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAXPAUlua_State@@PAVCvTeam@@@Z PROC ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::Push, COMDAT

; 39   : {

	push	edi

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	mov	edi, DWORD PTR _pkType$[esp]
	test	edi, edi
	je	$LN4@Push@2
	push	ebx
	push	ebp
	push	esi

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	mov	esi, DWORD PTR _L$[esp+12]
	push	OFFSET $SG218203
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_getfield

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN11@Push@2

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 59   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET $SG219930
	push	esi
	call	_lua_pushstring

; 63   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET $SG219931
	push	esi
	call	_lua_pushstring

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET $SG219932
	push	esi
	call	_lua_pushstring
	add	esp, 68					; 00000044H

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	push	esi
	call	_lua_pushvalue

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	push	OFFSET $SG218203
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_setfield

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	push	esi
	call	_lua_gettop
	push	eax
	push	esi
	call	?PushMethods@CvLuaTeam@@SAXPAUlua_State@@H@Z ; CvLuaTeam::PushMethods
	add	esp, 56					; 00000038H
$LN11@Push@2:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET $SG219934
	push	esi
	mov	ebx, eax
	call	_lua_pushstring

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	mov	ebp, eax
	call	_lua_pushlightuserdata

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	SHORT $LN2@Push@2

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 97   : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET $SG219937
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET $SG219938
	push	esi
	call	_lua_pushstring

; 102  : 			lua_pushvalue(L, type_index);

	push	ebx
	push	esi
	call	_lua_pushvalue
	add	esp, 68					; 00000044H

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_pushvalue

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	push	ebp
	push	esi
	call	_lua_rawset
	add	esp, 40					; 00000028H
$LN2@Push@2:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	push	ebp
	push	esi
	call	_lua_remove

; 114  : 		lua_remove(L, type_index);

	push	ebx
	push	esi
	call	_lua_remove
	add	esp, 16					; 00000010H
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
$LN4@Push@2:

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else
; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushnil
	add	esp, 4
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAXPAUlua_State@@PAVCvTeam@@@Z ENDP ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::Push
_TEXT	ENDS
PUBLIC	?pRegister@CvLuaTeam@@KAHPAUlua_State@@@Z	; CvLuaTeam::pRegister
EXTRN	_lua_rawseti:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluateam.cpp
;	COMDAT ?pRegister@CvLuaTeam@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?pRegister@CvLuaTeam@@KAHPAUlua_State@@@Z PROC		; CvLuaTeam::pRegister, COMDAT

; 222  : {

	push	ebx
	push	esi

; 223  : 	lua_getglobal(L, "Teams");

	mov	esi, DWORD PTR _L$[esp+4]
	push	edi
	push	OFFSET $SG218207
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_getfield

; 224  : 	if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN4@pRegister

; 225  : 	{
; 226  : 		lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 227  : 		lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 228  : 		lua_pushvalue(L, -1);

	push	-1
	push	esi
	call	_lua_pushvalue

; 229  : 		lua_setglobal(L, "Teams");

	push	OFFSET $SG218209
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_setfield
	add	esp, 40					; 00000028H
$LN4@pRegister:

; 230  : 	}
; 231  : 
; 232  : 	for(int i = 0; i < MAX_TEAMS; ++i)

	xor	ebx, ebx
	xor	edi, edi
$LL3@pRegister:

; 233  : 	{
; 234  : 		CvTeam* pkTeam = &(GET_TEAM((TeamTypes)i));

	mov	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	lea	ecx, DWORD PTR [edi+eax]

; 235  : 		CvLuaTeam::Push(L, pkTeam);

	push	ecx
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaTeam@@VCvTeam@@@@SAXPAUlua_State@@PAVCvTeam@@@Z ; CvLuaScopedInstance<CvLuaTeam,CvTeam>::Push

; 236  : 		lua_rawseti(L, -2, i);

	push	ebx
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	add	edi, 2980				; 00000ba4H
	add	esp, 20					; 00000014H
	inc	ebx
	cmp	edi, 190720				; 0002e900H
	jl	SHORT $LL3@pRegister
	pop	edi
	pop	esi

; 237  : 	}
; 238  : 
; 239  : 	return 0;

	xor	eax, eax
	pop	ebx

; 240  : }

	ret	0
?pRegister@CvLuaTeam@@KAHPAUlua_State@@@Z ENDP		; CvLuaTeam::pRegister
_TEXT	ENDS
PUBLIC	?Register@CvLuaTeam@@SAXPAUlua_State@@@Z	; CvLuaTeam::Register
EXTRN	?CCallWithErrorHandling@Details@FLua@@YA_NPAUlua_State@@P6AH0@ZPAX@Z:PROC ; FLua::Details::CCallWithErrorHandling
; Function compile flags: /Ogtpy
;	COMDAT ?Register@CvLuaTeam@@SAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?Register@CvLuaTeam@@SAXPAUlua_State@@@Z PROC		; CvLuaTeam::Register, COMDAT

; 28   : 	FLua::Details::CCallWithErrorHandling(L, pRegister);

	mov	eax, DWORD PTR _L$[esp-4]
	push	0
	push	OFFSET ?pRegister@CvLuaTeam@@KAHPAUlua_State@@@Z ; CvLuaTeam::pRegister
	push	eax
	call	?CCallWithErrorHandling@Details@FLua@@YA_NPAUlua_State@@P6AH0@ZPAX@Z ; FLua::Details::CCallWithErrorHandling
	add	esp, 12					; 0000000cH

; 29   : }

	ret	0
?Register@CvLuaTeam@@SAXPAUlua_State@@@Z ENDP		; CvLuaTeam::Register
_TEXT	ENDS
END
