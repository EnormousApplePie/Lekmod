; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\EnormousApplePie\Documents\GitHub\Lekmod\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvDllUnit.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_CIV5_XP2_DLL_VERSION DD FLAT:$SG217252
_DATA	ENDS
CONST	SEGMENT
$SG217252 DB	'1.0.0', 00H
	ORG $+2
_guidICvUnknown DD 0d89ba82fH
	DW	09fa3H
	DW	04696H
	DB	0b3H
	DB	0f4H
	DB	052H
	DB	0bdH
	DB	0b1H
	DB	01H
	DB	0cfH
	DB	0b2H
_guidICvUnit1 DD 09f157e04H
	DW	04b2dH
	DW	04797H
	DB	09aH
	DB	0a5H
	DB	013H
	DB	025H
	DB	0deH
	DB	022H
	DB	016H
	DB	07H
_guidICvUnit2 DD 03c93cecH
	DW	0650aH
	DW	043deH
	DB	09eH
	DB	01bH
	DB	0feH
	DB	015H
	DB	0d7H
	DB	05eH
	DB	0baH
	DB	092H
CONST	ENDS
PUBLIC	??_7ICvUnknown@@6B@				; ICvUnknown::`vftable'
PUBLIC	??0ICvUnknown@@QAE@XZ				; ICvUnknown::ICvUnknown
PUBLIC	??_R4ICvUnknown@@6B@				; ICvUnknown::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVICvUnknown@@@8				; ICvUnknown `RTTI Type Descriptor'
PUBLIC	??_R3ICvUnknown@@8				; ICvUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICvUnknown@@8				; ICvUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICvUnknown@@8			; ICvUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@ICvUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICvUnknown@@8 DD FLAT:??_R0?AVICvUnknown@@@8 ; ICvUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICvUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2ICvUnknown@@8
rdata$r	SEGMENT
??_R2ICvUnknown@@8 DD FLAT:??_R1A@?0A@EA@ICvUnknown@@8	; ICvUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ICvUnknown@@8
rdata$r	SEGMENT
??_R3ICvUnknown@@8 DD 00H				; ICvUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ICvUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVICvUnknown@@@8
_DATA	SEGMENT
??_R0?AVICvUnknown@@@8 DD FLAT:??_7type_info@@6B@	; ICvUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVICvUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ICvUnknown@@6B@
rdata$r	SEGMENT
??_R4ICvUnknown@@6B@ DD 00H				; ICvUnknown::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVICvUnknown@@@8
	DD	FLAT:??_R3ICvUnknown@@8
rdata$r	ENDS
;	COMDAT ??_7ICvUnknown@@6B@
CONST	SEGMENT
??_7ICvUnknown@@6B@ DD FLAT:??_R4ICvUnknown@@6B@	; ICvUnknown::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0ICvUnknown@@QAE@XZ
_TEXT	SEGMENT
??0ICvUnknown@@QAE@XZ PROC				; ICvUnknown::ICvUnknown, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7ICvUnknown@@6B@
	ret	0
??0ICvUnknown@@QAE@XZ ENDP				; ICvUnknown::ICvUnknown
_TEXT	ENDS
PUBLIC	??_7CvDllUnit@@6B@				; CvDllUnit::`vftable'
PUBLIC	??1CvDllUnit@@QAE@XZ				; CvDllUnit::~CvDllUnit
PUBLIC	??_R4CvDllUnit@@6B@				; CvDllUnit::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCvDllUnit@@@8				; CvDllUnit `RTTI Type Descriptor'
PUBLIC	??_R3CvDllUnit@@8				; CvDllUnit::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CvDllUnit@@8				; CvDllUnit::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CvDllUnit@@8			; CvDllUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ICvUnit2@@8			; ICvUnit2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVICvUnit2@@@8				; ICvUnit2 `RTTI Type Descriptor'
PUBLIC	??_R3ICvUnit2@@8				; ICvUnit2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICvUnit2@@8				; ICvUnit2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICvUnit1@@8			; ICvUnit1::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVICvUnit1@@@8				; ICvUnit1 `RTTI Type Descriptor'
PUBLIC	??_R3ICvUnit1@@8				; ICvUnit1::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICvUnit1@@8				; ICvUnit1::`RTTI Base Class Array'
PUBLIC	?QueryInterface@CvDllUnit@@UAGPAXU_GUID@@@Z	; CvDllUnit::QueryInterface
PUBLIC	?Destroy@CvDllUnit@@EAGXXZ			; CvDllUnit::Destroy
PUBLIC	?GetID@CvDllUnit@@UBGHXZ			; CvDllUnit::GetID
PUBLIC	?GetOwner@CvDllUnit@@UBG?AW4PlayerTypes@@XZ	; CvDllUnit::GetOwner
PUBLIC	?GetDamage@CvDllUnit@@UBGHXZ			; CvDllUnit::GetDamage
PUBLIC	?GetMoves@CvDllUnit@@UBGHXZ			; CvDllUnit::GetMoves
PUBLIC	?IsSelected@CvDllUnit@@UBG_NXZ			; CvDllUnit::IsSelected
PUBLIC	?GetMaxHitPoints@CvDllUnit@@UBGHXZ		; CvDllUnit::GetMaxHitPoints
PUBLIC	?GetCivilizationType@CvDllUnit@@UBG?AW4CivilizationTypes@@XZ ; CvDllUnit::GetCivilizationType
PUBLIC	?GetTeam@CvDllUnit@@UBG?AW4TeamTypes@@XZ	; CvDllUnit::GetTeam
PUBLIC	?GetDomainType@CvDllUnit@@UBG?AW4DomainTypes@@XZ ; CvDllUnit::GetDomainType
PUBLIC	?IsCombatUnit@CvDllUnit@@UBG_NXZ		; CvDllUnit::IsCombatUnit
PUBLIC	?IsBarbarian@CvDllUnit@@UBG_NXZ			; CvDllUnit::IsBarbarian
PUBLIC	?IsHoveringUnit@CvDllUnit@@UBG_NXZ		; CvDllUnit::IsHoveringUnit
PUBLIC	?IsInvisible@CvDllUnit@@UBG_NW4TeamTypes@@_N@Z	; CvDllUnit::IsInvisible
PUBLIC	?CanMoveImpassable@CvDllUnit@@UBG_NXZ		; CvDllUnit::CanMoveImpassable
PUBLIC	?GetFacingDirection@CvDllUnit@@UBG?AW4DirectionTypes@@_N@Z ; CvDllUnit::GetFacingDirection
PUBLIC	?GetPlot@CvDllUnit@@UBGPAVICvPlot1@@XZ		; CvDllUnit::GetPlot
PUBLIC	?GetUnitInfo@CvDllUnit@@UBGPAVICvUnitInfo1@@XZ	; CvDllUnit::GetUnitInfo
PUBLIC	?IsEmbarked@CvDllUnit@@UBG_NXZ			; CvDllUnit::IsEmbarked
PUBLIC	?IsGarrisoned@CvDllUnit@@UBG_NXZ		; CvDllUnit::IsGarrisoned
PUBLIC	?GetHeadMissionData@CvDllUnit@@UBGPAVICvMissionData1@@XZ ; CvDllUnit::GetHeadMissionData
PUBLIC	?GetUnitCombatType@CvDllUnit@@UAG?AW4UnitCombatTypes@@XZ ; CvDllUnit::GetUnitCombatType
PUBLIC	?GetX@CvDllUnit@@UBGHXZ				; CvDllUnit::GetX
PUBLIC	?GetY@CvDllUnit@@UBGHXZ				; CvDllUnit::GetY
PUBLIC	?GetPosition@CvDllUnit@@UBGXAAH0@Z		; CvDllUnit::GetPosition
PUBLIC	?CanSwapWithUnitHere@CvDllUnit@@UBG_NPAVICvPlot1@@@Z ; CvDllUnit::CanSwapWithUnitHere
PUBLIC	?CanEmbarkOnto@CvDllUnit@@UBG_NPAVICvPlot1@@0_N@Z ; CvDllUnit::CanEmbarkOnto
PUBLIC	?CanDisembarkOnto@CvDllUnit@@UBG_NPAVICvPlot1@@0_N@Z ; CvDllUnit::CanDisembarkOnto
PUBLIC	?IsFirstTimeSelected@CvDllUnit@@UBG_NXZ		; CvDllUnit::IsFirstTimeSelected
PUBLIC	?GetUnitType@CvDllUnit@@UBG?AW4UnitTypes@@XZ	; CvDllUnit::GetUnitType
PUBLIC	?IsDelayedDeathExported@CvDllUnit@@UBG_NXZ	; CvDllUnit::IsDelayedDeathExported
PUBLIC	?IsBusy@CvDllUnit@@UBG_NXZ			; CvDllUnit::IsBusy
PUBLIC	?SetupGraphical@CvDllUnit@@UAGXXZ		; CvDllUnit::SetupGraphical
PUBLIC	?GetName@CvDllUnit@@UBG?AVCvString@@XZ		; CvDllUnit::GetName
PUBLIC	?DoCommand@CvDllUnit@@UAGXW4CommandTypes@@HH@Z	; CvDllUnit::DoCommand
PUBLIC	?CanDoInterfaceMode@CvDllUnit@@UAG_NW4InterfaceModeTypes@@_N@Z ; CvDllUnit::CanDoInterfaceMode
PUBLIC	?GetIDInfo@CvDllUnit@@UBG?AUIDInfo@@XZ		; CvDllUnit::GetIDInfo
PUBLIC	?MovesLeft@CvDllUnit@@UBGHXZ			; CvDllUnit::MovesLeft
PUBLIC	?CanMoveInto@CvDllUnit@@UBG_NPAVICvPlot1@@E@Z	; CvDllUnit::CanMoveInto
PUBLIC	?GetDeclareWarMove@CvDllUnit@@UBG?AW4TeamTypes@@PAVICvPlot1@@@Z ; CvDllUnit::GetDeclareWarMove
PUBLIC	?ReadyToSelect@CvDllUnit@@UBG_NXZ		; CvDllUnit::ReadyToSelect
PUBLIC	?CanWork@CvDllUnit@@UBG_NXZ			; CvDllUnit::CanWork
PUBLIC	?CanFound@CvDllUnit@@UBG_NXZ			; CvDllUnit::CanFound
PUBLIC	?GetSyncArchive@CvDllUnit@@UAGAAVFAutoArchive@@XZ ; CvDllUnit::GetSyncArchive
PUBLIC	?IsTrade@CvDllUnit@@UBG_NXZ			; CvDllUnit::IsTrade
;	COMDAT ??_R2ICvUnit1@@8
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllunit.cpp
rdata$r	SEGMENT
??_R2ICvUnit1@@8 DD FLAT:??_R1A@?0A@EA@ICvUnit1@@8	; ICvUnit1::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICvUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICvUnit1@@8
rdata$r	SEGMENT
??_R3ICvUnit1@@8 DD 00H					; ICvUnit1::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICvUnit1@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVICvUnit1@@@8
_DATA	SEGMENT
??_R0?AVICvUnit1@@@8 DD FLAT:??_7type_info@@6B@		; ICvUnit1 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVICvUnit1@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ICvUnit1@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICvUnit1@@8 DD FLAT:??_R0?AVICvUnit1@@@8	; ICvUnit1::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICvUnit1@@8
rdata$r	ENDS
;	COMDAT ??_R2ICvUnit2@@8
rdata$r	SEGMENT
??_R2ICvUnit2@@8 DD FLAT:??_R1A@?0A@EA@ICvUnit2@@8	; ICvUnit2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICvUnit1@@8
	DD	FLAT:??_R1A@?0A@EA@ICvUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICvUnit2@@8
rdata$r	SEGMENT
??_R3ICvUnit2@@8 DD 00H					; ICvUnit2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ICvUnit2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVICvUnit2@@@8
_DATA	SEGMENT
??_R0?AVICvUnit2@@@8 DD FLAT:??_7type_info@@6B@		; ICvUnit2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVICvUnit2@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ICvUnit2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICvUnit2@@8 DD FLAT:??_R0?AVICvUnit2@@@8	; ICvUnit2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICvUnit2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CvDllUnit@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CvDllUnit@@8 DD FLAT:??_R0?AVCvDllUnit@@@8 ; CvDllUnit::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CvDllUnit@@8
rdata$r	ENDS
;	COMDAT ??_R2CvDllUnit@@8
rdata$r	SEGMENT
??_R2CvDllUnit@@8 DD FLAT:??_R1A@?0A@EA@CvDllUnit@@8	; CvDllUnit::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICvUnit2@@8
	DD	FLAT:??_R1A@?0A@EA@ICvUnit1@@8
	DD	FLAT:??_R1A@?0A@EA@ICvUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CvDllUnit@@8
rdata$r	SEGMENT
??_R3CvDllUnit@@8 DD 00H				; CvDllUnit::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CvDllUnit@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCvDllUnit@@@8
_DATA	SEGMENT
??_R0?AVCvDllUnit@@@8 DD FLAT:??_7type_info@@6B@	; CvDllUnit `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCvDllUnit@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CvDllUnit@@6B@
rdata$r	SEGMENT
??_R4CvDllUnit@@6B@ DD 00H				; CvDllUnit::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCvDllUnit@@@8
	DD	FLAT:??_R3CvDllUnit@@8
rdata$r	ENDS
;	COMDAT ??_7CvDllUnit@@6B@
CONST	SEGMENT
??_7CvDllUnit@@6B@ DD FLAT:??_R4CvDllUnit@@6B@		; CvDllUnit::`vftable'
	DD	FLAT:?QueryInterface@CvDllUnit@@UAGPAXU_GUID@@@Z
	DD	FLAT:?Destroy@CvDllUnit@@EAGXXZ
	DD	FLAT:?GetID@CvDllUnit@@UBGHXZ
	DD	FLAT:?GetOwner@CvDllUnit@@UBG?AW4PlayerTypes@@XZ
	DD	FLAT:?GetDamage@CvDllUnit@@UBGHXZ
	DD	FLAT:?GetMoves@CvDllUnit@@UBGHXZ
	DD	FLAT:?IsSelected@CvDllUnit@@UBG_NXZ
	DD	FLAT:?GetMaxHitPoints@CvDllUnit@@UBGHXZ
	DD	FLAT:?GetCivilizationType@CvDllUnit@@UBG?AW4CivilizationTypes@@XZ
	DD	FLAT:?GetTeam@CvDllUnit@@UBG?AW4TeamTypes@@XZ
	DD	FLAT:?GetDomainType@CvDllUnit@@UBG?AW4DomainTypes@@XZ
	DD	FLAT:?IsCombatUnit@CvDllUnit@@UBG_NXZ
	DD	FLAT:?IsBarbarian@CvDllUnit@@UBG_NXZ
	DD	FLAT:?IsHoveringUnit@CvDllUnit@@UBG_NXZ
	DD	FLAT:?IsInvisible@CvDllUnit@@UBG_NW4TeamTypes@@_N@Z
	DD	FLAT:?CanMoveImpassable@CvDllUnit@@UBG_NXZ
	DD	FLAT:?GetFacingDirection@CvDllUnit@@UBG?AW4DirectionTypes@@_N@Z
	DD	FLAT:?GetPlot@CvDllUnit@@UBGPAVICvPlot1@@XZ
	DD	FLAT:?GetUnitInfo@CvDllUnit@@UBGPAVICvUnitInfo1@@XZ
	DD	FLAT:?IsEmbarked@CvDllUnit@@UBG_NXZ
	DD	FLAT:?IsGarrisoned@CvDllUnit@@UBG_NXZ
	DD	FLAT:?GetHeadMissionData@CvDllUnit@@UBGPAVICvMissionData1@@XZ
	DD	FLAT:?GetUnitCombatType@CvDllUnit@@UAG?AW4UnitCombatTypes@@XZ
	DD	FLAT:?GetX@CvDllUnit@@UBGHXZ
	DD	FLAT:?GetY@CvDllUnit@@UBGHXZ
	DD	FLAT:?GetPosition@CvDllUnit@@UBGXAAH0@Z
	DD	FLAT:?CanSwapWithUnitHere@CvDllUnit@@UBG_NPAVICvPlot1@@@Z
	DD	FLAT:?CanEmbarkOnto@CvDllUnit@@UBG_NPAVICvPlot1@@0_N@Z
	DD	FLAT:?CanDisembarkOnto@CvDllUnit@@UBG_NPAVICvPlot1@@0_N@Z
	DD	FLAT:?IsFirstTimeSelected@CvDllUnit@@UBG_NXZ
	DD	FLAT:?GetUnitType@CvDllUnit@@UBG?AW4UnitTypes@@XZ
	DD	FLAT:?IsDelayedDeathExported@CvDllUnit@@UBG_NXZ
	DD	FLAT:?IsBusy@CvDllUnit@@UBG_NXZ
	DD	FLAT:?SetupGraphical@CvDllUnit@@UAGXXZ
	DD	FLAT:?GetName@CvDllUnit@@UBG?AVCvString@@XZ
	DD	FLAT:?DoCommand@CvDllUnit@@UAGXW4CommandTypes@@HH@Z
	DD	FLAT:?CanDoInterfaceMode@CvDllUnit@@UAG_NW4InterfaceModeTypes@@_N@Z
	DD	FLAT:?GetIDInfo@CvDllUnit@@UBG?AUIDInfo@@XZ
	DD	FLAT:?MovesLeft@CvDllUnit@@UBGHXZ
	DD	FLAT:?CanMoveInto@CvDllUnit@@UBG_NPAVICvPlot1@@E@Z
	DD	FLAT:?GetDeclareWarMove@CvDllUnit@@UBG?AW4TeamTypes@@PAVICvPlot1@@@Z
	DD	FLAT:?ReadyToSelect@CvDllUnit@@UBG_NXZ
	DD	FLAT:?CanWork@CvDllUnit@@UBG_NXZ
	DD	FLAT:?CanFound@CvDllUnit@@UBG_NXZ
	DD	FLAT:?GetSyncArchive@CvDllUnit@@UAGAAVFAutoArchive@@XZ
	DD	FLAT:?IsTrade@CvDllUnit@@UBG_NXZ
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??1CvDllUnit@@QAE@XZ
_TEXT	SEGMENT
??1CvDllUnit@@QAE@XZ PROC				; CvDllUnit::~CvDllUnit, COMDAT
; _this$ = ecx

; 27   : {

	mov	DWORD PTR [ecx], OFFSET ??_7CvDllUnit@@6B@

; 28   : }

	ret	0
??1CvDllUnit@@QAE@XZ ENDP				; CvDllUnit::~CvDllUnit
_TEXT	ENDS
PUBLIC	?IncrementReference@CvDllUnit@@QAEIXZ		; CvDllUnit::IncrementReference
; Function compile flags: /Ogtpy
;	COMDAT ?IncrementReference@CvDllUnit@@QAEIXZ
_TEXT	SEGMENT
?IncrementReference@CvDllUnit@@QAEIXZ PROC		; CvDllUnit::IncrementReference, COMDAT
; _this$ = ecx

; 45   : 	++m_uiRefCount;

	inc	DWORD PTR [ecx+4]

; 46   : 	return m_uiRefCount;

	mov	eax, DWORD PTR [ecx+4]

; 47   : }

	ret	0
?IncrementReference@CvDllUnit@@QAEIXZ ENDP		; CvDllUnit::IncrementReference
_TEXT	ENDS
PUBLIC	?GetReferenceCount@CvDllUnit@@QAEIXZ		; CvDllUnit::GetReferenceCount
; Function compile flags: /Ogtpy
;	COMDAT ?GetReferenceCount@CvDllUnit@@QAEIXZ
_TEXT	SEGMENT
?GetReferenceCount@CvDllUnit@@QAEIXZ PROC		; CvDllUnit::GetReferenceCount, COMDAT
; _this$ = ecx

; 65   : 	return m_uiRefCount;

	mov	eax, DWORD PTR [ecx+4]

; 66   : }

	ret	0
?GetReferenceCount@CvDllUnit@@QAEIXZ ENDP		; CvDllUnit::GetReferenceCount
_TEXT	ENDS
PUBLIC	??3CvDllUnit@@SAXPAX@Z				; CvDllUnit::operator delete
EXTRN	?Free@CvDllGameContext@@SAXPAX@Z:PROC		; CvDllGameContext::Free
; Function compile flags: /Ogtpy
;	COMDAT ??3CvDllUnit@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CvDllUnit@@SAXPAX@Z PROC				; CvDllUnit::operator delete, COMDAT

; 75   : 	CvDllGameContext::Free(p);

	jmp	?Free@CvDllGameContext@@SAXPAX@Z	; CvDllGameContext::Free
??3CvDllUnit@@SAXPAX@Z ENDP				; CvDllUnit::operator delete
_TEXT	ENDS
PUBLIC	??2CvDllUnit@@SAPAXI@Z				; CvDllUnit::operator new
EXTRN	?Allocate@CvDllGameContext@@SAPAXI@Z:PROC	; CvDllGameContext::Allocate
; Function compile flags: /Ogtpy
;	COMDAT ??2CvDllUnit@@SAPAXI@Z
_TEXT	SEGMENT
_bytes$ = 8						; size = 4
??2CvDllUnit@@SAPAXI@Z PROC				; CvDllUnit::operator new, COMDAT

; 80   : 	return CvDllGameContext::Allocate(bytes);

	jmp	?Allocate@CvDllGameContext@@SAPAXI@Z	; CvDllGameContext::Allocate
??2CvDllUnit@@SAPAXI@Z ENDP				; CvDllUnit::operator new
_TEXT	ENDS
PUBLIC	?GetInstance@CvDllUnit@@QAEPAVCvUnit@@XZ	; CvDllUnit::GetInstance
; Function compile flags: /Ogtpy
;	COMDAT ?GetInstance@CvDllUnit@@QAEPAVCvUnit@@XZ
_TEXT	SEGMENT
?GetInstance@CvDllUnit@@QAEPAVCvUnit@@XZ PROC		; CvDllUnit::GetInstance, COMDAT
; _this$ = ecx

; 85   : 	return m_pUnit;

	mov	eax, DWORD PTR [ecx+8]

; 86   : }

	ret	0
?GetInstance@CvDllUnit@@QAEPAVCvUnit@@XZ ENDP		; CvDllUnit::GetInstance
_TEXT	ENDS
EXTRN	?getDamage@CvUnit@@QBEHXZ:PROC			; CvUnit::getDamage
; Function compile flags: /Ogtpy
;	COMDAT ?GetDamage@CvDllUnit@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetDamage@CvDllUnit@@UBGHXZ PROC			; CvDllUnit::GetDamage, COMDAT

; 100  : 	return m_pUnit->getDamage();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?getDamage@CvUnit@@QBEHXZ		; CvUnit::getDamage

; 101  : }

	ret	4
?GetDamage@CvDllUnit@@UBGHXZ ENDP			; CvDllUnit::GetDamage
_TEXT	ENDS
EXTRN	?getMoves@CvUnit@@QBEHXZ:PROC			; CvUnit::getMoves
; Function compile flags: /Ogtpy
;	COMDAT ?GetMoves@CvDllUnit@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetMoves@CvDllUnit@@UBGHXZ PROC			; CvDllUnit::GetMoves, COMDAT

; 105  : 	return m_pUnit->getMoves();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?getMoves@CvUnit@@QBEHXZ		; CvUnit::getMoves

; 106  : }

	ret	4
?GetMoves@CvDllUnit@@UBGHXZ ENDP			; CvDllUnit::GetMoves
_TEXT	ENDS
EXTRN	?IsSelected@CvUnit@@QBE_NXZ:PROC		; CvUnit::IsSelected
; Function compile flags: /Ogtpy
;	COMDAT ?IsSelected@CvDllUnit@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsSelected@CvDllUnit@@UBG_NXZ PROC			; CvDllUnit::IsSelected, COMDAT

; 110  : 	return m_pUnit->IsSelected();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?IsSelected@CvUnit@@QBE_NXZ		; CvUnit::IsSelected

; 111  : }

	ret	4
?IsSelected@CvDllUnit@@UBG_NXZ ENDP			; CvDllUnit::IsSelected
_TEXT	ENDS
EXTRN	?GetMaxHitPoints@CvUnit@@QBEHXZ:PROC		; CvUnit::GetMaxHitPoints
; Function compile flags: /Ogtpy
;	COMDAT ?GetMaxHitPoints@CvDllUnit@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetMaxHitPoints@CvDllUnit@@UBGHXZ PROC			; CvDllUnit::GetMaxHitPoints, COMDAT

; 115  : 	return m_pUnit->GetMaxHitPoints();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetMaxHitPoints@CvUnit@@QBEHXZ		; CvUnit::GetMaxHitPoints

; 116  : }

	ret	4
?GetMaxHitPoints@CvDllUnit@@UBGHXZ ENDP			; CvDllUnit::GetMaxHitPoints
_TEXT	ENDS
EXTRN	?getCivilizationType@CvUnit@@QBE?AW4CivilizationTypes@@XZ:PROC ; CvUnit::getCivilizationType
; Function compile flags: /Ogtpy
;	COMDAT ?GetCivilizationType@CvDllUnit@@UBG?AW4CivilizationTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetCivilizationType@CvDllUnit@@UBG?AW4CivilizationTypes@@XZ PROC ; CvDllUnit::GetCivilizationType, COMDAT

; 120  : 	return m_pUnit->getCivilizationType();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?getCivilizationType@CvUnit@@QBE?AW4CivilizationTypes@@XZ ; CvUnit::getCivilizationType

; 121  : }

	ret	4
?GetCivilizationType@CvDllUnit@@UBG?AW4CivilizationTypes@@XZ ENDP ; CvDllUnit::GetCivilizationType
_TEXT	ENDS
EXTRN	?getTeam@CvUnit@@QBE?AW4TeamTypes@@XZ:PROC	; CvUnit::getTeam
; Function compile flags: /Ogtpy
;	COMDAT ?GetTeam@CvDllUnit@@UBG?AW4TeamTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetTeam@CvDllUnit@@UBG?AW4TeamTypes@@XZ PROC		; CvDllUnit::GetTeam, COMDAT

; 125  : 	return m_pUnit->getTeam();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?getTeam@CvUnit@@QBE?AW4TeamTypes@@XZ	; CvUnit::getTeam

; 126  : }

	ret	4
?GetTeam@CvDllUnit@@UBG?AW4TeamTypes@@XZ ENDP		; CvDllUnit::GetTeam
_TEXT	ENDS
EXTRN	?getDomainType@CvUnit@@QBE?AW4DomainTypes@@XZ:PROC ; CvUnit::getDomainType
; Function compile flags: /Ogtpy
;	COMDAT ?GetDomainType@CvDllUnit@@UBG?AW4DomainTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetDomainType@CvDllUnit@@UBG?AW4DomainTypes@@XZ PROC	; CvDllUnit::GetDomainType, COMDAT

; 130  : 	return m_pUnit->getDomainType();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?getDomainType@CvUnit@@QBE?AW4DomainTypes@@XZ ; CvUnit::getDomainType

; 131  : }

	ret	4
?GetDomainType@CvDllUnit@@UBG?AW4DomainTypes@@XZ ENDP	; CvDllUnit::GetDomainType
_TEXT	ENDS
EXTRN	?isBarbarian@CvUnit@@QBE_NXZ:PROC		; CvUnit::isBarbarian
; Function compile flags: /Ogtpy
;	COMDAT ?IsBarbarian@CvDllUnit@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsBarbarian@CvDllUnit@@UBG_NXZ PROC			; CvDllUnit::IsBarbarian, COMDAT

; 140  : 	return m_pUnit->isBarbarian();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?isBarbarian@CvUnit@@QBE_NXZ		; CvUnit::isBarbarian

; 141  : }

	ret	4
?IsBarbarian@CvDllUnit@@UBG_NXZ ENDP			; CvDllUnit::IsBarbarian
_TEXT	ENDS
EXTRN	?IsHoveringUnit@CvUnit@@QBE_NXZ:PROC		; CvUnit::IsHoveringUnit
; Function compile flags: /Ogtpy
;	COMDAT ?IsHoveringUnit@CvDllUnit@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsHoveringUnit@CvDllUnit@@UBG_NXZ PROC			; CvDllUnit::IsHoveringUnit, COMDAT

; 145  : 	return m_pUnit->IsHoveringUnit();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?IsHoveringUnit@CvUnit@@QBE_NXZ		; CvUnit::IsHoveringUnit

; 146  : }

	ret	4
?IsHoveringUnit@CvDllUnit@@UBG_NXZ ENDP			; CvDllUnit::IsHoveringUnit
_TEXT	ENDS
EXTRN	?isInvisible@CvUnit@@QBE_NW4TeamTypes@@_N1@Z:PROC ; CvUnit::isInvisible
; Function compile flags: /Ogtpy
;	COMDAT ?IsInvisible@CvDllUnit@@UBG_NW4TeamTypes@@_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_eTeam$ = 12						; size = 4
_bDebug$ = 16						; size = 1
?IsInvisible@CvDllUnit@@UBG_NW4TeamTypes@@_N@Z PROC	; CvDllUnit::IsInvisible, COMDAT

; 150  : 	return m_pUnit->isInvisible(eTeam, bDebug);

	mov	eax, DWORD PTR _bDebug$[esp-4]
	mov	ecx, DWORD PTR _eTeam$[esp-4]
	mov	edx, DWORD PTR _this$[esp-4]
	push	1
	push	eax
	push	ecx
	mov	ecx, DWORD PTR [edx+8]
	call	?isInvisible@CvUnit@@QBE_NW4TeamTypes@@_N1@Z ; CvUnit::isInvisible

; 151  : }

	ret	12					; 0000000cH
?IsInvisible@CvDllUnit@@UBG_NW4TeamTypes@@_N@Z ENDP	; CvDllUnit::IsInvisible
_TEXT	ENDS
EXTRN	?canMoveImpassable@CvUnit@@QBE_NXZ:PROC		; CvUnit::canMoveImpassable
; Function compile flags: /Ogtpy
;	COMDAT ?CanMoveImpassable@CvDllUnit@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?CanMoveImpassable@CvDllUnit@@UBG_NXZ PROC		; CvDllUnit::CanMoveImpassable, COMDAT

; 155  : 	return m_pUnit->canMoveImpassable();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?canMoveImpassable@CvUnit@@QBE_NXZ	; CvUnit::canMoveImpassable

; 156  : }

	ret	4
?CanMoveImpassable@CvDllUnit@@UBG_NXZ ENDP		; CvDllUnit::CanMoveImpassable
_TEXT	ENDS
EXTRN	?getFacingDirection@CvUnit@@QBE?AW4DirectionTypes@@_N@Z:PROC ; CvUnit::getFacingDirection
; Function compile flags: /Ogtpy
;	COMDAT ?GetFacingDirection@CvDllUnit@@UBG?AW4DirectionTypes@@_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_checkLineOfSightProperty$ = 12				; size = 1
?GetFacingDirection@CvDllUnit@@UBG?AW4DirectionTypes@@_N@Z PROC ; CvDllUnit::GetFacingDirection, COMDAT

; 160  : 	return m_pUnit->getFacingDirection(checkLineOfSightProperty);

	mov	eax, DWORD PTR _checkLineOfSightProperty$[esp-4]
	mov	ecx, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [ecx+8]
	push	eax
	call	?getFacingDirection@CvUnit@@QBE?AW4DirectionTypes@@_N@Z ; CvUnit::getFacingDirection

; 161  : }

	ret	8
?GetFacingDirection@CvDllUnit@@UBG?AW4DirectionTypes@@_N@Z ENDP ; CvDllUnit::GetFacingDirection
_TEXT	ENDS
EXTRN	??3CvDllPlot@@SAXPAX@Z:PROC			; CvDllPlot::operator delete
EXTRN	??0CvDllPlot@@QAE@PAVCvPlot@@@Z:PROC		; CvDllPlot::CvDllPlot
EXTRN	??2CvDllPlot@@SAPAXI@Z:PROC			; CvDllPlot::operator new
EXTRN	?plot@CvUnit@@QBEPAVCvPlot@@XZ:PROC		; CvUnit::plot
EXTRN	___CxxFrameHandler3:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetPlot@CvDllUnit@@UBGPAVICvPlot1@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPlot@CvDllUnit@@UBGPAVICvPlot1@@XZ$0
__ehfuncinfo$?GetPlot@CvDllUnit@@UBGPAVICvPlot1@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetPlot@CvDllUnit@@UBGPAVICvPlot1@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetPlot@CvDllUnit@@UBGPAVICvPlot1@@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
$T219045 = 8						; size = 4
_this$ = 8						; size = 4
?GetPlot@CvDllUnit@@UBGPAVICvPlot1@@XZ PROC		; CvDllUnit::GetPlot, COMDAT

; 164  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetPlot@CvDllUnit@@UBGPAVICvPlot1@@XZ
	push	eax
	mov	DWORD PTR fs:0, esp

; 165  : 	CvPlot* pkPlot = m_pUnit->plot();

	mov	eax, DWORD PTR _this$[esp+8]
	mov	ecx, DWORD PTR [eax+8]
	push	esi
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	esi, eax

; 166  : 	return (NULL != pkPlot)? new CvDllPlot(pkPlot) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetPlot
	push	12					; 0000000cH
	call	??2CvDllPlot@@SAPAXI@Z			; CvDllPlot::operator new
	add	esp, 4
	mov	DWORD PTR $T219045[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetPlot
	push	esi
	mov	ecx, eax
	call	??0CvDllPlot@@QAE@PAVCvPlot@@@Z		; CvDllPlot::CvDllPlot

; 167  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	4
$LN5@GetPlot:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetPlot@CvDllUnit@@UBGPAVICvPlot1@@XZ$0:
	mov	eax, DWORD PTR $T219045[ebp-4]
	push	eax
	call	??3CvDllPlot@@SAXPAX@Z			; CvDllPlot::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetPlot@CvDllUnit@@UBGPAVICvPlot1@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?GetPlot@CvDllUnit@@UBGPAVICvPlot1@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetPlot@CvDllUnit@@UBGPAVICvPlot1@@XZ ENDP		; CvDllUnit::GetPlot
PUBLIC	_IsEqualGUID
; Function compile flags: /Ogtpy
; File c:\program files\microsoft sdks\windows\v6.0a\include\guiddef.h
;	COMDAT _IsEqualGUID
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID PROC					; COMDAT

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

	mov	ecx, DWORD PTR _rguid2$[esp-4]
	mov	edx, DWORD PTR _rguid1$[esp-4]
	mov	eax, 16					; 00000010H
	push	esi
	npad	2
$LL4@IsEqualGUI:
	mov	esi, DWORD PTR [edx]
	cmp	esi, DWORD PTR [ecx]
	jne	SHORT $LN5@IsEqualGUI
	sub	eax, 4
	add	ecx, 4
	add	edx, 4
	cmp	eax, 4
	jae	SHORT $LL4@IsEqualGUI
	xor	eax, eax
	xor	edx, edx
	test	eax, eax
	sete	dl
	pop	esi
	mov	eax, edx

; 162  : }

	ret	0
$LN5@IsEqualGUI:

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

	movzx	eax, BYTE PTR [edx]
	movzx	esi, BYTE PTR [ecx]
	sub	eax, esi
	jne	SHORT $LN7@IsEqualGUI
	movzx	eax, BYTE PTR [edx+1]
	movzx	esi, BYTE PTR [ecx+1]
	sub	eax, esi
	jne	SHORT $LN7@IsEqualGUI
	movzx	eax, BYTE PTR [edx+2]
	movzx	esi, BYTE PTR [ecx+2]
	sub	eax, esi
	jne	SHORT $LN7@IsEqualGUI
	movzx	eax, BYTE PTR [edx+3]
	movzx	ecx, BYTE PTR [ecx+3]
	sub	eax, ecx
$LN7@IsEqualGUI:
	sar	eax, 31					; 0000001fH
	or	eax, 1
	xor	edx, edx
	test	eax, eax
	sete	dl
	pop	esi
	mov	eax, edx

; 162  : }

	ret	0
_IsEqualGUID ENDP
_TEXT	ENDS
PUBLIC	_==
; Function compile flags: /Ogtpy
;	COMDAT _==
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==	PROC						; COMDAT

; 194  :     return IsEqualGUID(guidOne,guidOther);

	jmp	_IsEqualGUID
_==	ENDP
_TEXT	ENDS
EXTRN	??3CvDllUnitInfo@@SAXPAX@Z:PROC			; CvDllUnitInfo::operator delete
EXTRN	??0CvDllUnitInfo@@QAE@PAVCvUnitEntry@@@Z:PROC	; CvDllUnitInfo::CvDllUnitInfo
EXTRN	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ:PROC	; CvUnit::getUnitInfo
EXTRN	??2CvDllUnitInfo@@SAPAXI@Z:PROC			; CvDllUnitInfo::operator new
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllunit.cpp
xdata$x	SEGMENT
__unwindtable$?GetUnitInfo@CvDllUnit@@UBGPAVICvUnitInfo1@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetUnitInfo@CvDllUnit@@UBGPAVICvUnitInfo1@@XZ$0
__ehfuncinfo$?GetUnitInfo@CvDllUnit@@UBGPAVICvUnitInfo1@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetUnitInfo@CvDllUnit@@UBGPAVICvUnitInfo1@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetUnitInfo@CvDllUnit@@UBGPAVICvUnitInfo1@@XZ
_TEXT	SEGMENT
$T219082 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?GetUnitInfo@CvDllUnit@@UBGPAVICvUnitInfo1@@XZ PROC	; CvDllUnit::GetUnitInfo, COMDAT

; 170  : {

	push	-1
	push	__ehhandler$?GetUnitInfo@CvDllUnit@@UBGPAVICvUnitInfo1@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi

; 171  : 	return new CvDllUnitInfo(&m_pUnit->getUnitInfo());

	push	12					; 0000000cH
	call	??2CvDllUnitInfo@@SAPAXI@Z		; CvDllUnitInfo::operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR $T219082[esp+20], esi
	xor	eax, eax
	mov	DWORD PTR __$EHRec$[esp+28], eax
	cmp	esi, eax
	je	SHORT $LN4@GetUnitInf
	mov	eax, DWORD PTR _this$[esp+16]
	mov	ecx, DWORD PTR [eax+8]
	call	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ ; CvUnit::getUnitInfo
	push	eax
	mov	ecx, esi
	call	??0CvDllUnitInfo@@QAE@PAVCvUnitEntry@@@Z ; CvDllUnitInfo::CvDllUnitInfo
$LN4@GetUnitInf:

; 172  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetUnitInfo@CvDllUnit@@UBGPAVICvUnitInfo1@@XZ$0:
	mov	eax, DWORD PTR $T219082[ebp]
	push	eax
	call	??3CvDllUnitInfo@@SAXPAX@Z		; CvDllUnitInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetUnitInfo@CvDllUnit@@UBGPAVICvUnitInfo1@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?GetUnitInfo@CvDllUnit@@UBGPAVICvUnitInfo1@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetUnitInfo@CvDllUnit@@UBGPAVICvUnitInfo1@@XZ ENDP	; CvDllUnit::GetUnitInfo
EXTRN	?IsGarrisoned@CvUnit@@QBE_NXZ:PROC		; CvUnit::IsGarrisoned
; Function compile flags: /Ogtpy
;	COMDAT ?IsGarrisoned@CvDllUnit@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsGarrisoned@CvDllUnit@@UBG_NXZ PROC			; CvDllUnit::IsGarrisoned, COMDAT

; 181  : 	return m_pUnit->IsGarrisoned();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?IsGarrisoned@CvUnit@@QBE_NXZ		; CvUnit::IsGarrisoned

; 182  : }

	ret	4
?IsGarrisoned@CvDllUnit@@UBG_NXZ ENDP			; CvDllUnit::IsGarrisoned
_TEXT	ENDS
EXTRN	??3CvDllMissionData@@SAXPAX@Z:PROC		; CvDllMissionData::operator delete
EXTRN	??0CvDllMissionData@@QAE@PBUMissionData@@@Z:PROC ; CvDllMissionData::CvDllMissionData
EXTRN	??2CvDllMissionData@@SAPAXI@Z:PROC		; CvDllMissionData::operator new
EXTRN	?GetHeadMissionData@CvUnit@@QAEPBUMissionData@@XZ:PROC ; CvUnit::GetHeadMissionData
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetHeadMissionData@CvDllUnit@@UBGPAVICvMissionData1@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetHeadMissionData@CvDllUnit@@UBGPAVICvMissionData1@@XZ$0
__ehfuncinfo$?GetHeadMissionData@CvDllUnit@@UBGPAVICvMissionData1@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetHeadMissionData@CvDllUnit@@UBGPAVICvMissionData1@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetHeadMissionData@CvDllUnit@@UBGPAVICvMissionData1@@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
$T219099 = 8						; size = 4
_this$ = 8						; size = 4
?GetHeadMissionData@CvDllUnit@@UBGPAVICvMissionData1@@XZ PROC ; CvDllUnit::GetHeadMissionData, COMDAT

; 185  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetHeadMissionData@CvDllUnit@@UBGPAVICvMissionData1@@XZ
	push	eax
	mov	DWORD PTR fs:0, esp

; 186  : 	const MissionData* pData = m_pUnit->GetHeadMissionData();

	mov	eax, DWORD PTR _this$[esp+8]
	mov	ecx, DWORD PTR [eax+8]
	push	esi
	call	?GetHeadMissionData@CvUnit@@QAEPBUMissionData@@XZ ; CvUnit::GetHeadMissionData
	mov	esi, eax

; 187  : 	return (NULL != pData)? new CvDllMissionData(pData) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetHeadMis
	push	12					; 0000000cH
	call	??2CvDllMissionData@@SAPAXI@Z		; CvDllMissionData::operator new
	add	esp, 4
	mov	DWORD PTR $T219099[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetHeadMis
	push	esi
	mov	ecx, eax
	call	??0CvDllMissionData@@QAE@PBUMissionData@@@Z ; CvDllMissionData::CvDllMissionData

; 188  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	4
$LN5@GetHeadMis:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetHeadMissionData@CvDllUnit@@UBGPAVICvMissionData1@@XZ$0:
	mov	eax, DWORD PTR $T219099[ebp-4]
	push	eax
	call	??3CvDllMissionData@@SAXPAX@Z		; CvDllMissionData::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetHeadMissionData@CvDllUnit@@UBGPAVICvMissionData1@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?GetHeadMissionData@CvDllUnit@@UBGPAVICvMissionData1@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetHeadMissionData@CvDllUnit@@UBGPAVICvMissionData1@@XZ ENDP ; CvDllUnit::GetHeadMissionData
EXTRN	?getUnitCombatType@CvUnit@@QBE?AW4UnitCombatTypes@@XZ:PROC ; CvUnit::getUnitCombatType
; Function compile flags: /Ogtpy
;	COMDAT ?GetUnitCombatType@CvDllUnit@@UAG?AW4UnitCombatTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetUnitCombatType@CvDllUnit@@UAG?AW4UnitCombatTypes@@XZ PROC ; CvDllUnit::GetUnitCombatType, COMDAT

; 192  : 	return m_pUnit->getUnitCombatType();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?getUnitCombatType@CvUnit@@QBE?AW4UnitCombatTypes@@XZ ; CvUnit::getUnitCombatType

; 193  : }

	ret	4
?GetUnitCombatType@CvDllUnit@@UAG?AW4UnitCombatTypes@@XZ ENDP ; CvDllUnit::GetUnitCombatType
_TEXT	ENDS
EXTRN	?CanSwapWithUnitHere@CvUnit@@QBE_NAAVCvPlot@@@Z:PROC ; CvUnit::CanSwapWithUnitHere
EXTRN	?GetInstance@CvDllPlot@@QAEPAVCvPlot@@XZ:PROC	; CvDllPlot::GetInstance
; Function compile flags: /Ogtpy
;	COMDAT ?CanSwapWithUnitHere@CvDllUnit@@UBG_NPAVICvPlot1@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pPlot$ = 12						; size = 4
?CanSwapWithUnitHere@CvDllUnit@@UBG_NPAVICvPlot1@@@Z PROC ; CvDllUnit::CanSwapWithUnitHere, COMDAT

; 217  : 	CvPlot* pkPlot = (NULL != pPlot)? static_cast<CvDllPlot*>(pPlot)->GetInstance() : NULL;

	mov	ecx, DWORD PTR _pPlot$[esp-4]
	test	ecx, ecx
	je	SHORT $LN2@CanSwapWit
	call	?GetInstance@CvDllPlot@@QAEPAVCvPlot@@XZ ; CvDllPlot::GetInstance

; 218  : 	FAssert(pkPlot != NULL);
; 219  : 	if(pkPlot != NULL)

	test	eax, eax
	je	SHORT $LN2@CanSwapWit

; 220  : 		return m_pUnit->CanSwapWithUnitHere(*pkPlot);

	push	eax
	mov	eax, DWORD PTR _this$[esp]
	mov	ecx, DWORD PTR [eax+8]
	call	?CanSwapWithUnitHere@CvUnit@@QBE_NAAVCvPlot@@@Z ; CvUnit::CanSwapWithUnitHere

; 223  : }

	ret	8
$LN2@CanSwapWit:

; 221  : 	else
; 222  : 		return false;

	xor	al, al

; 223  : }

	ret	8
?CanSwapWithUnitHere@CvDllUnit@@UBG_NPAVICvPlot1@@@Z ENDP ; CvDllUnit::CanSwapWithUnitHere
_TEXT	ENDS
EXTRN	?canEmbarkOnto@CvUnit@@QBE_NABVCvPlot@@0_N1@Z:PROC ; CvUnit::canEmbarkOnto
; Function compile flags: /Ogtpy
;	COMDAT ?CanEmbarkOnto@CvDllUnit@@UBG_NPAVICvPlot1@@0_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pOriginPlot$ = 12					; size = 4
_pTargetPlot$ = 16					; size = 4
_bOverrideEmbarkedCheck$ = 20				; size = 1
?CanEmbarkOnto@CvDllUnit@@UBG_NPAVICvPlot1@@0_N@Z PROC	; CvDllUnit::CanEmbarkOnto, COMDAT

; 231  : 	CvPlot* pkOriginPlot = (NULL != pOriginPlot)? static_cast<CvDllPlot*>(pOriginPlot)->GetInstance() : NULL;

	mov	ecx, DWORD PTR _pOriginPlot$[esp-4]
	push	esi
	test	ecx, ecx
	je	SHORT $LN5@CanEmbarkO
	call	?GetInstance@CvDllPlot@@QAEPAVCvPlot@@XZ ; CvDllPlot::GetInstance
	mov	esi, eax
	jmp	SHORT $LN6@CanEmbarkO
$LN5@CanEmbarkO:
	xor	esi, esi
$LN6@CanEmbarkO:

; 232  : 	CvPlot* pkTargetPlot = (NULL != pTargetPlot)? static_cast<CvDllPlot*>(pTargetPlot)->GetInstance() : NULL;

	mov	ecx, DWORD PTR _pTargetPlot$[esp]
	test	ecx, ecx
	je	SHORT $LN7@CanEmbarkO
	call	?GetInstance@CvDllPlot@@QAEPAVCvPlot@@XZ ; CvDllPlot::GetInstance
	jmp	SHORT $LN8@CanEmbarkO
$LN7@CanEmbarkO:
	xor	eax, eax
$LN8@CanEmbarkO:

; 233  : 	FAssert(pkOriginPlot != NULL);
; 234  : 	FAssert(pkTargetPlot != NULL);
; 235  : 
; 236  : 	if(pkOriginPlot != NULL && pkTargetPlot != NULL)

	test	esi, esi
	je	SHORT $LN2@CanEmbarkO
	test	eax, eax
	je	SHORT $LN2@CanEmbarkO

; 237  : 		return m_pUnit->canEmbarkOnto(*pkOriginPlot, *pkTargetPlot, bOverrideEmbarkedCheck);

	mov	ecx, DWORD PTR _bOverrideEmbarkedCheck$[esp]
	mov	edx, DWORD PTR _this$[esp]
	push	0
	push	ecx
	mov	ecx, DWORD PTR [edx+8]
	push	eax
	push	esi
	call	?canEmbarkOnto@CvUnit@@QBE_NABVCvPlot@@0_N1@Z ; CvUnit::canEmbarkOnto
	pop	esi

; 240  : }

	ret	16					; 00000010H
$LN2@CanEmbarkO:

; 238  : 	else
; 239  : 		return false;

	xor	al, al
	pop	esi

; 240  : }

	ret	16					; 00000010H
?CanEmbarkOnto@CvDllUnit@@UBG_NPAVICvPlot1@@0_N@Z ENDP	; CvDllUnit::CanEmbarkOnto
_TEXT	ENDS
EXTRN	?canDisembarkOnto@CvUnit@@QBE_NABVCvPlot@@0_N1@Z:PROC ; CvUnit::canDisembarkOnto
; Function compile flags: /Ogtpy
;	COMDAT ?CanDisembarkOnto@CvDllUnit@@UBG_NPAVICvPlot1@@0_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pOriginPlot$ = 12					; size = 4
_pTargetPlot$ = 16					; size = 4
_bOverrideEmbarkedCheck$ = 20				; size = 1
?CanDisembarkOnto@CvDllUnit@@UBG_NPAVICvPlot1@@0_N@Z PROC ; CvDllUnit::CanDisembarkOnto, COMDAT

; 248  : 	CvPlot* pkOriginPlot = (NULL != pOriginPlot)? static_cast<CvDllPlot*>(pOriginPlot)->GetInstance() : NULL;

	mov	ecx, DWORD PTR _pOriginPlot$[esp-4]
	push	esi
	test	ecx, ecx
	je	SHORT $LN5@CanDisemba
	call	?GetInstance@CvDllPlot@@QAEPAVCvPlot@@XZ ; CvDllPlot::GetInstance
	mov	esi, eax
	jmp	SHORT $LN6@CanDisemba
$LN5@CanDisemba:
	xor	esi, esi
$LN6@CanDisemba:

; 249  : 	CvPlot* pkTargetPlot = (NULL != pTargetPlot)? static_cast<CvDllPlot*>(pTargetPlot)->GetInstance() : NULL;

	mov	ecx, DWORD PTR _pTargetPlot$[esp]
	test	ecx, ecx
	je	SHORT $LN7@CanDisemba
	call	?GetInstance@CvDllPlot@@QAEPAVCvPlot@@XZ ; CvDllPlot::GetInstance
	jmp	SHORT $LN8@CanDisemba
$LN7@CanDisemba:
	xor	eax, eax
$LN8@CanDisemba:

; 250  : 	FAssert(pkOriginPlot != NULL);
; 251  : 	FAssert(pkTargetPlot != NULL);
; 252  : 	if(pkOriginPlot != NULL && pkTargetPlot != NULL)

	test	esi, esi
	je	SHORT $LN2@CanDisemba
	test	eax, eax
	je	SHORT $LN2@CanDisemba

; 253  : 		return m_pUnit->canDisembarkOnto(*pkOriginPlot, *pkTargetPlot, bOverrideEmbarkedCheck);

	mov	ecx, DWORD PTR _bOverrideEmbarkedCheck$[esp]
	mov	edx, DWORD PTR _this$[esp]
	push	0
	push	ecx
	mov	ecx, DWORD PTR [edx+8]
	push	eax
	push	esi
	call	?canDisembarkOnto@CvUnit@@QBE_NABVCvPlot@@0_N1@Z ; CvUnit::canDisembarkOnto
	pop	esi

; 256  : }

	ret	16					; 00000010H
$LN2@CanDisemba:

; 254  : 	else
; 255  : 		return false;

	xor	al, al
	pop	esi

; 256  : }

	ret	16					; 00000010H
?CanDisembarkOnto@CvDllUnit@@UBG_NPAVICvPlot1@@0_N@Z ENDP ; CvDllUnit::CanDisembarkOnto
_TEXT	ENDS
EXTRN	?IsFirstTimeSelected@CvUnit@@QBE_NXZ:PROC	; CvUnit::IsFirstTimeSelected
; Function compile flags: /Ogtpy
;	COMDAT ?IsFirstTimeSelected@CvDllUnit@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsFirstTimeSelected@CvDllUnit@@UBG_NXZ PROC		; CvDllUnit::IsFirstTimeSelected, COMDAT

; 260  : 	return m_pUnit->IsFirstTimeSelected();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?IsFirstTimeSelected@CvUnit@@QBE_NXZ	; CvUnit::IsFirstTimeSelected

; 261  : }

	ret	4
?IsFirstTimeSelected@CvDllUnit@@UBG_NXZ ENDP		; CvDllUnit::IsFirstTimeSelected
_TEXT	ENDS
EXTRN	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ:PROC	; CvUnit::getUnitType
; Function compile flags: /Ogtpy
;	COMDAT ?GetUnitType@CvDllUnit@@UBG?AW4UnitTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetUnitType@CvDllUnit@@UBG?AW4UnitTypes@@XZ PROC	; CvDllUnit::GetUnitType, COMDAT

; 265  : 	return m_pUnit->getUnitType();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ ; CvUnit::getUnitType

; 266  : }

	ret	4
?GetUnitType@CvDllUnit@@UBG?AW4UnitTypes@@XZ ENDP	; CvDllUnit::GetUnitType
_TEXT	ENDS
EXTRN	?isDelayedDeathExported@CvUnit@@QBE_NXZ:PROC	; CvUnit::isDelayedDeathExported
; Function compile flags: /Ogtpy
;	COMDAT ?IsDelayedDeathExported@CvDllUnit@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsDelayedDeathExported@CvDllUnit@@UBG_NXZ PROC		; CvDllUnit::IsDelayedDeathExported, COMDAT

; 270  : 	return m_pUnit->isDelayedDeathExported();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?isDelayedDeathExported@CvUnit@@QBE_NXZ	; CvUnit::isDelayedDeathExported

; 271  : }

	ret	4
?IsDelayedDeathExported@CvDllUnit@@UBG_NXZ ENDP		; CvDllUnit::IsDelayedDeathExported
_TEXT	ENDS
EXTRN	?IsBusy@CvUnit@@QBE_NXZ:PROC			; CvUnit::IsBusy
; Function compile flags: /Ogtpy
;	COMDAT ?IsBusy@CvDllUnit@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsBusy@CvDllUnit@@UBG_NXZ PROC				; CvDllUnit::IsBusy, COMDAT

; 275  : 	return m_pUnit->IsBusy();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?IsBusy@CvUnit@@QBE_NXZ			; CvUnit::IsBusy

; 276  : }

	ret	4
?IsBusy@CvDllUnit@@UBG_NXZ ENDP				; CvDllUnit::IsBusy
_TEXT	ENDS
EXTRN	?setupGraphical@CvUnit@@QAEXXZ:PROC		; CvUnit::setupGraphical
; Function compile flags: /Ogtpy
;	COMDAT ?SetupGraphical@CvDllUnit@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?SetupGraphical@CvDllUnit@@UAGXXZ PROC			; CvDllUnit::SetupGraphical, COMDAT

; 280  : 	m_pUnit->setupGraphical();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?setupGraphical@CvUnit@@QAEXXZ		; CvUnit::setupGraphical

; 281  : }

	ret	4
?SetupGraphical@CvDllUnit@@UAGXXZ ENDP			; CvDllUnit::SetupGraphical
_TEXT	ENDS
EXTRN	?doCommand@CvUnit@@QAEXW4CommandTypes@@HH@Z:PROC ; CvUnit::doCommand
; Function compile flags: /Ogtpy
;	COMDAT ?DoCommand@CvDllUnit@@UAGXW4CommandTypes@@HH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_eCommand$ = 12						; size = 4
_iData1$ = 16						; size = 4
_iData2$ = 20						; size = 4
?DoCommand@CvDllUnit@@UAGXW4CommandTypes@@HH@Z PROC	; CvDllUnit::DoCommand, COMDAT

; 290  : 	m_pUnit->doCommand(eCommand, iData1, iData2);

	mov	eax, DWORD PTR _iData2$[esp-4]
	mov	ecx, DWORD PTR _iData1$[esp-4]
	mov	edx, DWORD PTR _eCommand$[esp-4]
	push	eax
	mov	eax, DWORD PTR _this$[esp]
	push	ecx
	mov	ecx, DWORD PTR [eax+8]
	push	edx
	call	?doCommand@CvUnit@@QAEXW4CommandTypes@@HH@Z ; CvUnit::doCommand

; 291  : }

	ret	16					; 00000010H
?DoCommand@CvDllUnit@@UAGXW4CommandTypes@@HH@Z ENDP	; CvDllUnit::DoCommand
_TEXT	ENDS
EXTRN	?CanDoInterfaceMode@CvUnit@@QAE_NW4InterfaceModeTypes@@_N@Z:PROC ; CvUnit::CanDoInterfaceMode
; Function compile flags: /Ogtpy
;	COMDAT ?CanDoInterfaceMode@CvDllUnit@@UAG_NW4InterfaceModeTypes@@_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_eInterfaceMode$ = 12					; size = 4
_bTestVisibility$ = 16					; size = 1
?CanDoInterfaceMode@CvDllUnit@@UAG_NW4InterfaceModeTypes@@_N@Z PROC ; CvDllUnit::CanDoInterfaceMode, COMDAT

; 295  : 	return m_pUnit->CanDoInterfaceMode(eInterfaceMode, bTestVisibility);

	mov	eax, DWORD PTR _bTestVisibility$[esp-4]
	mov	ecx, DWORD PTR _eInterfaceMode$[esp-4]
	mov	edx, DWORD PTR _this$[esp-4]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR [edx+8]
	call	?CanDoInterfaceMode@CvUnit@@QAE_NW4InterfaceModeTypes@@_N@Z ; CvUnit::CanDoInterfaceMode

; 296  : }

	ret	12					; 0000000cH
?CanDoInterfaceMode@CvDllUnit@@UAG_NW4InterfaceModeTypes@@_N@Z ENDP ; CvDllUnit::CanDoInterfaceMode
_TEXT	ENDS
EXTRN	?GetIDInfo@CvUnit@@QBE?AUIDInfo@@XZ:PROC	; CvUnit::GetIDInfo
; Function compile flags: /Ogtpy
;	COMDAT ?GetIDInfo@CvDllUnit@@UBG?AUIDInfo@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
?GetIDInfo@CvDllUnit@@UBG?AUIDInfo@@XZ PROC		; CvDllUnit::GetIDInfo, COMDAT

; 300  : 	return m_pUnit->GetIDInfo();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp]
	push	esi
	call	?GetIDInfo@CvUnit@@QBE?AUIDInfo@@XZ	; CvUnit::GetIDInfo
	mov	eax, esi
	pop	esi

; 301  : }

	ret	8
?GetIDInfo@CvDllUnit@@UBG?AUIDInfo@@XZ ENDP		; CvDllUnit::GetIDInfo
_TEXT	ENDS
EXTRN	?movesLeft@CvUnit@@QBEHXZ:PROC			; CvUnit::movesLeft
; Function compile flags: /Ogtpy
;	COMDAT ?MovesLeft@CvDllUnit@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?MovesLeft@CvDllUnit@@UBGHXZ PROC			; CvDllUnit::MovesLeft, COMDAT

; 305  : 	return m_pUnit->movesLeft();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?movesLeft@CvUnit@@QBEHXZ		; CvUnit::movesLeft

; 306  : }

	ret	4
?MovesLeft@CvDllUnit@@UBGHXZ ENDP			; CvDllUnit::MovesLeft
_TEXT	ENDS
EXTRN	?canMoveInto@CvUnit@@QBE_NABVCvPlot@@E@Z:PROC	; CvUnit::canMoveInto
; Function compile flags: /Ogtpy
;	COMDAT ?CanMoveInto@CvDllUnit@@UBG_NPAVICvPlot1@@E@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pPlot$ = 12						; size = 4
_bMoveFlags$ = 16					; size = 1
?CanMoveInto@CvDllUnit@@UBG_NPAVICvPlot1@@E@Z PROC	; CvDllUnit::CanMoveInto, COMDAT

; 310  : 	CvPlot* pkPlot = (NULL != pPlot)? static_cast<CvDllPlot*>(pPlot)->GetInstance() : NULL;

	mov	ecx, DWORD PTR _pPlot$[esp-4]
	test	ecx, ecx
	je	SHORT $LN2@CanMoveInt
	call	?GetInstance@CvDllPlot@@QAEPAVCvPlot@@XZ ; CvDllPlot::GetInstance

; 311  : 	if(pkPlot != NULL)

	test	eax, eax
	je	SHORT $LN2@CanMoveInt

; 312  : 		return m_pUnit->canMoveInto(*pkPlot, bMoveFlags);

	mov	ecx, DWORD PTR _bMoveFlags$[esp-4]
	mov	edx, DWORD PTR _this$[esp-4]
	push	ecx
	mov	ecx, DWORD PTR [edx+8]
	push	eax
	call	?canMoveInto@CvUnit@@QBE_NABVCvPlot@@E@Z ; CvUnit::canMoveInto

; 315  : }

	ret	12					; 0000000cH
$LN2@CanMoveInt:

; 313  : 	else
; 314  : 		return false;

	xor	al, al

; 315  : }

	ret	12					; 0000000cH
?CanMoveInto@CvDllUnit@@UBG_NPAVICvPlot1@@E@Z ENDP	; CvDllUnit::CanMoveInto
_TEXT	ENDS
EXTRN	?GetDeclareWarMove@CvUnit@@QBE?AW4TeamTypes@@ABVCvPlot@@@Z:PROC ; CvUnit::GetDeclareWarMove
; Function compile flags: /Ogtpy
;	COMDAT ?GetDeclareWarMove@CvDllUnit@@UBG?AW4TeamTypes@@PAVICvPlot1@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pPlot$ = 12						; size = 4
?GetDeclareWarMove@CvDllUnit@@UBG?AW4TeamTypes@@PAVICvPlot1@@@Z PROC ; CvDllUnit::GetDeclareWarMove, COMDAT

; 319  : 	CvPlot* pkPlot = (NULL != pPlot)? static_cast<CvDllPlot*>(pPlot)->GetInstance() : NULL;

	mov	ecx, DWORD PTR _pPlot$[esp-4]
	test	ecx, ecx
	je	SHORT $LN2@GetDeclare
	call	?GetInstance@CvDllPlot@@QAEPAVCvPlot@@XZ ; CvDllPlot::GetInstance

; 320  : 	if(pkPlot != NULL)

	test	eax, eax
	je	SHORT $LN2@GetDeclare

; 321  : 		return m_pUnit->GetDeclareWarMove(*pkPlot);

	push	eax
	mov	eax, DWORD PTR _this$[esp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetDeclareWarMove@CvUnit@@QBE?AW4TeamTypes@@ABVCvPlot@@@Z ; CvUnit::GetDeclareWarMove

; 324  : }

	ret	8
$LN2@GetDeclare:

; 322  : 	else
; 323  : 		return NO_TEAM;

	or	eax, -1

; 324  : }

	ret	8
?GetDeclareWarMove@CvDllUnit@@UBG?AW4TeamTypes@@PAVICvPlot1@@@Z ENDP ; CvDllUnit::GetDeclareWarMove
_TEXT	ENDS
EXTRN	?ReadyToSelect@CvUnit@@QBE_NXZ:PROC		; CvUnit::ReadyToSelect
; Function compile flags: /Ogtpy
;	COMDAT ?ReadyToSelect@CvDllUnit@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?ReadyToSelect@CvDllUnit@@UBG_NXZ PROC			; CvDllUnit::ReadyToSelect, COMDAT

; 328  : 	return m_pUnit->ReadyToSelect();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?ReadyToSelect@CvUnit@@QBE_NXZ		; CvUnit::ReadyToSelect

; 329  : }

	ret	4
?ReadyToSelect@CvDllUnit@@UBG_NXZ ENDP			; CvDllUnit::ReadyToSelect
_TEXT	ENDS
EXTRN	?isFound@CvUnit@@QBE_NXZ:PROC			; CvUnit::isFound
; Function compile flags: /Ogtpy
;	COMDAT ?CanFound@CvDllUnit@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?CanFound@CvDllUnit@@UBG_NXZ PROC			; CvDllUnit::CanFound, COMDAT

; 333  : 	return m_pUnit->isFound();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?isFound@CvUnit@@QBE_NXZ		; CvUnit::isFound

; 334  : }

	ret	4
?CanFound@CvDllUnit@@UBG_NXZ ENDP			; CvDllUnit::CanFound
_TEXT	ENDS
EXTRN	?IsWork@CvUnit@@QBE_NXZ:PROC			; CvUnit::IsWork
; Function compile flags: /Ogtpy
;	COMDAT ?CanWork@CvDllUnit@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?CanWork@CvDllUnit@@UBG_NXZ PROC			; CvDllUnit::CanWork, COMDAT

; 338  : 	return m_pUnit->IsWork();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?IsWork@CvUnit@@QBE_NXZ			; CvUnit::IsWork

; 339  : }

	ret	4
?CanWork@CvDllUnit@@UBG_NXZ ENDP			; CvDllUnit::CanWork
_TEXT	ENDS
EXTRN	?isTrade@CvUnit@@QBE_NXZ:PROC			; CvUnit::isTrade
; Function compile flags: /Ogtpy
;	COMDAT ?IsTrade@CvDllUnit@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsTrade@CvDllUnit@@UBG_NXZ PROC			; CvDllUnit::IsTrade, COMDAT

; 343  : 	return m_pUnit->isTrade();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?isTrade@CvUnit@@QBE_NXZ		; CvUnit::isTrade

; 344  : }

	ret	4
?IsTrade@CvDllUnit@@UBG_NXZ ENDP			; CvDllUnit::IsTrade
_TEXT	ENDS
EXTRN	?getSyncArchive@CvUnit@@QAEAAVFAutoArchive@@XZ:PROC ; CvUnit::getSyncArchive
; Function compile flags: /Ogtpy
;	COMDAT ?GetSyncArchive@CvDllUnit@@UAGAAVFAutoArchive@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetSyncArchive@CvDllUnit@@UAGAAVFAutoArchive@@XZ PROC	; CvDllUnit::GetSyncArchive, COMDAT

; 348  : 	return m_pUnit->getSyncArchive();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?getSyncArchive@CvUnit@@QAEAAVFAutoArchive@@XZ ; CvUnit::getSyncArchive

; 349  : }

	ret	4
?GetSyncArchive@CvDllUnit@@UAGAAVFAutoArchive@@XZ ENDP	; CvDllUnit::GetSyncArchive
_TEXT	ENDS
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
_TEXT	ENDS
PUBLIC	?GetInterfaceId@ICvUnknown@@SG?AU_GUID@@XZ	; ICvUnknown::GetInterfaceId
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces.h
;	COMDAT ?GetInterfaceId@ICvUnknown@@SG?AU_GUID@@XZ
_TEXT	SEGMENT
$T219192 = 8						; size = 4
?GetInterfaceId@ICvUnknown@@SG?AU_GUID@@XZ PROC		; ICvUnknown::GetInterfaceId, COMDAT

; 306  : 	static GUID DLLCALL GetInterfaceId(){ return guidICvUnknown; }

	mov	eax, DWORD PTR $T219192[esp-4]
	mov	ecx, DWORD PTR _guidICvUnknown
	mov	edx, DWORD PTR _guidICvUnknown+4
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _guidICvUnknown+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _guidICvUnknown+12
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	ret	4
?GetInterfaceId@ICvUnknown@@SG?AU_GUID@@XZ ENDP		; ICvUnknown::GetInterfaceId
_TEXT	ENDS
PUBLIC	?GetInterfaceId@ICvUnit1@@SG?AU_GUID@@XZ	; ICvUnit1::GetInterfaceId
; Function compile flags: /Ogtpy
;	COMDAT ?GetInterfaceId@ICvUnit1@@SG?AU_GUID@@XZ
_TEXT	SEGMENT
$T219196 = 8						; size = 4
?GetInterfaceId@ICvUnit1@@SG?AU_GUID@@XZ PROC		; ICvUnit1::GetInterfaceId, COMDAT

; 1711 : 	static GUID DLLCALL GetInterfaceId() { return guidICvUnit1; }

	mov	eax, DWORD PTR $T219196[esp-4]
	mov	ecx, DWORD PTR _guidICvUnit1
	mov	edx, DWORD PTR _guidICvUnit1+4
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _guidICvUnit1+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _guidICvUnit1+12
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	ret	4
?GetInterfaceId@ICvUnit1@@SG?AU_GUID@@XZ ENDP		; ICvUnit1::GetInterfaceId
_TEXT	ENDS
PUBLIC	?GetInterfaceId@ICvUnit2@@SG?AU_GUID@@XZ	; ICvUnit2::GetInterfaceId
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces2.h
;	COMDAT ?GetInterfaceId@ICvUnit2@@SG?AU_GUID@@XZ
_TEXT	SEGMENT
$T219200 = 8						; size = 4
?GetInterfaceId@ICvUnit2@@SG?AU_GUID@@XZ PROC		; ICvUnit2::GetInterfaceId, COMDAT

; 170  : 	static GUID DLLCALL GetInterfaceId() { return guidICvUnit2; }

	mov	eax, DWORD PTR $T219200[esp-4]
	mov	ecx, DWORD PTR _guidICvUnit2
	mov	edx, DWORD PTR _guidICvUnit2+4
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _guidICvUnit2+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _guidICvUnit2+12
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	ret	4
?GetInterfaceId@ICvUnit2@@SG?AU_GUID@@XZ ENDP		; ICvUnit2::GetInterfaceId
_TEXT	ENDS
PUBLIC	?get@?$FAutoVariable@W4PlayerTypes@@VCvUnit@@@@QBEABW4PlayerTypes@@XZ ; FAutoVariable<enum PlayerTypes,CvUnit>::get
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fautovariable.h
;	COMDAT ?get@?$FAutoVariable@W4PlayerTypes@@VCvUnit@@@@QBEABW4PlayerTypes@@XZ
_TEXT	SEGMENT
?get@?$FAutoVariable@W4PlayerTypes@@VCvUnit@@@@QBEABW4PlayerTypes@@XZ PROC ; FAutoVariable<enum PlayerTypes,CvUnit>::get, COMDAT
; _this$ = ecx

; 177  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 178  : }

	ret	0
?get@?$FAutoVariable@W4PlayerTypes@@VCvUnit@@@@QBEABW4PlayerTypes@@XZ ENDP ; FAutoVariable<enum PlayerTypes,CvUnit>::get
_TEXT	ENDS
PUBLIC	?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ	; FAutoVariable<int,CvUnit>::get
; Function compile flags: /Ogtpy
;	COMDAT ?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ
_TEXT	SEGMENT
?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ PROC		; FAutoVariable<int,CvUnit>::get, COMDAT
; _this$ = ecx

; 177  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 178  : }

	ret	0
?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ ENDP		; FAutoVariable<int,CvUnit>::get
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@HVCvUnit@@@@QBEABHXZ		; FAutoVariable<int,CvUnit>::operator int const &
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FAutoVariable@HVCvUnit@@@@QBEABHXZ
_TEXT	SEGMENT
??B?$FAutoVariable@HVCvUnit@@@@QBEABHXZ PROC		; FAutoVariable<int,CvUnit>::operator int const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@HVCvUnit@@@@QBEABHXZ ENDP		; FAutoVariable<int,CvUnit>::operator int const &
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@_NVCvUnit@@@@QBEAB_NXZ	; FAutoVariable<bool,CvUnit>::operator bool const &
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FAutoVariable@_NVCvUnit@@@@QBEAB_NXZ
_TEXT	SEGMENT
??B?$FAutoVariable@_NVCvUnit@@@@QBEAB_NXZ PROC		; FAutoVariable<bool,CvUnit>::operator bool const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@_NVCvUnit@@@@QBEAB_NXZ ENDP		; FAutoVariable<bool,CvUnit>::operator bool const &
_TEXT	ENDS
PUBLIC	??_7ICvUnit1@@6B@				; ICvUnit1::`vftable'
PUBLIC	??0ICvUnit1@@QAE@XZ				; ICvUnit1::ICvUnit1
PUBLIC	??_R4ICvUnit1@@6B@				; ICvUnit1::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICvUnit1@@6B@
rdata$r	SEGMENT
??_R4ICvUnit1@@6B@ DD 00H				; ICvUnit1::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVICvUnit1@@@8
	DD	FLAT:??_R3ICvUnit1@@8
rdata$r	ENDS
;	COMDAT ??_7ICvUnit1@@6B@
CONST	SEGMENT
??_7ICvUnit1@@6B@ DD FLAT:??_R4ICvUnit1@@6B@		; ICvUnit1::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0ICvUnit1@@QAE@XZ
_TEXT	SEGMENT
??0ICvUnit1@@QAE@XZ PROC				; ICvUnit1::ICvUnit1, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7ICvUnit1@@6B@
	ret	0
??0ICvUnit1@@QAE@XZ ENDP				; ICvUnit1::ICvUnit1
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllunit.cpp
_TEXT	ENDS
;	COMDAT ?QueryInterface@CvDllUnit@@UAGPAXU_GUID@@@Z
_TEXT	SEGMENT
$T219226 = -16						; size = 16
$T219224 = -16						; size = 16
$T219222 = -16						; size = 16
_this$ = 8						; size = 4
_guidInterface$ = 12					; size = 16
?QueryInterface@CvDllUnit@@UAGPAXU_GUID@@@Z PROC	; CvDllUnit::QueryInterface, COMDAT

; 31   : {

	sub	esp, 16					; 00000010H

; 32   : 	if(	guidInterface == ICvUnknown::GetInterfaceId()	||
; 33   : 	    guidInterface == ICvUnit1::GetInterfaceId()		||
; 34   : 		guidInterface == ICvUnit2::GetInterfaceId())

	mov	ecx, DWORD PTR _guidICvUnknown+4
	mov	edx, DWORD PTR _guidICvUnknown+8
	mov	eax, DWORD PTR _guidICvUnknown
	mov	DWORD PTR $T219222[esp+20], ecx
	lea	ecx, DWORD PTR $T219222[esp+16]
	mov	DWORD PTR $T219222[esp+24], edx
	mov	DWORD PTR $T219222[esp+16], eax
	mov	eax, DWORD PTR _guidICvUnknown+12
	push	ecx
	lea	edx, DWORD PTR _guidInterface$[esp+16]
	push	edx
	mov	DWORD PTR $T219222[esp+36], eax
	call	_IsEqualGUID
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@QueryInter
	mov	ecx, DWORD PTR _guidICvUnit1+4
	mov	edx, DWORD PTR _guidICvUnit1+8
	mov	eax, DWORD PTR _guidICvUnit1
	mov	DWORD PTR $T219224[esp+20], ecx
	lea	ecx, DWORD PTR $T219224[esp+16]
	mov	DWORD PTR $T219224[esp+24], edx
	mov	DWORD PTR $T219224[esp+16], eax
	mov	eax, DWORD PTR _guidICvUnit1+12
	push	ecx
	lea	edx, DWORD PTR _guidInterface$[esp+16]
	push	edx
	mov	DWORD PTR $T219224[esp+36], eax
	call	_IsEqualGUID
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@QueryInter
	mov	ecx, DWORD PTR _guidICvUnit2+4
	mov	edx, DWORD PTR _guidICvUnit2+8
	mov	eax, DWORD PTR _guidICvUnit2
	mov	DWORD PTR $T219226[esp+20], ecx
	lea	ecx, DWORD PTR $T219226[esp+16]
	mov	DWORD PTR $T219226[esp+24], edx
	mov	DWORD PTR $T219226[esp+16], eax
	mov	eax, DWORD PTR _guidICvUnit2+12
	push	ecx
	lea	edx, DWORD PTR _guidInterface$[esp+16]
	push	edx
	mov	DWORD PTR $T219226[esp+36], eax
	call	_IsEqualGUID
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@QueryInter

; 37   : 		return this;
; 38   : 	}
; 39   : 
; 40   : 	return NULL;
; 41   : }

	add	esp, 16					; 00000010H
	ret	20					; 00000014H
$LN1@QueryInter:

; 35   : 	{
; 36   : 		IncrementReference();

	mov	eax, DWORD PTR _this$[esp+12]
	inc	DWORD PTR [eax+4]

; 37   : 		return this;
; 38   : 	}
; 39   : 
; 40   : 	return NULL;
; 41   : }

	add	esp, 16					; 00000010H
	ret	20					; 00000014H
?QueryInterface@CvDllUnit@@UAGPAXU_GUID@@@Z ENDP	; CvDllUnit::QueryInterface
_TEXT	ENDS
PUBLIC	??_GCvDllUnit@@QAEPAXI@Z			; CvDllUnit::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_GCvDllUnit@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCvDllUnit@@QAEPAXI@Z PROC				; CvDllUnit::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7CvDllUnit@@6B@
	je	SHORT $LN8@scalar
	push	esi
	call	?Free@CvDllGameContext@@SAXPAX@Z	; CvDllGameContext::Free
	add	esp, 4
$LN8@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_GCvDllUnit@@QAEPAXI@Z ENDP				; CvDllUnit::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?getName@CvUnit@@QBE?BVCvString@@XZ:PROC	; CvUnit::getName
; Function compile flags: /Ogtpy
;	COMDAT ?GetName@CvDllUnit@@UBG?AVCvString@@XZ
_TEXT	SEGMENT
$T219266 = -4						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
?GetName@CvDllUnit@@UBG?AVCvString@@XZ PROC		; CvDllUnit::GetName, COMDAT

; 284  : {

	push	ecx

; 285  : 	return m_pUnit->getName();

	mov	eax, DWORD PTR _this$[esp]
	mov	ecx, DWORD PTR [eax+8]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+4]
	push	esi
	mov	DWORD PTR $T219266[esp+12], 0
	call	?getName@CvUnit@@QBE?BVCvString@@XZ	; CvUnit::getName
	mov	eax, esi
	pop	esi

; 286  : }

	pop	ecx
	ret	8
?GetName@CvDllUnit@@UBG?AVCvString@@XZ ENDP		; CvDllUnit::GetName
_TEXT	ENDS
PUBLIC	?isEmbarked@CvUnit@@QBE_NXZ			; CvUnit::isEmbarked
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvunit.h
;	COMDAT ?isEmbarked@CvUnit@@QBE_NXZ
_TEXT	SEGMENT
?isEmbarked@CvUnit@@QBE_NXZ PROC			; CvUnit::isEmbarked, COMDAT
; _this$ = ecx

; 257  : 		return m_bEmbarked;

	mov	al, BYTE PTR [ecx+1652]

; 258  : 	}

	ret	0
?isEmbarked@CvUnit@@QBE_NXZ ENDP			; CvUnit::isEmbarked
_TEXT	ENDS
PUBLIC	?GetID@CvUnit@@QBEHXZ				; CvUnit::GetID
; Function compile flags: /Ogtpy
;	COMDAT ?GetID@CvUnit@@QBEHXZ
_TEXT	SEGMENT
?GetID@CvUnit@@QBEHXZ PROC				; CvUnit::GetID, COMDAT
; _this$ = ecx

; 662  : 		return m_iID;

	mov	eax, DWORD PTR [ecx+100]

; 663  : 	}

	ret	0
?GetID@CvUnit@@QBEHXZ ENDP				; CvUnit::GetID
_TEXT	ENDS
PUBLIC	?getX@CvUnit@@QBEHXZ				; CvUnit::getX
; Function compile flags: /Ogtpy
;	COMDAT ?getX@CvUnit@@QBEHXZ
_TEXT	SEGMENT
?getX@CvUnit@@QBEHXZ PROC				; CvUnit::getX, COMDAT
; _this$ = ecx

; 673  : 		return m_iX.get();

	mov	eax, DWORD PTR [ecx+76]

; 674  : 	}

	ret	0
?getX@CvUnit@@QBEHXZ ENDP				; CvUnit::getX
_TEXT	ENDS
PUBLIC	?getY@CvUnit@@QBEHXZ				; CvUnit::getY
; Function compile flags: /Ogtpy
;	COMDAT ?getY@CvUnit@@QBEHXZ
_TEXT	SEGMENT
?getY@CvUnit@@QBEHXZ PROC				; CvUnit::getY, COMDAT
; _this$ = ecx

; 678  : 		return m_iY.get();

	mov	eax, DWORD PTR [ecx+88]

; 679  : 	}

	ret	0
?getY@CvUnit@@QBEHXZ ENDP				; CvUnit::getY
_TEXT	ENDS
PUBLIC	?getOwner@CvUnit@@QBE?AW4PlayerTypes@@XZ	; CvUnit::getOwner
; Function compile flags: /Ogtpy
;	COMDAT ?getOwner@CvUnit@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
?getOwner@CvUnit@@QBE?AW4PlayerTypes@@XZ PROC		; CvUnit::getOwner, COMDAT
; _this$ = ecx

; 1046 : 		return m_eOwner.get();

	mov	eax, DWORD PTR [ecx+40]

; 1047 : 	}

	ret	0
?getOwner@CvUnit@@QBE?AW4PlayerTypes@@XZ ENDP		; CvUnit::getOwner
_TEXT	ENDS
PUBLIC	?IsCombatUnit@CvUnit@@QBE_NXZ			; CvUnit::IsCombatUnit
; Function compile flags: /Ogtpy
;	COMDAT ?IsCombatUnit@CvUnit@@QBE_NXZ
_TEXT	SEGMENT
?IsCombatUnit@CvUnit@@QBE_NXZ PROC			; CvUnit::IsCombatUnit, COMDAT
; _this$ = ecx

; 1243 : 		return (m_iBaseCombat > 0);

	xor	eax, eax
	cmp	DWORD PTR [ecx+1044], eax
	setg	al

; 1244 : 	}

	ret	0
?IsCombatUnit@CvUnit@@QBE_NXZ ENDP			; CvUnit::IsCombatUnit
_TEXT	ENDS
PUBLIC	??_7ICvUnit2@@6B@				; ICvUnit2::`vftable'
PUBLIC	??0ICvUnit2@@QAE@XZ				; ICvUnit2::ICvUnit2
PUBLIC	??_R4ICvUnit2@@6B@				; ICvUnit2::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICvUnit2@@6B@
rdata$r	SEGMENT
??_R4ICvUnit2@@6B@ DD 00H				; ICvUnit2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVICvUnit2@@@8
	DD	FLAT:??_R3ICvUnit2@@8
rdata$r	ENDS
;	COMDAT ??_7ICvUnit2@@6B@
CONST	SEGMENT
??_7ICvUnit2@@6B@ DD FLAT:??_R4ICvUnit2@@6B@		; ICvUnit2::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0ICvUnit2@@QAE@XZ
_TEXT	SEGMENT
??0ICvUnit2@@QAE@XZ PROC				; ICvUnit2::ICvUnit2, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7ICvUnit2@@6B@
	ret	0
??0ICvUnit2@@QAE@XZ ENDP				; ICvUnit2::ICvUnit2
_TEXT	ENDS
PUBLIC	?DecrementReference@CvDllUnit@@QAEIXZ		; CvDllUnit::DecrementReference
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllunit.cpp
;	COMDAT ?DecrementReference@CvDllUnit@@QAEIXZ
_TEXT	SEGMENT
?DecrementReference@CvDllUnit@@QAEIXZ PROC		; CvDllUnit::DecrementReference, COMDAT
; _this$ = ecx

; 51   : 	if(m_uiRefCount == 1)

	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, 1
	jne	SHORT $LN2@DecrementR

; 52   : 	{
; 53   : 		delete this;

	push	ecx
	mov	DWORD PTR [ecx], OFFSET ??_7CvDllUnit@@6B@
	call	?Free@CvDllGameContext@@SAXPAX@Z	; CvDllGameContext::Free
	add	esp, 4

; 54   : 		return 0;

	xor	eax, eax

; 59   : 		return m_uiRefCount;
; 60   : 	}
; 61   : }

	ret	0
$LN2@DecrementR:

; 55   : 	}
; 56   : 	else
; 57   : 	{
; 58   : 		--m_uiRefCount;

	dec	eax
	mov	DWORD PTR [ecx+4], eax

; 59   : 		return m_uiRefCount;
; 60   : 	}
; 61   : }

	ret	0
?DecrementReference@CvDllUnit@@QAEIXZ ENDP		; CvDllUnit::DecrementReference
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Destroy@CvDllUnit@@EAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Destroy@CvDllUnit@@EAGXXZ PROC				; CvDllUnit::Destroy, COMDAT

; 70   : 	DecrementReference();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, 1
	jne	SHORT $LN4@Destroy
	push	eax
	mov	DWORD PTR [eax], OFFSET ??_7CvDllUnit@@6B@
	call	?Free@CvDllGameContext@@SAXPAX@Z	; CvDllGameContext::Free
	add	esp, 4

; 71   : }

	ret	4

; 70   : 	DecrementReference();

$LN4@Destroy:
	dec	ecx
	mov	DWORD PTR [eax+4], ecx

; 71   : }

	ret	4
?Destroy@CvDllUnit@@EAGXXZ ENDP				; CvDllUnit::Destroy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetID@CvDllUnit@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetID@CvDllUnit@@UBGHXZ PROC				; CvDllUnit::GetID, COMDAT

; 90   : 	return m_pUnit->GetID();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [ecx+100]

; 91   : }

	ret	4
?GetID@CvDllUnit@@UBGHXZ ENDP				; CvDllUnit::GetID
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetOwner@CvDllUnit@@UBG?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetOwner@CvDllUnit@@UBG?AW4PlayerTypes@@XZ PROC	; CvDllUnit::GetOwner, COMDAT

; 95   : 	return m_pUnit->getOwner();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [ecx+40]

; 96   : }

	ret	4
?GetOwner@CvDllUnit@@UBG?AW4PlayerTypes@@XZ ENDP	; CvDllUnit::GetOwner
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?IsCombatUnit@CvDllUnit@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsCombatUnit@CvDllUnit@@UBG_NXZ PROC			; CvDllUnit::IsCombatUnit, COMDAT

; 135  : 	return m_pUnit->IsCombatUnit();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	xor	eax, eax
	cmp	DWORD PTR [ecx+1044], eax
	setg	al

; 136  : }

	ret	4
?IsCombatUnit@CvDllUnit@@UBG_NXZ ENDP			; CvDllUnit::IsCombatUnit
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?IsEmbarked@CvDllUnit@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsEmbarked@CvDllUnit@@UBG_NXZ PROC			; CvDllUnit::IsEmbarked, COMDAT

; 176  : 	return m_pUnit->isEmbarked();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	mov	al, BYTE PTR [ecx+1652]

; 177  : }

	ret	4
?IsEmbarked@CvDllUnit@@UBG_NXZ ENDP			; CvDllUnit::IsEmbarked
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetX@CvDllUnit@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetX@CvDllUnit@@UBGHXZ PROC				; CvDllUnit::GetX, COMDAT

; 197  : 	return m_pUnit->getX();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [ecx+76]

; 198  : }

	ret	4
?GetX@CvDllUnit@@UBGHXZ ENDP				; CvDllUnit::GetX
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetY@CvDllUnit@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetY@CvDllUnit@@UBGHXZ PROC				; CvDllUnit::GetY, COMDAT

; 202  : 	return m_pUnit->getY();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [ecx+88]

; 203  : }

	ret	4
?GetY@CvDllUnit@@UBGHXZ ENDP				; CvDllUnit::GetY
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetPosition@CvDllUnit@@UBGXAAH0@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iX$ = 12						; size = 4
_iY$ = 16						; size = 4
?GetPosition@CvDllUnit@@UBGXAAH0@Z PROC			; CvDllUnit::GetPosition, COMDAT

; 207  : 	iX = m_pUnit->getX();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+76]
	mov	ecx, DWORD PTR _iX$[esp-4]
	mov	DWORD PTR [ecx], edx

; 208  : 	iY = m_pUnit->getY();

	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [edx+88]
	mov	ecx, DWORD PTR _iY$[esp-4]
	mov	DWORD PTR [ecx], eax

; 209  : }

	ret	12					; 0000000cH
?GetPosition@CvDllUnit@@UBGXAAH0@Z ENDP			; CvDllUnit::GetPosition
_TEXT	ENDS
PUBLIC	??0CvDllUnit@@QAE@PAVCvUnit@@@Z			; CvDllUnit::CvDllUnit
; Function compile flags: /Ogtpy
;	COMDAT ??0CvDllUnit@@QAE@PAVCvUnit@@@Z
_TEXT	SEGMENT
_pUnit$ = 8						; size = 4
??0CvDllUnit@@QAE@PAVCvUnit@@@Z PROC			; CvDllUnit::CvDllUnit, COMDAT
; _this$ = ecx

; 22   : {

	mov	eax, ecx
	mov	ecx, DWORD PTR _pUnit$[esp-4]
	mov	DWORD PTR [eax], OFFSET ??_7CvDllUnit@@6B@
	mov	DWORD PTR [eax+4], 1
	mov	DWORD PTR [eax+8], ecx

; 23   : 	FAssertMsg(pUnit != NULL, "SHOULD NOT HAPPEN");
; 24   : }

	ret	4
??0CvDllUnit@@QAE@PAVCvUnit@@@Z ENDP			; CvDllUnit::CvDllUnit
_TEXT	ENDS
END
