; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	s:\Github\Lekmod\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvDllMap.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_CIV5_XP2_DLL_VERSION DD FLAT:$SG217177
_DATA	ENDS
CONST	SEGMENT
$SG217177 DB	'1.0.0', 00H
	ORG $+2
_guidICvUnknown DD 0d89ba82fH
	DW	09fa3H
	DW	04696H
	DB	0b3H
	DB	0f4H
	DB	052H
	DB	0bdH
	DB	0b1H
	DB	01H
	DB	0cfH
	DB	0b2H
_guidICvMap1 DD	08b71d2b1H
	DW	03673H
	DW	041a2H
	DB	0b6H
	DB	063H
	DB	0c6H
	DB	07cH
	DB	02H
	DB	0e1H
	DB	06fH
	DB	057H
CONST	ENDS
PUBLIC	??_7ICvUnknown@@6B@				; ICvUnknown::`vftable'
PUBLIC	??0ICvUnknown@@QAE@XZ				; ICvUnknown::ICvUnknown
PUBLIC	??_R4ICvUnknown@@6B@				; ICvUnknown::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVICvUnknown@@@8				; ICvUnknown `RTTI Type Descriptor'
PUBLIC	??_R3ICvUnknown@@8				; ICvUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICvUnknown@@8				; ICvUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICvUnknown@@8			; ICvUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@ICvUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICvUnknown@@8 DD FLAT:??_R0?AVICvUnknown@@@8 ; ICvUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICvUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2ICvUnknown@@8
rdata$r	SEGMENT
??_R2ICvUnknown@@8 DD FLAT:??_R1A@?0A@EA@ICvUnknown@@8	; ICvUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ICvUnknown@@8
rdata$r	SEGMENT
??_R3ICvUnknown@@8 DD 00H				; ICvUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ICvUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVICvUnknown@@@8
_DATA	SEGMENT
??_R0?AVICvUnknown@@@8 DD FLAT:??_7type_info@@6B@	; ICvUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVICvUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ICvUnknown@@6B@
rdata$r	SEGMENT
??_R4ICvUnknown@@6B@ DD 00H				; ICvUnknown::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVICvUnknown@@@8
	DD	FLAT:??_R3ICvUnknown@@8
rdata$r	ENDS
;	COMDAT ??_7ICvUnknown@@6B@
CONST	SEGMENT
??_7ICvUnknown@@6B@ DD FLAT:??_R4ICvUnknown@@6B@	; ICvUnknown::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0ICvUnknown@@QAE@XZ
_TEXT	SEGMENT
??0ICvUnknown@@QAE@XZ PROC				; ICvUnknown::ICvUnknown, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7ICvUnknown@@6B@
	ret	0
??0ICvUnknown@@QAE@XZ ENDP				; ICvUnknown::ICvUnknown
_TEXT	ENDS
PUBLIC	??_7CvDllMap@@6B@				; CvDllMap::`vftable'
PUBLIC	??1CvDllMap@@QAE@XZ				; CvDllMap::~CvDllMap
PUBLIC	??_R4CvDllMap@@6B@				; CvDllMap::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCvDllMap@@@8				; CvDllMap `RTTI Type Descriptor'
PUBLIC	??_R3CvDllMap@@8				; CvDllMap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CvDllMap@@8				; CvDllMap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CvDllMap@@8			; CvDllMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ICvMap1@@8			; ICvMap1::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVICvMap1@@@8				; ICvMap1 `RTTI Type Descriptor'
PUBLIC	??_R3ICvMap1@@8					; ICvMap1::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICvMap1@@8					; ICvMap1::`RTTI Base Class Array'
PUBLIC	?QueryInterface@CvDllMap@@UAGPAXU_GUID@@@Z	; CvDllMap::QueryInterface
PUBLIC	?Destroy@CvDllMap@@EAGXXZ			; CvDllMap::Destroy
PUBLIC	?Init@CvDllMap@@UAGXPAUCvMapInitData@@@Z	; CvDllMap::Init
PUBLIC	?Uninit@CvDllMap@@UAGXXZ			; CvDllMap::Uninit
PUBLIC	?UpdateSymbolVisibility@CvDllMap@@UAGXXZ	; CvDllMap::UpdateSymbolVisibility
PUBLIC	?UpdateLayout@CvDllMap@@UAGX_N@Z		; CvDllMap::UpdateLayout
PUBLIC	?UpdateDeferredFog@CvDllMap@@UAGXXZ		; CvDllMap::UpdateDeferredFog
PUBLIC	?FindCity@CvDllMap@@UAGPAVICvCity1@@HHW4PlayerTypes@@W4TeamTypes@@_N21W4DirectionTypes@@PAV2@@Z ; CvDllMap::FindCity
PUBLIC	?NumPlots@CvDllMap@@UBGHXZ			; CvDllMap::NumPlots
PUBLIC	?PlotNum@CvDllMap@@UBGHHH@Z			; CvDllMap::PlotNum
PUBLIC	?GetGridWidth@CvDllMap@@UBGHXZ			; CvDllMap::GetGridWidth
PUBLIC	?GetGridHeight@CvDllMap@@UBGHXZ			; CvDllMap::GetGridHeight
PUBLIC	?IsWrapX@CvDllMap@@UBG_NXZ			; CvDllMap::IsWrapX
PUBLIC	?IsWrapY@CvDllMap@@UBG_NXZ			; CvDllMap::IsWrapY
PUBLIC	?GetPlotByIndex@CvDllMap@@UBGPAVICvPlot1@@H@Z	; CvDllMap::GetPlotByIndex
PUBLIC	?GetPlot@CvDllMap@@UBGPAVICvPlot1@@HH@Z		; CvDllMap::GetPlot
PUBLIC	?RecalculateLandmasses@CvDllMap@@UAGXXZ		; CvDllMap::RecalculateLandmasses
PUBLIC	?Read@CvDllMap@@UAGXAAVFDataStream@@@Z		; CvDllMap::Read
PUBLIC	?Write@CvDllMap@@UBGXAAVFDataStream@@@Z		; CvDllMap::Write
PUBLIC	?Validate@CvDllMap@@UAGHXZ			; CvDllMap::Validate
;	COMDAT ??_R2ICvMap1@@8
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllmap.cpp
rdata$r	SEGMENT
??_R2ICvMap1@@8 DD FLAT:??_R1A@?0A@EA@ICvMap1@@8	; ICvMap1::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICvUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICvMap1@@8
rdata$r	SEGMENT
??_R3ICvMap1@@8 DD 00H					; ICvMap1::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICvMap1@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVICvMap1@@@8
_DATA	SEGMENT
??_R0?AVICvMap1@@@8 DD FLAT:??_7type_info@@6B@		; ICvMap1 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVICvMap1@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ICvMap1@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICvMap1@@8 DD FLAT:??_R0?AVICvMap1@@@8	; ICvMap1::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICvMap1@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CvDllMap@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CvDllMap@@8 DD FLAT:??_R0?AVCvDllMap@@@8	; CvDllMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CvDllMap@@8
rdata$r	ENDS
;	COMDAT ??_R2CvDllMap@@8
rdata$r	SEGMENT
??_R2CvDllMap@@8 DD FLAT:??_R1A@?0A@EA@CvDllMap@@8	; CvDllMap::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICvMap1@@8
	DD	FLAT:??_R1A@?0A@EA@ICvUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CvDllMap@@8
rdata$r	SEGMENT
??_R3CvDllMap@@8 DD 00H					; CvDllMap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CvDllMap@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCvDllMap@@@8
_DATA	SEGMENT
??_R0?AVCvDllMap@@@8 DD FLAT:??_7type_info@@6B@		; CvDllMap `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCvDllMap@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CvDllMap@@6B@
rdata$r	SEGMENT
??_R4CvDllMap@@6B@ DD 00H				; CvDllMap::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCvDllMap@@@8
	DD	FLAT:??_R3CvDllMap@@8
rdata$r	ENDS
;	COMDAT ??_7CvDllMap@@6B@
CONST	SEGMENT
??_7CvDllMap@@6B@ DD FLAT:??_R4CvDllMap@@6B@		; CvDllMap::`vftable'
	DD	FLAT:?QueryInterface@CvDllMap@@UAGPAXU_GUID@@@Z
	DD	FLAT:?Destroy@CvDllMap@@EAGXXZ
	DD	FLAT:?Init@CvDllMap@@UAGXPAUCvMapInitData@@@Z
	DD	FLAT:?Uninit@CvDllMap@@UAGXXZ
	DD	FLAT:?UpdateSymbolVisibility@CvDllMap@@UAGXXZ
	DD	FLAT:?UpdateLayout@CvDllMap@@UAGX_N@Z
	DD	FLAT:?UpdateDeferredFog@CvDllMap@@UAGXXZ
	DD	FLAT:?FindCity@CvDllMap@@UAGPAVICvCity1@@HHW4PlayerTypes@@W4TeamTypes@@_N21W4DirectionTypes@@PAV2@@Z
	DD	FLAT:?NumPlots@CvDllMap@@UBGHXZ
	DD	FLAT:?PlotNum@CvDllMap@@UBGHHH@Z
	DD	FLAT:?GetGridWidth@CvDllMap@@UBGHXZ
	DD	FLAT:?GetGridHeight@CvDllMap@@UBGHXZ
	DD	FLAT:?IsWrapX@CvDllMap@@UBG_NXZ
	DD	FLAT:?IsWrapY@CvDllMap@@UBG_NXZ
	DD	FLAT:?GetPlotByIndex@CvDllMap@@UBGPAVICvPlot1@@H@Z
	DD	FLAT:?GetPlot@CvDllMap@@UBGPAVICvPlot1@@HH@Z
	DD	FLAT:?RecalculateLandmasses@CvDllMap@@UAGXXZ
	DD	FLAT:?Read@CvDllMap@@UAGXAAVFDataStream@@@Z
	DD	FLAT:?Write@CvDllMap@@UBGXAAVFDataStream@@@Z
	DD	FLAT:?Validate@CvDllMap@@UAGHXZ
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??1CvDllMap@@QAE@XZ
_TEXT	SEGMENT
??1CvDllMap@@QAE@XZ PROC				; CvDllMap::~CvDllMap, COMDAT
; _this$ = ecx

; 26   : {

	mov	DWORD PTR [ecx], OFFSET ??_7CvDllMap@@6B@

; 27   : }

	ret	0
??1CvDllMap@@QAE@XZ ENDP				; CvDllMap::~CvDllMap
_TEXT	ENDS
PUBLIC	?IncrementReference@CvDllMap@@QAEIXZ		; CvDllMap::IncrementReference
; Function compile flags: /Ogtpy
;	COMDAT ?IncrementReference@CvDllMap@@QAEIXZ
_TEXT	SEGMENT
?IncrementReference@CvDllMap@@QAEIXZ PROC		; CvDllMap::IncrementReference, COMDAT
; _this$ = ecx

; 43   : 	++m_uiRefCount;

	inc	DWORD PTR [ecx+4]

; 44   : 	return m_uiRefCount;

	mov	eax, DWORD PTR [ecx+4]

; 45   : }

	ret	0
?IncrementReference@CvDllMap@@QAEIXZ ENDP		; CvDllMap::IncrementReference
_TEXT	ENDS
PUBLIC	?GetReferenceCount@CvDllMap@@QAEIXZ		; CvDllMap::GetReferenceCount
; Function compile flags: /Ogtpy
;	COMDAT ?GetReferenceCount@CvDllMap@@QAEIXZ
_TEXT	SEGMENT
?GetReferenceCount@CvDllMap@@QAEIXZ PROC		; CvDllMap::GetReferenceCount, COMDAT
; _this$ = ecx

; 63   : 	return m_uiRefCount;

	mov	eax, DWORD PTR [ecx+4]

; 64   : }

	ret	0
?GetReferenceCount@CvDllMap@@QAEIXZ ENDP		; CvDllMap::GetReferenceCount
_TEXT	ENDS
PUBLIC	??3CvDllMap@@SAXPAX@Z				; CvDllMap::operator delete
EXTRN	?Free@CvDllGameContext@@SAXPAX@Z:PROC		; CvDllGameContext::Free
; Function compile flags: /Ogtpy
;	COMDAT ??3CvDllMap@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CvDllMap@@SAXPAX@Z PROC				; CvDllMap::operator delete, COMDAT

; 73   : 	CvDllGameContext::Free(p);

	jmp	?Free@CvDllGameContext@@SAXPAX@Z	; CvDllGameContext::Free
??3CvDllMap@@SAXPAX@Z ENDP				; CvDllMap::operator delete
_TEXT	ENDS
PUBLIC	??2CvDllMap@@SAPAXI@Z				; CvDllMap::operator new
EXTRN	?Allocate@CvDllGameContext@@SAPAXI@Z:PROC	; CvDllGameContext::Allocate
; Function compile flags: /Ogtpy
;	COMDAT ??2CvDllMap@@SAPAXI@Z
_TEXT	SEGMENT
_bytes$ = 8						; size = 4
??2CvDllMap@@SAPAXI@Z PROC				; CvDllMap::operator new, COMDAT

; 78   : 	return CvDllGameContext::Allocate(bytes);

	jmp	?Allocate@CvDllGameContext@@SAPAXI@Z	; CvDllGameContext::Allocate
??2CvDllMap@@SAPAXI@Z ENDP				; CvDllMap::operator new
_TEXT	ENDS
PUBLIC	?GetInstance@CvDllMap@@QAEPAVCvMap@@XZ		; CvDllMap::GetInstance
; Function compile flags: /Ogtpy
;	COMDAT ?GetInstance@CvDllMap@@QAEPAVCvMap@@XZ
_TEXT	SEGMENT
?GetInstance@CvDllMap@@QAEPAVCvMap@@XZ PROC		; CvDllMap::GetInstance, COMDAT
; _this$ = ecx

; 83   : 	return m_pMap;

	mov	eax, DWORD PTR [ecx+8]

; 84   : }

	ret	0
?GetInstance@CvDllMap@@QAEPAVCvMap@@XZ ENDP		; CvDllMap::GetInstance
_TEXT	ENDS
EXTRN	?init@CvMap@@QAEXPAUCvMapInitData@@@Z:PROC	; CvMap::init
; Function compile flags: /Ogtpy
;	COMDAT ?Init@CvDllMap@@UAGXPAUCvMapInitData@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pInitData$ = 12					; size = 4
?Init@CvDllMap@@UAGXPAUCvMapInitData@@@Z PROC		; CvDllMap::Init, COMDAT

; 88   : 	m_pMap->init(pInitData);

	mov	eax, DWORD PTR _pInitData$[esp-4]
	mov	ecx, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [ecx+8]
	push	eax
	call	?init@CvMap@@QAEXPAUCvMapInitData@@@Z	; CvMap::init

; 89   : }

	ret	8
?Init@CvDllMap@@UAGXPAUCvMapInitData@@@Z ENDP		; CvDllMap::Init
_TEXT	ENDS
EXTRN	?uninit@CvMap@@QAEXXZ:PROC			; CvMap::uninit
; Function compile flags: /Ogtpy
;	COMDAT ?Uninit@CvDllMap@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Uninit@CvDllMap@@UAGXXZ PROC				; CvDllMap::Uninit, COMDAT

; 93   : 	m_pMap->uninit();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?uninit@CvMap@@QAEXXZ			; CvMap::uninit

; 94   : }

	ret	4
?Uninit@CvDllMap@@UAGXXZ ENDP				; CvDllMap::Uninit
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?UpdateSymbolVisibility@CvDllMap@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?UpdateSymbolVisibility@CvDllMap@@UAGXXZ PROC		; CvDllMap::UpdateSymbolVisibility, COMDAT

; 98   : 	// Unused
; 99   : }

	ret	4
?UpdateSymbolVisibility@CvDllMap@@UAGXXZ ENDP		; CvDllMap::UpdateSymbolVisibility
_TEXT	ENDS
EXTRN	?updateLayout@CvMap@@QAEX_N@Z:PROC		; CvMap::updateLayout
; Function compile flags: /Ogtpy
;	COMDAT ?UpdateLayout@CvDllMap@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bDebug$ = 12						; size = 1
?UpdateLayout@CvDllMap@@UAGX_N@Z PROC			; CvDllMap::UpdateLayout, COMDAT

; 103  : 	m_pMap->updateLayout(bDebug);

	mov	eax, DWORD PTR _bDebug$[esp-4]
	mov	ecx, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [ecx+8]
	push	eax
	call	?updateLayout@CvMap@@QAEX_N@Z		; CvMap::updateLayout

; 104  : }

	ret	8
?UpdateLayout@CvDllMap@@UAGX_N@Z ENDP			; CvDllMap::UpdateLayout
_TEXT	ENDS
EXTRN	?updateDeferredFog@CvMap@@QAEXXZ:PROC		; CvMap::updateDeferredFog
; Function compile flags: /Ogtpy
;	COMDAT ?UpdateDeferredFog@CvDllMap@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?UpdateDeferredFog@CvDllMap@@UAGXXZ PROC		; CvDllMap::UpdateDeferredFog, COMDAT

; 108  : 	m_pMap->updateDeferredFog();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?updateDeferredFog@CvMap@@QAEXXZ	; CvMap::updateDeferredFog

; 109  : }

	ret	4
?UpdateDeferredFog@CvDllMap@@UAGXXZ ENDP		; CvDllMap::UpdateDeferredFog
_TEXT	ENDS
EXTRN	??3CvDllCity@@SAXPAX@Z:PROC			; CvDllCity::operator delete
EXTRN	??0CvDllCity@@QAE@PAVCvCity@@@Z:PROC		; CvDllCity::CvDllCity
EXTRN	??2CvDllCity@@SAPAXI@Z:PROC			; CvDllCity::operator new
EXTRN	?findCity@CvMap@@QAEPAVCvCity@@HHW4PlayerTypes@@W4TeamTypes@@_N21W4DirectionTypes@@PBV2@@Z:PROC ; CvMap::findCity
EXTRN	?GetInstance@CvDllCity@@QAEPAVCvCity@@XZ:PROC	; CvDllCity::GetInstance
EXTRN	___CxxFrameHandler3:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?FindCity@CvDllMap@@UAGPAVICvCity1@@HHW4PlayerTypes@@W4TeamTypes@@_N21W4DirectionTypes@@PAV2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FindCity@CvDllMap@@UAGPAVICvCity1@@HHW4PlayerTypes@@W4TeamTypes@@_N21W4DirectionTypes@@PAV2@@Z$0
__ehfuncinfo$?FindCity@CvDllMap@@UAGPAVICvCity1@@HHW4PlayerTypes@@W4TeamTypes@@_N21W4DirectionTypes@@PAV2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FindCity@CvDllMap@@UAGPAVICvCity1@@HHW4PlayerTypes@@W4TeamTypes@@_N21W4DirectionTypes@@PAV2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?FindCity@CvDllMap@@UAGPAVICvCity1@@HHW4PlayerTypes@@W4TeamTypes@@_N21W4DirectionTypes@@PAV2@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_iX$ = 12						; size = 4
_iY$ = 16						; size = 4
_eOwner$ = 20						; size = 4
_eTeam$ = 24						; size = 4
_bSameArea$ = 28					; size = 1
_bCoastalOnly$ = 32					; size = 1
_eTeamAtWarWith$ = 36					; size = 4
_eDirection$ = 40					; size = 4
$T218781 = 44						; size = 4
_pSkipCity$ = 44					; size = 4
?FindCity@CvDllMap@@UAGPAVICvCity1@@HHW4PlayerTypes@@W4TeamTypes@@_N21W4DirectionTypes@@PAV2@@Z PROC ; CvDllMap::FindCity, COMDAT

; 120  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?FindCity@CvDllMap@@UAGPAVICvCity1@@HHW4PlayerTypes@@W4TeamTypes@@_N21W4DirectionTypes@@PAV2@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 121  : 	CvCity* pkSkipCity = NULL;
; 122  : 	if(pSkipCity)

	mov	ecx, DWORD PTR _pSkipCity$[esp+8]
	xor	eax, eax
	push	esi
	test	ecx, ecx
	je	SHORT $LN1@FindCity

; 123  : 	{
; 124  : 		pkSkipCity = static_cast<CvDllCity*>(pSkipCity)->GetInstance();

	call	?GetInstance@CvDllCity@@QAEPAVCvCity@@XZ ; CvDllCity::GetInstance
$LN1@FindCity:

; 125  : 	}
; 126  : 
; 127  : 	CvCity* pkCity = m_pMap->findCity(iX, iY, eOwner, eTeam, bSameArea, bCoastalOnly, eTeamAtWarWith, eDirection, pkSkipCity);

	mov	ecx, DWORD PTR _eTeamAtWarWith$[esp+12]
	mov	edx, DWORD PTR _bCoastalOnly$[esp+12]
	push	eax
	mov	eax, DWORD PTR _eDirection$[esp+16]
	push	eax
	mov	eax, DWORD PTR _bSameArea$[esp+20]
	push	ecx
	mov	ecx, DWORD PTR _eTeam$[esp+24]
	push	edx
	mov	edx, DWORD PTR _eOwner$[esp+28]
	push	eax
	mov	eax, DWORD PTR _iY$[esp+32]
	push	ecx
	mov	ecx, DWORD PTR _iX$[esp+36]
	push	edx
	mov	edx, DWORD PTR _this$[esp+40]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR [edx+8]
	call	?findCity@CvMap@@QAEPAVCvCity@@HHW4PlayerTypes@@W4TeamTypes@@_N21W4DirectionTypes@@PBV2@@Z ; CvMap::findCity
	mov	esi, eax

; 128  : 	return (NULL != pkCity)? new CvDllCity(pkCity) : NULL;

	test	esi, esi
	je	SHORT $LN6@FindCity
	push	12					; 0000000cH
	call	??2CvDllCity@@SAPAXI@Z			; CvDllCity::operator new
	add	esp, 4
	mov	DWORD PTR $T218781[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN6@FindCity
	push	esi
	mov	ecx, eax
	call	??0CvDllCity@@QAE@PAVCvCity@@@Z		; CvDllCity::CvDllCity

; 129  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	40					; 00000028H
$LN6@FindCity:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	40					; 00000028H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?FindCity@CvDllMap@@UAGPAVICvCity1@@HHW4PlayerTypes@@W4TeamTypes@@_N21W4DirectionTypes@@PAV2@@Z$0:
	mov	eax, DWORD PTR $T218781[ebp-4]
	push	eax
	call	??3CvDllCity@@SAXPAX@Z			; CvDllCity::operator delete
	pop	ecx
	ret	0
__ehhandler$?FindCity@CvDllMap@@UAGPAVICvCity1@@HHW4PlayerTypes@@W4TeamTypes@@_N21W4DirectionTypes@@PAV2@@Z:
	mov	eax, OFFSET __ehfuncinfo$?FindCity@CvDllMap@@UAGPAVICvCity1@@HHW4PlayerTypes@@W4TeamTypes@@_N21W4DirectionTypes@@PAV2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FindCity@CvDllMap@@UAGPAVICvCity1@@HHW4PlayerTypes@@W4TeamTypes@@_N21W4DirectionTypes@@PAV2@@Z ENDP ; CvDllMap::FindCity
PUBLIC	_IsEqualGUID
; Function compile flags: /Ogtpy
; File c:\program files\microsoft sdks\windows\v6.0a\include\guiddef.h
;	COMDAT _IsEqualGUID
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID PROC					; COMDAT

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

	mov	ecx, DWORD PTR _rguid2$[esp-4]
	mov	edx, DWORD PTR _rguid1$[esp-4]
	mov	eax, 16					; 00000010H
	push	esi
	npad	2
$LL4@IsEqualGUI:
	mov	esi, DWORD PTR [edx]
	cmp	esi, DWORD PTR [ecx]
	jne	SHORT $LN5@IsEqualGUI
	sub	eax, 4
	add	ecx, 4
	add	edx, 4
	cmp	eax, 4
	jae	SHORT $LL4@IsEqualGUI
	xor	eax, eax
	xor	edx, edx
	test	eax, eax
	sete	dl
	pop	esi
	mov	eax, edx

; 162  : }

	ret	0
$LN5@IsEqualGUI:

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

	movzx	eax, BYTE PTR [edx]
	movzx	esi, BYTE PTR [ecx]
	sub	eax, esi
	jne	SHORT $LN7@IsEqualGUI
	movzx	eax, BYTE PTR [edx+1]
	movzx	esi, BYTE PTR [ecx+1]
	sub	eax, esi
	jne	SHORT $LN7@IsEqualGUI
	movzx	eax, BYTE PTR [edx+2]
	movzx	esi, BYTE PTR [ecx+2]
	sub	eax, esi
	jne	SHORT $LN7@IsEqualGUI
	movzx	eax, BYTE PTR [edx+3]
	movzx	ecx, BYTE PTR [ecx+3]
	sub	eax, ecx
$LN7@IsEqualGUI:
	sar	eax, 31					; 0000001fH
	or	eax, 1
	xor	edx, edx
	test	eax, eax
	sete	dl
	pop	esi
	mov	eax, edx

; 162  : }

	ret	0
_IsEqualGUID ENDP
_TEXT	ENDS
PUBLIC	_==
; Function compile flags: /Ogtpy
;	COMDAT _==
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==	PROC						; COMDAT

; 194  :     return IsEqualGUID(guidOne,guidOther);

	jmp	_IsEqualGUID
_==	ENDP
_TEXT	ENDS
EXTRN	?recalculateLandmasses@CvMap@@QAEXXZ:PROC	; CvMap::recalculateLandmasses
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllmap.cpp
;	COMDAT ?RecalculateLandmasses@CvDllMap@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?RecalculateLandmasses@CvDllMap@@UAGXXZ PROC		; CvDllMap::RecalculateLandmasses, COMDAT

; 183  : 	m_pMap->recalculateLandmasses();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?recalculateLandmasses@CvMap@@QAEXXZ	; CvMap::recalculateLandmasses

; 184  : }

	ret	4
?RecalculateLandmasses@CvDllMap@@UAGXXZ ENDP		; CvDllMap::RecalculateLandmasses
_TEXT	ENDS
EXTRN	?Read@CvMap@@QAEXAAVFDataStream@@@Z:PROC	; CvMap::Read
; Function compile flags: /Ogtpy
;	COMDAT ?Read@CvDllMap@@UAGXAAVFDataStream@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_kStream$ = 12						; size = 4
?Read@CvDllMap@@UAGXAAVFDataStream@@@Z PROC		; CvDllMap::Read, COMDAT

; 188  : 	m_pMap->Read(kStream);

	mov	eax, DWORD PTR _kStream$[esp-4]
	mov	ecx, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [ecx+8]
	push	eax
	call	?Read@CvMap@@QAEXAAVFDataStream@@@Z	; CvMap::Read

; 189  : }

	ret	8
?Read@CvDllMap@@UAGXAAVFDataStream@@@Z ENDP		; CvDllMap::Read
_TEXT	ENDS
EXTRN	?Write@CvMap@@QBEXAAVFDataStream@@@Z:PROC	; CvMap::Write
; Function compile flags: /Ogtpy
;	COMDAT ?Write@CvDllMap@@UBGXAAVFDataStream@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_kStream$ = 12						; size = 4
?Write@CvDllMap@@UBGXAAVFDataStream@@@Z PROC		; CvDllMap::Write, COMDAT

; 193  : 	m_pMap->Write(kStream);

	mov	eax, DWORD PTR _kStream$[esp-4]
	mov	ecx, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [ecx+8]
	push	eax
	call	?Write@CvMap@@QBEXAAVFDataStream@@@Z	; CvMap::Write

; 194  : }

	ret	8
?Write@CvDllMap@@UBGXAAVFDataStream@@@Z ENDP		; CvDllMap::Write
_TEXT	ENDS
EXTRN	?Validate@CvMap@@QAEHXZ:PROC			; CvMap::Validate
; Function compile flags: /Ogtpy
;	COMDAT ?Validate@CvDllMap@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Validate@CvDllMap@@UAGHXZ PROC				; CvDllMap::Validate, COMDAT

; 198  : 	return m_pMap->Validate();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	call	?Validate@CvMap@@QAEHXZ			; CvMap::Validate

; 199  : }

	ret	4
?Validate@CvDllMap@@UAGHXZ ENDP				; CvDllMap::Validate
_TEXT	ENDS
PUBLIC	?GetInterfaceId@ICvUnknown@@SG?AU_GUID@@XZ	; ICvUnknown::GetInterfaceId
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces.h
;	COMDAT ?GetInterfaceId@ICvUnknown@@SG?AU_GUID@@XZ
_TEXT	SEGMENT
$T218829 = 8						; size = 4
?GetInterfaceId@ICvUnknown@@SG?AU_GUID@@XZ PROC		; ICvUnknown::GetInterfaceId, COMDAT

; 306  : 	static GUID DLLCALL GetInterfaceId(){ return guidICvUnknown; }

	mov	eax, DWORD PTR $T218829[esp-4]
	mov	ecx, DWORD PTR _guidICvUnknown
	mov	edx, DWORD PTR _guidICvUnknown+4
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _guidICvUnknown+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _guidICvUnknown+12
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	ret	4
?GetInterfaceId@ICvUnknown@@SG?AU_GUID@@XZ ENDP		; ICvUnknown::GetInterfaceId
_TEXT	ENDS
PUBLIC	?GetInterfaceId@ICvMap1@@SG?AU_GUID@@XZ		; ICvMap1::GetInterfaceId
; Function compile flags: /Ogtpy
;	COMDAT ?GetInterfaceId@ICvMap1@@SG?AU_GUID@@XZ
_TEXT	SEGMENT
$T218833 = 8						; size = 4
?GetInterfaceId@ICvMap1@@SG?AU_GUID@@XZ PROC		; ICvMap1::GetInterfaceId, COMDAT

; 1121 : 	static GUID DLLCALL GetInterfaceId() { return guidICvMap1; }

	mov	eax, DWORD PTR $T218833[esp-4]
	mov	ecx, DWORD PTR _guidICvMap1
	mov	edx, DWORD PTR _guidICvMap1+4
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _guidICvMap1+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _guidICvMap1+12
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	ret	4
?GetInterfaceId@ICvMap1@@SG?AU_GUID@@XZ ENDP		; ICvMap1::GetInterfaceId
_TEXT	ENDS
PUBLIC	?coordRange@@YAHHH_N@Z				; coordRange
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
;	COMDAT ?coordRange@@YAHHH_N@Z
_TEXT	SEGMENT
_iCoord$ = 8						; size = 4
_iRange$ = 12						; size = 4
_bWrap$ = 16						; size = 1
?coordRange@@YAHHH_N@Z PROC				; coordRange, COMDAT

; 88   : 	if(bWrap)

	cmp	BYTE PTR _bWrap$[esp-4], 0
	mov	eax, DWORD PTR _iCoord$[esp-4]
	je	SHORT $LN5@coordRange

; 89   : 	{
; 90   : 		if(iCoord < 0)
; 91   : 		{
; 92   : 			return (iRange + (iCoord % iRange));

	mov	ecx, DWORD PTR _iRange$[esp-4]
	test	eax, eax
	jge	SHORT $LN3@coordRange
	cdq
	idiv	ecx
	mov	eax, edx
	add	eax, ecx

; 97   : 		}
; 98   : 	}
; 99   : 
; 100  : 	return iCoord;
; 101  : }

	ret	0
$LN3@coordRange:

; 93   : 		}
; 94   : 		else if(iCoord >= iRange)

	cmp	eax, ecx
	jl	SHORT $LN5@coordRange

; 95   : 		{
; 96   : 			return (iCoord % iRange);

	cdq
	idiv	ecx
	mov	eax, edx
$LN5@coordRange:

; 97   : 		}
; 98   : 	}
; 99   : 
; 100  : 	return iCoord;
; 101  : }

	ret	0
?coordRange@@YAHHH_N@Z ENDP				; coordRange
_TEXT	ENDS
PUBLIC	?numPlots@CvMap@@QBEHXZ				; CvMap::numPlots
; Function compile flags: /Ogtpy
;	COMDAT ?numPlots@CvMap@@QBEHXZ
_TEXT	SEGMENT
?numPlots@CvMap@@QBEHXZ PROC				; CvMap::numPlots, COMDAT
; _this$ = ecx

; 170  : 		return m_iGridSize;

	mov	eax, DWORD PTR [ecx+4028]

; 171  : 	}

	ret	0
?numPlots@CvMap@@QBEHXZ ENDP				; CvMap::numPlots
_TEXT	ENDS
PUBLIC	?getGridWidth@CvMap@@QBEHXZ			; CvMap::getGridWidth
; Function compile flags: /Ogtpy
;	COMDAT ?getGridWidth@CvMap@@QBEHXZ
_TEXT	SEGMENT
?getGridWidth@CvMap@@QBEHXZ PROC			; CvMap::getGridWidth, COMDAT
; _this$ = ecx

; 198  : 		return m_iGridWidth;

	mov	eax, DWORD PTR [ecx+4020]

; 199  : 	}

	ret	0
?getGridWidth@CvMap@@QBEHXZ ENDP			; CvMap::getGridWidth
_TEXT	ENDS
PUBLIC	?getGridHeight@CvMap@@QBEHXZ			; CvMap::getGridHeight
; Function compile flags: /Ogtpy
;	COMDAT ?getGridHeight@CvMap@@QBEHXZ
_TEXT	SEGMENT
?getGridHeight@CvMap@@QBEHXZ PROC			; CvMap::getGridHeight, COMDAT
; _this$ = ecx

; 206  : 		return m_iGridHeight;

	mov	eax, DWORD PTR [ecx+4024]

; 207  : 	}

	ret	0
?getGridHeight@CvMap@@QBEHXZ ENDP			; CvMap::getGridHeight
_TEXT	ENDS
PUBLIC	?isWrapX@CvMap@@QBE_NXZ				; CvMap::isWrapX
; Function compile flags: /Ogtpy
;	COMDAT ?isWrapX@CvMap@@QBE_NXZ
_TEXT	SEGMENT
?isWrapX@CvMap@@QBE_NXZ PROC				; CvMap::isWrapX, COMDAT
; _this$ = ecx

; 228  : 		return m_bWrapX;

	mov	al, BYTE PTR [ecx+4056]

; 229  : 	}

	ret	0
?isWrapX@CvMap@@QBE_NXZ ENDP				; CvMap::isWrapX
_TEXT	ENDS
PUBLIC	?isWrapY@CvMap@@QBE_NXZ				; CvMap::isWrapY
; Function compile flags: /Ogtpy
;	COMDAT ?isWrapY@CvMap@@QBE_NXZ
_TEXT	SEGMENT
?isWrapY@CvMap@@QBE_NXZ PROC				; CvMap::isWrapY, COMDAT
; _this$ = ecx

; 233  : 		return m_bWrapY;

	mov	al, BYTE PTR [ecx+4057]

; 234  : 	}

	ret	0
?isWrapY@CvMap@@QBE_NXZ ENDP				; CvMap::isWrapY
_TEXT	ENDS
PUBLIC	?plotByIndex@CvMap@@QBEPAVCvPlot@@H@Z		; CvMap::plotByIndex
; Function compile flags: /Ogtpy
;	COMDAT ?plotByIndex@CvMap@@QBEPAVCvPlot@@H@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?plotByIndex@CvMap@@QBEPAVCvPlot@@H@Z PROC		; CvMap::plotByIndex, COMDAT
; _this$ = ecx

; 263  : 		return (((iIndex >= 0) && (iIndex < (numPlots()))) ? &(m_pMapPlots[iIndex]) : NULL);

	mov	eax, DWORD PTR _iIndex$[esp-4]
	test	eax, eax
	jl	SHORT $LN3@plotByInde
	cmp	eax, DWORD PTR [ecx+4028]
	jge	SHORT $LN3@plotByInde
	imul	eax, 484				; 000001e4H
	add	eax, DWORD PTR [ecx+4068]

; 264  : 	}

	ret	4
$LN3@plotByInde:

; 263  : 		return (((iIndex >= 0) && (iIndex < (numPlots()))) ? &(m_pMapPlots[iIndex]) : NULL);

	xor	eax, eax

; 264  : 	}

	ret	4
?plotByIndex@CvMap@@QBEPAVCvPlot@@H@Z ENDP		; CvMap::plotByIndex
_TEXT	ENDS
PUBLIC	??_7ICvMap1@@6B@				; ICvMap1::`vftable'
PUBLIC	??0ICvMap1@@QAE@XZ				; ICvMap1::ICvMap1
PUBLIC	??_R4ICvMap1@@6B@				; ICvMap1::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICvMap1@@6B@
rdata$r	SEGMENT
??_R4ICvMap1@@6B@ DD 00H				; ICvMap1::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVICvMap1@@@8
	DD	FLAT:??_R3ICvMap1@@8
rdata$r	ENDS
;	COMDAT ??_7ICvMap1@@6B@
CONST	SEGMENT
??_7ICvMap1@@6B@ DD FLAT:??_R4ICvMap1@@6B@		; ICvMap1::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0ICvMap1@@QAE@XZ
_TEXT	SEGMENT
??0ICvMap1@@QAE@XZ PROC					; ICvMap1::ICvMap1, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7ICvMap1@@6B@
	ret	0
??0ICvMap1@@QAE@XZ ENDP					; ICvMap1::ICvMap1
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllmap.cpp
_TEXT	ENDS
;	COMDAT ?QueryInterface@CvDllMap@@UAGPAXU_GUID@@@Z
_TEXT	SEGMENT
$T218872 = -16						; size = 16
$T218870 = -16						; size = 16
_this$ = 8						; size = 4
_guidInterface$ = 12					; size = 16
?QueryInterface@CvDllMap@@UAGPAXU_GUID@@@Z PROC		; CvDllMap::QueryInterface, COMDAT

; 30   : {

	sub	esp, 16					; 00000010H

; 31   : 	if(guidInterface == ICvUnknown::GetInterfaceId() ||
; 32   : 	        guidInterface == ICvMap1::GetInterfaceId())

	mov	ecx, DWORD PTR _guidICvUnknown+4
	mov	edx, DWORD PTR _guidICvUnknown+8
	mov	eax, DWORD PTR _guidICvUnknown
	mov	DWORD PTR $T218870[esp+20], ecx
	lea	ecx, DWORD PTR $T218870[esp+16]
	mov	DWORD PTR $T218870[esp+24], edx
	mov	DWORD PTR $T218870[esp+16], eax
	mov	eax, DWORD PTR _guidICvUnknown+12
	push	ecx
	lea	edx, DWORD PTR _guidInterface$[esp+16]
	push	edx
	mov	DWORD PTR $T218870[esp+36], eax
	call	_IsEqualGUID
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@QueryInter
	mov	ecx, DWORD PTR _guidICvMap1+4
	mov	edx, DWORD PTR _guidICvMap1+8
	mov	eax, DWORD PTR _guidICvMap1
	mov	DWORD PTR $T218872[esp+20], ecx
	lea	ecx, DWORD PTR $T218872[esp+16]
	mov	DWORD PTR $T218872[esp+24], edx
	mov	DWORD PTR $T218872[esp+16], eax
	mov	eax, DWORD PTR _guidICvMap1+12
	push	ecx
	lea	edx, DWORD PTR _guidInterface$[esp+16]
	push	edx
	mov	DWORD PTR $T218872[esp+36], eax
	call	_IsEqualGUID
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@QueryInter

; 35   : 		return this;
; 36   : 	}
; 37   : 
; 38   : 	return NULL;
; 39   : }

	add	esp, 16					; 00000010H
	ret	20					; 00000014H
$LN1@QueryInter:

; 33   : 	{
; 34   : 		IncrementReference();

	mov	eax, DWORD PTR _this$[esp+12]
	inc	DWORD PTR [eax+4]

; 35   : 		return this;
; 36   : 	}
; 37   : 
; 38   : 	return NULL;
; 39   : }

	add	esp, 16					; 00000010H
	ret	20					; 00000014H
?QueryInterface@CvDllMap@@UAGPAXU_GUID@@@Z ENDP		; CvDllMap::QueryInterface
_TEXT	ENDS
PUBLIC	??_GCvDllMap@@QAEPAXI@Z				; CvDllMap::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_GCvDllMap@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCvDllMap@@QAEPAXI@Z PROC				; CvDllMap::`scalar deleting destructor', COMDAT
; _this$ = ecx
	test	BYTE PTR ___flags$[esp-4], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7CvDllMap@@6B@
	je	SHORT $LN8@scalar
	push	esi
	call	?Free@CvDllGameContext@@SAXPAX@Z	; CvDllGameContext::Free
	add	esp, 4
$LN8@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_GCvDllMap@@QAEPAXI@Z ENDP				; CvDllMap::`scalar deleting destructor'
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?NumPlots@CvDllMap@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?NumPlots@CvDllMap@@UBGHXZ PROC				; CvDllMap::NumPlots, COMDAT

; 133  : 	return m_pMap->numPlots();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [ecx+4028]

; 134  : }

	ret	4
?NumPlots@CvDllMap@@UBGHXZ ENDP				; CvDllMap::NumPlots
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetGridWidth@CvDllMap@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetGridWidth@CvDllMap@@UBGHXZ PROC			; CvDllMap::GetGridWidth, COMDAT

; 143  : 	return m_pMap->getGridWidth();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [ecx+4020]

; 144  : }

	ret	4
?GetGridWidth@CvDllMap@@UBGHXZ ENDP			; CvDllMap::GetGridWidth
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetGridHeight@CvDllMap@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetGridHeight@CvDllMap@@UBGHXZ PROC			; CvDllMap::GetGridHeight, COMDAT

; 148  : 	return m_pMap->getGridHeight();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [ecx+4024]

; 149  : }

	ret	4
?GetGridHeight@CvDllMap@@UBGHXZ ENDP			; CvDllMap::GetGridHeight
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?IsWrapX@CvDllMap@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsWrapX@CvDllMap@@UBG_NXZ PROC				; CvDllMap::IsWrapX, COMDAT

; 153  : 	return m_pMap->isWrapX();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	mov	al, BYTE PTR [ecx+4056]

; 154  : }

	ret	4
?IsWrapX@CvDllMap@@UBG_NXZ ENDP				; CvDllMap::IsWrapX
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?IsWrapY@CvDllMap@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsWrapY@CvDllMap@@UBG_NXZ PROC				; CvDllMap::IsWrapY, COMDAT

; 158  : 	return m_pMap->isWrapY();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	mov	al, BYTE PTR [ecx+4057]

; 159  : }

	ret	4
?IsWrapY@CvDllMap@@UBG_NXZ ENDP				; CvDllMap::IsWrapY
_TEXT	ENDS
EXTRN	??3CvDllPlot@@SAXPAX@Z:PROC			; CvDllPlot::operator delete
EXTRN	??0CvDllPlot@@QAE@PAVCvPlot@@@Z:PROC		; CvDllPlot::CvDllPlot
EXTRN	??2CvDllPlot@@SAPAXI@Z:PROC			; CvDllPlot::operator new
;	COMDAT xdata$x
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
xdata$x	SEGMENT
__unwindtable$?GetPlotByIndex@CvDllMap@@UBGPAVICvPlot1@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPlotByIndex@CvDllMap@@UBGPAVICvPlot1@@H@Z$0
__ehfuncinfo$?GetPlotByIndex@CvDllMap@@UBGPAVICvPlot1@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetPlotByIndex@CvDllMap@@UBGPAVICvPlot1@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllmap.cpp
xdata$x	ENDS
;	COMDAT ?GetPlotByIndex@CvDllMap@@UBGPAVICvPlot1@@H@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
$T218940 = 8						; size = 4
_this$ = 8						; size = 4
_iIndex$ = 12						; size = 4
?GetPlotByIndex@CvDllMap@@UBGPAVICvPlot1@@H@Z PROC	; CvDllMap::GetPlotByIndex, COMDAT

; 162  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetPlotByIndex@CvDllMap@@UBGPAVICvPlot1@@H@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 163  : 	if (m_pMap->numPlots() != 0)

	mov	eax, DWORD PTR _this$[esp+8]
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [ecx+4028]
	push	esi
	test	eax, eax
	je	SHORT $LN1@GetPlotByI

; 164  : 	{
; 165  : 		CvPlot* pkPlot = m_pMap->plotByIndex(iIndex);

	mov	eax, DWORD PTR _iIndex$[esp+12]
	test	eax, eax
	jl	SHORT $LN1@GetPlotByI
	cmp	eax, DWORD PTR [ecx+4028]
	jge	SHORT $LN1@GetPlotByI
	imul	eax, 484				; 000001e4H
	add	eax, DWORD PTR [ecx+4068]
	mov	esi, eax

; 166  : 		return (NULL != pkPlot)? new CvDllPlot(pkPlot) : NULL;

	je	SHORT $LN1@GetPlotByI
	push	12					; 0000000cH
	call	??2CvDllPlot@@SAPAXI@Z			; CvDllPlot::operator new
	add	esp, 4
	mov	DWORD PTR $T218940[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN1@GetPlotByI
	push	esi
	mov	ecx, eax
	call	??0CvDllPlot@@QAE@PAVCvPlot@@@Z		; CvDllPlot::CvDllPlot

; 167  : 	}
; 168  : 	return NULL;
; 169  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN1@GetPlotByI:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetPlotByIndex@CvDllMap@@UBGPAVICvPlot1@@H@Z$0:
	mov	eax, DWORD PTR $T218940[ebp-4]
	push	eax
	call	??3CvDllPlot@@SAXPAX@Z			; CvDllPlot::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetPlotByIndex@CvDllMap@@UBGPAVICvPlot1@@H@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetPlotByIndex@CvDllMap@@UBGPAVICvPlot1@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetPlotByIndex@CvDllMap@@UBGPAVICvPlot1@@H@Z ENDP	; CvDllMap::GetPlotByIndex
PUBLIC	?isPlot@CvMap@@QBEHHH@Z				; CvMap::isPlot
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
;	COMDAT ?isPlot@CvMap@@QBEHHH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?isPlot@CvMap@@QBEHHH@Z PROC				; CvMap::isPlot, COMDAT
; _this$ = ecx

; 157  : #ifdef AUI_WARNING_FIXES
; 158  : 		return ((iX >= 0) && (uint(iX) < getGridWidth()) && (iY >= 0) && (uint(iY) < getGridHeight()));
; 159  : #else
; 160  : 		return ((iX >= 0) && (iX < getGridWidth()) && (iY >= 0) && (iY < getGridHeight()));

	mov	eax, DWORD PTR _iX$[esp-4]
	test	eax, eax
	jl	SHORT $LN3@isPlot
	cmp	eax, DWORD PTR [ecx+4020]
	jge	SHORT $LN3@isPlot
	mov	eax, DWORD PTR _iY$[esp-4]
	test	eax, eax
	jl	SHORT $LN3@isPlot
	cmp	eax, DWORD PTR [ecx+4024]
	jge	SHORT $LN3@isPlot
	mov	eax, 1

; 161  : #endif
; 162  : 	}

	ret	8
$LN3@isPlot:

; 157  : #ifdef AUI_WARNING_FIXES
; 158  : 		return ((iX >= 0) && (uint(iX) < getGridWidth()) && (iY >= 0) && (uint(iY) < getGridHeight()));
; 159  : #else
; 160  : 		return ((iX >= 0) && (iX < getGridWidth()) && (iY >= 0) && (iY < getGridHeight()));

	xor	eax, eax

; 161  : #endif
; 162  : 	}

	ret	8
?isPlot@CvMap@@QBEHHH@Z ENDP				; CvMap::isPlot
_TEXT	ENDS
PUBLIC	?plotNum@CvMap@@QBEHHH@Z			; CvMap::plotNum
; Function compile flags: /Ogtpy
;	COMDAT ?plotNum@CvMap@@QBEHHH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?plotNum@CvMap@@QBEHHH@Z PROC				; CvMap::plotNum, COMDAT
; _this$ = ecx

; 183  : 		return ((iY * getGridWidth()) + iX);

	mov	eax, DWORD PTR [ecx+4020]
	imul	eax, DWORD PTR _iY$[esp-4]
	add	eax, DWORD PTR _iX$[esp-4]

; 184  : #endif
; 185  : 	}

	ret	8
?plotNum@CvMap@@QBEHHH@Z ENDP				; CvMap::plotNum
_TEXT	ENDS
PUBLIC	?plot@CvMap@@QBEPAVCvPlot@@HH@Z			; CvMap::plot
; Function compile flags: /Ogtpy
;	COMDAT ?plot@CvMap@@QBEPAVCvPlot@@HH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?plot@CvMap@@QBEPAVCvPlot@@HH@Z PROC			; CvMap::plot, COMDAT
; _this$ = ecx

; 273  : 		if((iX == INVALID_PLOT_COORD) || (iY == INVALID_PLOT_COORD))

	mov	eax, DWORD PTR _iX$[esp-4]
	push	ebp
	cmp	eax, -2147483647			; 80000001H
	je	$LN1@plot
	mov	ebp, DWORD PTR _iY$[esp]
	cmp	ebp, -2147483647			; 80000001H
	je	$LN1@plot

; 276  : 		}
; 277  : 		int iMapX = coordRange(iX, getGridWidth(), isWrapX());

	cmp	BYTE PTR [ecx+4056], 0
	push	ebx
	push	esi
	mov	esi, DWORD PTR [ecx+4020]
	push	edi
	je	SHORT $LN11@plot
	test	eax, eax
	jge	SHORT $LN13@plot
	cdq
	idiv	esi
	mov	edi, edx
	add	edi, esi
	jmp	SHORT $LN15@plot
$LN13@plot:
	cmp	eax, esi
	jl	SHORT $LN11@plot
	cdq
	idiv	esi
	mov	edi, edx
	jmp	SHORT $LN15@plot
$LN11@plot:
	mov	edi, eax
$LN15@plot:

; 278  : 		int iMapY = coordRange(iY, getGridHeight(), isWrapY());

	cmp	BYTE PTR [ecx+4057], 0
	mov	ebx, DWORD PTR [ecx+4024]
	je	SHORT $LN40@plot
	test	ebp, ebp
	jge	SHORT $LN23@plot
	mov	eax, ebp
	cdq
	idiv	ebx
	add	edx, ebx
	jmp	SHORT $LN25@plot
$LN23@plot:
	cmp	ebp, ebx
	jl	SHORT $LN40@plot
	mov	eax, ebp
	cdq
	idiv	ebx
	jmp	SHORT $LN25@plot
$LN40@plot:
	mov	edx, ebp
$LN25@plot:

; 279  : 		return ((isPlot(iMapX, iMapY)) ? &(m_pMapPlots[plotNum(iMapX, iMapY)]) : NULL);

	test	edi, edi
	jl	SHORT $LN5@plot
	cmp	edi, esi
	jge	SHORT $LN5@plot
	test	edx, edx
	jl	SHORT $LN5@plot
	cmp	edx, ebx
	jge	SHORT $LN5@plot
	imul	esi, edx
	add	esi, edi
	imul	esi, 484				; 000001e4H
	add	esi, DWORD PTR [ecx+4068]
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	pop	ebp

; 280  : 	}

	ret	8
$LN5@plot:
	pop	edi
	pop	esi
	pop	ebx

; 279  : 		return ((isPlot(iMapX, iMapY)) ? &(m_pMapPlots[plotNum(iMapX, iMapY)]) : NULL);

	xor	eax, eax
	pop	ebp

; 280  : 	}

	ret	8
$LN1@plot:

; 274  : 		{
; 275  : 			return NULL;

	xor	eax, eax
	pop	ebp

; 280  : 	}

	ret	8
?plot@CvMap@@QBEPAVCvPlot@@HH@Z ENDP			; CvMap::plot
_TEXT	ENDS
PUBLIC	??0CvDllMap@@QAE@PAVCvMap@@@Z			; CvDllMap::CvDllMap
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllmap.cpp
;	COMDAT ??0CvDllMap@@QAE@PAVCvMap@@@Z
_TEXT	SEGMENT
_pMap$ = 8						; size = 4
??0CvDllMap@@QAE@PAVCvMap@@@Z PROC			; CvDllMap::CvDllMap, COMDAT
; _this$ = ecx

; 22   : {

	mov	eax, ecx
	mov	ecx, DWORD PTR _pMap$[esp-4]
	mov	DWORD PTR [eax], OFFSET ??_7CvDllMap@@6B@
	mov	DWORD PTR [eax+4], 1
	mov	DWORD PTR [eax+8], ecx

; 23   : }

	ret	4
??0CvDllMap@@QAE@PAVCvMap@@@Z ENDP			; CvDllMap::CvDllMap
_TEXT	ENDS
PUBLIC	?DecrementReference@CvDllMap@@QAEIXZ		; CvDllMap::DecrementReference
; Function compile flags: /Ogtpy
;	COMDAT ?DecrementReference@CvDllMap@@QAEIXZ
_TEXT	SEGMENT
?DecrementReference@CvDllMap@@QAEIXZ PROC		; CvDllMap::DecrementReference, COMDAT
; _this$ = ecx

; 49   : 	if(m_uiRefCount == 1)

	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, 1
	jne	SHORT $LN2@DecrementR

; 50   : 	{
; 51   : 		delete this;

	push	ecx
	mov	DWORD PTR [ecx], OFFSET ??_7CvDllMap@@6B@
	call	?Free@CvDllGameContext@@SAXPAX@Z	; CvDllGameContext::Free
	add	esp, 4

; 52   : 		return 0;

	xor	eax, eax

; 57   : 		return m_uiRefCount;
; 58   : 	}
; 59   : }

	ret	0
$LN2@DecrementR:

; 53   : 	}
; 54   : 	else
; 55   : 	{
; 56   : 		--m_uiRefCount;

	dec	eax
	mov	DWORD PTR [ecx+4], eax

; 57   : 		return m_uiRefCount;
; 58   : 	}
; 59   : }

	ret	0
?DecrementReference@CvDllMap@@QAEIXZ ENDP		; CvDllMap::DecrementReference
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Destroy@CvDllMap@@EAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Destroy@CvDllMap@@EAGXXZ PROC				; CvDllMap::Destroy, COMDAT

; 68   : 	DecrementReference();

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, 1
	jne	SHORT $LN4@Destroy
	push	eax
	mov	DWORD PTR [eax], OFFSET ??_7CvDllMap@@6B@
	call	?Free@CvDllGameContext@@SAXPAX@Z	; CvDllGameContext::Free
	add	esp, 4

; 69   : }

	ret	4

; 68   : 	DecrementReference();

$LN4@Destroy:
	dec	ecx
	mov	DWORD PTR [eax+4], ecx

; 69   : }

	ret	4
?Destroy@CvDllMap@@EAGXXZ ENDP				; CvDllMap::Destroy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?PlotNum@CvDllMap@@UBGHHH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iX$ = 12						; size = 4
_iY$ = 16						; size = 4
?PlotNum@CvDllMap@@UBGHHH@Z PROC			; CvDllMap::PlotNum, COMDAT

; 138  : 	return m_pMap->plotNum(iX, iY);

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [ecx+4020]
	imul	eax, DWORD PTR _iY$[esp-4]
	add	eax, DWORD PTR _iX$[esp-4]

; 139  : }

	ret	12					; 0000000cH
?PlotNum@CvDllMap@@UBGHHH@Z ENDP			; CvDllMap::PlotNum
_TEXT	ENDS
;	COMDAT xdata$x
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
xdata$x	SEGMENT
__unwindtable$?GetPlot@CvDllMap@@UBGPAVICvPlot1@@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPlot@CvDllMap@@UBGPAVICvPlot1@@HH@Z$0
__ehfuncinfo$?GetPlot@CvDllMap@@UBGPAVICvPlot1@@HH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetPlot@CvDllMap@@UBGPAVICvPlot1@@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllmap.cpp
xdata$x	ENDS
;	COMDAT ?GetPlot@CvDllMap@@UBGPAVICvPlot1@@HH@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
$T219140 = 8						; size = 4
_this$ = 8						; size = 4
_iX$ = 12						; size = 4
_iY$ = 16						; size = 4
?GetPlot@CvDllMap@@UBGPAVICvPlot1@@HH@Z PROC		; CvDllMap::GetPlot, COMDAT

; 172  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetPlot@CvDllMap@@UBGPAVICvPlot1@@HH@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 173  : 	if (m_pMap->numPlots() != 0)

	mov	eax, DWORD PTR _this$[esp+8]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [ebp+4028]
	push	esi
	push	edi
	test	eax, eax
	je	$LN1@GetPlot

; 174  : 	{
; 175  : 		CvPlot* pkPlot = m_pMap->plot(iX, iY);

	mov	eax, DWORD PTR _iX$[esp+24]
	cmp	eax, -2147483647			; 80000001H
	je	$LN1@GetPlot
	mov	ebx, DWORD PTR _iY$[esp+24]
	cmp	ebx, -2147483647			; 80000001H
	je	$LN1@GetPlot
	mov	dl, BYTE PTR [ebp+4056]
	mov	ecx, DWORD PTR [ebp+4020]
	test	dl, dl
	je	SHORT $LN21@GetPlot
	test	eax, eax
	jge	SHORT $LN23@GetPlot
	cdq
	idiv	ecx
	mov	esi, edx
	add	esi, ecx
	jmp	SHORT $LN25@GetPlot
$LN23@GetPlot:
	cmp	eax, ecx
	jl	SHORT $LN21@GetPlot
	cdq
	idiv	ecx
	mov	esi, edx
	jmp	SHORT $LN25@GetPlot
$LN21@GetPlot:
	mov	esi, eax
$LN25@GetPlot:
	mov	al, BYTE PTR [ebp+4057]
	mov	edi, DWORD PTR [ebp+4024]
	test	al, al
	je	SHORT $LN50@GetPlot
	test	ebx, ebx
	jge	SHORT $LN33@GetPlot
	mov	eax, ebx
	cdq
	idiv	edi
	add	edx, edi
	jmp	SHORT $LN35@GetPlot
$LN33@GetPlot:
	cmp	ebx, edi
	jl	SHORT $LN50@GetPlot
	mov	eax, ebx
	cdq
	idiv	edi
	jmp	SHORT $LN35@GetPlot
$LN50@GetPlot:
	mov	edx, ebx
$LN35@GetPlot:
	test	esi, esi
	jl	SHORT $LN1@GetPlot
	cmp	esi, ecx
	jge	SHORT $LN1@GetPlot
	test	edx, edx
	jl	SHORT $LN1@GetPlot
	cmp	edx, edi
	jge	SHORT $LN1@GetPlot
	imul	ecx, edx
	add	ecx, esi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [ebp+4068]
	mov	esi, ecx

; 176  : 		return (NULL != pkPlot)? new CvDllPlot(pkPlot) : NULL;

	je	SHORT $LN1@GetPlot
	push	12					; 0000000cH
	call	??2CvDllPlot@@SAPAXI@Z			; CvDllPlot::operator new
	add	esp, 4
	mov	DWORD PTR $T219140[esp+24], eax
	mov	DWORD PTR __$EHRec$[esp+36], 0
	test	eax, eax
	je	SHORT $LN1@GetPlot
	push	esi
	mov	ecx, eax
	call	??0CvDllPlot@@QAE@PAVCvPlot@@@Z		; CvDllPlot::CvDllPlot

; 177  : 	}
; 178  : 	return NULL;
; 179  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 12					; 0000000cH
	ret	12					; 0000000cH
$LN1@GetPlot:
	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 12					; 0000000cH
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetPlot@CvDllMap@@UBGPAVICvPlot1@@HH@Z$0:
	mov	eax, DWORD PTR $T219140[ebp-4]
	push	eax
	call	??3CvDllPlot@@SAXPAX@Z			; CvDllPlot::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetPlot@CvDllMap@@UBGPAVICvPlot1@@HH@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetPlot@CvDllMap@@UBGPAVICvPlot1@@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetPlot@CvDllMap@@UBGPAVICvPlot1@@HH@Z ENDP		; CvDllMap::GetPlot
END
