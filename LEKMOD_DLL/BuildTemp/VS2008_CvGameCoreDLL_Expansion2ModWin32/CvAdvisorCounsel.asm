; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\EnormousApplePie\Documents\GitHub\Lekmod\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvAdvisorCounsel.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?NO_QUEST_DATA@CvMinorCivQuest@@2HB		; CvMinorCivQuest::NO_QUEST_DATA
PUBLIC	?NO_TURN@CvMinorCivQuest@@2HB			; CvMinorCivQuest::NO_TURN
CONST	SEGMENT
$SG223841 DB	'TXT_KEY_BUILD_A_CITY_MCFLY_ECONOMIC', 00H
$SG223843 DB	'TXT_KEY_BUILD_A_CITY_MCFLY_MILITARY', 00H
$SG223845 DB	'TXT_KEY_BUILD_A_CITY_MCFLY_SCIENCE', 00H
	ORG $+1
$SG223847 DB	'TXT_KEY_BUILD_A_CITY_MCFLY_FOREIGN', 00H
	ORG $+1
$SG223913 DB	'FLAVOR_SCIENCE', 00H
	ORG $+1
$SG223932 DB	'TXT_KEY_TECHSTRATEGY_CIV_BONUS_UNIT', 00H
$SG223940 DB	'TXT_KEY_TECHSTRATEGY_CIV_BONUS_BUILDING', 00H
$SG223948 DB	'TXT_KEY_TECHSTRATEGY_CIV_BONUS_IMPROVEMENT', 00H
	ORG $+1
$SG223956 DB	'TXT_KEY_TECHSTRATEGY_CIV_BONUS', 00H
	ORG $+1
$SG223963 DB	'TXT_KEY_TECHSTRATEGY_RESOURCE', 00H
	ORG $+2
$SG223990 DB	'TXT_KEY_SCIENCESTRATEGY_TECH_THAT_PROVIDES_SCIENCE_BUILD'
	DB	'ING_3', 00H
	ORG $+2
$SG223997 DB	'TXT_KEY_SCIENCESTRATEGY_TECH_THAT_PROVIDES_SCIENCE_BUILD'
	DB	'ING_2', 00H
	ORG $+2
$SG224003 DB	'TXT_KEY_SCIENCESTRATEGY_TECH_THAT_PROVIDES_SCIENCE_BUILD'
	DB	'ING_1', 00H
	ORG $+2
$SG224044 DB	'TXT_KEY_SCIENCESTRATEGY_RESEARCH_MILITARY_UNITS', 00H
$SG224051 DB	'TXT_KEY_SCIENCESTRATEGY_RESEARCH_MILITARY_BUILDING', 00H
	ORG $+1
$SG224065 DB	'TXT_KEY_SCIENCESTRATEGY_INFO_DOING_POORLY', 00H
	ORG $+2
$SG224069 DB	'TXT_KEY_SCIENCESTRATEGY_INFO_DOING_WELL', 00H
$SG224072 DB	'TXT_KEY_SCIENCESTRATEGY_INFO', 00H
	ORG $+3
$SG224075 DB	'TXT_KEY_SCIENCESTRATEGY_BANKRUPT', 00H
	ORG $+3
$SG224103 DB	'TXT_KEY_DIPLOSTRATEGY_WARPROJECTION_DESTRUCTION_WAR', 00H
$SG224109 DB	'TXT_KEY_DIPLOSTRATEGY_WARPROJECTION_DEFEAT_WAR', 00H
	ORG $+1
$SG224115 DB	'TXT_KEY_DIPLOSTRATEGY_WARPROJECTION_STALEMATE_WAR', 00H
	ORG $+2
$SG224121 DB	'TXT_KEY_DIPLOSTRATEGY_WARPROJECTION_GOOD_WAR', 00H
	ORG $+3
$SG224127 DB	'TXT_KEY_DIPLOSTRATEGY_WARPROJECTION_VERY_GOOD_WAR', 00H
	ORG $+2
$SG224138 DB	'TXT_KEY_DIPLOSTRATEGY_MILITARY_STRENGTH_COMPARED_TO_US_P'
	DB	'ATHETIC', 00H
$SG224144 DB	'TXT_KEY_DIPLOSTRATEGY_MILITARY_STRENGTH_COMPARED_TO_US_W'
	DB	'EAK', 00H
$SG224150 DB	'TXT_KEY_DIPLOSTRATEGY_MILITARY_STRENGTH_COMPARED_TO_US_P'
	DB	'OOR', 00H
$SG224156 DB	'TXT_KEY_DIPLOSTRATEGY_MILITARY_STRENGTH_COMPARED_TO_US_A'
	DB	'VERAGE', 00H
	ORG $+1
$SG224162 DB	'TXT_KEY_DIPLOSTRATEGY_MILITARY_STRENGTH_COMPARED_TO_US_S'
	DB	'TRONG', 00H
	ORG $+2
$SG224168 DB	'TXT_KEY_DIPLOSTRATEGY_MILITARY_STRENGTH_COMPARED_TO_US_P'
	DB	'OWERFUL', 00H
$SG224174 DB	'TXT_KEY_DIPLOSTRATEGY_MILITARY_STRENGTH_COMPARED_TO_US_I'
	DB	'MMENSE', 00H
	ORG $+1
$SG224188 DB	'TXT_KEY_DIPLOSTRATEGY_MILITARY_AGGRESSIVE_POSTURE_MEDIUM'
	DB	00H
	ORG $+3
$SG224194 DB	'TXT_KEY_DIPLOSTRATEGY_MILITARY_AGGRESSIVE_POSTURE_HIGH', 00H
	ORG $+1
$SG224200 DB	'TXT_KEY_DIPLOSTRATEGY_MILITARY_AGGRESSIVE_POSTURE_INCRED'
	DB	'IBLE', 00H
	ORG $+3
$SG224214 DB	'TXT_KEY_DIPLOSTRATEGY_EXPANSION_AGGRESSIVE_POSTURE_MEDIU'
	DB	'M', 00H
	ORG $+2
$SG224220 DB	'TXT_KEY_DIPLOSTRATEGY_EXPANSION_AGGRESSIVE_POSTURE_HIGH', 00H
$SG224226 DB	'TXT_KEY_DIPLOSTRATEGY_EXPANSION_AGGRESSIVE_POSTURE_INCRE'
	DB	'DIBLE', 00H
	ORG $+2
$SG224238 DB	'TXT_KEY_DIPLOSTRATEGY_WARMONGER_THREAT_NONE', 00H
$SG224244 DB	'TXT_KEY_DIPLOSTRATEGY_WARMONGER_THREAT_MINOR', 00H
	ORG $+3
$SG224250 DB	'TXT_KEY_DIPLOSTRATEGY_WARMONGER_THREAT_MAJOR', 00H
	ORG $+3
$SG224256 DB	'TXT_KEY_DIPLOSTRATEGY_WARMONGER_THREAT_SEVERE', 00H
	ORG $+2
$SG224262 DB	'TXT_KEY_DIPLOSTRATEGY_WARMONGER_THREAT_CRITICAL', 00H
$SG224292 DB	'TXT_KEY_DIPLOSTRATEGY_MINOR_CIV_DISPUTE_LEVEL_WEAK', 00H
	ORG $+1
$SG224303 DB	'TXT_KEY_DIPLOSTRATEGY_MINOR_CIV_DISPUTE_LEVEL_STRONG', 00H
	ORG $+3
$SG224314 DB	'TXT_KEY_DIPLOSTRATEGY_MINOR_CIV_DISPUTE_LEVEL_FIERCE', 00H
	ORG $+3
$SG224363 DB	'TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_DOWN_UNIT_MAINTE'
	DB	'NANCE', 00H
	ORG $+2
$SG224366 DB	'TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_DOWN_UNIT_SUPPLY'
	DB	00H
	ORG $+7
$SG224369 DB	'TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_DOWN_BUILDING_MA'
	DB	'INTENANCE', 00H
	ORG $+2
$SG224372 DB	'TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_DOWN_DIPLOMACY', 00H
	ORG $+5
$SG224375 DB	'TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_DOWN_IMPROVEMENT'
	DB	'_MAINTENANCE', 00H
	ORG $+3
$SG224378 DB	'TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_DOWN', 00H
	ORG $+3
$SG224386 DB	'TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_UP_UNIT_MAINTENA'
	DB	'NCE', 00H
$SG224389 DB	'TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_UP_UNIT_SUPPLY', 00H
	ORG $+5
$SG224392 DB	'TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_UP_BUILDING_MAIN'
	DB	'TENANCE', 00H
$SG224395 DB	'TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_UP_IMPROVEMENT_M'
	DB	'AINTENANCE', 00H
	ORG $+1
$SG224398 DB	'TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_UP_DIPLOMACY', 00H
	ORG $+3
$SG224401 DB	'TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_UP', 00H
	ORG $+1
$SG224411 DB	'TXT_KEY_FINANCESTRATEGY_GOING_BROKE_UNIT_MAINTENANCE', 00H
	ORG $+3
$SG224414 DB	'TXT_KEY_FINANCESTRATEGY_GOING_BROKE_UNIT_SUPPLY', 00H
$SG224417 DB	'TXT_KEY_FINANCESTRATEGY_GOING_BROKE_BUILDING_MAINTENANCE'
	DB	00H
	ORG $+3
$SG224420 DB	'TXT_KEY_FINANCESTRATEGY_GOING_BROKE_IMPROVEMENT_MAINTENA'
	DB	'NCE', 00H
$SG224423 DB	'TXT_KEY_FINANCESTRATEGY_GOING_BROKE_DIPLOMACY', 00H
	ORG $+2
$SG224426 DB	'TXT_KEY_FINANCESTRATEGY_GOING_BROKE', 00H
$SG224434 DB	'TXT_KEY_FINANCESTRATEGY_LOSING_MONEY_UNIT_MAINTENANCE', 00H
	ORG $+2
$SG224437 DB	'TXT_KEY_FINANCESTRATEGY_LOSING_MONEY_UNIT_SUPPLY', 00H
	ORG $+3
$SG224440 DB	'TXT_KEY_FINANCESTRATEGY_LOSING_MONEY_BUILDING_MAINTENANC'
	DB	'E', 00H
	ORG $+2
$SG224443 DB	'TXT_KEY_FINANCESTRATEGY_LOSING_MONEY_IMPROVEMENT_MAINTEN'
	DB	'ANCE', 00H
	ORG $+3
$SG224446 DB	'TXT_KEY_FINANCESTRATEGY_LOSING_MONEY_DIPLOMACY', 00H
	ORG $+1
$SG224449 DB	'TXT_KEY_FINANCESTRATEGY_LOSING_MONEY', 00H
	ORG $+3
$SG224458 DB	'TXT_KEY_FINANCESTRATEGY_MAKING_MONEY_UNIT_MAINTENANCE', 00H
	ORG $+2
$SG224461 DB	'TXT_KEY_FINANCESTRATEGY_MAKING_MONEY_UNIT_SUPPLY', 00H
	ORG $+3
$SG224464 DB	'TXT_KEY_FINANCESTRATEGY_MAKING_MONEY_BUILDING_MAINTENANC'
	DB	'E', 00H
	ORG $+2
$SG224467 DB	'TXT_KEY_FINANCESTRATEGY_MAKING_MONEY_IMPROVEMENT_MAINTEN'
	DB	'ANCE', 00H
	ORG $+3
$SG224470 DB	'TXT_KEY_FINANCESTRATEGY_MAKING_MONEY_DIPLOMACY', 00H
	ORG $+1
$SG224473 DB	'TXT_KEY_FINANCESTRATEGY_MAKING_MONEY', 00H
	ORG $+3
$SG224506 DB	'TXT_KEY_DIPLOSTRATEGY_LIBERATE_CITY_STATE', 00H
	ORG $+2
$SG224516 DB	'TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_ALLY_WAR_WI'
	DB	'TH_MAJOR', 00H
	ORG $+3
$SG224521 DB	'TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_ALLY', 00H
	ORG $+2
$SG224527 DB	'TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_FRIENDSHIP_'
	DB	'WAR_WITH_MAJOR', 00H
	ORG $+1
$SG224532 DB	'TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_FRIENDSHIP', 00H
$SG224537 DB	'TXT_KEY_DIPLOSTRATEGY_BEFRIEND_CITY_STATE_WAR_WITH_MAJOR'
	DB	00H
	ORG $+3
$SG224561 DB	'BUILDINGCLASS_LIBRARY', 00H
	ORG $+2
$SG224563 DB	'BUILDINGCLASS_UNIVERSITY', 00H
	ORG $+3
$SG224565 DB	'BUILDINGCLASS_PUBLIC_SCHOOL', 00H
$SG224567 DB	'BUILDINGCLASS_LABORATORY', 00H
	ORG $+3
$SG224592 DB	'TXT_KEY_SCIENCESTRATEGY_RESEARCH_BUILDING_IN_BIG_CITY', 00H
	ORG $+2
$SG224647 DB	'TXT_KEY_CITYIMPROVEMENTSTRATEGY_PLUG_UP_RESOURCES_HAVE_Z'
	DB	'ERO', 00H
$SG224650 DB	'TXT_KEY_CITYIMPROVEMENTSTRATEGY_PLUG_UP_RESOURCES_HAVE_M'
	DB	'ORE', 00H
$SG224698 DB	'TXT_KEY_RESOURCESTRATEGY_TRADE_LUXURIES', 00H
$SG224702 DB	'TXT_KEY_RESOURCESTRATEGY_TRADE_STRATEGIC', 00H
	ORG $+3
$SG224730 DB	'TXT_KEY_BASESTRATEGY_NOTHING_TO_SAY_SCIENCE', 00H
$SG224733 DB	'TXT_KEY_BASESTRATEGY_NOTHING_TO_SAY_ECONOMIC', 00H
	ORG $+3
$SG224736 DB	'TXT_KEY_BASESTRATEGY_NOTHING_TO_SAY_MILITARY', 00H
	ORG $+3
$SG224739 DB	'TXT_KEY_BASESTRATEGY_NOTHING_TO_SAY_FOREIGN', 00H
CONST	ENDS
;	COMDAT ?NO_TURN@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_TURN@CvMinorCivQuest@@2HB DD 0ffffffffH		; CvMinorCivQuest::NO_TURN
CONST	ENDS
;	COMDAT ?NO_QUEST_DATA@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_QUEST_DATA@CvMinorCivQuest@@2HB DD 0ffffffffH	; CvMinorCivQuest::NO_QUEST_DATA
CONST	ENDS
PUBLIC	?CounselSort@@YA_NUCounsel@CvAdvisorCounsel@@0@Z ; CounselSort
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvadvisorcounsel.cpp
;	COMDAT ?CounselSort@@YA_NUCounsel@CvAdvisorCounsel@@0@Z
_TEXT	SEGMENT
_Counsel1$ = 8						; size = 520
_Counsel2$ = 528					; size = 520
?CounselSort@@YA_NUCounsel@CvAdvisorCounsel@@0@Z PROC	; CounselSort, COMDAT

; 58   : 	// if the advisors are different types
; 59   : 	if(Counsel1.m_eAdvisor != Counsel2.m_eAdvisor)

	mov	eax, DWORD PTR _Counsel1$[esp-4]
	mov	ecx, DWORD PTR _Counsel2$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN3@CounselSor

; 60   : 	{
; 61   : 		// adjust the advisor values so that empty values will be moved to the end of the list
; 62   : 		AdvisorTypes eCounselAdvisor1 = Counsel1.m_eAdvisor;
; 63   : 		AdvisorTypes eCounselAdvisor2 = Counsel2.m_eAdvisor;
; 64   : 		if(eCounselAdvisor1 == NO_ADVISOR_TYPE)

	cmp	eax, -1
	jne	SHORT $LN2@CounselSor

; 65   : 		{
; 66   : 			eCounselAdvisor1 = NUM_ADVISOR_TYPES;

	mov	eax, 4
$LN2@CounselSor:

; 67   : 		}
; 68   : 
; 69   : 		if(eCounselAdvisor2 == NO_ADVISOR_TYPE)

	cmp	ecx, -1
	jne	SHORT $LN1@CounselSor

; 70   : 		{
; 71   : 			eCounselAdvisor2 = NUM_ADVISOR_TYPES;

	mov	ecx, 4
$LN1@CounselSor:

; 72   : 		}
; 73   : 
; 74   : 		return eCounselAdvisor1 < eCounselAdvisor2;

	xor	edx, edx
	cmp	eax, ecx
	setl	dl
	mov	al, dl

; 78   : }

	ret	0
$LN3@CounselSor:

; 75   : 	}
; 76   : 
; 77   : 	return Counsel1.m_iValue > Counsel2.m_iValue;

	mov	ecx, DWORD PTR _Counsel1$[esp+512]
	xor	eax, eax
	cmp	ecx, DWORD PTR _Counsel2$[esp+512]
	setg	al

; 78   : }

	ret	0
?CounselSort@@YA_NUCounsel@CvAdvisorCounsel@@0@Z ENDP	; CounselSort
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[esp-4]

; 60   : 	}

	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??A?$BaseVector@H$00@@QAEAAHI@Z			; BaseVector<int,1>::operator[]
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??A?$BaseVector@H$00@@QAEAAHI@Z
_TEXT	SEGMENT
_ui$ = 8						; size = 4
??A?$BaseVector@H$00@@QAEAAHI@Z PROC			; BaseVector<int,1>::operator[], COMDAT
; _this$ = ecx

; 129  : 		FAssert(ui < m_uiCurrSize);
; 130  : 		return m_pData[ui];

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ui$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*4]

; 131  : 	};

	ret	4
??A?$BaseVector@H$00@@QAEAAHI@Z ENDP			; BaseVector<int,1>::operator[]
_TEXT	ENDS
PUBLIC	?size@?$BaseVector@H$00@@QBEIXZ			; BaseVector<int,1>::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$BaseVector@H$00@@QBEIXZ
_TEXT	SEGMENT
?size@?$BaseVector@H$00@@QBEIXZ PROC			; BaseVector<int,1>::size, COMDAT
; _this$ = ecx

; 169  : 		return m_uiCurrSize;

	mov	eax, DWORD PTR [ecx+4]

; 170  : 	};

	ret	0
?size@?$BaseVector@H$00@@QBEIXZ ENDP			; BaseVector<int,1>::size
_TEXT	ENDS
PUBLIC	??A?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QAEAAUCounsel@CvAdvisorCounsel@@I@Z ; BaseVector<CvAdvisorCounsel::Counsel,1>::operator[]
; Function compile flags: /Ogtpy
;	COMDAT ??A?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QAEAAUCounsel@CvAdvisorCounsel@@I@Z
_TEXT	SEGMENT
_ui$ = 8						; size = 4
??A?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QAEAAUCounsel@CvAdvisorCounsel@@I@Z PROC ; BaseVector<CvAdvisorCounsel::Counsel,1>::operator[], COMDAT
; _this$ = ecx

; 129  : 		FAssert(ui < m_uiCurrSize);
; 130  : 		return m_pData[ui];

	mov	eax, DWORD PTR _ui$[esp-4]
	imul	eax, 520				; 00000208H
	add	eax, DWORD PTR [ecx]

; 131  : 	};

	ret	4
??A?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QAEAAUCounsel@CvAdvisorCounsel@@I@Z ENDP ; BaseVector<CvAdvisorCounsel::Counsel,1>::operator[]
_TEXT	ENDS
PUBLIC	?size@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QBEIXZ ; BaseVector<CvAdvisorCounsel::Counsel,1>::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QBEIXZ
_TEXT	SEGMENT
?size@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QBEIXZ PROC ; BaseVector<CvAdvisorCounsel::Counsel,1>::size, COMDAT
; _this$ = ecx

; 169  : 		return m_uiCurrSize;

	mov	eax, DWORD PTR [ecx+4]

; 170  : 	};

	ret	0
?size@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QBEIXZ ENDP ; BaseVector<CvAdvisorCounsel::Counsel,1>::size
_TEXT	ENDS
PUBLIC	??1?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QAE@XZ ; BaseVector<CvAdvisorCounsel::Counsel,1>::~BaseVector<CvAdvisorCounsel::Counsel,1>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QAE@XZ
_TEXT	SEGMENT
??1?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QAE@XZ PROC ; BaseVector<CvAdvisorCounsel::Counsel,1>::~BaseVector<CvAdvisorCounsel::Counsel,1>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	ret	0
??1?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QAE@XZ ENDP ; BaseVector<CvAdvisorCounsel::Counsel,1>::~BaseVector<CvAdvisorCounsel::Counsel,1>
_TEXT	ENDS
PUBLIC	??0?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@IAE@XZ ; BaseVector<CvAdvisorCounsel::Counsel,1>::BaseVector<CvAdvisorCounsel::Counsel,1>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@IAE@XZ
_TEXT	SEGMENT
??0?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@IAE@XZ PROC ; BaseVector<CvAdvisorCounsel::Counsel,1>::BaseVector<CvAdvisorCounsel::Counsel,1>, COMDAT
; _this$ = ecx

; 216  : 	BaseVector() : m_uiCurrSize(0), m_uiCurrMaxSize(0), m_pData(NULL) {};

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@IAE@XZ ENDP ; BaseVector<CvAdvisorCounsel::Counsel,1>::BaseVector<CvAdvisorCounsel::Counsel,1>
_TEXT	ENDS
PUBLIC	?Destroy@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@IAEXPAUCounsel@CvAdvisorCounsel@@I@Z ; BaseVector<CvAdvisorCounsel::Counsel,1>::Destroy
; Function compile flags: /Ogtpy
;	COMDAT ?Destroy@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@IAEXPAUCounsel@CvAdvisorCounsel@@I@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Destroy@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@IAEXPAUCounsel@CvAdvisorCounsel@@I@Z PROC ; BaseVector<CvAdvisorCounsel::Counsel,1>::Destroy, COMDAT
; _this$ = ecx

; 221  : 		if( !bPODType){
; 222  : 			for(unsigned int i = 0; i < uiNumElements; ++i){
; 223  : 				pVal[i].~T();
; 224  : 			}
; 225  : 		}
; 226  : 	};

	ret	8
?Destroy@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@IAEXPAUCounsel@CvAdvisorCounsel@@I@Z ENDP ; BaseVector<CvAdvisorCounsel::Counsel,1>::Destroy
_TEXT	ENDS
PUBLIC	??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@ ; `string'
PUBLIC	?AllocAligned@FDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@SAPAXIIII@Z ; BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator::AllocAligned
EXTRN	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z:PROC ; FireMallocAlignedNoTracking
;	COMDAT ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
CONST	SEGMENT
??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@ DB 'c:\users\eno'
	DB	'rmousapplepie\documents\github\lekmod\lekmod_dll\fireplace\in'
	DB	'clude\fireworks\FFastVector.h', 00H		; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?AllocAligned@FDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@SAPAXIIII@Z
_TEXT	SEGMENT
_nBytes$ = 8						; size = 4
_nAlign$ = 12						; size = 4
_nAllocPool$ = 16					; size = 4
_nAllocSubID$ = 20					; size = 4
?AllocAligned@FDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@SAPAXIIII@Z PROC ; BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator::AllocAligned, COMDAT

; 85   : 			return FMALLOCALIGNED( nBytes, nAlign, nAllocPool, nAllocSubID );

	mov	DWORD PTR _nAllocSubID$[esp-4], 85	; 00000055H
	mov	DWORD PTR _nAllocPool$[esp-4], OFFSET ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
	jmp	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
?AllocAligned@FDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@SAPAXIIII@Z ENDP ; BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator::AllocAligned
_TEXT	ENDS
PUBLIC	?FreeAligned@FDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@SAXPAX@Z ; BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator::FreeAligned
EXTRN	?FireFreeAlignedNoTracking@@YAXPAX@Z:PROC	; FireFreeAlignedNoTracking
; Function compile flags: /Ogtpy
;	COMDAT ?FreeAligned@FDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@SAXPAX@Z
_TEXT	SEGMENT
_pBlock$ = 8						; size = 4
?FreeAligned@FDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@SAXPAX@Z PROC ; BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator::FreeAligned, COMDAT

; 90   : 			FFREEALIGNED( pBlock );

	jmp	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
?FreeAligned@FDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@SAXPAX@Z ENDP ; BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator::FreeAligned
_TEXT	ENDS
PUBLIC	??$max@H@std@@YAABHABH0@Z			; std::max<int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$max@H@std@@YAABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@H@std@@YAABHABH0@Z PROC				; std::max<int>, COMDAT

; 3384 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	mov	eax, DWORD PTR __Left$[esp-4]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Right$[esp-4]
	cmp	edx, DWORD PTR [ecx]
	jge	SHORT $LN4@max
	mov	eax, ecx
$LN4@max:

; 3385 : 	}

	ret	0
??$max@H@std@@YAABHABH0@Z ENDP				; std::max<int>
_TEXT	ENDS
PUBLIC	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
EXTRN	__imp_?PushArgument@String@Localization@@QAE_NPBD@Z:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvlocalization\include\cvlocalization.h
;	COMDAT ??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z PROC	; operator<<<char const *>, COMDAT

; 491  : 	s.PushArgument(val);

	mov	eax, DWORD PTR _val$[esp-4]
	mov	ecx, DWORD PTR [eax]
	push	esi
	mov	esi, DWORD PTR _s$[esp]
	push	ecx
	mov	ecx, esi
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z

; 492  : 	return s;

	mov	eax, esi
	pop	esi

; 493  : }

	ret	0
??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ENDP	; operator<<<char const *>
_TEXT	ENDS
PUBLIC	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z	; operator<<<int>
EXTRN	__imp_?PushArgument@String@Localization@@QAE_NH@Z:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z PROC	; operator<<<int>, COMDAT

; 491  : 	s.PushArgument(val);

	mov	eax, DWORD PTR _val$[esp-4]
	mov	ecx, DWORD PTR [eax]
	push	esi
	mov	esi, DWORD PTR _s$[esp]
	push	ecx
	mov	ecx, esi
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 492  : 	return s;

	mov	eax, esi
	pop	esi

; 493  : }

	ret	0
??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ENDP	; operator<<<int>
_TEXT	ENDS
PUBLIC	??$strcpy_s@$0CAA@@@YAHAAY0CAA@DPBD@Z		; strcpy_s<512>
EXTRN	__imp__strcpy_s:PROC
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\string.h
;	COMDAT ??$strcpy_s@$0CAA@@@YAHAAY0CAA@DPBD@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Source$ = 12						; size = 4
??$strcpy_s@$0CAA@@@YAHAAY0CAA@DPBD@Z PROC		; strcpy_s<512>, COMDAT

; 73   : __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1(errno_t, strcpy_s, _Deref_post_z_ char, _Dest, _In_z_ const char *, _Source)

	mov	eax, DWORD PTR __Source$[esp-4]
	mov	ecx, DWORD PTR __Dest$[esp-4]
	push	eax
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	add	esp, 12					; 0000000cH
	ret	0
??$strcpy_s@$0CAA@@@YAHAAY0CAA@DPBD@Z ENDP		; strcpy_s<512>
_TEXT	ENDS
PUBLIC	??$min@I@std@@YAABIABI0@Z			; std::min<unsigned int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$min@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@I@std@@YAABIABI0@Z PROC				; std::min<unsigned int>, COMDAT

; 3399 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	mov	eax, DWORD PTR __Right$[esp-4]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Left$[esp-4]
	cmp	edx, DWORD PTR [ecx]
	jb	SHORT $LN4@min
	mov	eax, ecx
$LN4@min:

; 3400 : 	}

	ret	0
??$min@I@std@@YAABIABI0@Z ENDP				; std::min<unsigned int>
_TEXT	ENDS
PUBLIC	??0?$pair@PAUCounsel@CvAdvisorCounsel@@PAU12@@std@@QAE@ABQAUCounsel@CvAdvisorCounsel@@0@Z ; std::pair<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel *>::pair<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
;	COMDAT ??0?$pair@PAUCounsel@CvAdvisorCounsel@@PAU12@@std@@QAE@ABQAUCounsel@CvAdvisorCounsel@@0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@PAUCounsel@CvAdvisorCounsel@@PAU12@@std@@QAE@ABQAUCounsel@CvAdvisorCounsel@@0@Z PROC ; std::pair<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel *>::pair<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel *>, COMDAT
; _this$ = ecx

; 50   : 		{	// construct from specified values

	mov	eax, ecx
	mov	ecx, DWORD PTR __Val1$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx

; 51   : 		}

	ret	8
??0?$pair@PAUCounsel@CvAdvisorCounsel@@PAU12@@std@@QAE@ABQAUCounsel@CvAdvisorCounsel@@0@Z ENDP ; std::pair<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel *>::pair<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel *>
_TEXT	ENDS
PUBLIC	??$_Dist_type@PAUCounsel@CvAdvisorCounsel@@@std@@YAPAHPAUCounsel@CvAdvisorCounsel@@@Z ; std::_Dist_type<CvAdvisorCounsel::Counsel *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Dist_type@PAUCounsel@CvAdvisorCounsel@@@std@@YAPAHPAUCounsel@CvAdvisorCounsel@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Dist_type@PAUCounsel@CvAdvisorCounsel@@@std@@YAPAHPAUCounsel@CvAdvisorCounsel@@@Z PROC ; std::_Dist_type<CvAdvisorCounsel::Counsel *>, COMDAT

; 1831 : 	return (0);

	xor	eax, eax

; 1832 : 	}

	ret	0
??$_Dist_type@PAUCounsel@CvAdvisorCounsel@@@std@@YAPAHPAUCounsel@CvAdvisorCounsel@@@Z ENDP ; std::_Dist_type<CvAdvisorCounsel::Counsel *>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAUCounsel@CvAdvisorCounsel@@@std@@YAPAUCounsel@CvAdvisorCounsel@@PAU12@@Z ; std::_Val_type<CvAdvisorCounsel::Counsel *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Val_type@PAUCounsel@CvAdvisorCounsel@@@std@@YAPAUCounsel@CvAdvisorCounsel@@PAU12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUCounsel@CvAdvisorCounsel@@@std@@YAPAUCounsel@CvAdvisorCounsel@@PAU12@@Z PROC ; std::_Val_type<CvAdvisorCounsel::Counsel *>, COMDAT

; 1766 : 	return (0);

	xor	eax, eax

; 1767 : 	}

	ret	0
??$_Val_type@PAUCounsel@CvAdvisorCounsel@@@std@@YAPAUCounsel@CvAdvisorCounsel@@PAU12@@Z ENDP ; std::_Val_type<CvAdvisorCounsel::Counsel *>
_TEXT	ENDS
PUBLIC	??$swap@UCounsel@CvAdvisorCounsel@@@std@@YAXAAUCounsel@CvAdvisorCounsel@@0@Z ; std::swap<CvAdvisorCounsel::Counsel>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
;	COMDAT ??$swap@UCounsel@CvAdvisorCounsel@@@std@@YAXAAUCounsel@CvAdvisorCounsel@@0@Z
_TEXT	SEGMENT
__Tmp$225121 = -520					; size = 520
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@UCounsel@CvAdvisorCounsel@@@std@@YAXAAUCounsel@CvAdvisorCounsel@@0@Z PROC ; std::swap<CvAdvisorCounsel::Counsel>, COMDAT

; 17   : 	{	// exchange values stored at _Left and _Right

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H

; 18   : 	if (&_Left != &_Right)

	mov	eax, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	sub	esp, 520				; 00000208H
	push	esi
	push	edi
	cmp	eax, edx
	je	SHORT $LN1@swap

; 19   : 		{	// different, worth swapping
; 20   : 		_Ty _Tmp = _Left;

	mov	ecx, 130				; 00000082H
	mov	esi, eax
	lea	edi, DWORD PTR __Tmp$225121[esp+528]
	rep movsd

; 21   : 
; 22   : 		_Left = _Right;

	mov	ecx, 130				; 00000082H
	mov	esi, edx
	mov	edi, eax
	rep movsd

; 23   : 		_Right = _Tmp;

	mov	ecx, 130				; 00000082H
	lea	esi, DWORD PTR __Tmp$225121[esp+528]
	mov	edi, edx
	rep movsd
$LN1@swap:

; 24   : 		}
; 25   : 	}

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??$swap@UCounsel@CvAdvisorCounsel@@@std@@YAXAAUCounsel@CvAdvisorCounsel@@0@Z ENDP ; std::swap<CvAdvisorCounsel::Counsel>
_TEXT	ENDS
PUBLIC	??$_Push_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@HHU12@P6A_N11@Z@Z ; std::_Push_heap<CvAdvisorCounsel::Counsel *,int,CvAdvisorCounsel::Counsel,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Push_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@HHU12@P6A_N11@Z@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
tv132 = 12						; size = 4
__Hole$ = 12						; size = 4
__Top$ = 16						; size = 4
__Val$ = 20						; size = 520
__Pred$ = 540						; size = 4
??$_Push_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@HHU12@P6A_N11@Z@Z PROC ; std::_Push_heap<CvAdvisorCounsel::Counsel *,int,CvAdvisorCounsel::Counsel,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>, COMDAT

; 2013 : 	{	// percolate _Hole to _Top or where _Val belongs, using operator<

	push	ebx
	push	ebp

; 2014 : 	for (_Diff _Idx = (_Hole - 1) / 2;

	mov	ebp, DWORD PTR __Hole$[esp+4]
	lea	eax, DWORD PTR [ebp-1]
	cdq
	sub	eax, edx
	mov	ebx, eax
	push	esi
	sar	ebx, 1

; 2015 : 		_Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val);
; 2016 : 		_Idx = (_Hole - 1) / 2)

	cmp	DWORD PTR __Top$[esp+8], ebp
	push	edi
	jge	SHORT $LN1@Push_heap
	npad	8
$LL3@Push_heap:
	mov	ecx, DWORD PTR __First$[esp+12]
	mov	eax, ebx
	imul	eax, 520				; 00000208H
	add	eax, ecx
	sub	esp, 520				; 00000208H
	mov	edi, esp
	mov	ecx, 130				; 00000082H
	lea	esi, DWORD PTR __Val$[esp+532]
	rep movsd
	sub	esp, 520				; 00000208H
	mov	esi, eax
	mov	ecx, 130				; 00000082H
	mov	edi, esp
	mov	DWORD PTR tv132[esp+1052], eax
	rep movsd
	call	DWORD PTR __Pred$[esp+1052]
	add	esp, 1040				; 00000410H
	test	al, al
	je	SHORT $LN1@Push_heap

; 2017 : 		{	// move _Hole up to parent
; 2018 : 		*(_First + _Hole) = *(_First + _Idx);

	mov	esi, DWORD PTR tv132[esp+12]
	mov	edi, ebp
	imul	edi, 520				; 00000208H
	add	edi, DWORD PTR __First$[esp+12]
	lea	eax, DWORD PTR [ebx-1]
	cdq
	sub	eax, edx

; 2019 : 		_Hole = _Idx;

	mov	ebp, ebx
	sar	eax, 1
	cmp	DWORD PTR __Top$[esp+12], ebp
	mov	ecx, 130				; 00000082H
	rep movsd
	mov	ebx, eax
	jl	SHORT $LL3@Push_heap
$LN1@Push_heap:

; 2020 : 		}
; 2021 : 
; 2022 : 	*(_First + _Hole) = _Val;	// drop _Val into final hole

	mov	edi, ebp
	imul	edi, 520				; 00000208H
	add	edi, DWORD PTR __First$[esp+12]
	mov	ecx, 130				; 00000082H
	lea	esi, DWORD PTR __Val$[esp+12]
	rep movsd

; 2023 : 	}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	0
??$_Push_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@HHU12@P6A_N11@Z@Z ENDP ; std::_Push_heap<CvAdvisorCounsel::Counsel *,int,CvAdvisorCounsel::Counsel,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAUCounsel@CvAdvisorCounsel@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUCounsel@CvAdvisorCounsel@@0@Z ; std::_Iter_random<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Iter_random@PAUCounsel@CvAdvisorCounsel@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUCounsel@CvAdvisorCounsel@@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAUCounsel@CvAdvisorCounsel@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUCounsel@CvAdvisorCounsel@@0@Z PROC ; std::_Iter_random<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAUCounsel@CvAdvisorCounsel@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUCounsel@CvAdvisorCounsel@@0@Z ENDP ; std::_Iter_random<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAUCounsel@CvAdvisorCounsel@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUCounsel@CvAdvisorCounsel@@0@Z ; std::_Ptr_cat<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@PAUCounsel@CvAdvisorCounsel@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUCounsel@CvAdvisorCounsel@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAUCounsel@CvAdvisorCounsel@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUCounsel@CvAdvisorCounsel@@0@Z PROC ; std::_Ptr_cat<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAUCounsel@CvAdvisorCounsel@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUCounsel@CvAdvisorCounsel@@0@Z ENDP ; std::_Ptr_cat<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel *>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAUCounsel@CvAdvisorCounsel@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUCounsel@CvAdvisorCounsel@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_backward_opt@PAUCounsel@CvAdvisorCounsel@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUCounsel@CvAdvisorCounsel@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_backward_opt@PAUCounsel@CvAdvisorCounsel@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUCounsel@CvAdvisorCounsel@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel *,std::random_access_iterator_tag>, COMDAT

; 2674 : 	_DEBUG_RANGE(_First, _Last);
; 2675 : 	while (_First != _Last)

	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	push	ebx
	mov	ebx, DWORD PTR __First$[esp]
	cmp	ebx, edx
	je	SHORT $LN1@Copy_backw
	push	esi
	push	edi
	npad	13
$LL2@Copy_backw:

; 2676 : 		*--_Dest = *--_Last;

	sub	edx, 520				; 00000208H
	sub	eax, 520				; 00000208H
	mov	ecx, 130				; 00000082H
	mov	esi, edx
	mov	edi, eax
	rep movsd
	cmp	edx, ebx
	jne	SHORT $LL2@Copy_backw
	pop	edi
	pop	esi
$LN1@Copy_backw:
	pop	ebx

; 2677 : 	return (_Dest);
; 2678 : 	}

	ret	0
??$_Copy_backward_opt@PAUCounsel@CvAdvisorCounsel@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUCounsel@CvAdvisorCounsel@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??0CvString@@QAE@XZ				; CvString::CvString
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
;	COMDAT ??0CvString@@QAE@XZ
_TEXT	SEGMENT
??0CvString@@QAE@XZ PROC				; CvString::CvString, COMDAT
; _this$ = ecx

; 23   : 	CvString() {}

	push	esi
	mov	esi, ecx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, esi
	pop	esi
	ret	0
??0CvString@@QAE@XZ ENDP				; CvString::CvString
_TEXT	ENDS
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
_TEXT	ENDS
PUBLIC	??4CvString@@QAEAAV0@PBD@Z			; CvString::operator=
EXTRN	__imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ:PROC
EXTRN	__imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??4CvString@@QAEAAV0@PBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
??4CvString@@QAEAAV0@PBD@Z PROC				; CvString::operator=, COMDAT
; _this$ = ecx

; 37   : 	CvString& operator=( const char* s) { if (s) assign(s); else clear();	return *this; }	

	mov	eax, DWORD PTR _s$[esp-4]
	push	esi
	mov	esi, ecx
	test	eax, eax
	je	SHORT $LN2@operator
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	mov	eax, esi
	pop	esi
	ret	4
$LN2@operator:
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, esi
	pop	esi
	ret	4
??4CvString@@QAEAAV0@PBD@Z ENDP				; CvString::operator=
_TEXT	ENDS
PUBLIC	?GetType@CvBaseInfo@@QBEPBDXZ			; CvBaseInfo::GetType
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvinfos.h
;	COMDAT ?GetType@CvBaseInfo@@QBEPBDXZ
_TEXT	SEGMENT
?GetType@CvBaseInfo@@QBEPBDXZ PROC			; CvBaseInfo::GetType, COMDAT
; _this$ = ecx

; 92   : 		return m_strType.c_str();

	add	ecx, 176				; 000000b0H
	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
?GetType@CvBaseInfo@@QBEPBDXZ ENDP			; CvBaseInfo::GetType
_TEXT	ENDS
PUBLIC	?getMap@CvGlobals@@QAEAAVCvMap@@XZ		; CvGlobals::getMap
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
;	COMDAT ?getMap@CvGlobals@@QAEAAVCvMap@@XZ
_TEXT	SEGMENT
?getMap@CvGlobals@@QAEAAVCvMap@@XZ PROC			; CvGlobals::getMap, COMDAT
; _this$ = ecx

; 175  : 		return *m_map;    // inlined for perf reasons, do not use outside of dll

	mov	eax, DWORD PTR [ecx+52]

; 176  : 	}

	ret	0
?getMap@CvGlobals@@QAEAAVCvMap@@XZ ENDP			; CvGlobals::getMap
_TEXT	ENDS
PUBLIC	?getGame@CvGlobals@@QAEAAVCvGame@@XZ		; CvGlobals::getGame
; Function compile flags: /Ogtpy
;	COMDAT ?getGame@CvGlobals@@QAEAAVCvGame@@XZ
_TEXT	SEGMENT
?getGame@CvGlobals@@QAEAAVCvGame@@XZ PROC		; CvGlobals::getGame, COMDAT
; _this$ = ecx

; 183  : 		return *m_game;    // inlined for perf reasons, do not use outside of dll

	mov	eax, DWORD PTR [ecx+48]

; 184  : 	}

	ret	0
?getGame@CvGlobals@@QAEAAVCvGame@@XZ ENDP		; CvGlobals::getGame
_TEXT	ENDS
PUBLIC	?getNumFlavorTypes@CvGlobals@@QAEHXZ		; CvGlobals::getNumFlavorTypes
; Function compile flags: /Ogtpy
;	COMDAT ?getNumFlavorTypes@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getNumFlavorTypes@CvGlobals@@QAEHXZ PROC		; CvGlobals::getNumFlavorTypes, COMDAT
; _this$ = ecx

; 804  : 		return m_iNumFlavorTypes;

	mov	eax, DWORD PTR [ecx+1764]

; 805  : 	}

	ret	0
?getNumFlavorTypes@CvGlobals@@QAEHXZ ENDP		; CvGlobals::getNumFlavorTypes
_TEXT	ENDS
PUBLIC	?getFlavorTypes@CvGlobals@@QAEAAVCvString@@W4FlavorTypes@@@Z ; CvGlobals::getFlavorTypes
; Function compile flags: /Ogtpy
;	COMDAT ?getFlavorTypes@CvGlobals@@QAEAAVCvString@@W4FlavorTypes@@@Z
_TEXT	SEGMENT
_e$ = 8							; size = 4
?getFlavorTypes@CvGlobals@@QAEAAVCvString@@W4FlavorTypes@@@Z PROC ; CvGlobals::getFlavorTypes, COMDAT
; _this$ = ecx

; 812  : 		CvAssert(e > -1); /*CvAssert(e < GC.getNumFlavorTypes())*/;
; 813  : 		return m_paszFlavorTypes[e];

	mov	eax, DWORD PTR _e$[esp-4]
	lea	edx, DWORD PTR [eax*8]
	sub	edx, eax
	mov	eax, DWORD PTR [ecx+1760]
	lea	eax, DWORD PTR [eax+edx*4]

; 814  : 	}

	ret	4
?getFlavorTypes@CvGlobals@@QAEAAVCvString@@W4FlavorTypes@@@Z ENDP ; CvGlobals::getFlavorTypes
_TEXT	ENDS
PUBLIC	?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z	; CvPlayerAI::getPlayer
EXTRN	?m_aPlayers@CvPlayerAI@@1PAV1@A:DWORD		; CvPlayerAI::m_aPlayers
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplayerai.h
;	COMDAT ?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_ePlayer$ = 8						; size = 4
?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z PROC	; CvPlayerAI::getPlayer, COMDAT

; 28   : 		CvAssertMsg(ePlayer != NO_PLAYER, "Player is not assigned a valid value");
; 29   : 		CvAssertMsg(ePlayer < MAX_PLAYERS, "Player is not assigned a valid value");
; 30   : 		return m_aPlayers[ePlayer];

	mov	eax, DWORD PTR _ePlayer$[esp-4]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 31   : 	}

	ret	0
?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z ENDP	; CvPlayerAI::getPlayer
_TEXT	ENDS
PUBLIC	?GetExpensePerTurnUnitMaintenance@CvTreasury@@QAEHXZ ; CvTreasury::GetExpensePerTurnUnitMaintenance
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtreasury.h
;	COMDAT ?GetExpensePerTurnUnitMaintenance@CvTreasury@@QAEHXZ
_TEXT	SEGMENT
?GetExpensePerTurnUnitMaintenance@CvTreasury@@QAEHXZ PROC ; CvTreasury::GetExpensePerTurnUnitMaintenance, COMDAT
; _this$ = ecx

; 91   : 		return m_iExpensePerTurnUnitMaintenance;

	mov	eax, DWORD PTR [ecx+16]

; 92   : 	}

	ret	0
?GetExpensePerTurnUnitMaintenance@CvTreasury@@QAEHXZ ENDP ; CvTreasury::GetExpensePerTurnUnitMaintenance
_TEXT	ENDS
PUBLIC	?GetExpensePerTurnUnitSupply@CvTreasury@@QAEHXZ	; CvTreasury::GetExpensePerTurnUnitSupply
; Function compile flags: /Ogtpy
;	COMDAT ?GetExpensePerTurnUnitSupply@CvTreasury@@QAEHXZ
_TEXT	SEGMENT
?GetExpensePerTurnUnitSupply@CvTreasury@@QAEHXZ PROC	; CvTreasury::GetExpensePerTurnUnitSupply, COMDAT
; _this$ = ecx

; 95   : 		return m_iExpensePerTurnUnitSupply;

	mov	eax, DWORD PTR [ecx+20]

; 96   : 	}

	ret	0
?GetExpensePerTurnUnitSupply@CvTreasury@@QAEHXZ ENDP	; CvTreasury::GetExpensePerTurnUnitSupply
_TEXT	ENDS
PUBLIC	?numPlots@CvMap@@QBEHXZ				; CvMap::numPlots
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
;	COMDAT ?numPlots@CvMap@@QBEHXZ
_TEXT	SEGMENT
?numPlots@CvMap@@QBEHXZ PROC				; CvMap::numPlots, COMDAT
; _this$ = ecx

; 170  : 		return m_iGridSize;

	mov	eax, DWORD PTR [ecx+4028]

; 171  : 	}

	ret	0
?numPlots@CvMap@@QBEHXZ ENDP				; CvMap::numPlots
_TEXT	ENDS
PUBLIC	?plotByIndex@CvMap@@QBEPAVCvPlot@@H@Z		; CvMap::plotByIndex
; Function compile flags: /Ogtpy
;	COMDAT ?plotByIndex@CvMap@@QBEPAVCvPlot@@H@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?plotByIndex@CvMap@@QBEPAVCvPlot@@H@Z PROC		; CvMap::plotByIndex, COMDAT
; _this$ = ecx

; 263  : 		return (((iIndex >= 0) && (iIndex < (numPlots()))) ? &(m_pMapPlots[iIndex]) : NULL);

	mov	eax, DWORD PTR _iIndex$[esp-4]
	test	eax, eax
	jl	SHORT $LN3@plotByInde
	cmp	eax, DWORD PTR [ecx+4028]
	jge	SHORT $LN3@plotByInde
	imul	eax, 484				; 000001e4H
	add	eax, DWORD PTR [ecx+4068]

; 264  : 	}

	ret	4
$LN3@plotByInde:

; 263  : 		return (((iIndex >= 0) && (iIndex < (numPlots()))) ? &(m_pMapPlots[iIndex]) : NULL);

	xor	eax, eax

; 264  : 	}

	ret	4
?plotByIndex@CvMap@@QBEPAVCvPlot@@H@Z ENDP		; CvMap::plotByIndex
_TEXT	ENDS
PUBLIC	?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z		; CvTeam::getTeam
EXTRN	?m_aTeams@CvTeam@@1PAV1@A:DWORD			; CvTeam::m_aTeams
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvteam.h
;	COMDAT ?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z
_TEXT	SEGMENT
_eTeam$ = 8						; size = 4
?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z PROC		; CvTeam::getTeam, COMDAT

; 29   : 		CvAssertMsg(eTeam != NO_TEAM, "eTeam is not assigned a valid value");
; 30   : 		CvAssertMsg(eTeam < MAX_TEAMS, "eTeam is not assigned a valid value");
; 31   : 		return m_aTeams[eTeam];

	mov	eax, DWORD PTR _eTeam$[esp-4]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams

; 32   : 	}

	ret	0
?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z ENDP		; CvTeam::getTeam
_TEXT	ENDS
PUBLIC	??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z ; std::vector<enum TeamTypes,std::allocator<enum TeamTypes> >::operator[]
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z PROC ; std::vector<enum TeamTypes,std::allocator<enum TeamTypes> >::operator[], COMDAT
; _this$ = ecx

; 760  : 
; 761  :  #if _HAS_ITERATOR_DEBUGGING
; 762  : 		if (size() <= _Pos)
; 763  : 			{
; 764  : 			_DEBUG_ERROR("vector subscript out of range");
; 765  : 			_SCL_SECURE_OUT_OF_RANGE;
; 766  : 			}
; 767  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 768  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 769  : 
; 770  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Pos$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*4]

; 771  : 		}

	ret	4
??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z ENDP ; std::vector<enum TeamTypes,std::allocator<enum TeamTypes> >::operator[]
_TEXT	ENDS
PUBLIC	?get@?$FAutoVariable@W4PlayerTypes@@VCvUnit@@@@QBEABW4PlayerTypes@@XZ ; FAutoVariable<enum PlayerTypes,CvUnit>::get
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fautovariable.h
;	COMDAT ?get@?$FAutoVariable@W4PlayerTypes@@VCvUnit@@@@QBEABW4PlayerTypes@@XZ
_TEXT	SEGMENT
?get@?$FAutoVariable@W4PlayerTypes@@VCvUnit@@@@QBEABW4PlayerTypes@@XZ PROC ; FAutoVariable<enum PlayerTypes,CvUnit>::get, COMDAT
; _this$ = ecx

; 177  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 178  : }

	ret	0
?get@?$FAutoVariable@W4PlayerTypes@@VCvUnit@@@@QBEABW4PlayerTypes@@XZ ENDP ; FAutoVariable<enum PlayerTypes,CvUnit>::get
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@W4PlayerTypes@@VCvCity@@@@QBEABW4PlayerTypes@@XZ ; FAutoVariable<enum PlayerTypes,CvCity>::operator enum PlayerTypes const &
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FAutoVariable@W4PlayerTypes@@VCvCity@@@@QBEABW4PlayerTypes@@XZ
_TEXT	SEGMENT
??B?$FAutoVariable@W4PlayerTypes@@VCvCity@@@@QBEABW4PlayerTypes@@XZ PROC ; FAutoVariable<enum PlayerTypes,CvCity>::operator enum PlayerTypes const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@W4PlayerTypes@@VCvCity@@@@QBEABW4PlayerTypes@@XZ ENDP ; FAutoVariable<enum PlayerTypes,CvCity>::operator enum PlayerTypes const &
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ
_TEXT	SEGMENT
??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ PROC ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ ENDP ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ	; FAutoVariable<bool,CvPlayer>::operator bool const &
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ
_TEXT	SEGMENT
??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ PROC	; FAutoVariable<bool,CvPlayer>::operator bool const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ ENDP	; FAutoVariable<bool,CvPlayer>::operator bool const &
_TEXT	ENDS
PUBLIC	?Reset@CvAdvisorCounsel@@QAEXXZ			; CvAdvisorCounsel::Reset
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvadvisorcounsel.cpp
;	COMDAT ?Reset@CvAdvisorCounsel@@QAEXXZ
_TEXT	SEGMENT
?Reset@CvAdvisorCounsel@@QAEXXZ PROC			; CvAdvisorCounsel::Reset, COMDAT
; _this$ = ecx

; 45   : 	for(uint ui = 0; ui < m_aCounsel.size(); ui++)

	xor	edx, edx
	cmp	DWORD PTR [ecx+4], edx
	jbe	SHORT $LN1@Reset
	xor	eax, eax
	push	edi
	npad	6
$LL3@Reset:

; 46   : 	{
; 47   : 		m_aCounsel[ui].m_eAdvisor = NO_ADVISOR_TYPE;

	mov	edi, DWORD PTR [ecx]
	mov	DWORD PTR [eax+edi], -1

; 48   : 		m_aCounsel[ui].m_iValue = -1;

	mov	edi, DWORD PTR [ecx]
	mov	DWORD PTR [eax+edi+516], -1
	inc	edx
	add	eax, 520				; 00000208H
	cmp	edx, DWORD PTR [ecx+4]
	jb	SHORT $LL3@Reset
	pop	edi
$LN1@Reset:

; 49   : 	}
; 50   : }

	ret	0
?Reset@CvAdvisorCounsel@@QAEXXZ ENDP			; CvAdvisorCounsel::Reset
_TEXT	ENDS
PUBLIC	?SetCounselEntry@CvAdvisorCounsel@@QAE_NIW4AdvisorTypes@@PBDH@Z ; CvAdvisorCounsel::SetCounselEntry
; Function compile flags: /Ogtpy
;	COMDAT ?SetCounselEntry@CvAdvisorCounsel@@QAE_NIW4AdvisorTypes@@PBDH@Z
_TEXT	SEGMENT
_uiIndex$ = 8						; size = 4
_eAdvisor$ = 12						; size = 4
_strAdvisorCounsel$ = 16				; size = 4
_iValue$ = 20						; size = 4
?SetCounselEntry@CvAdvisorCounsel@@QAE_NIW4AdvisorTypes@@PBDH@Z PROC ; CvAdvisorCounsel::SetCounselEntry, COMDAT
; _this$ = ecx

; 2076 : {

	push	esi

; 2077 : 	if(uiIndex >= m_aCounsel.size())

	mov	esi, DWORD PTR _uiIndex$[esp]
	push	edi
	mov	edi, ecx
	cmp	esi, DWORD PTR [edi+4]
	jb	SHORT $LN1@SetCounsel
	pop	edi

; 2078 : 	{
; 2079 : 		return false;

	xor	al, al
	pop	esi

; 2087 : }

	ret	16					; 00000010H
$LN1@SetCounsel:

; 2080 : 	}
; 2081 : 
; 2082 : 	m_aCounsel[uiIndex].m_eAdvisor = eAdvisor;

	mov	eax, DWORD PTR [edi]
	imul	esi, 520				; 00000208H
	mov	ecx, DWORD PTR _eAdvisor$[esp+4]

; 2083 : 	strcpy_s(m_aCounsel[uiIndex].m_strTxtKey, strAdvisorCounsel);

	mov	edx, DWORD PTR _strAdvisorCounsel$[esp+4]
	mov	DWORD PTR [esi+eax], ecx
	mov	eax, DWORD PTR [edi]
	push	edx
	lea	ecx, DWORD PTR [esi+eax+4]
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s

; 2084 : 	m_aCounsel[uiIndex].m_iValue = iValue;

	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR _iValue$[esp+16]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+edx+516], eax
	pop	edi

; 2085 : 
; 2086 : 	return true;

	mov	al, 1
	pop	esi

; 2087 : }

	ret	16					; 00000010H
?SetCounselEntry@CvAdvisorCounsel@@QAE_NIW4AdvisorTypes@@PBDH@Z ENDP ; CvAdvisorCounsel::SetCounselEntry
_TEXT	ENDS
PUBLIC	?clear@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QAEXXZ ; BaseVector<CvAdvisorCounsel::Counsel,1>::clear
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?clear@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QAEXXZ
_TEXT	SEGMENT
?clear@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QAEXXZ PROC ; BaseVector<CvAdvisorCounsel::Counsel,1>::clear, COMDAT
; _this$ = ecx

; 121  : 		Destroy(m_pData, m_uiCurrSize);
; 122  : 		m_uiCurrSize = 0;

	mov	DWORD PTR [ecx+4], 0

; 123  : 	};

	ret	0
?clear@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QAEXXZ ENDP ; BaseVector<CvAdvisorCounsel::Counsel,1>::clear
_TEXT	ENDS
PUBLIC	?Alloc@?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@IAEPAUCounsel@CvAdvisorCounsel@@I@Z ; FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>::Alloc
; Function compile flags: /Ogtpy
;	COMDAT ?Alloc@?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@IAEPAUCounsel@CvAdvisorCounsel@@I@Z
_TEXT	SEGMENT
_uiSize$ = 8						; size = 4
?Alloc@?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@IAEPAUCounsel@CvAdvisorCounsel@@I@Z PROC ; FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>::Alloc, COMDAT
; _this$ = ecx

; 503  : 	T* Alloc( unsigned int uiSize ){

	push	esi

; 504  : 		if( uiSize > 0 ){

	mov	esi, DWORD PTR _uiSize$[esp]
	push	edi
	mov	edi, ecx
	test	esi, esi
	jbe	SHORT $LN1@Alloc

; 505  :             
; 506  :             T* pRet = (T*)FAST_VEC_ALLOC::AllocAligned( uiSize*sizeof(T), __alignof(T), AllocPool, nSubID );

	mov	eax, esi
	imul	eax, 520				; 00000208H
	push	85					; 00000055H
	push	OFFSET ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
	push	4
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H

; 507  : 			m_uiCurrMaxSize = uiSize;

	mov	DWORD PTR [edi+8], esi
	pop	edi
	pop	esi

; 511  : 	};

	ret	4
$LN1@Alloc:
	pop	edi

; 508  : 			return pRet;
; 509  : 		}
; 510  : 		return NULL;

	xor	eax, eax
	pop	esi

; 511  : 	};

	ret	4
?Alloc@?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@IAEPAUCounsel@CvAdvisorCounsel@@I@Z ENDP ; FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>::Alloc
_TEXT	ENDS
PUBLIC	?Free@?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@IAEXPAUCounsel@CvAdvisorCounsel@@I@Z ; FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>::Free
; Function compile flags: /Ogtpy
;	COMDAT ?Free@?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@IAEXPAUCounsel@CvAdvisorCounsel@@I@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Free@?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@IAEXPAUCounsel@CvAdvisorCounsel@@I@Z PROC ; FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>::Free, COMDAT
; _this$ = ecx

; 516  : 		if( !bPODType) 
; 517  :             Destroy(pVal, uiNumElements);
; 518  : 
; 519  : 		FAST_VEC_ALLOC::FreeAligned( (void*)pVal );

	mov	eax, DWORD PTR _pVal$[esp-4]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	pop	ecx

; 520  : 	};

	ret	8
?Free@?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@IAEXPAUCounsel@CvAdvisorCounsel@@I@Z ENDP ; FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>::Free
_TEXT	ENDS
PUBLIC	??$iter_swap@PAUCounsel@CvAdvisorCounsel@@PAU12@@std@@YAXPAUCounsel@CvAdvisorCounsel@@0@Z ; std::iter_swap<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$iter_swap@PAUCounsel@CvAdvisorCounsel@@PAU12@@std@@YAXPAUCounsel@CvAdvisorCounsel@@0@Z
_TEXT	SEGMENT
__Tmp$225731 = -520					; size = 520
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$iter_swap@PAUCounsel@CvAdvisorCounsel@@PAU12@@std@@YAXPAUCounsel@CvAdvisorCounsel@@0@Z PROC ; std::iter_swap<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel *>, COMDAT

; 593  : 	{	// swap *_Left and *_Right

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H

; 594  : 	swap(*_Left, *_Right);

	mov	eax, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	sub	esp, 520				; 00000208H
	push	esi
	push	edi
	cmp	eax, edx
	je	SHORT $LN3@iter_swap
	mov	ecx, 130				; 00000082H
	mov	esi, eax
	lea	edi, DWORD PTR __Tmp$225731[esp+528]
	rep movsd
	mov	ecx, 130				; 00000082H
	mov	esi, edx
	mov	edi, eax
	rep movsd
	mov	ecx, 130				; 00000082H
	lea	esi, DWORD PTR __Tmp$225731[esp+528]
	mov	edi, edx
	rep movsd
$LN3@iter_swap:

; 595  : 	}

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??$iter_swap@PAUCounsel@CvAdvisorCounsel@@PAU12@@std@@YAXPAUCounsel@CvAdvisorCounsel@@0@Z ENDP ; std::iter_swap<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel *>
_TEXT	ENDS
PUBLIC	??$_Med3@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@00P6A_NU12@1@Z@Z ; std::_Med3<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Med3@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@00P6A_NU12@1@Z@Z
_TEXT	SEGMENT
__Tmp$225768 = -520					; size = 520
__Tmp$225756 = -520					; size = 520
__Tmp$225744 = -520					; size = 520
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 4
??$_Med3@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@00P6A_NU12@1@Z@Z PROC ; std::_Med3<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>, COMDAT

; 3156 : 	{	// sort median of three elements to middle

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 524				; 0000020cH
	push	ebx

; 3157 : 	if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First))

	mov	ebx, DWORD PTR __Mid$[ebp]
	push	esi
	mov	esi, DWORD PTR __First$[ebp]
	push	edi
	sub	esp, 520				; 00000208H
	mov	edi, esp
	mov	ecx, 130				; 00000082H
	rep movsd
	sub	esp, 520				; 00000208H
	mov	ecx, 130				; 00000082H
	mov	esi, ebx
	mov	edi, esp
	rep movsd
	call	DWORD PTR __Pred$[ebp]
	add	esp, 1040				; 00000410H
	test	al, al
	je	SHORT $LN8@Med3

; 3158 : 		std::iter_swap(_Mid, _First);

	mov	eax, DWORD PTR __First$[ebp]
	cmp	ebx, eax
	je	SHORT $LN8@Med3
	mov	ecx, 130				; 00000082H
	mov	esi, ebx
	lea	edi, DWORD PTR __Tmp$225744[esp+536]
	rep movsd
	mov	ecx, 130				; 00000082H
	mov	esi, eax
	mov	edi, ebx
	rep movsd
	mov	ecx, 130				; 00000082H
	lea	esi, DWORD PTR __Tmp$225744[esp+536]
	mov	edi, eax
	rep movsd
$LN8@Med3:

; 3159 : 	if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid))

	sub	esp, 520				; 00000208H
	mov	edi, esp
	mov	ecx, 130				; 00000082H
	mov	esi, ebx
	rep movsd
	mov	esi, DWORD PTR __Last$[ebp]
	sub	esp, 520				; 00000208H
	mov	ecx, 130				; 00000082H
	mov	edi, esp
	rep movsd
	call	DWORD PTR __Pred$[ebp]
	add	esp, 1040				; 00000410H
	test	al, al
	je	SHORT $LN13@Med3

; 3160 : 		std::iter_swap(_Last, _Mid);

	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, ebx
	je	SHORT $LN13@Med3
	mov	ecx, 130				; 00000082H
	mov	esi, eax
	lea	edi, DWORD PTR __Tmp$225756[esp+536]
	rep movsd
	mov	ecx, 130				; 00000082H
	mov	esi, ebx
	mov	edi, eax
	rep movsd
	mov	ecx, 130				; 00000082H
	lea	esi, DWORD PTR __Tmp$225756[esp+536]
	mov	edi, ebx
	rep movsd
$LN13@Med3:

; 3161 : 	if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First))

	mov	esi, DWORD PTR __First$[ebp]
	sub	esp, 520				; 00000208H
	mov	edi, esp
	mov	ecx, 130				; 00000082H
	rep movsd
	sub	esp, 520				; 00000208H
	mov	ecx, 130				; 00000082H
	mov	esi, ebx
	mov	edi, esp
	rep movsd
	call	DWORD PTR __Pred$[ebp]
	add	esp, 1040				; 00000410H
	test	al, al
	je	SHORT $LN18@Med3

; 3162 : 		std::iter_swap(_Mid, _First);

	mov	eax, DWORD PTR __First$[ebp]
	cmp	ebx, eax
	je	SHORT $LN18@Med3
	mov	ecx, 130				; 00000082H
	mov	esi, ebx
	lea	edi, DWORD PTR __Tmp$225768[esp+536]
	rep movsd
	mov	ecx, 130				; 00000082H
	mov	esi, eax
	mov	edi, ebx
	rep movsd
	mov	ecx, 130				; 00000082H
	lea	esi, DWORD PTR __Tmp$225768[esp+536]
	mov	edi, eax
	rep movsd
$LN18@Med3:

; 3163 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Med3@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@00P6A_NU12@1@Z@Z ENDP ; std::_Med3<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
_TEXT	ENDS
PUBLIC	??$_Adjust_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@HHU12@P6A_N11@Z@Z ; std::_Adjust_heap<CvAdvisorCounsel::Counsel *,int,CvAdvisorCounsel::Counsel,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Adjust_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@HHU12@P6A_N11@Z@Z
_TEXT	SEGMENT
__Top$ = -4						; size = 4
__First$ = 8						; size = 4
__Hole$ = 12						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 520
__Pred$ = 540						; size = 4
??$_Adjust_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@HHU12@P6A_N11@Z@Z PROC ; std::_Adjust_heap<CvAdvisorCounsel::Counsel *,int,CvAdvisorCounsel::Counsel,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>, COMDAT

; 2108 : 	{	// percolate _Hole to _Bottom, then push _Val, using _Pred

	push	ecx

; 2109 : 	_Diff _Top = _Hole;

	mov	eax, DWORD PTR __Hole$[esp]

; 2110 : 	_Diff _Idx = 2 * _Hole + 2;
; 2111 : 
; 2112 : 	for (; _Idx < _Bottom; _Idx = 2 * _Idx + 2)

	mov	edx, DWORD PTR __Bottom$[esp]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR __First$[esp+8]
	lea	ebx, DWORD PTR [eax+eax+2]
	cmp	ebx, edx
	push	esi
	push	edi
	mov	DWORD PTR __Top$[esp+20], eax
	jge	SHORT $LN11@Adjust_hea
	npad	3
$LL5@Adjust_hea:

; 2113 : 		{	// move _Hole down to larger child
; 2114 : 		if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1))))

	mov	eax, ebx
	imul	eax, 520				; 00000208H
	add	eax, ebp
	sub	esp, 520				; 00000208H
	lea	esi, DWORD PTR [eax-520]
	mov	edi, esp
	mov	ecx, 130				; 00000082H
	rep movsd
	sub	esp, 520				; 00000208H
	mov	esi, eax
	mov	ecx, 130				; 00000082H
	mov	edi, esp
	rep movsd
	call	DWORD PTR __Pred$[esp+1056]
	add	esp, 1040				; 00000410H
	test	al, al
	je	SHORT $LN2@Adjust_hea

; 2115 : 			--_Idx;

	dec	ebx
$LN2@Adjust_hea:

; 2116 : 		*(_First + _Hole) = *(_First + _Idx), _Hole = _Idx;

	mov	edi, DWORD PTR __Hole$[esp+16]
	mov	esi, ebx
	imul	edi, 520				; 00000208H
	imul	esi, 520				; 00000208H
	mov	DWORD PTR __Hole$[esp+16], ebx
	add	esi, ebp
	add	edi, ebp
	lea	ebx, DWORD PTR [ebx+ebx+2]
	cmp	ebx, DWORD PTR __Bottom$[esp+16]
	mov	ecx, 130				; 00000082H
	rep movsd
	jl	SHORT $LL5@Adjust_hea
	mov	edx, DWORD PTR __Bottom$[esp+16]
	mov	eax, DWORD PTR __Hole$[esp+16]

; 2117 : 		}
; 2118 : 
; 2119 : 	if (_Idx == _Bottom)

	cmp	ebx, edx
$LN11@Adjust_hea:
	jne	SHORT $LN10@Adjust_hea

; 2120 : 		{	// only child at bottom, move _Hole down to it
; 2121 : 		*(_First + _Hole) = *(_First + (_Bottom - 1));

	mov	ecx, edx
	imul	ecx, 520				; 00000208H
	mov	edi, eax
	imul	edi, 520				; 00000208H
	lea	esi, DWORD PTR [ecx+ebp-520]
	add	edi, ebp

; 2122 : 		_Hole = _Bottom - 1;

	dec	edx
	mov	ecx, 130				; 00000082H
	rep movsd
	mov	DWORD PTR __Hole$[esp+16], edx
	mov	eax, edx
$LN10@Adjust_hea:

; 2123 : 		}
; 2124 : 	std::_Push_heap(_First, _Hole, _Top, _Val, _Pred);

	mov	edx, DWORD PTR __Pred$[esp+16]
	push	edx
	sub	esp, 520				; 00000208H
	mov	edi, esp
	mov	ecx, 130				; 00000082H
	lea	esi, DWORD PTR __Val$[esp+540]
	rep movsd
	mov	ecx, DWORD PTR __Top$[esp+544]
	push	ecx
	push	eax
	push	ebp
	call	??$_Push_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@HHU12@P6A_N11@Z@Z ; std::_Push_heap<CvAdvisorCounsel::Counsel *,int,CvAdvisorCounsel::Counsel,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
	add	esp, 536				; 00000218H

; 2125 : 	}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	pop	ecx
	ret	0
??$_Adjust_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@HHU12@P6A_N11@Z@Z ENDP ; std::_Adjust_heap<CvAdvisorCounsel::Counsel *,int,CvAdvisorCounsel::Counsel,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
_TEXT	ENDS
PUBLIC	??$unchecked_copy_backward@PAUCounsel@CvAdvisorCounsel@@PAU12@@stdext@@YAPAUCounsel@CvAdvisorCounsel@@PAU12@00@Z ; stdext::unchecked_copy_backward<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$unchecked_copy_backward@PAUCounsel@CvAdvisorCounsel@@PAU12@@stdext@@YAPAUCounsel@CvAdvisorCounsel@@PAU12@00@Z
_TEXT	SEGMENT
$T225781 = -4						; size = 1
__Cat$225787 = -4					; size = 1
$T225783 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy_backward@PAUCounsel@CvAdvisorCounsel@@PAU12@@stdext@@YAPAUCounsel@CvAdvisorCounsel@@PAU12@00@Z PROC ; stdext::unchecked_copy_backward<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel *>, COMDAT

; 3636 : 	{	// copy [_First, _Last) backwards to [..., _Dest)

	push	ecx

; 3637 : 		return (_STD _Copy_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3638 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	BYTE PTR $T225781[esp+4], 0
	mov	eax, DWORD PTR $T225781[esp+4]
	mov	ecx, DWORD PTR __Cat$225787[esp+4]
	mov	edx, DWORD PTR $T225783[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Copy_backward_opt@PAUCounsel@CvAdvisorCounsel@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUCounsel@CvAdvisorCounsel@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel *,std::random_access_iterator_tag>

; 3639 : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_copy_backward@PAUCounsel@CvAdvisorCounsel@@PAU12@@stdext@@YAPAUCounsel@CvAdvisorCounsel@@PAU12@00@Z ENDP ; stdext::unchecked_copy_backward<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel *>
_TEXT	ENDS
PUBLIC	??$_Pop_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@00U12@P6A_N11@ZPAH@Z ; std::_Pop_heap<CvAdvisorCounsel::Counsel *,int,CvAdvisorCounsel::Counsel,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Pop_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@00U12@P6A_N11@ZPAH@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Val$ = 20						; size = 520
__Pred$ = 540						; size = 4
___formal$ = 544					; size = 4
??$_Pop_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@00U12@P6A_N11@ZPAH@Z PROC ; std::_Pop_heap<CvAdvisorCounsel::Counsel *,int,CvAdvisorCounsel::Counsel,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>, COMDAT

; 2134 : 	*_Dest = *_First;
; 2135 : 	std::_Adjust_heap(_First, _Diff(0), _Diff(_Last - _First),
; 2136 : 		_Val, _Pred);

	mov	eax, DWORD PTR __Pred$[esp-4]
	push	ebx
	mov	ebx, DWORD PTR __First$[esp]
	push	esi
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+8]
	push	eax
	sub	esp, 520				; 00000208H
	mov	ecx, 130				; 00000082H
	mov	esi, ebx
	rep movsd
	mov	edi, esp
	mov	ecx, 130				; 00000082H
	lea	esi, DWORD PTR __Val$[esp+532]
	rep movsd
	mov	ecx, DWORD PTR __Last$[esp+532]
	sub	ecx, ebx
	mov	eax, 2114445439				; 7e07e07fH
	imul	ecx
	sar	edx, 8
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	push	ecx
	push	0
	push	ebx
	call	??$_Adjust_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@HHU12@P6A_N11@Z@Z ; std::_Adjust_heap<CvAdvisorCounsel::Counsel *,int,CvAdvisorCounsel::Counsel,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
	add	esp, 536				; 00000218H

; 2137 : 	}

	pop	edi
	pop	esi
	pop	ebx
	ret	0
??$_Pop_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@00U12@P6A_N11@ZPAH@Z ENDP ; std::_Pop_heap<CvAdvisorCounsel::Counsel *,int,CvAdvisorCounsel::Counsel,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
_TEXT	ENDS
PUBLIC	?getOwner@CvUnit@@QBE?AW4PlayerTypes@@XZ	; CvUnit::getOwner
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvunit.h
;	COMDAT ?getOwner@CvUnit@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
?getOwner@CvUnit@@QBE?AW4PlayerTypes@@XZ PROC		; CvUnit::getOwner, COMDAT
; _this$ = ecx

; 1046 : 		return m_eOwner.get();

	mov	eax, DWORD PTR [ecx+40]

; 1047 : 	}

	ret	0
?getOwner@CvUnit@@QBE?AW4PlayerTypes@@XZ ENDP		; CvUnit::getOwner
_TEXT	ENDS
EXTRN	?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B:DWORD ; CvPreGame::sr_TeamTypes
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvpregame.h
;	COMDAT ?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z PROC ; CvPreGame::teamType, COMDAT
; _p$ = eax

; 299  : 	if(p >= 0 && p < MAX_PLAYERS)

	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN1@teamType

; 300  : 		return sr_TeamTypes[p];

	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]

; 302  : }

	ret	0
$LN1@teamType:

; 301  : 	return NO_TEAM;

	or	eax, -1

; 302  : }

	ret	0
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ENDP ; CvPreGame::teamType
_TEXT	ENDS
PUBLIC	?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ	; CvCity::getOwner
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvcity.h
;	COMDAT ?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ PROC		; CvCity::getOwner, COMDAT
; _this$ = ecx

; 604  : 		return m_eOwner;

	mov	eax, DWORD PTR [ecx+84]

; 605  : 	}

	ret	0
?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ ENDP		; CvCity::getOwner
_TEXT	ENDS
PUBLIC	?isAlive@CvPlayer@@QBE_NXZ			; CvPlayer::isAlive
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplayer.h
;	COMDAT ?isAlive@CvPlayer@@QBE_NXZ
_TEXT	SEGMENT
?isAlive@CvPlayer@@QBE_NXZ PROC				; CvPlayer::isAlive, COMDAT
; _this$ = ecx

; 1096 : 		return m_bAlive;

	mov	al, BYTE PTR [ecx+2256]

; 1097 : 	}

	ret	0
?isAlive@CvPlayer@@QBE_NXZ ENDP				; CvPlayer::isAlive
_TEXT	ENDS
PUBLIC	?isEverAlive@CvPlayer@@QBE_NXZ			; CvPlayer::isEverAlive
; Function compile flags: /Ogtpy
;	COMDAT ?isEverAlive@CvPlayer@@QBE_NXZ
_TEXT	SEGMENT
?isEverAlive@CvPlayer@@QBE_NXZ PROC			; CvPlayer::isEverAlive, COMDAT
; _this$ = ecx

; 1101 : 		return m_bEverAlive;

	mov	al, BYTE PTR [ecx+2268]

; 1102 : 	}

	ret	0
?isEverAlive@CvPlayer@@QBE_NXZ ENDP			; CvPlayer::isEverAlive
_TEXT	ENDS
PUBLIC	?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ		; CvPlayer::getTeam
; Function compile flags: /Ogtpy
;	COMDAT ?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ
_TEXT	SEGMENT
?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ PROC		; CvPlayer::getTeam, COMDAT
; _this$ = ecx

; 1182 : 		return CvPreGame::teamType(m_eID);

	mov	eax, DWORD PTR [ecx+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN5@getTeam
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]

; 1183 : 	}

	ret	0

; 1182 : 		return CvPreGame::teamType(m_eID);

$LN5@getTeam:
	or	eax, -1

; 1183 : 	}

	ret	0
?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ ENDP		; CvPlayer::getTeam
_TEXT	ENDS
PUBLIC	?Uninit@CvAdvisorCounsel@@QAEXXZ		; CvAdvisorCounsel::Uninit
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvadvisorcounsel.cpp
;	COMDAT ?Uninit@CvAdvisorCounsel@@QAEXXZ
_TEXT	SEGMENT
?Uninit@CvAdvisorCounsel@@QAEXXZ PROC			; CvAdvisorCounsel::Uninit, COMDAT
; _this$ = ecx

; 40   : 	m_aCounsel.clear();

	mov	DWORD PTR [ecx+4], 0

; 41   : }

	ret	0
?Uninit@CvAdvisorCounsel@@QAEXXZ ENDP			; CvAdvisorCounsel::Uninit
_TEXT	ENDS
PUBLIC	??0?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@QAE@I@Z ; FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>::FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??0?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@QAE@I@Z
_TEXT	SEGMENT
_uiStartingMaxSize$ = 8					; size = 4
??0?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@QAE@I@Z PROC ; FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>::FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>, COMDAT
; _this$ = ecx

; 309  : 	FFastVector(unsigned int uiStartingMaxSize = 0)

	push	esi
	xor	eax, eax
	push	edi

; 310  : 	{
; 311  : #ifdef BREAK_ON_REPEATED_RESIZE
; 312  : 		m_nResizeTimes = 0;
; 313  : #endif
; 314  : 		m_pData = Alloc(uiStartingMaxSize);

	mov	edi, DWORD PTR _uiStartingMaxSize$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	cmp	edi, eax
	jbe	SHORT $LN5@FFastVecto
	mov	eax, edi
	imul	eax, 520				; 00000208H
	push	85					; 00000055H
	push	OFFSET ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
	push	4
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR [esi+8], edi
$LN5@FFastVecto:
	mov	DWORD PTR [esi], eax
	pop	edi

; 315  : 	};

	mov	eax, esi
	pop	esi
	ret	4
??0?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@QAE@I@Z ENDP ; FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>::FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>
_TEXT	ENDS
PUBLIC	??1?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@QAE@XZ ; FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>::~FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@QAE@XZ
_TEXT	SEGMENT
??1?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@QAE@XZ PROC ; FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>::~FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>, COMDAT
; _this$ = ecx

; 317  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR [ecx]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	pop	ecx

; 318  : 	};

	ret	0
??1?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@QAE@XZ ENDP ; FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>::~FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>
_TEXT	ENDS
PUBLIC	?GrowSize@?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@IAEXI@Z ; FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>::GrowSize
EXTRN	_memcpy:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?GrowSize@?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@IAEXI@Z
_TEXT	SEGMENT
_uiFit$ = 8						; size = 4
?GrowSize@?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@IAEXI@Z PROC ; FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>::GrowSize, COMDAT
; _this$ = ecx

; 422  : 	{

	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx

; 423  : 		unsigned int nOld = m_uiCurrMaxSize;

	mov	eax, DWORD PTR [esi+8]
	push	edi
	mov	ebp, eax

; 424  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	test	eax, eax
	jne	SHORT $LN34@GrowSize
	mov	DWORD PTR [esi+8], 1
$LN34@GrowSize:

; 425  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _uiFit$[esp+12]
	cmp	edx, DWORD PTR [esi+8]
	jb	SHORT $LN9@GrowSize
	npad	1
$LL10@GrowSize:

; 426  : 
; 427  : 			//Try to double size...
; 428  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	eax, DWORD PTR [esi+8]
	lea	ecx, DWORD PTR [eax+eax]

; 429  : 
; 430  : 			//...on overflow bail and set to exact size
; 431  : 			if( uiNewSize < m_uiCurrMaxSize ){

	cmp	ecx, eax
	jb	SHORT $LN35@GrowSize

; 433  : 				break;
; 434  : 			}
; 435  : 
; 436  : 			//...otherwise use the doubled size
; 437  : 			m_uiCurrMaxSize = uiNewSize;

	mov	DWORD PTR [esi+8], ecx
	cmp	edx, ecx
	jae	SHORT $LL10@GrowSize

; 429  : 
; 430  : 			//...on overflow bail and set to exact size
; 431  : 			if( uiNewSize < m_uiCurrMaxSize ){

	jmp	SHORT $LN9@GrowSize
$LN35@GrowSize:

; 432  : 				m_uiCurrMaxSize = uiFit;

	mov	DWORD PTR [esi+8], edx
$LN9@GrowSize:

; 438  : 		}
; 439  : 
; 440  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	edi, DWORD PTR [esi+8]
	test	edi, edi
	jbe	SHORT $LN7@GrowSize
	mov	eax, edi
	imul	eax, 520				; 00000208H
	push	85					; 00000055H
	push	OFFSET ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
	push	4
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	mov	ebx, eax
	add	esp, 16					; 00000010H
	mov	DWORD PTR [esi+8], edi

; 441  : 		if (pTemp)

	test	ebx, ebx
	je	SHORT $LN7@GrowSize

; 442  : 		{
; 443  : 			if( bPODType ){
; 444  : 				memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi]
	imul	ecx, 520				; 00000208H
	push	ecx
	push	edx
	push	ebx
	call	_memcpy

; 445  : 			}else{
; 446  : 				for(unsigned int i = 0; i < m_uiCurrSize; ++i)
; 447  : 					new( (void*)&(pTemp[i]) )T( m_pData[i]);
; 448  : 			}
; 449  : 			Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR [esi]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 16					; 00000010H
	pop	edi

; 450  : 			m_pData = pTemp;

	mov	DWORD PTR [esi], ebx
	pop	esi
	pop	ebp
	pop	ebx

; 456  : 		}
; 457  : 	};

	ret	4
$LN7@GrowSize:
	pop	edi

; 451  : 		}
; 452  : 		else
; 453  : 		{
; 454  : 			FAssertMsg2(0, "Failed to grow array size from %u to %u", nOld, m_uiCurrMaxSize);
; 455  : 			m_uiCurrMaxSize = nOld;

	mov	DWORD PTR [esi+8], ebp
	pop	esi
	pop	ebp
	pop	ebx

; 456  : 		}
; 457  : 	};

	ret	4
?GrowSize@?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@IAEXI@Z ENDP ; FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>::GrowSize
_TEXT	ENDS
PUBLIC	??$_Median@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@00P6A_NU12@1@Z@Z ; std::_Median<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Median@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@00P6A_NU12@1@Z@Z
_TEXT	SEGMENT
tv200 = 8						; size = 4
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
tv203 = 16						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 4
??$_Median@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@00P6A_NU12@1@Z@Z PROC ; std::_Median<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>, COMDAT

; 3169 : 	if (40 < _Last - _First)

	mov	ecx, DWORD PTR __First$[esp-4]
	push	edi
	mov	edi, DWORD PTR __Last$[esp]
	mov	edx, edi
	sub	edx, ecx
	mov	eax, 2114445439				; 7e07e07fH
	imul	edx
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	eax, 40					; 00000028H
	jle	SHORT $LN2@Median

; 3170 : 		{	// median of nine
; 3171 : 		size_t _Step = (_Last - _First + 1) / 8;

	inc	eax
	cdq
	push	ebx
	and	edx, 7
	add	eax, edx
	push	ebp

; 3172 : 		std::_Med3(_First, _First + _Step, _First + 2 * _Step, _Pred);

	mov	ebp, DWORD PTR __Pred$[esp+8]
	sar	eax, 3
	push	esi
	mov	ebx, eax
	mov	esi, eax
	imul	ebx, 1040				; 00000410H
	imul	esi, 520				; 00000208H
	push	ebp
	lea	edx, DWORD PTR [ebx+ecx]
	lea	eax, DWORD PTR [esi+ecx]
	push	edx
	push	eax
	push	ecx
	mov	DWORD PTR tv200[esp+28], eax
	call	??$_Med3@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@00P6A_NU12@1@Z@Z ; std::_Med3<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>

; 3173 : 		std::_Med3(_Mid - _Step, _Mid, _Mid + _Step, _Pred);

	mov	eax, DWORD PTR __Mid$[esp+28]
	push	ebp
	lea	ecx, DWORD PTR [esi+eax]
	push	ecx
	push	eax
	sub	eax, esi
	push	eax
	call	??$_Med3@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@00P6A_NU12@1@Z@Z ; std::_Med3<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>

; 3174 : 		std::_Med3(_Last - 2 * _Step, _Last - _Step, _Last, _Pred);

	push	ebp
	mov	eax, edi
	sub	eax, esi
	push	edi
	push	eax
	sub	edi, ebx
	push	edi
	mov	DWORD PTR tv203[esp+60], eax
	call	??$_Med3@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@00P6A_NU12@1@Z@Z ; std::_Med3<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>

; 3175 : 		std::_Med3(_First + _Step, _Mid, _Last - _Step, _Pred);

	mov	edx, DWORD PTR tv203[esp+60]
	mov	eax, DWORD PTR __Mid$[esp+60]
	mov	ecx, DWORD PTR tv200[esp+60]
	push	ebp
	push	edx
	push	eax
	push	ecx
	call	??$_Med3@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@00P6A_NU12@1@Z@Z ; std::_Med3<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
	add	esp, 64					; 00000040H
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi

; 3179 : 	}

	ret	0
$LN2@Median:

; 3176 : 		}
; 3177 : 	else
; 3178 : 		std::_Med3(_First, _Mid, _Last, _Pred);

	mov	edx, DWORD PTR __Pred$[esp]
	mov	eax, DWORD PTR __Mid$[esp]
	push	edx
	push	edi
	push	eax
	push	ecx
	call	??$_Med3@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@00P6A_NU12@1@Z@Z ; std::_Med3<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
	add	esp, 16					; 00000010H
	pop	edi

; 3179 : 	}

	ret	0
??$_Median@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@00P6A_NU12@1@Z@Z ENDP ; std::_Median<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
_TEXT	ENDS
PUBLIC	??$_Make_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@ZPAH0@Z ; std::_Make_heap<CvAdvisorCounsel::Counsel *,int,CvAdvisorCounsel::Counsel,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Make_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@ZPAH0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Bottom$ = 12						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
??$_Make_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@ZPAH0@Z PROC ; std::_Make_heap<CvAdvisorCounsel::Counsel *,int,CvAdvisorCounsel::Counsel,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>, COMDAT

; 2191 : 	_Diff _Bottom = _Last - _First;

	mov	ecx, DWORD PTR __Last$[esp-4]
	push	ebx
	push	ebp
	push	esi
	mov	esi, DWORD PTR __First$[esp+8]
	sub	ecx, esi
	mov	eax, 2114445439				; 7e07e07fH
	imul	ecx
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	DWORD PTR __Bottom$[esp+8], eax

; 2192 : 	for (_Diff _Hole = _Bottom / 2; 0 < _Hole; )

	cdq
	sub	eax, edx
	mov	ebx, eax
	sar	ebx, 1
	push	edi
	test	ebx, ebx
	jle	SHORT $LN1@Make_heap
	mov	ebp, ebx
	imul	ebp, 520				; 00000208H
	add	ebp, esi
	npad	8
$LL2@Make_heap:

; 2193 : 		{	// reheap top half, bottom to top
; 2194 : 		--_Hole;
; 2195 : 		std::_Adjust_heap(_First, _Hole, _Bottom,
; 2196 : 			_Ty(*(_First + _Hole)), _Pred);

	mov	eax, DWORD PTR __Pred$[esp+12]
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	sub	esp, 520				; 00000208H
	mov	edi, esp
	sub	ebp, 520				; 00000208H
	mov	ecx, 130				; 00000082H
	mov	esi, ebp
	rep movsd
	mov	ecx, DWORD PTR __Bottom$[esp+536]
	push	ecx
	dec	ebx
	push	ebx
	push	edx
	call	??$_Adjust_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@HHU12@P6A_N11@Z@Z ; std::_Adjust_heap<CvAdvisorCounsel::Counsel *,int,CvAdvisorCounsel::Counsel,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
	add	esp, 536				; 00000218H
	test	ebx, ebx
	jg	SHORT $LL2@Make_heap
$LN1@Make_heap:

; 2197 : 		}
; 2198 : 	}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	0
??$_Make_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@ZPAH0@Z ENDP ; std::_Make_heap<CvAdvisorCounsel::Counsel *,int,CvAdvisorCounsel::Counsel,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
_TEXT	ENDS
PUBLIC	??$_Insertion_sort1@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@ZU12@@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z0@Z ; std::_Insertion_sort1<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel),CvAdvisorCounsel::Counsel>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Insertion_sort1@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@ZU12@@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z0@Z
_TEXT	SEGMENT
tv203 = -536						; size = 4
__Next1$225100 = -532					; size = 4
$T225987 = -528						; size = 1
__Cat$225992 = -528					; size = 1
$T225989 = -528						; size = 1
__Next$225096 = -524					; size = 4
__Val$225101 = -520					; size = 520
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 4
___formal$ = 20						; size = 4
??$_Insertion_sort1@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@ZU12@@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z0@Z PROC ; std::_Insertion_sort1<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel),CvAdvisorCounsel::Counsel>, COMDAT

; 3123 : 	{	// insertion sort [_First, _Last), using _Pred

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H

; 3124 : 	if (_First != _Last)

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Last$[ebp]
	sub	esp, 540				; 0000021cH
	push	ebx
	push	esi
	push	edi
	cmp	eax, ecx
	je	$LN6@Insertion_

; 3125 : 		for (_BidIt _Next = _First; ++_Next != _Last; )

	lea	ebx, DWORD PTR [eax+520]
	mov	DWORD PTR __Next$225096[esp+552], ebx
	cmp	ebx, ecx
	je	$LN6@Insertion_
	lea	ecx, DWORD PTR [ebx-520]
	mov	DWORD PTR tv203[esp+552], ecx
	jmp	SHORT $LN7@Insertion_
	npad	5
$LL20@Insertion_:
	mov	eax, DWORD PTR __First$[ebp]
$LN7@Insertion_:

; 3126 : 			{	// order next element
; 3127 : 			_BidIt _Next1 = _Next;
; 3128 : 			_Ty _Val = *_Next;

	mov	ecx, 130				; 00000082H
	mov	esi, ebx
	lea	edi, DWORD PTR __Val$225101[esp+552]
	rep movsd

; 3129 : 
; 3130 : 			if (_DEBUG_LT_PRED(_Pred, _Val, *_First))

	sub	esp, 520				; 00000208H
	mov	esi, eax
	mov	edi, esp
	mov	ecx, 130				; 00000082H
	rep movsd
	sub	esp, 520				; 00000208H
	mov	ecx, 130				; 00000082H
	mov	esi, ebx
	mov	edi, esp
	mov	DWORD PTR __Next1$225100[esp+1592], ebx
	rep movsd
	call	DWORD PTR __Pred$[ebp]
	add	esp, 1040				; 00000410H
	test	al, al
	je	SHORT $LN5@Insertion_

; 3131 : 				{	// found new earliest element, move to front
; 3132 : 				_STDEXT unchecked_copy_backward(_First, _Next, ++_Next1);

	mov	edi, DWORD PTR __First$[ebp]
	mov	BYTE PTR $T225987[esp+552], 0
	mov	edx, DWORD PTR $T225987[esp+552]
	mov	eax, DWORD PTR __Cat$225992[esp+552]
	mov	ecx, DWORD PTR $T225989[esp+552]
	push	edx
	mov	edx, DWORD PTR tv203[esp+556]
	push	eax
	push	ecx
	add	edx, 1040				; 00000410H
	push	edx
	push	ebx
	push	edi
	call	??$_Copy_backward_opt@PAUCounsel@CvAdvisorCounsel@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUCounsel@CvAdvisorCounsel@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel *,std::random_access_iterator_tag>
	add	esp, 24					; 00000018H

; 3133 : 				*_First = _Val;
; 3134 : 				}
; 3135 : 			else

	jmp	$LN21@Insertion_
$LN5@Insertion_:

; 3136 : 				{	// look for insertion point after first
; 3137 : 				for (_BidIt _First1 = _Next1;
; 3138 : 					_DEBUG_LT_PRED(_Pred, _Val, *--_First1);
; 3139 : 					_Next1 = _First1)

	mov	ebx, DWORD PTR tv203[esp+552]
	sub	esp, 520				; 00000208H
	mov	edi, esp
	mov	ecx, 130				; 00000082H
	mov	esi, ebx
	rep movsd
	sub	esp, 520				; 00000208H
	mov	ecx, 130				; 00000082H
	lea	esi, DWORD PTR __Val$225101[esp+1592]
	mov	edi, esp
	rep movsd
	call	DWORD PTR __Pred$[ebp]
	add	esp, 1040				; 00000410H
	test	al, al
	je	SHORT $LN1@Insertion_
	npad	1
$LL3@Insertion_:

; 3140 : 					*_Next1 = *_First1;	// move hole down

	mov	edi, DWORD PTR __Next1$225100[esp+552]
	mov	esi, ebx
	mov	ecx, 130				; 00000082H
	rep movsd
	mov	DWORD PTR __Next1$225100[esp+552], ebx
	sub	esp, 520				; 00000208H
	sub	ebx, 520				; 00000208H
	mov	edi, esp
	mov	ecx, 130				; 00000082H
	mov	esi, ebx
	rep movsd
	sub	esp, 520				; 00000208H
	mov	ecx, 130				; 00000082H
	lea	esi, DWORD PTR __Val$225101[esp+1592]
	mov	edi, esp
	rep movsd
	call	DWORD PTR __Pred$[ebp]
	add	esp, 1040				; 00000410H
	test	al, al
	jne	SHORT $LL3@Insertion_
$LN1@Insertion_:

; 3141 : 				*_Next1 = _Val;	// insert element in hole

	mov	edi, DWORD PTR __Next1$225100[esp+552]
	mov	ebx, DWORD PTR __Next$225096[esp+552]
$LN21@Insertion_:
	add	DWORD PTR tv203[esp+552], 520		; 00000208H
	add	ebx, 520				; 00000208H
	mov	ecx, 130				; 00000082H
	lea	esi, DWORD PTR __Val$225101[esp+552]
	rep movsd
	mov	DWORD PTR __Next$225096[esp+552], ebx
	cmp	ebx, DWORD PTR __Last$[ebp]
	jne	$LL20@Insertion_
$LN6@Insertion_:

; 3142 : 				}
; 3143 : 			}
; 3144 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Insertion_sort1@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@ZU12@@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z0@Z ENDP ; std::_Insertion_sort1<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel),CvAdvisorCounsel::Counsel>
_TEXT	ENDS
PUBLIC	??$_Pop_heap_0@PAUCounsel@CvAdvisorCounsel@@U12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z0@Z ; std::_Pop_heap_0<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Pop_heap_0@PAUCounsel@CvAdvisorCounsel@@U12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 4
___formal$ = 20						; size = 4
??$_Pop_heap_0@PAUCounsel@CvAdvisorCounsel@@U12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z0@Z PROC ; std::_Pop_heap_0<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>, COMDAT

; 2144 : 	_Pop_heap(_First, _Last - 1, _Last - 1,
; 2145 : 		_Ty(*(_Last - 1)), _Pred, _Dist_type(_First));

	mov	ecx, DWORD PTR __Pred$[esp-4]
	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	push	esi
	push	edi
	push	0
	push	ecx
	sub	esp, 520				; 00000208H
	add	eax, -520				; fffffdf8H
	mov	edi, esp
	push	eax
	push	eax
	mov	esi, eax
	mov	ecx, 130				; 00000082H
	push	edx
	rep movsd
	call	??$_Pop_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@00U12@P6A_N11@ZPAH@Z ; std::_Pop_heap<CvAdvisorCounsel::Counsel *,int,CvAdvisorCounsel::Counsel,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
	add	esp, 540				; 0000021cH

; 2146 : 	}

	pop	edi
	pop	esi
	ret	0
??$_Pop_heap_0@PAUCounsel@CvAdvisorCounsel@@U12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z0@Z ENDP ; std::_Pop_heap_0<CvAdvisorCounsel::Counsel *,CvAdvisorCounsel::Counsel,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
_TEXT	ENDS
PUBLIC	??1CvAdvisorCounsel@@QAE@XZ			; CvAdvisorCounsel::~CvAdvisorCounsel
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvadvisorcounsel.cpp
;	COMDAT ??1CvAdvisorCounsel@@QAE@XZ
_TEXT	SEGMENT
??1CvAdvisorCounsel@@QAE@XZ PROC			; CvAdvisorCounsel::~CvAdvisorCounsel, COMDAT
; _this$ = ecx

; 29   : 	Uninit();
; 30   : }

	mov	eax, DWORD PTR [ecx]
	push	eax
	mov	DWORD PTR [ecx+4], 0
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	pop	ecx
	ret	0
??1CvAdvisorCounsel@@QAE@XZ ENDP			; CvAdvisorCounsel::~CvAdvisorCounsel
_TEXT	ENDS
PUBLIC	?resize@?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@QAEXI@Z ; FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>::resize
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?resize@?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@QAEXI@Z
_TEXT	SEGMENT
_uiNewSize$ = 8						; size = 4
?resize@?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@QAEXI@Z PROC ; FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>::resize, COMDAT
; _this$ = ecx

; 353  : 	{

	push	esi
	push	edi

; 354  : 		if( m_uiCurrMaxSize < uiNewSize ){

	mov	edi, DWORD PTR _uiNewSize$[esp+4]
	mov	esi, ecx
	cmp	DWORD PTR [esi+8], edi
	jae	SHORT $LN6@resize

; 355  : 			GrowSize(uiNewSize);

	push	edi
	call	?GrowSize@?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@IAEXI@Z ; FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>::GrowSize

; 356  : 		}
; 357  : 		m_uiCurrSize = MIN(uiNewSize, m_uiCurrMaxSize);

	cmp	DWORD PTR [esi+8], edi
	jae	SHORT $LN6@resize
	mov	eax, DWORD PTR [esi+8]
	pop	edi
	mov	DWORD PTR [esi+4], eax
	pop	esi

; 358  : 	};

	ret	4

; 356  : 		}
; 357  : 		m_uiCurrSize = MIN(uiNewSize, m_uiCurrMaxSize);

$LN6@resize:
	lea	eax, DWORD PTR _uiNewSize$[esp+4]
	mov	ecx, DWORD PTR [eax]
	pop	edi
	mov	DWORD PTR [esi+4], ecx
	pop	esi

; 358  : 	};

	ret	4
?resize@?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@QAEXI@Z ENDP ; FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>::resize
_TEXT	ENDS
PUBLIC	??$_Unguarded_partition@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YA?AU?$pair@PAUCounsel@CvAdvisorCounsel@@PAU12@@0@PAUCounsel@CvAdvisorCounsel@@0P6A_NU23@1@Z@Z ; std::_Unguarded_partition<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Unguarded_partition@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YA?AU?$pair@PAUCounsel@CvAdvisorCounsel@@PAU12@@0@PAUCounsel@CvAdvisorCounsel@@0P6A_NU23@1@Z@Z
_TEXT	SEGMENT
__Plast$ = -3660					; size = 4
tv403 = -3656						; size = 4
tv233 = -3656						; size = 4
$T226164 = -3656					; size = 4
__Gfirst$ = -3652					; size = 4
__Glast$ = -3648					; size = 4
$T226163 = -3644					; size = 4
__Tmp$226118 = -3640					; size = 520
__Tmp$226161 = -3120					; size = 520
__Tmp$226175 = -2600					; size = 520
__Tmp$226148 = -2080					; size = 520
__Tmp$226188 = -1560					; size = 520
__Tmp$226131 = -1040					; size = 520
__Tmp$226202 = -520					; size = 520
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 4
??$_Unguarded_partition@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YA?AU?$pair@PAUCounsel@CvAdvisorCounsel@@PAU12@@0@PAUCounsel@CvAdvisorCounsel@@0P6A_NU23@1@Z@Z PROC ; std::_Unguarded_partition<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>, COMDAT

; 3185 : 	{	// partition [_First, _Last), using _Pred

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 3660				; 00000e4cH
	push	ebx
	push	esi

; 3186 : 	_RanIt _Mid = _First + (_Last - _First) / 2;

	mov	esi, DWORD PTR __First$[ebp]
	push	edi
	mov	edi, DWORD PTR __Last$[ebp]
	mov	ecx, edi
	sub	ecx, esi
	mov	eax, 2114445439				; 7e07e07fH
	imul	ecx
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cdq
	sub	eax, edx
	mov	ebx, eax

; 3187 : 	std::_Median(_First, _Mid, _Last - 1, _Pred);

	mov	eax, DWORD PTR __Pred$[ebp]
	sar	ebx, 1
	imul	ebx, 520				; 00000208H
	push	eax
	add	edi, -520				; fffffdf8H
	push	edi
	add	ebx, esi
	push	ebx
	push	esi
	call	??$_Median@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@00P6A_NU12@1@Z@Z ; std::_Median<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
	add	esp, 16					; 00000010H

; 3188 : 	_RanIt _Pfirst = _Mid;
; 3189 : 	_RanIt _Plast = _Pfirst + 1;

	lea	edx, DWORD PTR [ebx+520]
	mov	DWORD PTR __Plast$[esp+3672], edx

; 3190 : 
; 3191 : 	while (_First < _Pfirst
; 3192 : 		&& !_DEBUG_LT_PRED(_Pred, *(_Pfirst - 1), *_Pfirst)
; 3193 : 		&& !_Pred(*_Pfirst, *(_Pfirst - 1)))

	cmp	esi, ebx
	jae	SHORT $LN69@Unguarded_
	npad	4
$LL27@Unguarded_:
	sub	esp, 520				; 00000208H
	lea	eax, DWORD PTR [ebx-520]
	mov	edi, esp
	mov	ecx, 130				; 00000082H
	mov	esi, ebx
	rep movsd
	sub	esp, 520				; 00000208H
	mov	esi, eax
	mov	ecx, 130				; 00000082H
	mov	edi, esp
	mov	DWORD PTR tv233[esp+4712], eax
	rep movsd
	call	DWORD PTR __Pred$[ebp]
	add	esp, 1040				; 00000410H
	test	al, al
	jne	SHORT $LN80@Unguarded_
	mov	esi, DWORD PTR tv233[esp+3672]
	sub	esp, 520				; 00000208H
	mov	edi, esp
	mov	ecx, 130				; 00000082H
	rep movsd
	sub	esp, 520				; 00000208H
	mov	ecx, 130				; 00000082H
	mov	esi, ebx
	mov	edi, esp
	rep movsd
	call	DWORD PTR __Pred$[ebp]
	add	esp, 1040				; 00000410H
	test	al, al
	jne	SHORT $LN80@Unguarded_

; 3194 : 		--_Pfirst;

	mov	ebx, DWORD PTR tv233[esp+3672]
	cmp	DWORD PTR __First$[ebp], ebx
	jb	SHORT $LL27@Unguarded_
$LN80@Unguarded_:

; 3190 : 
; 3191 : 	while (_First < _Pfirst
; 3192 : 		&& !_DEBUG_LT_PRED(_Pred, *(_Pfirst - 1), *_Pfirst)
; 3193 : 		&& !_Pred(*_Pfirst, *(_Pfirst - 1)))

	mov	edx, DWORD PTR __Plast$[esp+3672]
$LN69@Unguarded_:

; 3195 : 	while (_Plast < _Last
; 3196 : 		&& !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst)
; 3197 : 		&& !_Pred(*_Pfirst, *_Plast))

	cmp	edx, DWORD PTR __Last$[ebp]
	jae	SHORT $LN24@Unguarded_
	jmp	SHORT $LN25@Unguarded_
$LL81@Unguarded_:
	mov	edx, DWORD PTR __Plast$[esp+3672]
$LN25@Unguarded_:
	sub	esp, 520				; 00000208H
	mov	edi, esp
	mov	ecx, 130				; 00000082H
	mov	esi, ebx
	rep movsd
	sub	esp, 520				; 00000208H
	mov	esi, edx
	mov	ecx, 130				; 00000082H
	mov	edi, esp
	rep movsd
	call	DWORD PTR __Pred$[ebp]
	add	esp, 1040				; 00000410H
	test	al, al
	jne	SHORT $LN82@Unguarded_
	mov	esi, DWORD PTR __Plast$[esp+3672]
	sub	esp, 520				; 00000208H
	mov	edi, esp
	mov	ecx, 130				; 00000082H
	rep movsd
	sub	esp, 520				; 00000208H
	mov	ecx, 130				; 00000082H
	mov	esi, ebx
	mov	edi, esp
	rep movsd
	call	DWORD PTR __Pred$[ebp]
	add	esp, 1040				; 00000410H
	test	al, al
	jne	SHORT $LN82@Unguarded_

; 3198 : 		++_Plast;

	mov	eax, DWORD PTR __Plast$[esp+3672]
	add	eax, 520				; 00000208H
	mov	DWORD PTR __Plast$[esp+3672], eax
	cmp	eax, DWORD PTR __Last$[ebp]
	jb	SHORT $LL81@Unguarded_
$LN82@Unguarded_:

; 3195 : 	while (_Plast < _Last
; 3196 : 		&& !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst)
; 3197 : 		&& !_Pred(*_Pfirst, *_Plast))

	mov	edx, DWORD PTR __Plast$[esp+3672]
$LN24@Unguarded_:

; 3199 : 
; 3200 : 	_RanIt _Gfirst = _Plast;

	mov	eax, edx

; 3201 : 	_RanIt _Glast = _Pfirst;

	mov	DWORD PTR __Glast$[esp+3672], ebx
$LN89@Unguarded_:

; 3199 : 
; 3200 : 	_RanIt _Gfirst = _Plast;

	mov	DWORD PTR __Gfirst$[esp+3672], eax
$LL23@Unguarded_:

; 3202 : 
; 3203 : 	for (; ; )
; 3204 : 		{	// partition
; 3205 : 		for (; _Gfirst < _Last; ++_Gfirst)

	cmp	eax, DWORD PTR __Last$[ebp]
	jae	$LN73@Unguarded_
	jmp	SHORT $LN21@Unguarded_
$LL83@Unguarded_:
	mov	eax, DWORD PTR __Gfirst$[esp+3672]
$LN21@Unguarded_:

; 3206 : 			if (_DEBUG_LT_PRED(_Pred, *_Pfirst, *_Gfirst))

	sub	esp, 520				; 00000208H
	mov	esi, eax
	mov	edi, esp
	mov	ecx, 130				; 00000082H
	rep movsd
	sub	esp, 520				; 00000208H
	mov	ecx, 130				; 00000082H
	mov	esi, ebx
	mov	edi, esp
	rep movsd
	call	DWORD PTR __Pred$[ebp]
	add	esp, 1040				; 00000410H
	test	al, al
	jne	SHORT $LN84@Unguarded_

; 3207 : 				;
; 3208 : 			else if (_Pred(*_Gfirst, *_Pfirst))

	sub	esp, 520				; 00000208H
	mov	edi, esp
	mov	ecx, 130				; 00000082H
	mov	esi, ebx
	rep movsd
	mov	esi, DWORD PTR __Gfirst$[esp+4192]
	sub	esp, 520				; 00000208H
	mov	ecx, 130				; 00000082H
	mov	edi, esp
	rep movsd
	call	DWORD PTR __Pred$[ebp]
	add	esp, 1040				; 00000410H
	test	al, al
	jne	SHORT $LN85@Unguarded_

; 3209 : 				break;
; 3210 : 			else
; 3211 : 				std::iter_swap(_Plast++, _Gfirst);

	mov	eax, DWORD PTR __Plast$[esp+3672]
	mov	edx, eax
	add	eax, 520				; 00000208H
	mov	DWORD PTR __Plast$[esp+3672], eax
	mov	eax, DWORD PTR __Gfirst$[esp+3672]
	cmp	edx, eax
	je	SHORT $LN20@Unguarded_
	mov	ecx, 130				; 00000082H
	mov	esi, edx
	lea	edi, DWORD PTR __Tmp$226118[esp+3672]
	rep movsd
	mov	ecx, 130				; 00000082H
	mov	esi, eax
	mov	edi, edx
	rep movsd
	mov	ecx, 130				; 00000082H
	lea	esi, DWORD PTR __Tmp$226118[esp+3672]
	mov	edi, eax
	rep movsd
	jmp	SHORT $LN20@Unguarded_
$LN84@Unguarded_:
	mov	eax, DWORD PTR __Gfirst$[esp+3672]
$LN20@Unguarded_:

; 3202 : 
; 3203 : 	for (; ; )
; 3204 : 		{	// partition
; 3205 : 		for (; _Gfirst < _Last; ++_Gfirst)

	add	eax, 520				; 00000208H
	mov	DWORD PTR __Gfirst$[esp+3672], eax
	cmp	eax, DWORD PTR __Last$[ebp]
	jb	$LL83@Unguarded_
$LN85@Unguarded_:
	mov	edx, DWORD PTR __Plast$[esp+3672]
	mov	eax, DWORD PTR __Gfirst$[esp+3672]
$LN73@Unguarded_:

; 3212 : 		for (; _First < _Glast; --_Glast)

	mov	ecx, DWORD PTR __Glast$[esp+3672]
	cmp	DWORD PTR __First$[ebp], ecx
	jae	$LN74@Unguarded_
	add	ecx, -520				; fffffdf8H
	mov	DWORD PTR tv403[esp+3672], ecx
$LN14@Unguarded_:

; 3213 : 			if (_DEBUG_LT_PRED(_Pred, *(_Glast - 1), *_Pfirst))

	sub	esp, 520				; 00000208H
	mov	edi, esp
	mov	ecx, 130				; 00000082H
	mov	esi, ebx
	rep movsd
	mov	esi, DWORD PTR tv403[esp+4192]
	sub	esp, 520				; 00000208H
	mov	ecx, 130				; 00000082H
	mov	edi, esp
	rep movsd
	call	DWORD PTR __Pred$[ebp]
	add	esp, 1040				; 00000410H
	test	al, al
	jne	SHORT $LN87@Unguarded_

; 3214 : 				;
; 3215 : 			else if (_Pred(*_Pfirst, *(_Glast - 1)))

	mov	esi, DWORD PTR tv403[esp+3672]
	sub	esp, 520				; 00000208H
	mov	edi, esp
	mov	ecx, 130				; 00000082H
	rep movsd
	sub	esp, 520				; 00000208H
	mov	ecx, 130				; 00000082H
	mov	esi, ebx
	mov	edi, esp
	rep movsd
	call	DWORD PTR __Pred$[ebp]
	add	esp, 1040				; 00000410H
	test	al, al
	jne	SHORT $LN88@Unguarded_

; 3216 : 				break;
; 3217 : 			else
; 3218 : 				std::iter_swap(--_Pfirst, _Glast - 1);

	mov	eax, DWORD PTR tv403[esp+3672]
	sub	ebx, 520				; 00000208H
	cmp	ebx, eax
	je	SHORT $LN13@Unguarded_
	mov	ecx, 130				; 00000082H
	mov	esi, ebx
	lea	edi, DWORD PTR __Tmp$226131[esp+3672]
	rep movsd
	mov	ecx, 130				; 00000082H
	mov	esi, eax
	mov	edi, ebx
	rep movsd
	mov	ecx, 130				; 00000082H
	lea	esi, DWORD PTR __Tmp$226131[esp+3672]
	mov	edi, eax
	rep movsd
	jmp	SHORT $LN13@Unguarded_
$LN87@Unguarded_:
	mov	eax, DWORD PTR tv403[esp+3672]
$LN13@Unguarded_:

; 3212 : 		for (; _First < _Glast; --_Glast)

	mov	ecx, DWORD PTR __Glast$[esp+3672]
	sub	ecx, 520				; 00000208H
	sub	eax, 520				; 00000208H
	mov	DWORD PTR __Glast$[esp+3672], ecx
	mov	DWORD PTR tv403[esp+3672], eax
	cmp	DWORD PTR __First$[ebp], ecx
	jb	$LN14@Unguarded_
$LN88@Unguarded_:
	mov	edx, DWORD PTR __Plast$[esp+3672]
	mov	eax, DWORD PTR __Gfirst$[esp+3672]
$LN74@Unguarded_:

; 3219 : 		if (_Glast == _First && _Gfirst == _Last)

	mov	esi, DWORD PTR __Glast$[esp+3672]
	cmp	esi, DWORD PTR __First$[ebp]
	jne	$LN6@Unguarded_
	cmp	eax, DWORD PTR __Last$[ebp]
	je	$LN75@Unguarded_

; 3221 : 
; 3222 : 		if (_Glast == _First)
; 3223 : 			{	// no room at bottom, rotate pivot upward
; 3224 : 			if (_Plast != _Gfirst)

	cmp	edx, eax
	je	SHORT $LN44@Unguarded_

; 3225 : 				std::iter_swap(_Pfirst, _Plast);

	cmp	ebx, edx
	je	SHORT $LN44@Unguarded_
	mov	ecx, 130				; 00000082H
	mov	esi, ebx
	lea	edi, DWORD PTR __Tmp$226148[esp+3672]
	rep movsd
	mov	ecx, 130				; 00000082H
	mov	esi, edx
	mov	edi, ebx
	rep movsd
	mov	ecx, 130				; 00000082H
	lea	esi, DWORD PTR __Tmp$226148[esp+3672]
	mov	edi, edx
	rep movsd
$LN44@Unguarded_:

; 3226 : 			++_Plast;
; 3227 : 			std::iter_swap(_Pfirst++, _Gfirst++);

	mov	ecx, eax
	mov	esi, ebx
	add	edx, 520				; 00000208H
	add	eax, 520				; 00000208H
	add	ebx, 520				; 00000208H
	mov	DWORD PTR __Plast$[esp+3672], edx
	mov	DWORD PTR $T226164[esp+3672], ecx
	mov	DWORD PTR $T226163[esp+3672], esi
	mov	DWORD PTR __Gfirst$[esp+3672], eax
	cmp	esi, ecx
	je	$LL23@Unguarded_
	mov	ecx, 130				; 00000082H
	lea	edi, DWORD PTR __Tmp$226161[esp+3672]
	rep movsd
	mov	esi, DWORD PTR $T226164[esp+3672]
	mov	edi, DWORD PTR $T226163[esp+3672]
	mov	ecx, 130				; 00000082H
	rep movsd
	mov	edi, DWORD PTR $T226164[esp+3672]
	mov	ecx, 130				; 00000082H
	lea	esi, DWORD PTR __Tmp$226161[esp+3672]
	rep movsd
	jmp	$LL23@Unguarded_
$LN6@Unguarded_:

; 3228 : 			}
; 3229 : 		else if (_Gfirst == _Last)
; 3230 : 			{	// no room at top, rotate pivot downward
; 3231 : 			if (--_Glast != --_Pfirst)

	sub	esi, 520				; 00000208H
	mov	DWORD PTR __Glast$[esp+3672], esi
	cmp	eax, DWORD PTR __Last$[ebp]
	jne	SHORT $LN3@Unguarded_
	sub	ebx, 520				; 00000208H
	cmp	esi, ebx
	je	SHORT $LN54@Unguarded_

; 3232 : 				std::iter_swap(_Glast, _Pfirst);

	mov	ecx, 130				; 00000082H
	lea	edi, DWORD PTR __Tmp$226175[esp+3672]
	rep movsd
	mov	edi, DWORD PTR __Glast$[esp+3672]
	mov	ecx, 130				; 00000082H
	mov	esi, ebx
	rep movsd
	mov	ecx, 130				; 00000082H
	lea	esi, DWORD PTR __Tmp$226175[esp+3672]
	mov	edi, ebx
	rep movsd
$LN54@Unguarded_:

; 3233 : 			std::iter_swap(_Pfirst, --_Plast);

	sub	edx, 520				; 00000208H
	mov	DWORD PTR __Plast$[esp+3672], edx
	cmp	ebx, edx
	je	$LL23@Unguarded_
	mov	ecx, 130				; 00000082H
	mov	esi, ebx
	lea	edi, DWORD PTR __Tmp$226188[esp+3672]
	rep movsd
	mov	ecx, 130				; 00000082H
	mov	esi, edx
	mov	edi, ebx
	rep movsd
	mov	ecx, 130				; 00000082H
	lea	esi, DWORD PTR __Tmp$226188[esp+3672]
	mov	edi, edx
	rep movsd

; 3234 : 			}
; 3235 : 		else

	jmp	$LL23@Unguarded_
$LN3@Unguarded_:

; 3236 : 			std::iter_swap(_Gfirst++, --_Glast);

	cmp	eax, esi
	je	SHORT $LN64@Unguarded_
	mov	ecx, 130				; 00000082H
	mov	esi, eax
	lea	edi, DWORD PTR __Tmp$226202[esp+3672]
	rep movsd
	mov	esi, DWORD PTR __Glast$[esp+3672]
	mov	ecx, 130				; 00000082H
	mov	edi, eax
	rep movsd
	mov	edi, DWORD PTR __Glast$[esp+3672]
	mov	ecx, 130				; 00000082H
	lea	esi, DWORD PTR __Tmp$226202[esp+3672]
	rep movsd
$LN64@Unguarded_:
	add	eax, 520				; 00000208H

; 3237 : 		}

	jmp	$LN89@Unguarded_
$LN75@Unguarded_:

; 3220 : 			return (pair<_RanIt, _RanIt>(_Pfirst, _Plast));

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 3238 : 	}

	pop	edi
	pop	esi
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [eax+4], edx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unguarded_partition@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YA?AU?$pair@PAUCounsel@CvAdvisorCounsel@@PAU12@@0@PAUCounsel@CvAdvisorCounsel@@0P6A_NU23@1@Z@Z ENDP ; std::_Unguarded_partition<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
_TEXT	ENDS
PUBLIC	??$make_heap@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z ; std::make_heap<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
; Function compile flags: /Ogtpy
;	COMDAT ??$make_heap@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 4
??$make_heap@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z PROC ; std::make_heap<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>, COMDAT

; 2203 : 	{	// make [_First, _Last) into a heap, using _Pred

	push	esi

; 2204 : 	_DEBUG_RANGE(_First, _Last);
; 2205 : 	_DEBUG_POINTER(_Pred);
; 2206 : 	if (1 < _Last - _First)

	mov	esi, DWORD PTR __Last$[esp]
	push	edi
	mov	edi, DWORD PTR __First$[esp+4]
	mov	ecx, esi
	sub	ecx, edi
	mov	eax, 2114445439				; 7e07e07fH
	imul	ecx
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	eax, 1
	jle	SHORT $LN1@make_heap

; 2207 : 		_Make_heap(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Pred,
; 2208 : 			_Dist_type(_First), _Val_type(_First));

	mov	ecx, DWORD PTR __Pred$[esp+4]
	push	0
	push	0
	push	ecx
	push	esi
	push	edi
	call	??$_Make_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@ZPAH0@Z ; std::_Make_heap<CvAdvisorCounsel::Counsel *,int,CvAdvisorCounsel::Counsel,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
	add	esp, 20					; 00000014H
$LN1@make_heap:
	pop	edi
	pop	esi

; 2209 : 	}

	ret	0
??$make_heap@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z ENDP ; std::make_heap<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
_TEXT	ENDS
PUBLIC	??$_Insertion_sort@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z ; std::_Insertion_sort<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Insertion_sort@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 4
??$_Insertion_sort@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z PROC ; std::_Insertion_sort<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>, COMDAT

; 3150 : 	std::_Insertion_sort1(_First, _Last, _Pred, _Val_type(_First));

	mov	eax, DWORD PTR __Pred$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	push	0
	push	eax
	push	ecx
	push	edx
	call	??$_Insertion_sort1@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@ZU12@@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z0@Z ; std::_Insertion_sort1<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel),CvAdvisorCounsel::Counsel>
	add	esp, 16					; 00000010H

; 3151 : 	}

	ret	0
??$_Insertion_sort@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z ENDP ; std::_Insertion_sort<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
_TEXT	ENDS
PUBLIC	??$pop_heap@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z ; std::pop_heap<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
; Function compile flags: /Ogtpy
;	COMDAT ??$pop_heap@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 4
??$pop_heap@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z PROC ; std::pop_heap<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>, COMDAT

; 2151 : 	{	// pop *_First to *(_Last - 1) and reheap, using _Pred

	push	ebx

; 2152 : 	_DEBUG_RANGE(_First, _Last);
; 2153 : 	_DEBUG_POINTER(_Pred);
; 2154 : 	_DEBUG_HEAP_PRED(_First, _Last, _Pred);
; 2155 : 	if (1 < _Last - _First)

	mov	ebx, DWORD PTR __First$[esp]
	push	esi
	mov	esi, DWORD PTR __Last$[esp+4]
	mov	ecx, esi
	sub	ecx, ebx
	mov	eax, 2114445439				; 7e07e07fH
	imul	ecx
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	eax, 1
	push	edi
	jle	SHORT $LN6@pop_heap

; 2156 : 		_Pop_heap_0(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Pred, _Val_type(_First));

	mov	ecx, DWORD PTR __Pred$[esp+8]
	push	0
	push	ecx
	lea	eax, DWORD PTR [esi-520]
	sub	esp, 520				; 00000208H
	mov	edi, esp
	push	eax
	push	eax
	mov	esi, eax
	mov	ecx, 130				; 00000082H
	push	ebx
	rep movsd
	call	??$_Pop_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@00U12@P6A_N11@ZPAH@Z ; std::_Pop_heap<CvAdvisorCounsel::Counsel *,int,CvAdvisorCounsel::Counsel,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
	add	esp, 540				; 0000021cH
$LN6@pop_heap:

; 2157 : 	}

	pop	edi
	pop	esi
	pop	ebx
	ret	0
??$pop_heap@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z ENDP ; std::pop_heap<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
_TEXT	ENDS
PUBLIC	?Init@CvAdvisorCounsel@@QAEXXZ			; CvAdvisorCounsel::Init
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvadvisorcounsel.cpp
;	COMDAT ?Init@CvAdvisorCounsel@@QAEXXZ
_TEXT	SEGMENT
$T226280 = -4						; size = 4
?Init@CvAdvisorCounsel@@QAEXXZ PROC			; CvAdvisorCounsel::Init, COMDAT
; _this$ = ecx

; 33   : {

	push	ecx
	push	esi
	mov	esi, ecx

; 34   : 	m_aCounsel.resize(NUM_COUNSEL_SLOTS);

	cmp	DWORD PTR [esi+8], 50			; 00000032H
	push	edi
	lea	edi, DWORD PTR [esi+8]
	mov	DWORD PTR $T226280[esp+12], 50		; 00000032H
	jae	SHORT $LN8@Init
	push	50					; 00000032H
	call	?GrowSize@?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@IAEXI@Z ; FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>::GrowSize
	cmp	DWORD PTR [edi], 50			; 00000032H
	jb	SHORT $LN9@Init
$LN8@Init:
	lea	edi, DWORD PTR $T226280[esp+12]
$LN9@Init:
	mov	eax, DWORD PTR [edi]
	pop	edi
	mov	DWORD PTR [esi+4], eax

; 35   : 	Reset();

	mov	ecx, esi
	pop	esi

; 36   : }

	add	esp, 4

; 35   : 	Reset();

	jmp	?Reset@CvAdvisorCounsel@@QAEXXZ		; CvAdvisorCounsel::Reset
?Init@CvAdvisorCounsel@@QAEXXZ ENDP			; CvAdvisorCounsel::Init
_TEXT	ENDS
PUBLIC	??$_Sort_heap@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z ; std::_Sort_heap<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Sort_heap@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z
_TEXT	SEGMENT
$T226315 = -520						; size = 520
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 4
??$_Sort_heap@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z PROC ; std::_Sort_heap<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>, COMDAT

; 2232 : 	{	// order heap by repeatedly popping, using _Pred

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 524				; 0000020cH
	push	ebx

; 2233 : 	for (; 1 < _Last - _First; --_Last)

	mov	ebx, DWORD PTR __Last$[ebp]
	sub	ebx, DWORD PTR __First$[ebp]
	mov	eax, 2114445439				; 7e07e07fH
	imul	ebx
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	eax, 1
	push	esi
	push	edi
	jle	$LN1@Sort_heap
$LN21@Sort_heap:

; 2234 : 		std::pop_heap(_First, _Last, _Pred);

	mov	eax, DWORD PTR __First$[ebp]
	lea	eax, DWORD PTR [eax+ebx-520]
	mov	esi, eax
	mov	ecx, 130				; 00000082H
	lea	edi, DWORD PTR $T226315[esp+536]
	rep movsd
	mov	esi, DWORD PTR __First$[ebp]
	mov	edi, eax
	mov	ecx, 130				; 00000082H
	rep movsd
	mov	ecx, DWORD PTR __Pred$[ebp]
	push	ecx
	sub	esp, 520				; 00000208H
	mov	edi, esp
	mov	ecx, 130				; 00000082H
	lea	esi, DWORD PTR $T226315[esp+1060]
	rep movsd
	lea	ecx, DWORD PTR [ebx-520]
	mov	eax, 2114445439				; 7e07e07fH
	imul	ecx
	mov	ecx, DWORD PTR __First$[ebp]
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	push	0
	push	ecx
	call	??$_Adjust_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@HHU12@P6A_N11@Z@Z ; std::_Adjust_heap<CvAdvisorCounsel::Counsel *,int,CvAdvisorCounsel::Counsel,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
	sub	ebx, 520				; 00000208H
	mov	eax, 2114445439				; 7e07e07fH
	imul	ebx
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	add	esp, 536				; 00000218H
	cmp	eax, 1
	jg	$LN21@Sort_heap
$LN1@Sort_heap:

; 2235 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Sort_heap@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z ENDP ; std::_Sort_heap<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
_TEXT	ENDS
PUBLIC	??0CvAdvisorCounsel@@QAE@XZ			; CvAdvisorCounsel::CvAdvisorCounsel
EXTRN	___CxxFrameHandler3:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??0CvAdvisorCounsel@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CvAdvisorCounsel@@QAE@XZ$0
__ehfuncinfo$??0CvAdvisorCounsel@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CvAdvisorCounsel@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvadvisorcounsel.cpp
xdata$x	ENDS
;	COMDAT ??0CvAdvisorCounsel@@QAE@XZ
_TEXT	SEGMENT
$T226371 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CvAdvisorCounsel@@QAE@XZ PROC			; CvAdvisorCounsel::CvAdvisorCounsel, COMDAT
; _this$ = ecx

; 23   : {

	push	-1
	push	__ehhandler$??0CvAdvisorCounsel@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	esi
	mov	esi, ecx
	xor	eax, eax
	push	edi
	lea	edi, DWORD PTR [esi+8]
	mov	DWORD PTR _this$[esp+28], esi
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [edi], eax
	mov	DWORD PTR [esi], eax

; 24   : 	Init();

	push	50					; 00000032H
	mov	DWORD PTR __$EHRec$[esp+40], eax
	mov	DWORD PTR $T226371[esp+32], 50		; 00000032H
	call	?GrowSize@?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@IAEXI@Z ; FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>::GrowSize
	cmp	DWORD PTR [edi], 50			; 00000032H
	jb	SHORT $LN21@CvAdvisorC
	lea	edi, DWORD PTR $T226371[esp+28]
$LN21@CvAdvisorC:
	mov	eax, DWORD PTR [edi]
	mov	ecx, esi
	mov	DWORD PTR [esi+4], eax
	call	?Reset@CvAdvisorCounsel@@QAEXXZ		; CvAdvisorCounsel::Reset

; 25   : }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 20					; 00000014H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CvAdvisorCounsel@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$FFastVector@UCounsel@CvAdvisorCounsel@@$00$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@@@QAE@XZ ; FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>::~FFastVector<CvAdvisorCounsel::Counsel,1,297,0,BaseVector<CvAdvisorCounsel::Counsel,1>::FDefaultFastVectorAllocator>
__ehhandler$??0CvAdvisorCounsel@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??0CvAdvisorCounsel@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CvAdvisorCounsel@@QAE@XZ ENDP			; CvAdvisorCounsel::CvAdvisorCounsel
PUBLIC	??$sort_heap@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z ; std::sort_heap<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$sort_heap@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 4
??$sort_heap@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z PROC ; std::sort_heap<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>, COMDAT

; 2241 : 	_DEBUG_RANGE(_First, _Last);
; 2242 : 	_DEBUG_POINTER(_Pred);
; 2243 : 	_DEBUG_HEAP_PRED(_First, _Last, _Pred);
; 2244 : 	_Sort_heap(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Pred);

	jmp	??$_Sort_heap@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z ; std::_Sort_heap<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
??$sort_heap@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z ENDP ; std::sort_heap<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
_TEXT	ENDS
PUBLIC	??$_Sort@PAUCounsel@CvAdvisorCounsel@@HP6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0HP6A_NU12@1@Z@Z ; std::_Sort<CvAdvisorCounsel::Counsel *,int,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Sort@PAUCounsel@CvAdvisorCounsel@@HP6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0HP6A_NU12@1@Z@Z
_TEXT	SEGMENT
__Mid$224889 = -8					; size = 8
__First$ = 8						; size = 4
tv218 = 12						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
__Pred$ = 20						; size = 4
??$_Sort@PAUCounsel@CvAdvisorCounsel@@HP6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0HP6A_NU12@1@Z@Z PROC ; std::_Sort<CvAdvisorCounsel::Counsel *,int,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>, COMDAT

; 3244 : 	{	// order [_First, _Last), using _Pred

	sub	esp, 8
	push	ebx

; 3245 : 	_Diff _Count;
; 3246 : 	for (; _ISORT_MAX < (_Count = _Last - _First) && 0 < _Ideal; )

	mov	ebx, DWORD PTR __First$[esp+8]
	push	ebp
	push	esi
	push	edi
	mov	edi, DWORD PTR __Last$[esp+20]
	mov	ecx, edi
	sub	ecx, ebx
	mov	eax, 2114445439				; 7e07e07fH
	imul	ecx
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	eax, 32					; 00000020H
	jle	$LN26@Sort
	mov	esi, DWORD PTR __Ideal$[esp+20]
$LL7@Sort:
	test	esi, esi
	jle	$LN6@Sort

; 3247 : 		{	// divide and conquer by quicksort
; 3248 : 		pair<_RanIt, _RanIt> _Mid =
; 3249 : 			std::_Unguarded_partition(_First, _Last, _Pred);

	mov	eax, DWORD PTR __Pred$[esp+20]
	push	eax
	push	edi
	lea	ecx, DWORD PTR __Mid$224889[esp+32]
	push	ebx
	push	ecx
	call	??$_Unguarded_partition@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YA?AU?$pair@PAUCounsel@CvAdvisorCounsel@@PAU12@@0@PAUCounsel@CvAdvisorCounsel@@0P6A_NU23@1@Z@Z ; std::_Unguarded_partition<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>

; 3250 : 		_Ideal /= 2, _Ideal += _Ideal / 2;	// allow 1.5 log2(N) divisions
; 3251 : 
; 3252 : 		if (_Mid.first - _First < _Last - _Mid.second)

	mov	ebp, DWORD PTR __Mid$224889[esp+44]
	mov	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	esi, eax
	cdq
	sub	eax, edx
	sar	eax, 1
	add	esi, eax
	mov	ecx, edi
	sub	ecx, ebp
	mov	eax, 2114445439				; 7e07e07fH
	imul	ecx
	mov	ecx, DWORD PTR __Mid$224889[esp+40]
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	DWORD PTR tv218[esp+36], eax
	sub	ecx, ebx
	mov	eax, 2114445439				; 7e07e07fH
	imul	ecx
	mov	ecx, DWORD PTR tv218[esp+36]
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	add	esp, 16					; 00000010H
	cmp	eax, ecx
	jge	SHORT $LN5@Sort

; 3253 : 			{	// loop on second half
; 3254 : 			std::_Sort(_First, _Mid.first, _Ideal, _Pred);

	mov	ecx, DWORD PTR __Pred$[esp+20]
	mov	edx, DWORD PTR __Mid$224889[esp+24]
	push	ecx
	push	esi
	push	edx
	push	ebx
	call	??$_Sort@PAUCounsel@CvAdvisorCounsel@@HP6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0HP6A_NU12@1@Z@Z ; std::_Sort<CvAdvisorCounsel::Counsel *,int,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>

; 3255 : 			_First = _Mid.second;

	mov	ebx, ebp

; 3256 : 			}
; 3257 : 		else

	jmp	SHORT $LN27@Sort
$LN5@Sort:

; 3258 : 			{	// loop on first half
; 3259 : 			std::_Sort(_Mid.second, _Last, _Ideal, _Pred);

	mov	eax, DWORD PTR __Pred$[esp+20]
	push	eax
	push	esi
	push	edi
	push	ebp
	call	??$_Sort@PAUCounsel@CvAdvisorCounsel@@HP6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0HP6A_NU12@1@Z@Z ; std::_Sort<CvAdvisorCounsel::Counsel *,int,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>

; 3260 : 			_Last = _Mid.first;

	mov	edi, DWORD PTR __Mid$224889[esp+40]
$LN27@Sort:
	mov	ecx, edi
	sub	ecx, ebx
	mov	eax, 2114445439				; 7e07e07fH
	imul	ecx
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	add	esp, 16					; 00000010H
	cmp	eax, 32					; 00000020H
	jg	$LL7@Sort
$LN26@Sort:

; 3268 : 		}
; 3269 : 	else if (1 < _Count)

	cmp	eax, 1
	jle	SHORT $LN19@Sort

; 3270 : 		std::_Insertion_sort(_First, _Last, _Pred);	// small

	mov	ecx, DWORD PTR __Pred$[esp+20]
	push	0
	push	ecx
	push	edi
	push	ebx
	call	??$_Insertion_sort1@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@ZU12@@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z0@Z ; std::_Insertion_sort1<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel),CvAdvisorCounsel::Counsel>
	add	esp, 16					; 00000010H
$LN19@Sort:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 3271 : 	}

	add	esp, 8
	ret	0
$LN6@Sort:

; 3261 : 			}
; 3262 : 		}
; 3263 : 
; 3264 : 	if (_ISORT_MAX < _Count)

	cmp	eax, 32					; 00000020H
	jle	SHORT $LN26@Sort

; 3265 : 		{	// heap sort if too many divisions
; 3266 : 		std::make_heap(_First, _Last, _Pred);

	mov	ecx, edi
	sub	ecx, ebx
	mov	eax, 2114445439				; 7e07e07fH
	imul	ecx
	sar	edx, 8
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	cmp	ecx, 1
	jle	SHORT $LN25@Sort
	mov	edx, DWORD PTR __Pred$[esp+20]
	push	0
	push	0
	push	edx
	push	edi
	push	ebx
	call	??$_Make_heap@PAUCounsel@CvAdvisorCounsel@@HU12@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@ZPAH0@Z ; std::_Make_heap<CvAdvisorCounsel::Counsel *,int,CvAdvisorCounsel::Counsel,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
	add	esp, 20					; 00000014H
$LN25@Sort:

; 3267 : 		std::sort_heap(_First, _Last, _Pred);

	mov	eax, DWORD PTR __Pred$[esp+20]
	push	eax
	push	edi
	push	ebx
	call	??$_Sort_heap@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z ; std::_Sort_heap<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 3271 : 	}

	add	esp, 8
	ret	0
??$_Sort@PAUCounsel@CvAdvisorCounsel@@HP6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0HP6A_NU12@1@Z@Z ENDP ; std::_Sort<CvAdvisorCounsel::Counsel *,int,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
_TEXT	ENDS
PUBLIC	??$sort@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z ; std::sort<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
; Function compile flags: /Ogtpy
;	COMDAT ??$sort@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 4
??$sort@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z PROC ; std::sort<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>, COMDAT

; 3277 : 	_DEBUG_RANGE(_First, _Last);
; 3278 : 	_DEBUG_POINTER(_Pred);
; 3279 : 	std::_Sort(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Last - _First, _Pred);

	mov	eax, DWORD PTR __Pred$[esp-4]
	push	esi
	mov	esi, DWORD PTR __Last$[esp]
	push	edi
	mov	edi, DWORD PTR __First$[esp+4]
	push	eax
	mov	ecx, esi
	sub	ecx, edi
	mov	eax, 2114445439				; 7e07e07fH
	imul	ecx
	sar	edx, 8
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	push	ecx
	push	esi
	push	edi
	call	??$_Sort@PAUCounsel@CvAdvisorCounsel@@HP6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0HP6A_NU12@1@Z@Z ; std::_Sort<CvAdvisorCounsel::Counsel *,int,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi

; 3280 : 	}

	ret	0
??$sort@PAUCounsel@CvAdvisorCounsel@@P6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0P6A_NU12@1@Z@Z ENDP ; std::sort<CvAdvisorCounsel::Counsel *,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
_TEXT	ENDS
PUBLIC	?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z ; CvAdvisorCounsel::BuildCounselList
EXTRN	?getNumResourceAvailable@CvPlayer@@QBEHW4ResourceTypes@@_N@Z:PROC ; CvPlayer::getNumResourceAvailable
EXTRN	?getNumResourceInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumResourceInfos
EXTRN	?getMISSION_BUILD@CvTypes@@YA?BW4MissionTypes@@XZ:PROC ; CvTypes::getMISSION_BUILD
EXTRN	?GetMissionData@CvUnit@@QAEPBUMissionData@@H@Z:PROC ; CvUnit::GetMissionData
EXTRN	?GetLengthMissionQueue@CvUnit@@QBEHXZ:PROC	; CvUnit::GetLengthMissionQueue
EXTRN	?nextUnitNode@CvPlot@@QAEPAUIDInfo@@PAU2@@Z:PROC ; CvPlot::nextUnitNode
EXTRN	?getUnit@@YAPAVCvUnit@@ABUIDInfo@@@Z:PROC	; getUnit
EXTRN	?headUnitNode@CvPlot@@QAEPAUIDInfo@@XZ:PROC	; CvPlot::headUnitNode
EXTRN	?getWorkingCity@CvPlot@@QBEPAVCvCity@@XZ:PROC	; CvPlot::getWorkingCity
EXTRN	?canBuild@CvPlayer@@QBE_NPBVCvPlot@@W4BuildTypes@@_N222@Z:PROC ; CvPlayer::canBuild
EXTRN	?IsImprovementResourceTrade@CvImprovementEntry@@QBE_NH@Z:PROC ; CvImprovementEntry::IsImprovementResourceTrade
EXTRN	?getImprovement@CvBuildInfo@@QBEHXZ:PROC	; CvBuildInfo::getImprovement
EXTRN	?getBuildInfo@CvGlobals@@QAEPAVCvBuildInfo@@W4BuildTypes@@@Z:PROC ; CvGlobals::getBuildInfo
EXTRN	?getNumBuildInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumBuildInfos
EXTRN	?getNumResourceTotal@CvPlayer@@QBEHW4ResourceTypes@@_N@Z:PROC ; CvPlayer::getNumResourceTotal
EXTRN	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ:PROC ; CvResourceInfo::getResourceUsage
EXTRN	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z:PROC ; CvPlot::getResourceType
EXTRN	?GetPlots@CvPlayer@@QAEAAV?$FStaticVector@H$0DJAA@$00$0BCJ@$0A@@@XZ:PROC ; CvPlayer::GetPlots
EXTRN	?canConstruct@CvCity@@QBE_NW4BuildingTypes@@_N11PAVCvString@@@Z:PROC ; CvCity::canConstruct
EXTRN	__imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NPBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z:PROC
EXTRN	?getBuildingClassInfo@CvGlobals@@QAEPAVCvBuildingClassInfo@@W4BuildingClassTypes@@@Z:PROC ; CvGlobals::getBuildingClassInfo
EXTRN	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ:PROC ; CvGlobals::getNumBuildingClassInfos
EXTRN	?getPopulation@CvCity@@QBEHXZ:PROC		; CvCity::getPopulation
EXTRN	?IsCloseToNotBeingFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsCloseToNotBeingFriends
EXTRN	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsFriends
EXTRN	?IsCloseToNotBeingAllies@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsCloseToNotBeingAllies
EXTRN	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsAllies
EXTRN	?getOriginalOwner@CvCity@@QBE?AW4PlayerTypes@@XZ:PROC ; CvCity::getOriginalOwner
EXTRN	?GetGoldPerTurnFromDiplomacy@CvTreasury@@QBEHXZ:PROC ; CvTreasury::GetGoldPerTurnFromDiplomacy
EXTRN	?GetImprovementGoldMaintenance@CvTreasury@@QBEHXZ:PROC ; CvTreasury::GetImprovementGoldMaintenance
EXTRN	?GetBuildingGoldMaintenance@CvTreasury@@QBEHXZ:PROC ; CvTreasury::GetBuildingGoldMaintenance
EXTRN	?getMinorCivInfo@CvGlobals@@QAEPAVCvMinorCivInfo@@W4MinorCivTypes@@@Z:PROC ; CvGlobals::getMinorCivInfo
EXTRN	?GetMinorCivType@CvMinorCivAI@@QBE?AW4MinorCivTypes@@XZ:PROC ; CvMinorCivAI::GetMinorCivType
EXTRN	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ:PROC ; CvPlayer::GetMinorCivAI
EXTRN	?DoMinorCivCompetitionStatement@CvDiplomacyAI@@QAEXW4PlayerTypes@@AAW4DiploStatementTypes@@AAH_N@Z:PROC ; CvDiplomacyAI::DoMinorCivCompetitionStatement
EXTRN	?GetMinorCivDisputeLevel@CvDiplomacyAI@@QBE?AW4DisputeLevelTypes@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetMinorCivDisputeLevel
EXTRN	?GetWarmongerThreat@CvDiplomacyAI@@QBE?AW4ThreatTypes@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetWarmongerThreat
EXTRN	?GetExpansionAggressivePosture@CvDiplomacyAI@@QBE?AW4AggressivePostureTypes@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetExpansionAggressivePosture
EXTRN	?GetMilitaryAggressivePosture@CvDiplomacyAI@@QBE?AW4AggressivePostureTypes@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetMilitaryAggressivePosture
EXTRN	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC	; CvTeam::isAtWar
EXTRN	?GetPlayerMilitaryStrengthComparedToUs@CvDiplomacyAI@@QBE?AW4StrengthTypes@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetPlayerMilitaryStrengthComparedToUs
EXTRN	?GetWarProjection@CvDiplomacyAI@@QBE?AW4WarProjectionTypes@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetWarProjection
EXTRN	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC	; CvTeam::isHasMet
EXTRN	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z:PROC ; CvGame::isOption
EXTRN	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ:PROC ; CvPlayer::GetDiplomacyAI
EXTRN	?calculateGoldRate@CvPlayer@@QBEHXZ:PROC	; CvPlayer::calculateGoldRate
EXTRN	?GetGold@CvTreasury@@QBEHXZ:PROC		; CvTreasury::GetGold
EXTRN	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ:PROC ; CvPlayer::GetTreasury
EXTRN	?getTotalPopulation@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getTotalPopulation
EXTRN	?GetScience@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetScience
EXTRN	?GetDomainFreeExperience@CvBuildingEntry@@QBEHH@Z:PROC ; CvBuildingEntry::GetDomainFreeExperience
EXTRN	?GetCombat@CvUnitEntry@@QBEHXZ:PROC		; CvUnitEntry::GetCombat
EXTRN	?GetRangedCombat@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetRangedCombat
EXTRN	?getCivilizationUnits@CvCivilizationInfo@@QBEHH@Z:PROC ; CvCivilizationInfo::getCivilizationUnits
EXTRN	?GetUnitClassType@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetUnitClassType
EXTRN	?GetUnitCombatType@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetUnitCombatType
EXTRN	?GetPrereqAndTech@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetPrereqAndTech
EXTRN	?getNumUnitInfos@CvGlobals@@QAEHXZ:PROC		; CvGlobals::getNumUnitInfos
EXTRN	?isBuildingClassMaxedOut@CvGame@@QAE_NW4BuildingClassTypes@@H@Z:PROC ; CvGame::isBuildingClassMaxedOut
EXTRN	?GetBuildingClassType@CvBuildingEntry@@QBEHXZ:PROC ; CvBuildingEntry::GetBuildingClassType
EXTRN	?GetFlavorValue@CvBuildingEntry@@QBEHH@Z:PROC	; CvBuildingEntry::GetFlavorValue
EXTRN	?GetPrereqAndTech@CvBuildingEntry@@QBEHXZ:PROC	; CvBuildingEntry::GetPrereqAndTech
EXTRN	?getNumBuildingInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumBuildingInfos
EXTRN	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z:PROC ; CvGlobals::getResourceInfo
EXTRN	?GetLocaleTechResource@CvPlayerTechs@@QBE?AW4ResourceTypes@@W4TechTypes@@@Z:PROC ; CvPlayerTechs::GetLocaleTechResource
EXTRN	?GetLocaleTechPriority@CvPlayerTechs@@QBEHW4TechTypes@@@Z:PROC ; CvPlayerTechs::GetLocaleTechPriority
EXTRN	?getImprovementInfo@CvGlobals@@QAEPAVCvImprovementEntry@@W4ImprovementTypes@@@Z:PROC ; CvGlobals::getImprovementInfo
EXTRN	?GetCivTechUniqueImprovement@CvPlayerTechs@@QBE?AW4ImprovementTypes@@W4TechTypes@@@Z:PROC ; CvPlayerTechs::GetCivTechUniqueImprovement
EXTRN	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z:PROC ; CvGlobals::getBuildingInfo
EXTRN	?GetCivTechUniqueBuilding@CvPlayerTechs@@QBE?AW4BuildingTypes@@W4TechTypes@@@Z:PROC ; CvPlayerTechs::GetCivTechUniqueBuilding
EXTRN	?getAdjectiveKey@CvCivilizationInfo@@QBEPBDXZ:PROC ; CvCivilizationInfo::getAdjectiveKey
EXTRN	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ:PROC ; CvPlayer::getCivilizationInfo
EXTRN	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z:PROC ; CvGlobals::getUnitInfo
EXTRN	?GetTextKey@CvBaseInfo@@QBEPBDXZ:PROC		; CvBaseInfo::GetTextKey
EXTRN	?GetEntry@CvTechXMLEntries@@QAEPAVCvTechEntry@@H@Z:PROC ; CvTechXMLEntries::GetEntry
EXTRN	?GetCivTechUniqueUnit@CvPlayerTechs@@QBE?AW4UnitTypes@@W4TechTypes@@@Z:PROC ; CvPlayerTechs::GetCivTechUniqueUnit
EXTRN	?GetCivTechPriority@CvPlayerTechs@@QBEHW4TechTypes@@@Z:PROC ; CvPlayerTechs::GetCivTechPriority
EXTRN	?GetCurrentResearch@CvPlayerTechs@@QBE?AW4TechTypes@@XZ:PROC ; CvPlayerTechs::GetCurrentResearch
EXTRN	?CanResearch@CvPlayerTechs@@QBE_NW4TechTypes@@_N@Z:PROC ; CvPlayerTechs::CanResearch
EXTRN	?GetNumTechs@CvTechXMLEntries@@QAEHXZ:PROC	; CvTechXMLEntries::GetNumTechs
EXTRN	?GetTechs@CvPlayerTechs@@QBEPAVCvTechXMLEntries@@XZ:PROC ; CvPlayerTechs::GetTechs
EXTRN	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ:PROC ; CvPlayer::GetPlayerTechs
EXTRN	__imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z:PROC
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
EXTRN	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z:PROC	; CvPlayer::nextCity
EXTRN	?GetAdvisorCounselImportance@CvAICityStrategyEntry@@QBEHXZ:PROC ; CvAICityStrategyEntry::GetAdvisorCounselImportance
EXTRN	?getNameKey@CvCity@@QBEPBDXZ:PROC		; CvCity::getNameKey
EXTRN	?GetAdvisorCounselText@CvAICityStrategyEntry@@QBEPBDXZ:PROC ; CvAICityStrategyEntry::GetAdvisorCounselText
EXTRN	?GetAdvisor@CvAICityStrategyEntry@@QBE?AW4AdvisorTypes@@XZ:PROC ; CvAICityStrategyEntry::GetAdvisor
EXTRN	?IsUsingCityStrategy@CvCityStrategyAI@@QAE_NW4AICityStrategyTypes@@@Z:PROC ; CvCityStrategyAI::IsUsingCityStrategy
EXTRN	?GetEntry@CvAICityStrategies@@QAEPAVCvAICityStrategyEntry@@H@Z:PROC ; CvAICityStrategies::GetEntry
EXTRN	?GetNumAICityStrategies@CvAICityStrategies@@QAEHXZ:PROC ; CvAICityStrategies::GetNumAICityStrategies
EXTRN	?GetAICityStrategies@CvCityStrategyAI@@QAEPAVCvAICityStrategies@@XZ:PROC ; CvCityStrategyAI::GetAICityStrategies
EXTRN	?GetCityStrategyAI@CvCity@@QBEPAVCvCityStrategyAI@@XZ:PROC ; CvCity::GetCityStrategyAI
EXTRN	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z:PROC	; CvPlayer::firstCity
EXTRN	?GetAdvisorCounselImportance@CvMilitaryAIStrategyXMLEntry@@QBEHXZ:PROC ; CvMilitaryAIStrategyXMLEntry::GetAdvisorCounselImportance
EXTRN	?GetAdvisorCounselText@CvMilitaryAIStrategyXMLEntry@@QBEPBDXZ:PROC ; CvMilitaryAIStrategyXMLEntry::GetAdvisorCounselText
EXTRN	?GetAdvisor@CvMilitaryAIStrategyXMLEntry@@QBE?AW4AdvisorTypes@@XZ:PROC ; CvMilitaryAIStrategyXMLEntry::GetAdvisor
EXTRN	?GetEntry@CvMilitaryAIStrategyXMLEntries@@QAEPAVCvMilitaryAIStrategyXMLEntry@@H@Z:PROC ; CvMilitaryAIStrategyXMLEntries::GetEntry
EXTRN	?IsUsingStrategy@CvMilitaryAI@@QAE_NW4MilitaryAIStrategyTypes@@@Z:PROC ; CvMilitaryAI::IsUsingStrategy
EXTRN	?GetNumMilitaryAIStrategies@CvMilitaryAIStrategyXMLEntries@@QAEHXZ:PROC ; CvMilitaryAIStrategyXMLEntries::GetNumMilitaryAIStrategies
EXTRN	?GetMilitaryAIStrategies@CvMilitaryAI@@QAEPAVCvMilitaryAIStrategyXMLEntries@@XZ:PROC ; CvMilitaryAI::GetMilitaryAIStrategies
EXTRN	?GetMilitaryAI@CvPlayer@@QBEPAVCvMilitaryAI@@XZ:PROC ; CvPlayer::GetMilitaryAI
EXTRN	?GetAdvisorCounselImportance@CvEconomicAIStrategyXMLEntry@@QBEHXZ:PROC ; CvEconomicAIStrategyXMLEntry::GetAdvisorCounselImportance
EXTRN	?GetAdvisorCounselText@CvEconomicAIStrategyXMLEntry@@QBEPBDXZ:PROC ; CvEconomicAIStrategyXMLEntry::GetAdvisorCounselText
EXTRN	?GetAdvisor@CvEconomicAIStrategyXMLEntry@@QBE?AW4AdvisorTypes@@XZ:PROC ; CvEconomicAIStrategyXMLEntry::GetAdvisor
EXTRN	?IsUsingStrategy@CvEconomicAI@@QAE_NW4EconomicAIStrategyTypes@@@Z:PROC ; CvEconomicAI::IsUsingStrategy
EXTRN	?GetEntry@CvEconomicAIStrategyXMLEntries@@QAEPAVCvEconomicAIStrategyXMLEntry@@H@Z:PROC ; CvEconomicAIStrategyXMLEntries::GetEntry
EXTRN	?GetNumEconomicAIStrategies@CvEconomicAIStrategyXMLEntries@@QAEHXZ:PROC ; CvEconomicAIStrategyXMLEntries::GetNumEconomicAIStrategies
EXTRN	?GetEconomicAIStrategies@CvEconomicAI@@QAEPAVCvEconomicAIStrategyXMLEntries@@XZ:PROC ; CvEconomicAI::GetEconomicAIStrategies
EXTRN	?GetEconomicAI@CvPlayer@@QBEPAVCvEconomicAI@@XZ:PROC ; CvPlayer::GetEconomicAI
EXTRN	__imp_?toUTF8@String@Localization@@QAEPBDXZ:PROC
EXTRN	__imp_??1String@Localization@@UAE@XZ:PROC
EXTRN	__imp_??4String@Localization@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_?Lookup@Localization@@YA?AVString@1@PBD@Z:PROC
EXTRN	?getNumCities@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getNumCities
EXTRN	__imp_??0String@Localization@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z DD 019930522H
	DD	05eH
	DD	FLAT:__unwindtable$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$6
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$7
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$8
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$9
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$10
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$11
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$12
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$13
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$14
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$15
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$16
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$17
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$18
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$19
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$20
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$21
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$22
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$23
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$24
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$25
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$26
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$27
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$28
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$29
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$30
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$31
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$32
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$33
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$34
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$35
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$36
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$37
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$38
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$39
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$40
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$41
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$42
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$43
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$44
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$45
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$46
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$47
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$48
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$49
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$50
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$51
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$52
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$53
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$54
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$55
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$56
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$57
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$58
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$59
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$60
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$61
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$62
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$63
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$64
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$65
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$66
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$67
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$68
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$69
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$70
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$71
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$72
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$73
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$74
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$75
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$76
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$77
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$78
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$80
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$82
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$84
	DD	054H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$85
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$86
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$87
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$88
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$89
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$90
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$91
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$92
	DD	00H
	DD	FLAT:__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$93
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvadvisorcounsel.cpp
xdata$x	ENDS
;	COMDAT ?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z
_TEXT	SEGMENT
_uiCounselIndex$ = -760					; size = 4
$T227431 = -756						; size = 4
_eTradableResource$ = -756				; size = 4
_iMessageRating$224323 = -756				; size = 4
_iPlayer$224267 = -756					; size = 4
_i$224024 = -756					; size = 4
_i$224008 = -756					; size = 4
_iI$223972 = -756					; size = 4
_i$223888 = -756					; size = 4
tv7403 = -752						; size = 4
$T228332 = -752						; size = 4
_eResource$224609 = -752				; size = 4
_uiLoop$224552 = -752					; size = 4
_ui$224475 = -752					; size = 4
_ui$224337 = -752					; size = 4
_iMinorCiv$224311 = -752				; size = 4
_iMinorCiv$224300 = -752				; size = 4
_iMinorCiv$224289 = -752				; size = 4
_iScience$224055 = -752					; size = 4
_eRecommendedBuilding$ = -752				; size = 4
_pLoopCity$ = -752					; size = 4
_iStrategiesLoop$223869 = -752				; size = 4
tv7373 = -748						; size = 4
_uiHighestCostCategory$224336 = -748			; size = 4
_pDiplomacyAI$ = -748					; size = 4
tv7557 = -744						; size = 4
$T227683 = -744						; size = 4
_j$224666 = -744					; size = 4
_pPlot$224606 = -744					; size = 4
_pBuildingEntry$224030 = -744				; size = 4
_eBuilding3$223971 = -744				; size = 4
_pCityStrategyAI$ = -744				; size = 4
_pMilitaryAI$ = -744					; size = 4
_bProvidesExperience$224033 = -737			; size = 1
_bUniquenessFound$223929 = -737				; size = 1
tv7491 = -736						; size = 4
_iPlayer$224077 = -736					; size = 4
_pUnitEntry$224014 = -736				; size = 4
_eBuilding1$223969 = -736				; size = 4
$T226955 = -732						; size = 4
$T226910 = -732						; size = 4
_abAdvisorUsed$ = -732					; size = 4
_ui$224602 = -732					; size = 4
_pBiggestCity$ = -732					; size = 4
_iMessageRating$224479 = -732				; size = 4
_iGoldIncome$224326 = -732				; size = 4
_eStatement$224288 = -732				; size = 4
_iRatio$224057 = -732					; size = 4
_eMilitaryBuildingTech$ = -732				; size = 4
tv6978 = -728						; size = 4
_pTreasury$224325 = -728				; size = 4
_eBuilding2$223970 = -728				; size = 4
tv6752 = -724						; size = 4
$T227665 = -724						; size = 4
$T227250 = -724						; size = 4
_iNumMissions$224635 = -724				; size = 4
_iCityIndex$224497 = -724				; size = 4
_iGold$224327 = -724					; size = 4
_eStatement$224310 = -724				; size = 4
_eWarmongerThreat$224228 = -724				; size = 4
_eExpansionAggressivePostureTypes$224202 = -724		; size = 4
_eMilitaryAggressivePostureTypes$224176 = -724		; size = 4
_eWarProjection$224092 = -724				; size = 4
$T226473 = -724						; size = 4
_iNumBuildingInfos$223968 = -724			; size = 4
tv7629 = -720						; size = 4
tv7559 = -720						; size = 4
$T226713 = -720						; size = 4
_iNumOfResource$ = -720					; size = 4
tv5440 = -716						; size = 4
_eTargetPlayer$ = -712					; size = 4
_iBuild$224614 = -712					; size = 4
_iMessageRating$224271 = -712				; size = 4
_iDomain$224034 = -712					; size = 4
$T226472 = -712						; size = 4
_pBuilding$223978 = -712				; size = 4
_this$ = -708						; size = 4
_strLoc$ = -704						; size = 80
$T226956 = -624						; size = 4
_eRecommendedResource$ = -624				; size = 4
_eMilitaryUnitTech$ = -624				; size = 4
$T227187 = -620						; size = 4
_pPlotUnitNode$224629 = -620				; size = 4
_eStatement$224299 = -620				; size = 4
_eMilitaryStrengthComparedToUs$224093 = -620		; size = 4
_pResourcePlot$ = -616					; size = 4
_eRecommendedUnit$ = -616				; size = 4
_aiPlots$ = -612					; size = 4
_iMaxCombatValue$ = -612				; size = 4
_iLoop$ = -608						; size = 4
_eFlavorScience$ = -604					; size = 4
$T226502 = -600						; size = 80
$T226484 = -600						; size = 80
$T226483 = -600						; size = 80
$T226482 = -600						; size = 80
$T226481 = -600						; size = 80
$T226480 = -600						; size = 80
$T226477 = -600						; size = 80
$T226474 = -600						; size = 80
$T226469 = -600						; size = 80
$T226465 = -600						; size = 80
$T226460 = -600						; size = 80
$T226457 = -600						; size = 80
$T226454 = -600						; size = 80
$T226450 = -600						; size = 80
$T226446 = -600						; size = 80
$T226442 = -600						; size = 80
$T226440 = -600						; size = 80
$T226439 = -600						; size = 80
$T226438 = -600						; size = 80
$T226437 = -600						; size = 80
$T226436 = -600						; size = 80
$T226435 = -600						; size = 80
$T226434 = -600						; size = 80
$T226598 = -520						; size = 80
$T226595 = -520						; size = 80
$T226594 = -520						; size = 80
$T226591 = -520						; size = 80
$T226590 = -520						; size = 80
$T226586 = -520						; size = 80
$T226581 = -520						; size = 80
$T226576 = -520						; size = 80
$T226569 = -520						; size = 80
$T226563 = -520						; size = 80
$T226557 = -520						; size = 80
$T226551 = -520						; size = 80
$T226545 = -520						; size = 80
$T226539 = -520						; size = 80
$T226536 = -520						; size = 80
$T226520 = -520						; size = 80
$T226518 = -520						; size = 80
$T226512 = -520						; size = 80
$T226506 = -520						; size = 80
$T226600 = -440						; size = 80
$T226565 = -440						; size = 80
$T226559 = -440						; size = 80
$T226553 = -440						; size = 80
$T226547 = -440						; size = 80
$T226541 = -440						; size = 80
$T226530 = -440						; size = 80
$T226524 = -440						; size = 80
$T226514 = -440						; size = 80
$T226508 = -440						; size = 80
$T226494 = -440						; size = 80
$T226492 = -440						; size = 80
$T226599 = -360						; size = 80
$T226564 = -360						; size = 80
$T226558 = -360						; size = 80
$T226552 = -360						; size = 80
$T226546 = -360						; size = 80
$T226540 = -360						; size = 80
$T226533 = -360						; size = 80
$T226522 = -360						; size = 80
$T226516 = -360						; size = 80
$T226510 = -360						; size = 80
$T226504 = -360						; size = 80
_strBuildingClass$224551 = -280				; size = 28
$T226601 = -252						; size = 80
$T226566 = -252						; size = 80
$T226560 = -252						; size = 80
$T226554 = -252						; size = 80
$T226548 = -252						; size = 80
$T226542 = -252						; size = 80
$T226526 = -252						; size = 80
$T226496 = -252						; size = 80
$T226490 = -252						; size = 80
$T226567 = -172						; size = 80
$T226561 = -172						; size = 80
$T226555 = -172						; size = 80
$T226549 = -172						; size = 80
$T226543 = -172						; size = 80
$T226528 = -172						; size = 80
$T226498 = -172						; size = 80
$T226488 = -172						; size = 80
$T226568 = -92						; size = 80
$T226562 = -92						; size = 80
$T226556 = -92						; size = 80
$T226550 = -92						; size = 80
$T226544 = -92						; size = 80
$T226500 = -92						; size = 80
$T226486 = -92						; size = 80
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z PROC ; CvAdvisorCounsel::BuildCounselList, COMDAT
; _this$ = ecx

; 81   : {

	push	-1
	push	__ehhandler$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 748				; 000002ecH
	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx
	push	edi
	mov	DWORD PTR _this$[esp+776], esi

; 82   : 	Reset();

	call	?Reset@CvAdvisorCounsel@@QAEXXZ		; CvAdvisorCounsel::Reset

; 83   : 
; 84   : 	TeamTypes eTeam = GET_PLAYER(ePlayer).getTeam();

	mov	edi, DWORD PTR _ePlayer$[esp+772]
	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	imul	edi, 63236				; 0000f704H
	mov	eax, DWORD PTR [edi+eax+44]
	mov	DWORD PTR tv5440[esp+776], edi
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN484@BuildCouns
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR $T226713[esp+776], eax
	jmp	SHORT $LN485@BuildCouns
$LN484@BuildCouns:
	mov	DWORD PTR $T226713[esp+776], -1
$LN485@BuildCouns:

; 85   : 	uint uiCounselIndex = 0;

	xor	ebx, ebx

; 86   : 	Localization::String strLoc;

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	mov	DWORD PTR _uiCounselIndex$[esp+776], ebx
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ

; 87   : 
; 88   : 	if(GET_PLAYER(ePlayer).getNumCities() == 0)

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	ecx, edi
	mov	DWORD PTR __$EHRec$[esp+784], ebx
	call	?getNumCities@CvPlayer@@QBEHXZ		; CvPlayer::getNumCities
	test	eax, eax
	jne	$LN381@BuildCouns

; 89   : 	{
; 90   : 		bool bSuccess;
; 91   : 		strLoc = Localization::Lookup("TXT_KEY_BUILD_A_CITY_MCFLY_ECONOMIC");

	mov	ebx, DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	lea	edx, DWORD PTR $T226434[esp+776]
	push	OFFSET $SG223841
	push	edx
	call	ebx
	add	esp, 8
	mov	ebp, DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 1
	call	ebp
	mov	edi, DWORD PTR __imp_??1String@Localization@@UAE@XZ
	lea	ecx, DWORD PTR $T226434[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 92   : 		bSuccess = SetCounselEntry(uiCounselIndex, ADVISOR_ECONOMIC, strLoc.toUTF8(), 99);

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	ecx, DWORD PTR [esi+4]
	test	ecx, ecx
	jbe	SHORT $LN492@BuildCouns
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [ecx], 1
	mov	ecx, DWORD PTR [esi]
	push	eax
	add	ecx, 4
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	mov	edx, DWORD PTR [esi]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [edx+516], 99			; 00000063H
$LN492@BuildCouns:

; 93   : 		CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 94   : 		uiCounselIndex++;
; 95   : 
; 96   : 		strLoc = Localization::Lookup("TXT_KEY_BUILD_A_CITY_MCFLY_MILITARY");

	lea	eax, DWORD PTR $T226435[esp+776]
	push	OFFSET $SG223843
	push	eax
	call	ebx
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 2
	call	ebp
	lea	ecx, DWORD PTR $T226435[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 97   : 		bSuccess = SetCounselEntry(uiCounselIndex, ADVISOR_MILITARY, strLoc.toUTF8(), 99);

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	cmp	DWORD PTR [esi+4], 1
	jbe	SHORT $LN505@BuildCouns
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [ecx+520], 0
	mov	ecx, DWORD PTR [esi]
	push	eax
	add	ecx, 524				; 0000020cH
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	mov	edx, DWORD PTR [esi]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [edx+1036], 99		; 00000063H
$LN505@BuildCouns:

; 98   : 		CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 99   : 		uiCounselIndex++;
; 100  : 
; 101  : 		strLoc = Localization::Lookup("TXT_KEY_BUILD_A_CITY_MCFLY_SCIENCE");

	lea	eax, DWORD PTR $T226436[esp+776]
	push	OFFSET $SG223845
	push	eax
	call	ebx
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 3
	call	ebp
	lea	ecx, DWORD PTR $T226436[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 102  : 		bSuccess = SetCounselEntry(uiCounselIndex, ADVISOR_SCIENCE, strLoc.toUTF8(), 99);

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	cmp	DWORD PTR [esi+4], 2
	jbe	SHORT $LN518@BuildCouns
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [ecx+1040], 3
	mov	ecx, DWORD PTR [esi]
	push	eax
	add	ecx, 1044				; 00000414H
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	mov	edx, DWORD PTR [esi]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [edx+1556], 99		; 00000063H
$LN518@BuildCouns:

; 103  : 		CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 104  : 		uiCounselIndex++;
; 105  : 
; 106  : 		strLoc = Localization::Lookup("TXT_KEY_BUILD_A_CITY_MCFLY_FOREIGN");

	lea	eax, DWORD PTR $T226437[esp+776]
	push	OFFSET $SG223847
	push	eax
	call	ebx
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 4
	call	ebp
	lea	ecx, DWORD PTR $T226437[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 107  : 		bSuccess = SetCounselEntry(uiCounselIndex, ADVISOR_FOREIGN, strLoc.toUTF8(), 99);

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	cmp	DWORD PTR [esi+4], 3
	jbe	SHORT $LN531@BuildCouns
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [ecx+1560], 2
	mov	ecx, DWORD PTR [esi]
	push	eax
	add	ecx, 1564				; 0000061cH
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	mov	edx, DWORD PTR [esi]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [edx+2076], 99		; 00000063H
$LN531@BuildCouns:

; 108  : 		CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 109  : 		uiCounselIndex++;
; 110  : 
; 111  : 		std::sort(&m_aCounsel[0], &m_aCounsel[0] + m_aCounsel.size(), CounselSort);

	mov	eax, DWORD PTR [esi+4]
	mov	esi, DWORD PTR [esi]
	imul	eax, 520				; 00000208H
	add	eax, esi
	mov	ebx, eax
	mov	ecx, ebx
	sub	ecx, esi
	mov	eax, 2114445439				; 7e07e07fH
	imul	ecx
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	push	OFFSET ?CounselSort@@YA_NUCounsel@CvAdvisorCounsel@@0@Z ; CounselSort
	add	eax, edx
	push	eax
	push	ebx
	push	esi
	call	??$_Sort@PAUCounsel@CvAdvisorCounsel@@HP6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0HP6A_NU12@1@Z@Z ; std::_Sort<CvAdvisorCounsel::Counsel *,int,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
	add	esp, 16					; 00000010H

; 112  : 		return;

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	mov	DWORD PTR __$EHRec$[esp+784], -1
	call	edi
	jmp	$LN382@BuildCouns
$LN381@BuildCouns:

; 113  : 	}
; 114  : 
; 115  : 	// go through economic strategies
; 116  : 	CvEconomicAI* pEconomicAI = GET_PLAYER(ePlayer).GetEconomicAI();

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	ecx, edi
	call	?GetEconomicAI@CvPlayer@@QBEPAVCvEconomicAI@@XZ ; CvPlayer::GetEconomicAI
	mov	ebx, eax

; 117  : 
; 118  : 	for(int iStrategiesLoop = 0; iStrategiesLoop < pEconomicAI->GetEconomicAIStrategies()->GetNumEconomicAIStrategies(); iStrategiesLoop++)

	mov	ecx, ebx
	xor	ebp, ebp
	call	?GetEconomicAIStrategies@CvEconomicAI@@QAEPAVCvEconomicAIStrategyXMLEntries@@XZ ; CvEconomicAI::GetEconomicAIStrategies
	mov	ecx, eax
	call	?GetNumEconomicAIStrategies@CvEconomicAIStrategyXMLEntries@@QAEHXZ ; CvEconomicAIStrategyXMLEntries::GetNumEconomicAIStrategies
	test	eax, eax
	jle	$LN1384@BuildCouns
$LL380@BuildCouns:

; 119  : 	{
; 120  : 		EconomicAIStrategyTypes eStrategy = (EconomicAIStrategyTypes) iStrategiesLoop;
; 121  : 		CvEconomicAIStrategyXMLEntry* pStrategy = pEconomicAI->GetEconomicAIStrategies()->GetEntry(iStrategiesLoop);

	push	ebp
	mov	ecx, ebx
	call	?GetEconomicAIStrategies@CvEconomicAI@@QAEPAVCvEconomicAIStrategyXMLEntries@@XZ ; CvEconomicAI::GetEconomicAIStrategies
	mov	ecx, eax
	call	?GetEntry@CvEconomicAIStrategyXMLEntries@@QAEPAVCvEconomicAIStrategyXMLEntry@@H@Z ; CvEconomicAIStrategyXMLEntries::GetEntry

; 122  : 
; 123  : 		if(pEconomicAI->IsUsingStrategy(eStrategy))

	push	ebp
	mov	ecx, ebx
	mov	edi, eax
	call	?IsUsingStrategy@CvEconomicAI@@QAE_NW4EconomicAIStrategyTypes@@@Z ; CvEconomicAI::IsUsingStrategy
	test	al, al
	je	$LN379@BuildCouns

; 124  : 		{
; 125  : 			// if this strategy has an advisor set, then try to add it to the list
; 126  : 			if(pStrategy->GetAdvisor() != NO_ADVISOR_TYPE)

	mov	ecx, edi
	call	?GetAdvisor@CvEconomicAIStrategyXMLEntry@@QBE?AW4AdvisorTypes@@XZ ; CvEconomicAIStrategyXMLEntry::GetAdvisor
	cmp	eax, -1
	je	SHORT $LN379@BuildCouns

; 127  : 			{
; 128  : 				strLoc = Localization::Lookup(pStrategy->GetAdvisorCounselText());

	mov	ecx, edi
	call	?GetAdvisorCounselText@CvEconomicAIStrategyXMLEntry@@QBEPBDXZ ; CvEconomicAIStrategyXMLEntry::GetAdvisorCounselText
	push	eax
	lea	edx, DWORD PTR $T226438[esp+780]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 5
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226438[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 129  : 				bool bSuccess = SetCounselEntry(uiCounselIndex, pStrategy->GetAdvisor(), strLoc.toUTF8(), pStrategy->GetAdvisorCounselImportance());

	mov	ecx, edi
	call	?GetAdvisorCounselImportance@CvEconomicAIStrategyXMLEntry@@QBEHXZ ; CvEconomicAIStrategyXMLEntry::GetAdvisorCounselImportance
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	mov	ecx, edi
	call	?GetAdvisor@CvEconomicAIStrategyXMLEntry@@QBE?AW4AdvisorTypes@@XZ ; CvEconomicAIStrategyXMLEntry::GetAdvisor
	push	eax
	mov	eax, DWORD PTR _uiCounselIndex$[esp+788]
	push	eax
	mov	ecx, esi
	call	?SetCounselEntry@CvAdvisorCounsel@@QAE_NIW4AdvisorTypes@@PBDH@Z ; CvAdvisorCounsel::SetCounselEntry

; 130  : 				CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 131  : 				if(!bSuccess)

	test	al, al
	je	SHORT $LN1384@BuildCouns

; 132  : 				{
; 133  : 					break;
; 134  : 				}
; 135  : 				uiCounselIndex++;

	inc	DWORD PTR _uiCounselIndex$[esp+776]
$LN379@BuildCouns:

; 117  : 
; 118  : 	for(int iStrategiesLoop = 0; iStrategiesLoop < pEconomicAI->GetEconomicAIStrategies()->GetNumEconomicAIStrategies(); iStrategiesLoop++)

	mov	ecx, ebx
	inc	ebp
	call	?GetEconomicAIStrategies@CvEconomicAI@@QAEPAVCvEconomicAIStrategyXMLEntries@@XZ ; CvEconomicAI::GetEconomicAIStrategies
	mov	ecx, eax
	call	?GetNumEconomicAIStrategies@CvEconomicAIStrategyXMLEntries@@QAEHXZ ; CvEconomicAIStrategyXMLEntries::GetNumEconomicAIStrategies
	cmp	ebp, eax
	jl	$LL380@BuildCouns
$LN1384@BuildCouns:

; 136  : 			}
; 137  : 		}
; 138  : 	}
; 139  : 
; 140  : 	// go through military strategies
; 141  : 	CvMilitaryAI* pMilitaryAI = GET_PLAYER(ePlayer).GetMilitaryAI();

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	edx, DWORD PTR tv5440[esp+776]
	add	ecx, edx
	call	?GetMilitaryAI@CvPlayer@@QBEPAVCvMilitaryAI@@XZ ; CvPlayer::GetMilitaryAI

; 142  : 
; 143  : 	for(int iStrategiesLoop = 0; iStrategiesLoop < pMilitaryAI->GetMilitaryAIStrategies()->GetNumMilitaryAIStrategies(); iStrategiesLoop++)

	xor	ebp, ebp
	mov	ecx, eax
	mov	DWORD PTR _pMilitaryAI$[esp+776], eax
	mov	DWORD PTR _iStrategiesLoop$223869[esp+776], ebp
	call	?GetMilitaryAIStrategies@CvMilitaryAI@@QAEPAVCvMilitaryAIStrategyXMLEntries@@XZ ; CvMilitaryAI::GetMilitaryAIStrategies
	mov	ecx, eax
	call	?GetNumMilitaryAIStrategies@CvMilitaryAIStrategyXMLEntries@@QAEHXZ ; CvMilitaryAIStrategyXMLEntries::GetNumMilitaryAIStrategies
	test	eax, eax
	jle	$LN1498@BuildCouns
	mov	ebx, DWORD PTR _uiCounselIndex$[esp+776]
	imul	ebx, 520				; 00000208H
$LL374@BuildCouns:

; 144  : 	{
; 145  : 		MilitaryAIStrategyTypes eStrategy = (MilitaryAIStrategyTypes) iStrategiesLoop;
; 146  : 
; 147  : 		if(pMilitaryAI->IsUsingStrategy(eStrategy))

	mov	ecx, DWORD PTR _pMilitaryAI$[esp+776]
	push	ebp
	call	?IsUsingStrategy@CvMilitaryAI@@QAE_NW4MilitaryAIStrategyTypes@@@Z ; CvMilitaryAI::IsUsingStrategy
	test	al, al
	je	$LN373@BuildCouns

; 148  : 		{
; 149  : 			CvMilitaryAIStrategyXMLEntry* pStrategy = pMilitaryAI->GetMilitaryAIStrategies()->GetEntry(iStrategiesLoop);

	mov	ecx, DWORD PTR _pMilitaryAI$[esp+776]
	push	ebp
	call	?GetMilitaryAIStrategies@CvMilitaryAI@@QAEPAVCvMilitaryAIStrategyXMLEntries@@XZ ; CvMilitaryAI::GetMilitaryAIStrategies
	mov	ecx, eax
	call	?GetEntry@CvMilitaryAIStrategyXMLEntries@@QAEPAVCvMilitaryAIStrategyXMLEntry@@H@Z ; CvMilitaryAIStrategyXMLEntries::GetEntry
	mov	edi, eax

; 150  : 			CvAssert(pStrategy != NULL);
; 151  : 			if(pStrategy)

	test	edi, edi
	je	$LN373@BuildCouns

; 152  : 			{
; 153  : 				// if this strategy has an advisor set, then try to add it to the list
; 154  : 				if(pStrategy->GetAdvisor() != NO_ADVISOR_TYPE)

	mov	ecx, edi
	call	?GetAdvisor@CvMilitaryAIStrategyXMLEntry@@QBE?AW4AdvisorTypes@@XZ ; CvMilitaryAIStrategyXMLEntry::GetAdvisor
	cmp	eax, -1
	je	$LN373@BuildCouns

; 155  : 				{
; 156  : 					strLoc = Localization::Lookup(pStrategy->GetAdvisorCounselText());

	mov	ecx, edi
	call	?GetAdvisorCounselText@CvMilitaryAIStrategyXMLEntry@@QBEPBDXZ ; CvMilitaryAIStrategyXMLEntry::GetAdvisorCounselText
	push	eax
	lea	eax, DWORD PTR $T226439[esp+780]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 6
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226439[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 157  : 					bool bSuccess = SetCounselEntry(uiCounselIndex, pStrategy->GetAdvisor(), strLoc.toUTF8(), pStrategy->GetAdvisorCounselImportance());

	mov	ecx, edi
	call	?GetAdvisorCounselImportance@CvMilitaryAIStrategyXMLEntry@@QBEHXZ ; CvMilitaryAIStrategyXMLEntry::GetAdvisorCounselImportance
	lea	ecx, DWORD PTR _strLoc$[esp+776]
	mov	ebp, eax
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	ecx, edi
	mov	DWORD PTR $T226910[esp+776], eax
	call	?GetAdvisor@CvMilitaryAIStrategyXMLEntry@@QBE?AW4AdvisorTypes@@XZ ; CvMilitaryAIStrategyXMLEntry::GetAdvisor
	mov	ecx, DWORD PTR _uiCounselIndex$[esp+776]
	cmp	ecx, DWORD PTR [esi+4]
	jae	SHORT $LN1498@BuildCouns
	mov	edx, DWORD PTR [esi]
	mov	ecx, DWORD PTR $T226910[esp+776]
	mov	DWORD PTR [ebx+edx], eax
	mov	eax, DWORD PTR [esi]
	push	ecx
	lea	eax, DWORD PTR [ebx+eax+4]
	push	512					; 00000200H
	push	eax
	call	DWORD PTR __imp__strcpy_s
	mov	edx, DWORD PTR [esi]

; 158  : 					CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 159  : 					if(!bSuccess)
; 160  : 					{
; 161  : 						break;
; 162  : 					}
; 163  : 					uiCounselIndex++;

	inc	DWORD PTR _uiCounselIndex$[esp+788]
	mov	DWORD PTR [ebx+edx+516], ebp
	mov	ebp, DWORD PTR _iStrategiesLoop$223869[esp+788]
	add	esp, 12					; 0000000cH
	add	ebx, 520				; 00000208H
$LN373@BuildCouns:
	mov	ecx, DWORD PTR _pMilitaryAI$[esp+776]
	inc	ebp
	mov	DWORD PTR _iStrategiesLoop$223869[esp+776], ebp
	call	?GetMilitaryAIStrategies@CvMilitaryAI@@QAEPAVCvMilitaryAIStrategyXMLEntries@@XZ ; CvMilitaryAI::GetMilitaryAIStrategies
	mov	ecx, eax
	call	?GetNumMilitaryAIStrategies@CvMilitaryAIStrategyXMLEntries@@QAEHXZ ; CvMilitaryAIStrategyXMLEntries::GetNumMilitaryAIStrategies
	cmp	ebp, eax
	jl	$LL374@BuildCouns
$LN1498@BuildCouns:

; 164  : 				}
; 165  : 			}
; 166  : 		}
; 167  : 	}
; 168  : 
; 169  : 	// go through city strategies
; 170  : 	int iLoop;
; 171  : 	CvCity* pLoopCity;
; 172  : 	CvCityStrategyAI* pCityStrategyAI;
; 173  : 	for(pLoopCity = GET_PLAYER(ePlayer).firstCity(&iLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER(ePlayer).nextCity(&iLoop))

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, DWORD PTR tv5440[esp+776]
	push	0
	lea	edx, DWORD PTR _iLoop$[esp+780]
	add	ecx, eax
	push	edx
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	ebx, DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z
	mov	DWORD PTR _pLoopCity$[esp+776], eax
	test	eax, eax
	je	$LN365@BuildCouns
$LL367@BuildCouns:

; 174  : 	{
; 175  : 		pCityStrategyAI = pLoopCity->GetCityStrategyAI();

	mov	ecx, eax
	call	?GetCityStrategyAI@CvCity@@QBEPAVCvCityStrategyAI@@XZ ; CvCity::GetCityStrategyAI

; 176  : 		for(int i = 0; i < pCityStrategyAI->GetAICityStrategies()->GetNumAICityStrategies(); i++)

	mov	ecx, eax
	mov	DWORD PTR _pCityStrategyAI$[esp+776], eax
	mov	DWORD PTR _i$223888[esp+776], 0
	call	?GetAICityStrategies@CvCityStrategyAI@@QAEPAVCvAICityStrategies@@XZ ; CvCityStrategyAI::GetAICityStrategies
	mov	ecx, eax
	call	?GetNumAICityStrategies@CvAICityStrategies@@QAEHXZ ; CvAICityStrategies::GetNumAICityStrategies
	test	eax, eax
	jle	$LN366@BuildCouns
	mov	ebp, DWORD PTR _uiCounselIndex$[esp+776]
	imul	ebp, 520				; 00000208H
	npad	6
$LL364@BuildCouns:

; 177  : 		{
; 178  : 			AICityStrategyTypes eStrategy = (AICityStrategyTypes)i;
; 179  : 			CvAICityStrategyEntry* pStrategy = pCityStrategyAI->GetAICityStrategies()->GetEntry(i);

	mov	eax, DWORD PTR _i$223888[esp+776]
	mov	ecx, DWORD PTR _pCityStrategyAI$[esp+776]
	push	eax
	call	?GetAICityStrategies@CvCityStrategyAI@@QAEPAVCvAICityStrategies@@XZ ; CvCityStrategyAI::GetAICityStrategies
	mov	ecx, eax
	call	?GetEntry@CvAICityStrategies@@QAEPAVCvAICityStrategyEntry@@H@Z ; CvAICityStrategies::GetEntry

; 180  : 			if(pCityStrategyAI->IsUsingCityStrategy(eStrategy))

	mov	ecx, DWORD PTR _i$223888[esp+776]
	push	ecx
	mov	ecx, DWORD PTR _pCityStrategyAI$[esp+780]
	mov	edi, eax
	call	?IsUsingCityStrategy@CvCityStrategyAI@@QAE_NW4AICityStrategyTypes@@@Z ; CvCityStrategyAI::IsUsingCityStrategy
	test	al, al
	je	$LN363@BuildCouns

; 181  : 			{
; 182  : 				// if this strategy has an advisor set, then try to add it to the list
; 183  : 				if(pStrategy->GetAdvisor() != NO_ADVISOR_TYPE)

	mov	ecx, edi
	call	?GetAdvisor@CvAICityStrategyEntry@@QBE?AW4AdvisorTypes@@XZ ; CvAICityStrategyEntry::GetAdvisor
	cmp	eax, -1
	je	$LN363@BuildCouns

; 184  : 				{
; 185  : 					strLoc = Localization::Lookup(pStrategy->GetAdvisorCounselText());

	mov	ecx, edi
	call	?GetAdvisorCounselText@CvAICityStrategyEntry@@QBEPBDXZ ; CvAICityStrategyEntry::GetAdvisorCounselText
	push	eax
	lea	edx, DWORD PTR $T226440[esp+780]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 7
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226440[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 186  : 					strLoc << pLoopCity->getNameKey();

	mov	ecx, DWORD PTR _pLoopCity$[esp+776]
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 187  : 					bool bSuccess = SetCounselEntry(uiCounselIndex, pStrategy->GetAdvisor(), strLoc.toUTF8(), pStrategy->GetAdvisorCounselImportance());

	mov	ecx, edi
	call	?GetAdvisorCounselImportance@CvAICityStrategyEntry@@QBEHXZ ; CvAICityStrategyEntry::GetAdvisorCounselImportance
	lea	ecx, DWORD PTR _strLoc$[esp+776]
	mov	DWORD PTR $T226956[esp+776], eax
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	ecx, edi
	mov	DWORD PTR $T226955[esp+776], eax
	call	?GetAdvisor@CvAICityStrategyEntry@@QBE?AW4AdvisorTypes@@XZ ; CvAICityStrategyEntry::GetAdvisor
	mov	ecx, DWORD PTR _uiCounselIndex$[esp+776]
	cmp	ecx, DWORD PTR [esi+4]
	jae	SHORT $LN366@BuildCouns
	mov	edx, DWORD PTR [esi]
	mov	ecx, DWORD PTR $T226955[esp+776]
	mov	DWORD PTR [edx+ebp], eax
	mov	eax, DWORD PTR [esi]
	push	ecx
	lea	eax, DWORD PTR [eax+ebp+4]
	push	512					; 00000200H
	push	eax
	call	DWORD PTR __imp__strcpy_s
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR $T226956[esp+788]

; 188  : 					CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 189  : 					if(!bSuccess)
; 190  : 					{
; 191  : 						break;
; 192  : 					}
; 193  : 					uiCounselIndex++;

	inc	DWORD PTR _uiCounselIndex$[esp+788]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [edx+ebp+516], eax
	add	ebp, 520				; 00000208H
$LN363@BuildCouns:
	mov	edi, DWORD PTR _i$223888[esp+776]
	mov	ecx, DWORD PTR _pCityStrategyAI$[esp+776]
	inc	edi
	mov	DWORD PTR _i$223888[esp+776], edi
	call	?GetAICityStrategies@CvCityStrategyAI@@QAEPAVCvAICityStrategies@@XZ ; CvCityStrategyAI::GetAICityStrategies
	mov	ecx, eax
	call	?GetNumAICityStrategies@CvAICityStrategies@@QAEHXZ ; CvAICityStrategies::GetNumAICityStrategies
	cmp	edi, eax
	jl	$LL364@BuildCouns
$LN366@BuildCouns:

; 164  : 				}
; 165  : 			}
; 166  : 		}
; 167  : 	}
; 168  : 
; 169  : 	// go through city strategies
; 170  : 	int iLoop;
; 171  : 	CvCity* pLoopCity;
; 172  : 	CvCityStrategyAI* pCityStrategyAI;
; 173  : 	for(pLoopCity = GET_PLAYER(ePlayer).firstCity(&iLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER(ePlayer).nextCity(&iLoop))

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	edx, DWORD PTR tv5440[esp+776]
	push	0
	lea	eax, DWORD PTR _iLoop$[esp+780]
	add	ecx, edx
	push	eax
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$[esp+776], eax
	test	eax, eax
	jne	$LL367@BuildCouns
$LN365@BuildCouns:

; 201  : 	for(int iFlavorLoop = 0; iFlavorLoop < GC.getNumFlavorTypes(); iFlavorLoop++)

	xor	ebp, ebp
	cmp	DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764, ebp
	mov	DWORD PTR _eFlavorScience$[esp+776], -1
	jle	SHORT $LN356@BuildCouns

; 194  : 				}
; 195  : 			}
; 196  : 		}
; 197  : 	}
; 198  : 
; 199  : 	// find flavor science
; 200  : 	FlavorTypes eFlavorScience = NO_FLAVOR;

	xor	edi, edi
$LL358@BuildCouns:

; 202  : 	{
; 203  : 		if(GC.getFlavorTypes((FlavorTypes)iFlavorLoop) == "FLAVOR_SCIENCE")

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1760
	lea	eax, DWORD PTR [ecx+edi]
	push	OFFSET $SG223913
	push	eax
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	test	al, al
	jne	SHORT $LN1387@BuildCouns
	inc	ebp
	add	edi, 28					; 0000001cH
	cmp	ebp, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764
	jl	SHORT $LL358@BuildCouns

; 1778 : 	{
; 1779 : 		CvPlot* pPlot = NULL;
; 1780 : 		// when we encounter the first plot that is invalid, the rest of the list will be invalid
; 1781 : 		if(aiPlots[ui] == -1)

	jmp	SHORT $LN356@BuildCouns
$LN1387@BuildCouns:

; 204  : 		{
; 205  : 			eFlavorScience = (FlavorTypes)iFlavorLoop;

	mov	DWORD PTR _eFlavorScience$[esp+776], ebp
$LN356@BuildCouns:

; 206  : 			break;
; 207  : 		}
; 208  : 	}
; 209  : 
; 210  : 	// cycle through all the science advisor tips
; 211  : 	// along with military recommendations
; 212  : 	TechTypes eMilitaryUnitTech = NO_TECH;
; 213  : 	UnitTypes eRecommendedUnit = NO_UNIT;
; 214  : 	int iMaxCombatValue = 0;
; 215  : 	TechTypes eMilitaryBuildingTech = NO_TECH;
; 216  : 	BuildingTypes eRecommendedBuilding = NO_BUILDING;
; 217  : 	CvPlayerTechs* pPlayerTechs = GET_PLAYER(ePlayer).GetPlayerTechs();

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	or	eax, -1
	mov	DWORD PTR _eMilitaryUnitTech$[esp+776], eax
	mov	DWORD PTR _eRecommendedUnit$[esp+776], eax
	mov	DWORD PTR _eMilitaryBuildingTech$[esp+776], eax
	mov	DWORD PTR _eRecommendedBuilding$[esp+776], eax
	mov	eax, DWORD PTR tv5440[esp+776]
	xor	edi, edi
	lea	ecx, DWORD PTR [eax+edx]
	mov	DWORD PTR _iMaxCombatValue$[esp+776], edi
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ebp, eax

; 218  : #ifdef AUI_WARNING_FIXES
; 219  : 	for (uint iTechLoop = 0; iTechLoop < pPlayerTechs->GetTechs()->GetNumTechs(); iTechLoop++)
; 220  : #else
; 221  : 	for(int iTechLoop = 0; iTechLoop < pPlayerTechs->GetTechs()->GetNumTechs(); iTechLoop++)

	mov	ecx, ebp
	call	?GetTechs@CvPlayerTechs@@QBEPAVCvTechXMLEntries@@XZ ; CvPlayerTechs::GetTechs
	mov	ecx, eax
	call	?GetNumTechs@CvTechXMLEntries@@QAEHXZ	; CvTechXMLEntries::GetNumTechs
	test	eax, eax
	jle	$LN1485@BuildCouns
	mov	eax, DWORD PTR _uiCounselIndex$[esp+776]
	imul	eax, 520				; 00000208H
	mov	DWORD PTR tv7373[esp+776], eax
	npad	3
$LL354@BuildCouns:

; 222  : #endif
; 223  : 	{
; 224  : 		TechTypes eTech = (TechTypes)iTechLoop;
; 225  : 		if(pPlayerTechs->CanResearch(eTech) && pPlayerTechs->GetCurrentResearch() != eTech)

	push	0
	push	edi
	mov	ecx, ebp
	call	?CanResearch@CvPlayerTechs@@QBE_NW4TechTypes@@_N@Z ; CvPlayerTechs::CanResearch
	test	al, al
	je	$LN353@BuildCouns
	mov	ecx, ebp
	call	?GetCurrentResearch@CvPlayerTechs@@QBE?AW4TechTypes@@XZ ; CvPlayerTechs::GetCurrentResearch
	cmp	eax, edi
	je	$LN353@BuildCouns

; 226  : 		{
; 227  : 			// go through recommended research for special units
; 228  : 			if(pPlayerTechs->GetCivTechPriority(eTech) > 1)

	push	edi
	mov	ecx, ebp
	call	?GetCivTechPriority@CvPlayerTechs@@QBEHW4TechTypes@@@Z ; CvPlayerTechs::GetCivTechPriority
	cmp	eax, 1
	jle	$LN1483@BuildCouns

; 229  : 			{
; 230  : 				bool bUniquenessFound = false;
; 231  : 				if(pPlayerTechs->GetCivTechUniqueUnit(eTech) != NO_UNIT)

	push	edi
	mov	ecx, ebp
	mov	BYTE PTR _bUniquenessFound$223929[esp+780], 0
	call	?GetCivTechUniqueUnit@CvPlayerTechs@@QBE?AW4UnitTypes@@W4TechTypes@@@Z ; CvPlayerTechs::GetCivTechUniqueUnit
	cmp	eax, -1
	je	$LN1482@BuildCouns

; 232  : 				{
; 233  : 					strLoc = Localization::Lookup("TXT_KEY_TECHSTRATEGY_CIV_BONUS_UNIT");

	lea	ecx, DWORD PTR $T226442[esp+776]
	push	OFFSET $SG223932
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 8
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226442[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 234  : 					strLoc << pPlayerTechs->GetTechs()->GetEntry(eTech)->GetTextKey();

	push	edi
	mov	ecx, ebp
	call	?GetTechs@CvPlayerTechs@@QBEPAVCvTechXMLEntries@@XZ ; CvPlayerTechs::GetTechs
	mov	ecx, eax
	call	?GetEntry@CvTechXMLEntries@@QAEPAVCvTechEntry@@H@Z ; CvTechXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 235  : 					strLoc << GC.getUnitInfo(pPlayerTechs->GetCivTechUniqueUnit(eTech))->GetTextKey();

	push	edi
	mov	ecx, ebp
	call	?GetCivTechUniqueUnit@CvPlayerTechs@@QBE?AW4UnitTypes@@W4TechTypes@@@Z ; CvPlayerTechs::GetCivTechUniqueUnit
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 236  : 					strLoc << GET_PLAYER(ePlayer).getCivilizationInfo().getAdjectiveKey();

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	eax, DWORD PTR tv5440[esp+776]
	lea	ecx, DWORD PTR [eax+edx]
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getAdjectiveKey@CvCivilizationInfo@@QBEPBDXZ ; CvCivilizationInfo::getAdjectiveKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 237  : 
; 238  : 					bool bSuccess = SetCounselEntry(uiCounselIndex, ADVISOR_SCIENCE, strLoc.toUTF8(), 2);

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	ecx, DWORD PTR _uiCounselIndex$[esp+776]
	cmp	ecx, DWORD PTR [esi+4]
	jae	$LN1484@BuildCouns
	mov	edx, DWORD PTR [esi]
	mov	ecx, DWORD PTR tv7373[esp+776]
	mov	DWORD PTR [ecx+edx], 3
	mov	edx, DWORD PTR [esi]
	push	eax
	lea	ecx, DWORD PTR [ecx+edx+4]
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	mov	eax, DWORD PTR tv7373[esp+788]
	mov	ecx, DWORD PTR [esi]

; 239  : 					CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 240  : 					if(!bSuccess)
; 241  : 					{
; 242  : 						break;
; 243  : 					}
; 244  : 					uiCounselIndex++;

	inc	DWORD PTR _uiCounselIndex$[esp+788]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [eax+ecx+516], 2
	add	eax, 520				; 00000208H
	mov	DWORD PTR tv7373[esp+776], eax

; 245  : 					bUniquenessFound = true;

	mov	BYTE PTR _bUniquenessFound$223929[esp+776], 1
$LN1482@BuildCouns:

; 246  : 				}
; 247  : 
; 248  : 				if(pPlayerTechs->GetCivTechUniqueBuilding(eTech) != NO_BUILDING)

	push	edi
	mov	ecx, ebp
	call	?GetCivTechUniqueBuilding@CvPlayerTechs@@QBE?AW4BuildingTypes@@W4TechTypes@@@Z ; CvPlayerTechs::GetCivTechUniqueBuilding
	cmp	eax, -1
	je	$LN347@BuildCouns

; 249  : 				{
; 250  : 					strLoc = Localization::Lookup("TXT_KEY_TECHSTRATEGY_CIV_BONUS_BUILDING");

	lea	edx, DWORD PTR $T226446[esp+776]
	push	OFFSET $SG223940
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 9
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226446[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 251  : 					strLoc << pPlayerTechs->GetTechs()->GetEntry(eTech)->GetTextKey();

	push	edi
	mov	ecx, ebp
	call	?GetTechs@CvPlayerTechs@@QBEPAVCvTechXMLEntries@@XZ ; CvPlayerTechs::GetTechs
	mov	ecx, eax
	call	?GetEntry@CvTechXMLEntries@@QAEPAVCvTechEntry@@H@Z ; CvTechXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 252  : 					strLoc << GC.getBuildingInfo(pPlayerTechs->GetCivTechUniqueBuilding(eTech))->GetTextKey();

	push	edi
	mov	ecx, ebp
	call	?GetCivTechUniqueBuilding@CvPlayerTechs@@QBE?AW4BuildingTypes@@W4TechTypes@@@Z ; CvPlayerTechs::GetCivTechUniqueBuilding
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 253  : 					strLoc << GET_PLAYER(ePlayer).getCivilizationInfo().getAdjectiveKey();

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, DWORD PTR tv5440[esp+776]
	add	ecx, eax
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getAdjectiveKey@CvCivilizationInfo@@QBEPBDXZ ; CvCivilizationInfo::getAdjectiveKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 254  : 					bool bSuccess = SetCounselEntry(uiCounselIndex, ADVISOR_SCIENCE, strLoc.toUTF8(), 2);

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	edx, DWORD PTR _uiCounselIndex$[esp+776]
	cmp	edx, DWORD PTR [esi+4]
	jae	$LN1484@BuildCouns
	mov	edx, DWORD PTR [esi]
	mov	ecx, DWORD PTR tv7373[esp+776]
	mov	DWORD PTR [ecx+edx], 3
	mov	edx, DWORD PTR [esi]
	push	eax
	lea	ecx, DWORD PTR [ecx+edx+4]
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	mov	eax, DWORD PTR tv7373[esp+788]
	mov	ecx, DWORD PTR [esi]

; 255  : 					CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 256  : 					if(!bSuccess)
; 257  : 					{
; 258  : 						break;
; 259  : 					}
; 260  : 					uiCounselIndex++;

	inc	DWORD PTR _uiCounselIndex$[esp+788]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [eax+ecx+516], 2
	add	eax, 520				; 00000208H
	mov	DWORD PTR tv7373[esp+776], eax

; 261  : 					bUniquenessFound = true;

	mov	BYTE PTR _bUniquenessFound$223929[esp+776], 1
$LN347@BuildCouns:

; 262  : 				}
; 263  : 
; 264  : 				if(pPlayerTechs->GetCivTechUniqueImprovement(eTech) != NO_IMPROVEMENT)

	push	edi
	mov	ecx, ebp
	call	?GetCivTechUniqueImprovement@CvPlayerTechs@@QBE?AW4ImprovementTypes@@W4TechTypes@@@Z ; CvPlayerTechs::GetCivTechUniqueImprovement
	cmp	eax, -1
	je	SHORT $LN345@BuildCouns

; 265  : 				{
; 266  : 					strLoc = Localization::Lookup("TXT_KEY_TECHSTRATEGY_CIV_BONUS_IMPROVEMENT");

	lea	edx, DWORD PTR $T226450[esp+776]
	push	OFFSET $SG223948
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 10		; 0000000aH
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226450[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 267  : 					strLoc << pPlayerTechs->GetTechs()->GetEntry(eTech)->GetTextKey();

	push	edi
	mov	ecx, ebp
	call	?GetTechs@CvPlayerTechs@@QBEPAVCvTechXMLEntries@@XZ ; CvPlayerTechs::GetTechs
	mov	ecx, eax
	call	?GetEntry@CvTechXMLEntries@@QAEPAVCvTechEntry@@H@Z ; CvTechXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 268  : 					strLoc << GC.getImprovementInfo(pPlayerTechs->GetCivTechUniqueImprovement(eTech))->GetTextKey();

	push	edi
	mov	ecx, ebp
	call	?GetCivTechUniqueImprovement@CvPlayerTechs@@QBE?AW4ImprovementTypes@@W4TechTypes@@@Z ; CvPlayerTechs::GetCivTechUniqueImprovement
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getImprovementInfo@CvGlobals@@QAEPAVCvImprovementEntry@@W4ImprovementTypes@@@Z ; CvGlobals::getImprovementInfo

; 269  : 					strLoc << GET_PLAYER(ePlayer).getCivilizationInfo().getAdjectiveKey();
; 270  : 					bool bSuccess = SetCounselEntry(uiCounselIndex, ADVISOR_SCIENCE, strLoc.toUTF8(), 2);
; 271  : 					CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 272  : 					if(!bSuccess)
; 273  : 					{
; 274  : 						break;
; 275  : 					}
; 276  : 					uiCounselIndex++;
; 277  : 					bUniquenessFound = true;
; 278  : 				}
; 279  : 
; 280  : 				if(!bUniquenessFound)

	jmp	SHORT $LN1513@BuildCouns
$LN345@BuildCouns:
	cmp	BYTE PTR _bUniquenessFound$223929[esp+776], 0
	jne	$LN1483@BuildCouns

; 281  : 				{
; 282  : 					// we don't have text for this
; 283  : 					strLoc = Localization::Lookup("TXT_KEY_TECHSTRATEGY_CIV_BONUS");

	lea	edx, DWORD PTR $T226454[esp+776]
	push	OFFSET $SG223956
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 11		; 0000000bH
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226454[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 284  : 					strLoc << pPlayerTechs->GetTechs()->GetEntry(eTech)->GetTextKey();

	push	edi
	mov	ecx, ebp
	call	?GetTechs@CvPlayerTechs@@QBEPAVCvTechXMLEntries@@XZ ; CvPlayerTechs::GetTechs
	mov	ecx, eax
	call	?GetEntry@CvTechXMLEntries@@QAEPAVCvTechEntry@@H@Z ; CvTechXMLEntries::GetEntry
$LN1513@BuildCouns:
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 285  : 					strLoc << GET_PLAYER(ePlayer).getCivilizationInfo().getAdjectiveKey();

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, DWORD PTR tv5440[esp+776]
	add	ecx, eax
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getAdjectiveKey@CvCivilizationInfo@@QBEPBDXZ ; CvCivilizationInfo::getAdjectiveKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 286  : 					bool bSuccess = SetCounselEntry(uiCounselIndex, ADVISOR_SCIENCE, strLoc.toUTF8(), 2);

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	edx, DWORD PTR _uiCounselIndex$[esp+776]
	cmp	edx, DWORD PTR [esi+4]
	jae	$LN1484@BuildCouns
	mov	edx, DWORD PTR [esi]
	mov	ecx, DWORD PTR tv7373[esp+776]
	mov	DWORD PTR [ecx+edx], 3
	mov	edx, DWORD PTR [esi]
	push	eax
	lea	ecx, DWORD PTR [ecx+edx+4]
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	mov	eax, DWORD PTR tv7373[esp+788]
	mov	ecx, DWORD PTR [esi]

; 287  : 					CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 288  : 					if(!bSuccess)
; 289  : 					{
; 290  : 						break;
; 291  : 					}
; 292  : 					uiCounselIndex++;

	inc	DWORD PTR _uiCounselIndex$[esp+788]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [eax+ecx+516], 2
	add	eax, 520				; 00000208H
	mov	DWORD PTR tv7373[esp+776], eax
$LN1483@BuildCouns:

; 293  : 				}
; 294  : 			}
; 295  : 
; 296  : 			// go through recommended research for resources
; 297  : 			if(pPlayerTechs->GetLocaleTechPriority(eTech) > 1)

	push	edi
	mov	ecx, ebp
	call	?GetLocaleTechPriority@CvPlayerTechs@@QBEHW4TechTypes@@@Z ; CvPlayerTechs::GetLocaleTechPriority
	cmp	eax, 1
	jle	$LN341@BuildCouns

; 298  : 			{
; 299  : 				// say we need this for a special resource
; 300  : 				strLoc = Localization::Lookup("TXT_KEY_TECHSTRATEGY_RESOURCE");

	lea	edx, DWORD PTR $T226457[esp+776]
	push	OFFSET $SG223963
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 12		; 0000000cH
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226457[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 301  : 				strLoc << pPlayerTechs->GetTechs()->GetEntry(eTech)->GetTextKey();

	push	edi
	mov	ecx, ebp
	call	?GetTechs@CvPlayerTechs@@QBEPAVCvTechXMLEntries@@XZ ; CvPlayerTechs::GetTechs
	mov	ecx, eax
	call	?GetEntry@CvTechXMLEntries@@QAEPAVCvTechEntry@@H@Z ; CvTechXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 302  : 				strLoc << GC.getResourceInfo(pPlayerTechs->GetLocaleTechResource(eTech))->GetTextKey();

	push	edi
	mov	ecx, ebp
	call	?GetLocaleTechResource@CvPlayerTechs@@QBE?AW4ResourceTypes@@W4TechTypes@@@Z ; CvPlayerTechs::GetLocaleTechResource
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 303  : 				bool bSuccess = SetCounselEntry(uiCounselIndex, ADVISOR_SCIENCE, strLoc.toUTF8(), 60);

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	ecx, DWORD PTR _uiCounselIndex$[esp+776]
	cmp	ecx, DWORD PTR [esi+4]
	jae	$LN1484@BuildCouns
	mov	edx, DWORD PTR [esi]
	mov	ecx, DWORD PTR tv7373[esp+776]
	mov	DWORD PTR [ecx+edx], 3
	mov	edx, DWORD PTR [esi]
	push	eax
	lea	ecx, DWORD PTR [ecx+edx+4]
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	mov	eax, DWORD PTR tv7373[esp+788]
	mov	ecx, DWORD PTR [esi]

; 304  : 				CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 305  : 				if(!bSuccess)
; 306  : 				{
; 307  : 					break;
; 308  : 				}
; 309  : 				uiCounselIndex++;

	inc	DWORD PTR _uiCounselIndex$[esp+788]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [eax+ecx+516], 60		; 0000003cH
	add	eax, 520				; 00000208H
	mov	DWORD PTR tv7373[esp+776], eax
$LN341@BuildCouns:

; 310  : 			}
; 311  : 
; 312  : 			// look at available buildings
; 313  : 			int iNumBuildingInfos = GC.getNumBuildingInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos

; 314  : 			BuildingTypes eBuilding1 = NO_BUILDING;

	or	ecx, -1
	mov	DWORD PTR _iNumBuildingInfos$223968[esp+776], eax
	mov	DWORD PTR _eBuilding1$223969[esp+776], ecx

; 315  : 			BuildingTypes eBuilding2 = NO_BUILDING;

	mov	DWORD PTR _eBuilding2$223970[esp+776], ecx

; 316  : 			BuildingTypes eBuilding3 = NO_BUILDING;

	mov	DWORD PTR _eBuilding3$223971[esp+776], ecx

; 317  : 			for(int iI = 0; iI < iNumBuildingInfos; iI++)

	mov	DWORD PTR _iI$223972[esp+776], 0
	test	eax, eax
	jle	$LN330@BuildCouns
$LL339@BuildCouns:

; 318  : 			{
; 319  : 				BuildingTypes eBuilding = (BuildingTypes)iI;
; 320  : 				CvBuildingEntry* pBuilding = GC.getBuildingInfo(eBuilding);

	mov	edx, DWORD PTR _iI$223972[esp+776]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pBuilding$223978[esp+776], eax

; 321  : 				if(pBuilding && pBuilding->GetPrereqAndTech() == eTech && pBuilding->GetFlavorValue(eFlavorScience) > 0 && !GC.getGame().isBuildingClassMaxedOut((BuildingClassTypes)pBuilding->GetBuildingClassType()))

	test	eax, eax
	je	$LN1487@BuildCouns
	mov	ecx, eax
	call	?GetPrereqAndTech@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetPrereqAndTech
	cmp	eax, edi
	jne	$LN1487@BuildCouns
	mov	eax, DWORD PTR _eFlavorScience$[esp+776]
	mov	ecx, DWORD PTR _pBuilding$223978[esp+776]
	push	eax
	call	?GetFlavorValue@CvBuildingEntry@@QBEHH@Z ; CvBuildingEntry::GetFlavorValue
	test	eax, eax
	jle	SHORT $LN1487@BuildCouns
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227187[esp+776], ecx
	mov	ecx, DWORD PTR _pBuilding$223978[esp+776]
	push	0
	call	?GetBuildingClassType@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetBuildingClassType
	mov	ecx, DWORD PTR $T227187[esp+780]
	push	eax
	call	?isBuildingClassMaxedOut@CvGame@@QAE_NW4BuildingClassTypes@@H@Z ; CvGame::isBuildingClassMaxedOut
	test	al, al
	jne	SHORT $LN1487@BuildCouns

; 322  : 				{
; 323  : 					if(eBuilding1 == NO_BUILDING)

	or	ecx, -1
	cmp	DWORD PTR _eBuilding1$223969[esp+776], ecx
	jne	SHORT $LN335@BuildCouns

; 324  : 					{
; 325  : 						eBuilding1 = eBuilding;

	mov	edx, DWORD PTR _iI$223972[esp+776]
	mov	DWORD PTR _eBuilding1$223969[esp+776], edx
	jmp	SHORT $LN338@BuildCouns
$LN335@BuildCouns:

; 326  : 					}
; 327  : 					else if(eBuilding2 == NO_BUILDING)

	cmp	DWORD PTR _eBuilding2$223970[esp+776], ecx
	jne	SHORT $LN333@BuildCouns

; 328  : 					{
; 329  : 						eBuilding2 = eBuilding;

	mov	eax, DWORD PTR _iI$223972[esp+776]
	mov	DWORD PTR _eBuilding2$223970[esp+776], eax
	jmp	SHORT $LN338@BuildCouns
$LN333@BuildCouns:

; 330  : 					}
; 331  : 					else if(eBuilding3 == NO_BUILDING)

	cmp	DWORD PTR _eBuilding3$223971[esp+776], ecx
	jne	SHORT $LN338@BuildCouns

; 332  : 					{
; 333  : 						eBuilding3 = eBuilding;

	mov	edx, DWORD PTR _iI$223972[esp+776]
	mov	DWORD PTR _eBuilding3$223971[esp+776], edx
	jmp	SHORT $LN338@BuildCouns
$LN1487@BuildCouns:

; 324  : 					{
; 325  : 						eBuilding1 = eBuilding;

	or	ecx, -1
$LN338@BuildCouns:

; 317  : 			for(int iI = 0; iI < iNumBuildingInfos; iI++)

	mov	eax, DWORD PTR _iI$223972[esp+776]
	inc	eax
	cmp	eax, DWORD PTR _iNumBuildingInfos$223968[esp+776]
	mov	DWORD PTR _iI$223972[esp+776], eax
	jl	$LL339@BuildCouns

; 334  : 					}
; 335  : 				}
; 336  : 			}
; 337  : 
; 338  : 			if(eBuilding1 != NO_BUILDING)

	cmp	DWORD PTR _eBuilding1$223969[esp+776], ecx
	je	$LN330@BuildCouns

; 339  : 			{
; 340  : 				if(eBuilding2 != NO_BUILDING)

	cmp	DWORD PTR _eBuilding2$223970[esp+776], ecx
	je	$LN329@BuildCouns

; 341  : 				{
; 342  : 					if(eBuilding3 != NO_BUILDING)

	cmp	DWORD PTR _eBuilding3$223971[esp+776], ecx
	je	$LN328@BuildCouns

; 343  : 					{
; 344  : 						strLoc = Localization::Lookup("TXT_KEY_SCIENCESTRATEGY_TECH_THAT_PROVIDES_SCIENCE_BUILDING_3");

	lea	eax, DWORD PTR $T226460[esp+776]
	push	OFFSET $SG223990
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 13		; 0000000dH
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226460[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 345  : 						strLoc << pPlayerTechs->GetTechs()->GetEntry(eTech)->GetTextKey();

	push	edi
	mov	ecx, ebp
	call	?GetTechs@CvPlayerTechs@@QBEPAVCvTechXMLEntries@@XZ ; CvPlayerTechs::GetTechs
	mov	ecx, eax
	call	?GetEntry@CvTechXMLEntries@@QAEPAVCvTechEntry@@H@Z ; CvTechXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 346  : 						strLoc << GC.getBuildingInfo(eBuilding1)->GetTextKey();

	mov	ecx, DWORD PTR _eBuilding1$223969[esp+776]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 347  : 						strLoc << GC.getBuildingInfo(eBuilding2)->GetTextKey();

	mov	edx, DWORD PTR _eBuilding2$223970[esp+776]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 348  : 						strLoc << GC.getBuildingInfo(eBuilding3)->GetTextKey();

	mov	eax, DWORD PTR _eBuilding3$223971[esp+776]
	push	eax

; 349  : 					}
; 350  : 					else

	jmp	$LN1514@BuildCouns
$LN328@BuildCouns:

; 351  : 					{
; 352  : 						strLoc = Localization::Lookup("TXT_KEY_SCIENCESTRATEGY_TECH_THAT_PROVIDES_SCIENCE_BUILDING_2");

	lea	ecx, DWORD PTR $T226465[esp+776]
	push	OFFSET $SG223997
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 14		; 0000000eH
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226465[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 353  : 						strLoc << pPlayerTechs->GetTechs()->GetEntry(eTech)->GetTextKey();

	push	edi
	mov	ecx, ebp
	call	?GetTechs@CvPlayerTechs@@QBEPAVCvTechXMLEntries@@XZ ; CvPlayerTechs::GetTechs
	mov	ecx, eax
	call	?GetEntry@CvTechXMLEntries@@QAEPAVCvTechEntry@@H@Z ; CvTechXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 354  : 						strLoc << GC.getBuildingInfo(eBuilding1)->GetTextKey();

	mov	edx, DWORD PTR _eBuilding1$223969[esp+776]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 355  : 						strLoc << GC.getBuildingInfo(eBuilding2)->GetTextKey();

	mov	eax, DWORD PTR _eBuilding2$223970[esp+776]
	push	eax

; 356  : 					}
; 357  : 				}
; 358  : 				else

	jmp	SHORT $LN1514@BuildCouns
$LN329@BuildCouns:

; 359  : 				{
; 360  : 					strLoc = Localization::Lookup("TXT_KEY_SCIENCESTRATEGY_TECH_THAT_PROVIDES_SCIENCE_BUILDING_1");

	lea	ecx, DWORD PTR $T226469[esp+776]
	push	OFFSET $SG224003
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 15		; 0000000fH
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226469[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 361  : 					strLoc << pPlayerTechs->GetTechs()->GetEntry(eTech)->GetTextKey();

	push	edi
	mov	ecx, ebp
	call	?GetTechs@CvPlayerTechs@@QBEPAVCvTechXMLEntries@@XZ ; CvPlayerTechs::GetTechs
	mov	ecx, eax
	call	?GetEntry@CvTechXMLEntries@@QAEPAVCvTechEntry@@H@Z ; CvTechXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 362  : 					strLoc << GC.getBuildingInfo(eBuilding1)->GetTextKey();

	mov	edx, DWORD PTR _eBuilding1$223969[esp+776]
	push	edx
$LN1514@BuildCouns:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 363  : 				}
; 364  : 
; 365  : 				bool bSuccess = SetCounselEntry(uiCounselIndex, ADVISOR_SCIENCE, strLoc.toUTF8(), 15);

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	ecx, DWORD PTR _uiCounselIndex$[esp+776]
	cmp	ecx, DWORD PTR [esi+4]
	jae	$LN1484@BuildCouns
	mov	edx, DWORD PTR [esi]
	mov	ecx, DWORD PTR tv7373[esp+776]
	mov	DWORD PTR [ecx+edx], 3
	mov	edx, DWORD PTR [esi]
	push	eax
	lea	ecx, DWORD PTR [ecx+edx+4]
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	mov	eax, DWORD PTR tv7373[esp+788]
	mov	ecx, DWORD PTR [esi]

; 366  : 				CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 367  : 				if(!bSuccess)
; 368  : 				{
; 369  : 					break;
; 370  : 				}
; 371  : 				uiCounselIndex++;

	inc	DWORD PTR _uiCounselIndex$[esp+788]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [eax+ecx+516], 15		; 0000000fH
	add	eax, 520				; 00000208H
	mov	DWORD PTR tv7373[esp+776], eax
$LN330@BuildCouns:

; 372  : 			}
; 373  : 
; 374  : #ifdef AUI_WARNING_FIXES
; 375  : 			for (uint i = 0; i < GC.getNumUnitInfos(); i++)
; 376  : #else
; 377  : 			for(int i = 0; i < GC.getNumUnitInfos(); i++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _i$224008[esp+776], 0
	call	?getNumUnitInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitInfos
	test	eax, eax
	jle	$LN322@BuildCouns
	npad	5
$LL324@BuildCouns:

; 378  : #endif
; 379  : 			{
; 380  : 				UnitTypes eUnitType = (UnitTypes)i;
; 381  : 				CvUnitEntry* pUnitEntry = GC.getUnitInfo(eUnitType);

	mov	edx, DWORD PTR _i$224008[esp+776]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	DWORD PTR _pUnitEntry$224014[esp+776], eax

; 382  : 				if(pUnitEntry)

	test	eax, eax
	je	$LN323@BuildCouns

; 383  : 				{
; 384  : 					if(pUnitEntry->GetPrereqAndTech() == eTech && pUnitEntry->GetUnitCombatType() != NO_UNITCOMBAT)

	mov	ecx, eax
	call	?GetPrereqAndTech@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetPrereqAndTech
	cmp	eax, edi
	jne	$LN323@BuildCouns
	mov	ecx, DWORD PTR _pUnitEntry$224014[esp+776]
	call	?GetUnitCombatType@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetUnitCombatType
	cmp	eax, -1
	je	$LN323@BuildCouns

; 385  : 					{
; 386  : 						UnitTypes eCivUnit = ((UnitTypes)(GET_PLAYER(ePlayer).getCivilizationInfo().getCivilizationUnits(pUnitEntry->GetUnitClassType())));

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, DWORD PTR tv5440[esp+776]
	add	ecx, eax
	mov	DWORD PTR $T227250[esp+776], ecx
	mov	ecx, DWORD PTR _pUnitEntry$224014[esp+776]
	call	?GetUnitClassType@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetUnitClassType
	mov	ecx, DWORD PTR $T227250[esp+776]
	push	eax
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getCivilizationUnits@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationUnits

; 387  : 						if(eUnitType != eCivUnit)

	cmp	DWORD PTR _i$224008[esp+776], eax
	jne	SHORT $LN323@BuildCouns

; 388  : 						{
; 389  : 							continue;
; 390  : 						}
; 391  : 
; 392  : 						int iCombatValue = MAX(pUnitEntry->GetCombat(), pUnitEntry->GetRangedCombat());

	mov	ecx, DWORD PTR _pUnitEntry$224014[esp+776]
	call	?GetRangedCombat@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetRangedCombat
	mov	ecx, DWORD PTR _pUnitEntry$224014[esp+776]
	mov	DWORD PTR $T226472[esp+776], eax
	call	?GetCombat@CvUnitEntry@@QBEHXZ		; CvUnitEntry::GetCombat
	cmp	eax, DWORD PTR $T226472[esp+776]
	mov	DWORD PTR $T226473[esp+776], eax
	lea	eax, DWORD PTR $T226472[esp+776]
	jl	SHORT $LN730@BuildCouns
	lea	eax, DWORD PTR $T226473[esp+776]
$LN730@BuildCouns:
	mov	eax, DWORD PTR [eax]

; 393  : 						if(iCombatValue <= iMaxCombatValue)

	cmp	eax, DWORD PTR _iMaxCombatValue$[esp+776]
	jle	SHORT $LN323@BuildCouns

; 394  : 						{
; 395  : 							continue;
; 396  : 						}
; 397  : 
; 398  : 						eMilitaryUnitTech = eTech;
; 399  : 						eRecommendedUnit = eUnitType;

	mov	edx, DWORD PTR _i$224008[esp+776]
	mov	DWORD PTR _eMilitaryUnitTech$[esp+776], edi
	mov	DWORD PTR _eRecommendedUnit$[esp+776], edx

; 400  : 						iMaxCombatValue = iCombatValue;

	mov	DWORD PTR _iMaxCombatValue$[esp+776], eax
$LN323@BuildCouns:
	inc	DWORD PTR _i$224008[esp+776]
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumUnitInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitInfos
	cmp	DWORD PTR _i$224008[esp+776], eax
	jl	$LL324@BuildCouns
$LN322@BuildCouns:

; 401  : 					}
; 402  : 				}
; 403  : 			}
; 404  : 
; 405  : #ifdef AUI_WARNING_FIXES
; 406  : 			for (uint i = 0; i < GC.getNumBuildingInfos(); i++)
; 407  : #else
; 408  : 			for(int i = 0; i < GC.getNumBuildingInfos(); i++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _i$224024[esp+776], 0
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	test	eax, eax
	jle	$LN353@BuildCouns
	npad	7
$LL317@BuildCouns:

; 409  : #endif
; 410  : 			{
; 411  : 				BuildingTypes eBuildingType = (BuildingTypes)i;
; 412  : 				CvBuildingEntry* pBuildingEntry = GC.getBuildingInfo(eBuildingType);

	mov	eax, DWORD PTR _i$224024[esp+776]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pBuildingEntry$224030[esp+776], eax

; 413  : 				if(!pBuildingEntry || pBuildingEntry->GetPrereqAndTech() != eTech)

	test	eax, eax
	je	SHORT $LN316@BuildCouns
	mov	ecx, eax
	call	?GetPrereqAndTech@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetPrereqAndTech
	cmp	eax, edi
	jne	SHORT $LN316@BuildCouns

; 414  : 				{
; 415  : 					continue;
; 416  : 				}
; 417  : 
; 418  : 				bool bProvidesExperience = false;

	mov	BYTE PTR _bProvidesExperience$224033[esp+776], 0

; 419  : 				for(int iDomain = 0; iDomain < NUM_DOMAIN_TYPES; iDomain++)

	mov	DWORD PTR _iDomain$224034[esp+776], 0
	npad	1
$LL312@BuildCouns:

; 420  : 				{
; 421  : 					if(pBuildingEntry->GetDomainFreeExperience(iDomain) > 0)

	mov	ecx, DWORD PTR _iDomain$224034[esp+776]
	push	ecx
	mov	ecx, DWORD PTR _pBuildingEntry$224030[esp+780]
	call	?GetDomainFreeExperience@CvBuildingEntry@@QBEHH@Z ; CvBuildingEntry::GetDomainFreeExperience
	test	eax, eax
	jle	SHORT $LN311@BuildCouns

; 422  : 					{
; 423  : 						bProvidesExperience = true;

	mov	BYTE PTR _bProvidesExperience$224033[esp+776], 1
$LN311@BuildCouns:

; 419  : 				for(int iDomain = 0; iDomain < NUM_DOMAIN_TYPES; iDomain++)

	mov	eax, DWORD PTR _iDomain$224034[esp+776]
	inc	eax
	cmp	eax, 5
	mov	DWORD PTR _iDomain$224034[esp+776], eax
	jl	SHORT $LL312@BuildCouns

; 424  : 					}
; 425  : 				}
; 426  : 
; 427  : 				if(!bProvidesExperience)

	cmp	BYTE PTR _bProvidesExperience$224033[esp+776], 0
	je	SHORT $LN316@BuildCouns

; 428  : 				{
; 429  : 					continue;
; 430  : 				}
; 431  : 
; 432  : 				eMilitaryBuildingTech = eTech;
; 433  : 				eRecommendedBuilding = eBuildingType;

	mov	edx, DWORD PTR _i$224024[esp+776]
	mov	DWORD PTR _eMilitaryBuildingTech$[esp+776], edi
	mov	DWORD PTR _eRecommendedBuilding$[esp+776], edx
$LN316@BuildCouns:
	inc	DWORD PTR _i$224024[esp+776]
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	cmp	DWORD PTR _i$224024[esp+776], eax
	jl	SHORT $LL317@BuildCouns
$LN353@BuildCouns:

; 218  : #ifdef AUI_WARNING_FIXES
; 219  : 	for (uint iTechLoop = 0; iTechLoop < pPlayerTechs->GetTechs()->GetNumTechs(); iTechLoop++)
; 220  : #else
; 221  : 	for(int iTechLoop = 0; iTechLoop < pPlayerTechs->GetTechs()->GetNumTechs(); iTechLoop++)

	mov	ecx, ebp
	inc	edi
	call	?GetTechs@CvPlayerTechs@@QBEPAVCvTechXMLEntries@@XZ ; CvPlayerTechs::GetTechs
	mov	ecx, eax
	call	?GetNumTechs@CvTechXMLEntries@@QAEHXZ	; CvTechXMLEntries::GetNumTechs
	cmp	edi, eax
	jl	$LL354@BuildCouns
$LN1484@BuildCouns:

; 434  : 			}
; 435  : 		}
; 436  : 	}
; 437  : 
; 438  : 	if(eRecommendedUnit != NO_UNIT)

	mov	eax, DWORD PTR _eRecommendedUnit$[esp+776]
	cmp	eax, -1
	je	$LN1501@BuildCouns

; 439  : 	{
; 440  : 		CvUnitEntry* pkUnitInfo = GC.getUnitInfo(eRecommendedUnit);

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	edi, eax

; 441  : 		if(pkUnitInfo)

	test	edi, edi
	je	$LN1501@BuildCouns

; 442  : 		{
; 443  : 			strLoc = Localization::Lookup("TXT_KEY_SCIENCESTRATEGY_RESEARCH_MILITARY_UNITS");

	lea	eax, DWORD PTR $T226474[esp+776]
	push	OFFSET $SG224044
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 16		; 00000010H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226474[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 444  : 			strLoc << pPlayerTechs->GetTechs()->GetEntry(eMilitaryUnitTech)->GetTextKey();

	mov	ecx, DWORD PTR _eMilitaryUnitTech$[esp+776]
	push	ecx
	mov	ecx, ebp
	call	?GetTechs@CvPlayerTechs@@QBEPAVCvTechXMLEntries@@XZ ; CvPlayerTechs::GetTechs
	mov	ecx, eax
	call	?GetEntry@CvTechXMLEntries@@QAEPAVCvTechEntry@@H@Z ; CvTechXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 445  : 			strLoc << pkUnitInfo->GetTextKey();

	mov	ecx, edi
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 446  : 			
; 447  : #ifdef CVASSERT_ENABLE
; 448  : 			bool bSuccess = SetCounselEntry(uiCounselIndex, ADVISOR_MILITARY, strLoc.toUTF8(), 15);
; 449  : 			DEBUG_VARIABLE(bSuccess);
; 450  : 			CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 451  : #else
; 452  : 			SetCounselEntry(uiCounselIndex, ADVISOR_MILITARY, strLoc.toUTF8(), 15);

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	edx, DWORD PTR _uiCounselIndex$[esp+776]
	cmp	edx, DWORD PTR [esi+4]
	jae	SHORT $LN736@BuildCouns
	mov	ecx, DWORD PTR [esi]
	mov	edi, edx
	imul	edi, 520				; 00000208H
	mov	DWORD PTR [edi+ecx], 0
	mov	edx, DWORD PTR [esi]
	push	eax
	lea	ecx, DWORD PTR [edi+edx+4]
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	mov	eax, DWORD PTR [esi]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [edi+eax+516], 15		; 0000000fH
$LN736@BuildCouns:

; 453  : #endif
; 454  : 			uiCounselIndex++;

	inc	DWORD PTR _uiCounselIndex$[esp+776]
$LN1501@BuildCouns:

; 455  : 		}
; 456  : 	}
; 457  : 
; 458  : 	if(eRecommendedBuilding != NO_BUILDING)

	cmp	DWORD PTR _eRecommendedBuilding$[esp+776], -1
	je	$LN1485@BuildCouns

; 459  : 	{
; 460  : 		CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eRecommendedBuilding);

	mov	ecx, DWORD PTR _eRecommendedBuilding$[esp+776]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	edi, eax

; 461  : 		if(pkBuildingInfo)

	test	edi, edi
	je	$LN1485@BuildCouns

; 462  : 		{
; 463  : 			strLoc = Localization::Lookup("TXT_KEY_SCIENCESTRATEGY_RESEARCH_MILITARY_BUILDING");

	lea	edx, DWORD PTR $T226477[esp+776]
	push	OFFSET $SG224051
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 17		; 00000011H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226477[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 464  : 			strLoc << pPlayerTechs->GetTechs()->GetEntry(eMilitaryBuildingTech)->GetTextKey();

	mov	eax, DWORD PTR _eMilitaryBuildingTech$[esp+776]
	push	eax
	mov	ecx, ebp
	call	?GetTechs@CvPlayerTechs@@QBEPAVCvTechXMLEntries@@XZ ; CvPlayerTechs::GetTechs
	mov	ecx, eax
	call	?GetEntry@CvTechXMLEntries@@QAEPAVCvTechEntry@@H@Z ; CvTechXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 465  : 			strLoc << pkBuildingInfo->GetTextKey();

	mov	ecx, edi
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 466  : 
; 467  : #ifdef CVASSERT_ENABLE
; 468  : 			bool bSuccess = SetCounselEntry(uiCounselIndex, ADVISOR_MILITARY, strLoc.toUTF8(), 15);
; 469  : 			DEBUG_VARIABLE(bSuccess);
; 470  : 			CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 471  : #else
; 472  : 			SetCounselEntry(uiCounselIndex, ADVISOR_MILITARY, strLoc.toUTF8(), 15);

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	ebp, DWORD PTR _uiCounselIndex$[esp+776]
	cmp	ebp, DWORD PTR [esi+4]
	jae	SHORT $LN753@BuildCouns
	mov	ecx, DWORD PTR [esi]
	mov	edi, ebp
	imul	edi, 520				; 00000208H
	mov	DWORD PTR [edi+ecx], 0
	mov	edx, DWORD PTR [esi]
	push	eax
	lea	ecx, DWORD PTR [edi+edx+4]
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	mov	eax, DWORD PTR [esi]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [edi+eax+516], 15		; 0000000fH
$LN753@BuildCouns:

; 473  : #endif
; 474  : 			uiCounselIndex++;

	inc	ebp
	mov	DWORD PTR _uiCounselIndex$[esp+776], ebp
$LN1485@BuildCouns:

; 475  : 		}
; 476  : 	}
; 477  : 
; 478  : 	// evaluate the player's science yield according to population
; 479  : 	{
; 480  : 		int iRating = 1;
; 481  : 		int iScience = GET_PLAYER(ePlayer).GetScience();

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ebp, DWORD PTR tv5440[esp+776]
	add	ecx, ebp
	call	?GetScience@CvPlayer@@QBEHXZ		; CvPlayer::GetScience

; 482  : 		int iPopulation = GET_PLAYER(ePlayer).getTotalPopulation();

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	edi, eax
	lea	ecx, DWORD PTR [edx+ebp]
	mov	DWORD PTR _iScience$224055[esp+776], edi
	call	?getTotalPopulation@CvPlayer@@QBEHXZ	; CvPlayer::getTotalPopulation
	mov	ebp, eax

; 483  : 		int iRatio = 0;

	mov	DWORD PTR _iRatio$224057[esp+776], 0

; 484  : 		if(iPopulation > 0)

	test	ebp, ebp
	jle	SHORT $LN303@BuildCouns

; 485  : 		{
; 486  : 			iRatio = (iScience * 100) / iPopulation;

	mov	eax, edi
	imul	eax, 100				; 00000064H
	cdq
	idiv	ebp
	mov	DWORD PTR _iRatio$224057[esp+776], eax
$LN303@BuildCouns:

; 487  : 		}
; 488  : 
; 489  : 		CvTreasury* pTreasury = GET_PLAYER(ePlayer).GetTreasury();

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, DWORD PTR tv5440[esp+776]
	add	ecx, eax
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury

; 490  : 
; 491  : 		int iGold = pTreasury->GetGold();

	mov	ecx, eax
	call	?GetGold@CvTreasury@@QBEHXZ		; CvTreasury::GetGold

; 492  : 		int iRevenue = GET_PLAYER(ePlayer).calculateGoldRate();

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	edi, eax
	mov	eax, DWORD PTR tv5440[esp+776]
	lea	ecx, DWORD PTR [eax+edx]
	call	?calculateGoldRate@CvPlayer@@QBEHXZ	; CvPlayer::calculateGoldRate

; 493  : 
; 494  : 		if((iGold + iRevenue) > 0)

	add	eax, edi
	mov	edi, DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z
	test	eax, eax
	jle	$LN302@BuildCouns

; 495  : 		{
; 496  : 			if(iRatio < 110)

	mov	eax, DWORD PTR _iRatio$224057[esp+776]
	cmp	eax, 110				; 0000006eH
	jge	SHORT $LN301@BuildCouns

; 497  : 			{
; 498  : 				strLoc = Localization::Lookup("TXT_KEY_SCIENCESTRATEGY_INFO_DOING_POORLY");

	lea	ecx, DWORD PTR $T226480[esp+776]
	push	OFFSET $SG224065
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 18		; 00000012H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226480[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 499  : 				strLoc << iScience;

	mov	edx, DWORD PTR _iScience$224055[esp+776]
	push	edx
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	edi

; 500  : 				strLoc << iPopulation;

	push	ebp
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	edi

; 501  : 				iRating = 10;

	mov	ebp, 10					; 0000000aH
	jmp	$LN297@BuildCouns
$LN301@BuildCouns:

; 502  : 			}
; 503  : 			else if(iRatio > 125)

	cmp	eax, 125				; 0000007dH
	jle	SHORT $LN299@BuildCouns

; 504  : 			{
; 505  : 				strLoc = Localization::Lookup("TXT_KEY_SCIENCESTRATEGY_INFO_DOING_WELL");

	lea	eax, DWORD PTR $T226481[esp+776]
	push	OFFSET $SG224069
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 19		; 00000013H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226481[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 506  : 				strLoc << iScience;

	mov	ecx, DWORD PTR _iScience$224055[esp+776]
	push	ecx
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	edi

; 507  : 				strLoc << iPopulation;

	push	ebp
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	edi

; 508  : 				iRating = 5;

	mov	ebp, 5

; 509  : 			}
; 510  : 			else

	jmp	$LN297@BuildCouns
$LN299@BuildCouns:

; 511  : 			{
; 512  : 				strLoc = Localization::Lookup("TXT_KEY_SCIENCESTRATEGY_INFO");

	lea	edx, DWORD PTR $T226482[esp+776]
	push	OFFSET $SG224072
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 20		; 00000014H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226482[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 513  : 				strLoc << iScience;

	mov	eax, DWORD PTR _iScience$224055[esp+776]
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	edi

; 514  : 				strLoc << iPopulation;

	push	ebp
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	edi

; 515  : 				iRating = 1;

	mov	ebp, 1

; 516  : 			}
; 517  : 		}
; 518  : 		else

	jmp	SHORT $LN297@BuildCouns
$LN302@BuildCouns:

; 519  : 		{
; 520  : 			strLoc = Localization::Lookup("TXT_KEY_SCIENCESTRATEGY_BANKRUPT");

	lea	ecx, DWORD PTR $T226483[esp+776]
	push	OFFSET $SG224075
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 21		; 00000015H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226483[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 521  : 			iRating = 99;

	mov	ebp, 99					; 00000063H
$LN297@BuildCouns:

; 522  : 		}
; 523  : 
; 524  : #ifdef CVASSERT_ENABLE
; 525  : 		bool bSuccess = SetCounselEntry(uiCounselIndex, ADVISOR_SCIENCE, strLoc.toUTF8(), iRating);
; 526  : 		DEBUG_VARIABLE(bSuccess);
; 527  : 		CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 528  : #else
; 529  : 		SetCounselEntry(uiCounselIndex, ADVISOR_SCIENCE, strLoc.toUTF8(), iRating);

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	edi, DWORD PTR _uiCounselIndex$[esp+776]
	cmp	edi, DWORD PTR [esi+4]
	jae	SHORT $LN786@BuildCouns
	mov	edx, DWORD PTR [esi]
	imul	edi, 520				; 00000208H
	mov	DWORD PTR [edi+edx], 3
	mov	ecx, DWORD PTR [esi]
	push	eax
	lea	ecx, DWORD PTR [edi+ecx+4]
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [edi+edx+516], ebp
	mov	edi, DWORD PTR _uiCounselIndex$[esp+788]
	add	esp, 12					; 0000000cH
$LN786@BuildCouns:

; 530  : #endif
; 531  : 		uiCounselIndex++;
; 532  : 	}
; 533  : 
; 534  : 
; 535  : 
; 536  : 	// diplomacy info
; 537  : 	// go through all the other major civs and build info on them
; 538  : 	// for each opposing major
; 539  : 	CvDiplomacyAI* pDiplomacyAI = GET_PLAYER(ePlayer).GetDiplomacyAI();

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, DWORD PTR tv5440[esp+776]
	inc	edi
	add	ecx, eax
	mov	DWORD PTR _uiCounselIndex$[esp+776], edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI

; 540  : 	for(int iPlayer = 0; iPlayer < MAX_MAJOR_CIVS; iPlayer++)

	xor	ebp, ebp
	imul	edi, 520				; 00000208H
	mov	DWORD PTR _pDiplomacyAI$[esp+776], eax
	mov	DWORD PTR _iPlayer$224077[esp+776], ebp
	mov	DWORD PTR tv7403[esp+776], edi
	npad	12
$LL1475@BuildCouns:

; 541  : 	{
; 542  : 		if(GC.getGame().isOption(GAMEOPTION_ALWAYS_WAR) || GC.getGame().isOption(GAMEOPTION_ALWAYS_PEACE))

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	3
	call	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z ; CvGame::isOption
	test	al, al
	jne	$LN295@BuildCouns
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	4
	call	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z ; CvGame::isOption
	test	al, al
	jne	$LN295@BuildCouns

; 543  : 		{
; 544  : 			continue;
; 545  : 		}
; 546  : 
; 547  : 		// reset the ratings per player
; 548  : 		int iMessageRating = 0;
; 549  : 		AdvisorTypes eAdvisor = NO_ADVISOR_TYPE;
; 550  : 
; 551  : 		PlayerTypes eOtherPlayer = (PlayerTypes)iPlayer;
; 552  : 		TeamTypes eOtherTeam = GET_PLAYER(eOtherPlayer).getTeam();

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	eax, DWORD PTR [ecx+ebp+44]
	xor	esi, esi
	or	edi, -1
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN810@BuildCouns
	mov	edx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [edx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR $T227431[esp+776], eax
	jmp	SHORT $LN811@BuildCouns
$LN810@BuildCouns:
	mov	DWORD PTR $T227431[esp+776], edi
$LN811@BuildCouns:

; 553  : 
; 554  : 		// don't evaluate yourself
; 555  : 		if(eOtherPlayer == ePlayer)

	mov	edx, DWORD PTR _ePlayer$[esp+772]
	cmp	DWORD PTR _iPlayer$224077[esp+776], edx
	je	$LN295@BuildCouns

; 556  : 		{
; 557  : 			continue;
; 558  : 		}
; 559  : 
; 560  : 		// don't evaluate teammates
; 561  : 		if(eOtherTeam == eTeam)

	mov	eax, DWORD PTR $T226713[esp+776]
	cmp	DWORD PTR $T227431[esp+776], eax
	je	$LN295@BuildCouns

; 562  : 		{
; 563  : 			continue;
; 564  : 		}
; 565  : 
; 566  : 		// don't evaluate dead people
; 567  : 		if(!GET_PLAYER(eOtherPlayer).isAlive())

	cmp	BYTE PTR [ecx+ebp+2256], 0
	je	$LN295@BuildCouns

; 568  : 		{
; 569  : 			continue;
; 570  : 		}
; 571  : 
; 572  : 		// don't evaluate players we haven't met
; 573  : 		if(!GET_TEAM(eTeam).isHasMet(eOtherTeam))

	mov	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	imul	eax, 2984				; 00000ba8H
	mov	edx, DWORD PTR $T227431[esp+776]
	add	ecx, eax
	push	edx
	mov	DWORD PTR tv6978[esp+780], eax
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	test	al, al
	je	$LN295@BuildCouns

; 574  : 		{
; 575  : 			continue;
; 576  : 		}
; 577  : 
; 578  : 		WarProjectionTypes eWarProjection = pDiplomacyAI->GetWarProjection(eOtherPlayer);

	mov	eax, DWORD PTR _iPlayer$224077[esp+776]
	mov	ecx, DWORD PTR _pDiplomacyAI$[esp+776]
	push	eax
	call	?GetWarProjection@CvDiplomacyAI@@QBE?AW4WarProjectionTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetWarProjection

; 579  : 		StrengthTypes eMilitaryStrengthComparedToUs = pDiplomacyAI->GetPlayerMilitaryStrengthComparedToUs(eOtherPlayer);

	mov	ecx, DWORD PTR _iPlayer$224077[esp+776]
	push	ecx
	mov	ecx, DWORD PTR _pDiplomacyAI$[esp+780]
	mov	DWORD PTR _eWarProjection$224092[esp+780], eax
	call	?GetPlayerMilitaryStrengthComparedToUs@CvDiplomacyAI@@QBE?AW4StrengthTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetPlayerMilitaryStrengthComparedToUs

; 580  : 
; 581  : 		if(GET_TEAM(eTeam).isAtWar(eOtherTeam))

	mov	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _eMilitaryStrengthComparedToUs$224093[esp+776], eax
	mov	eax, DWORD PTR tv6978[esp+776]
	lea	ecx, DWORD PTR [edx+eax]
	mov	edx, DWORD PTR $T227431[esp+776]
	push	edx
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	test	al, al
	je	$LN287@BuildCouns

; 582  : 		{
; 583  : 			switch(eWarProjection)

	mov	eax, DWORD PTR _eWarProjection$224092[esp+776]
	cmp	eax, 5
	ja	$LN871@BuildCouns
	jmp	DWORD PTR $LN1533@BuildCouns[eax*4]
$LN284@BuildCouns:

; 584  : 			{
; 585  : 			case WAR_PROJECTION_DESTRUCTION:
; 586  : 			{
; 587  : 				//if (GET_TEAM(eTeam).isAtWar(eOtherTeam))
; 588  : 				//{
; 589  : 				int iRating = 99;
; 590  : 				// warn player to back out!
; 591  : 				if(iRating > iMessageRating)
; 592  : 				{
; 593  : 					iMessageRating = iRating;
; 594  : 					eAdvisor = ADVISOR_MILITARY;
; 595  : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_WARPROJECTION_DESTRUCTION_WAR");

	lea	eax, DWORD PTR $T226484[esp+776]
	push	OFFSET $SG224103
	push	eax
	mov	esi, 99					; 00000063H
	xor	edi, edi
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[esp+784], 22		; 00000016H
$LN1517@BuildCouns:
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226484[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 596  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	ecx, ebp

; 597  : 				}
; 598  : 				//}
; 599  : 				//else
; 600  : 				//{
; 601  : 				//	int iRating = 50;
; 602  : 				//	// warn player to avoid
; 603  : 				//	if (iRating > iMessageRating)
; 604  : 				//	{
; 605  : 				//		iMessageRating = iRating;
; 606  : 				//		eAdvisor = ADVISOR_FOREIGN;
; 607  : 				//		strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_WARPROJECTION_DESTRUCTION_PEACE");
; 608  : 				//		strLoc << GC.getCivilizationInfo(GET_PLAYER(eOtherPlayer).getCivilizationType())->GetTextKey();
; 609  : 				//	}
; 610  : 				//}
; 611  : 			}
; 612  : 			break;

	jmp	$LN1515@BuildCouns
$LN282@BuildCouns:

; 613  : 			case WAR_PROJECTION_DEFEAT:
; 614  : 			{
; 615  : 				//if (GET_TEAM(eTeam).isAtWar(eOtherTeam))
; 616  : 				//{
; 617  : 
; 618  : 				// warn player to back out!
; 619  : 				int iRating = 98;
; 620  : 				if(iRating > iMessageRating)
; 621  : 				{
; 622  : 					iMessageRating = iRating;
; 623  : 					eAdvisor = ADVISOR_MILITARY;
; 624  : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_WARPROJECTION_DEFEAT_WAR");

	lea	edx, DWORD PTR $T226486[esp+776]
	push	OFFSET $SG224109
	push	edx
	mov	esi, 98					; 00000062H
	xor	edi, edi
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 23		; 00000017H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226486[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 625  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	lea	ecx, DWORD PTR [eax+ebp]

; 626  : 				}
; 627  : 
; 628  : 				//}
; 629  : 				//else
; 630  : 				//{
; 631  : 				//	// warn player to avoid
; 632  : 				//	int iRating = 49;
; 633  : 				//	if (iRating > iMessageRating)
; 634  : 				//	{
; 635  : 				//		iMessageRating = iRating;
; 636  : 				//		eAdvisor = ADVISOR_MILITARY;
; 637  : 				//		strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_WARPROJECTION_DEFEAT_PEACE");
; 638  : 				//		strLoc << GC.getCivilizationInfo(GET_PLAYER(eOtherPlayer).getCivilizationType())->GetTextKey();
; 639  : 				//	}
; 640  : 				//}
; 641  : 			}
; 642  : 			break;

	jmp	$LN1515@BuildCouns
$LN280@BuildCouns:

; 643  : 			case WAR_PROJECTION_UNKNOWN:
; 644  : 			case WAR_PROJECTION_STALEMATE:
; 645  : 			{
; 646  : 				//if (GET_TEAM(eTeam).isAtWar(eOtherTeam))
; 647  : 				//{
; 648  : 
; 649  : 				// even fight
; 650  : 				int iRating = 97;
; 651  : 				if(iRating > iMessageRating)
; 652  : 				{
; 653  : 					iMessageRating = iRating;
; 654  : 					eAdvisor = ADVISOR_MILITARY;
; 655  : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_WARPROJECTION_STALEMATE_WAR");

	lea	ecx, DWORD PTR $T226488[esp+776]
	push	OFFSET $SG224115
	push	ecx
	mov	esi, 97					; 00000061H
	xor	edi, edi
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 24		; 00000018H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226488[esp+776]

; 656  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();
; 657  : 				}
; 658  : 
; 659  : 				//}
; 660  : 				//else
; 661  : 				//{
; 662  : 				//	// no warning for other states
; 663  : 				//}
; 664  : 			}
; 665  : 			break;

	jmp	$LN1516@BuildCouns
$LN278@BuildCouns:

; 666  : 			case WAR_PROJECTION_GOOD:
; 667  : 			{
; 668  : 				//if (GET_TEAM(eTeam).isAtWar(eOtherTeam))
; 669  : 				//{
; 670  : 
; 671  : 				// things are going well!
; 672  : 				int iRating = 96;
; 673  : 				if(iRating > iMessageRating)
; 674  : 				{
; 675  : 					iMessageRating = iRating;
; 676  : 					eAdvisor = ADVISOR_MILITARY;
; 677  : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_WARPROJECTION_GOOD_WAR");

	lea	eax, DWORD PTR $T226490[esp+776]
	push	OFFSET $SG224121
	push	eax
	mov	esi, 96					; 00000060H
	xor	edi, edi
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[esp+784], 25		; 00000019H
$LN1518@BuildCouns:
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226490[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 678  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	ecx, ebp

; 679  : 				}
; 680  : 
; 681  : 				//}
; 682  : 				//else
; 683  : 				//{
; 684  : 				//	// we could rough them up
; 685  : 				//	int iRating = 48;
; 686  : 				//	if (iRating > iMessageRating)
; 687  : 				//	{
; 688  : 				//		iMessageRating = iRating;
; 689  : 				//		eAdvisor = ADVISOR_FOREIGN;
; 690  : 				//		strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_WARPROJECTION_GOOD_PEACE");
; 691  : 				//		strLoc << GC.getCivilizationInfo(GET_PLAYER(eOtherPlayer).getCivilizationType())->GetTextKey();
; 692  : 				//	}
; 693  : 				//}
; 694  : 			}
; 695  : 			break;

	jmp	$LN1515@BuildCouns
$LN276@BuildCouns:

; 696  : 			case WAR_PROJECTION_VERY_GOOD:
; 697  : 			{
; 698  : 				//if (GET_TEAM(eTeam).isAtWar(eOtherTeam))
; 699  : 				//{
; 700  : 
; 701  : 				// things are going very well!
; 702  : 				int iRating = 97;
; 703  : 				if(iRating > iMessageRating)
; 704  : 				{
; 705  : 					iMessageRating = iRating;
; 706  : 					eAdvisor = ADVISOR_MILITARY;
; 707  : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_WARPROJECTION_VERY_GOOD_WAR");

	lea	edx, DWORD PTR $T226492[esp+776]
	push	OFFSET $SG224127
	push	edx
	mov	esi, 97					; 00000061H
	xor	edi, edi
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 26		; 0000001aH
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226492[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 708  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	lea	ecx, DWORD PTR [eax+ebp]

; 709  : 				}
; 710  : 
; 711  : 				//}
; 712  : 				//else
; 713  : 				//{
; 714  : 				//	// we could take these guys
; 715  : 				//	int iRating = 97;
; 716  : 				//	if (iRating > iMessageRating)
; 717  : 				//	{
; 718  : 				//		iMessageRating = iRating;
; 719  : 				//		eAdvisor = ADVISOR_FOREIGN;
; 720  : 				//		strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_WARPROJECTION_VERY_GOOD_PEACE");
; 721  : 				//		strLoc << GC.getCivilizationInfo(GET_PLAYER(eOtherPlayer).getCivilizationType())->GetTextKey();
; 722  : 				//	}
; 723  : 				//}
; 724  : 			}
; 725  : 			break;
; 726  : 			}
; 727  : 		}
; 728  : 		else // not at war

	jmp	$LN1515@BuildCouns
$LN287@BuildCouns:

; 729  : 		{
; 730  : 			switch(eMilitaryStrengthComparedToUs)

	mov	eax, DWORD PTR _eMilitaryStrengthComparedToUs$224093[esp+776]
	cmp	eax, 6
	ja	$LN871@BuildCouns
	jmp	DWORD PTR $LN1534@BuildCouns[eax*4]
$LN271@BuildCouns:

; 731  : 			{
; 732  : 			case STRENGTH_PATHETIC:
; 733  : 			{
; 734  : 				int iRating = 60;
; 735  : 				if(iRating > iMessageRating)
; 736  : 				{
; 737  : 					iMessageRating = iRating;
; 738  : 					eAdvisor = ADVISOR_MILITARY;
; 739  : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_MILITARY_STRENGTH_COMPARED_TO_US_PATHETIC");

	lea	ecx, DWORD PTR $T226494[esp+776]
	push	OFFSET $SG224138
	push	ecx
	mov	esi, 60					; 0000003cH
	xor	edi, edi
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 27		; 0000001bH
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226494[esp+776]

; 740  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();
; 741  : 				}
; 742  : 			}
; 743  : 			break;

	jmp	$LN1516@BuildCouns
$LN269@BuildCouns:

; 744  : 			case STRENGTH_WEAK:
; 745  : 			{
; 746  : 				int iRating = 50;
; 747  : 				if(iRating > iMessageRating)
; 748  : 				{
; 749  : 					iMessageRating = iRating;
; 750  : 					eAdvisor = ADVISOR_MILITARY;
; 751  : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_MILITARY_STRENGTH_COMPARED_TO_US_WEAK");

	lea	eax, DWORD PTR $T226496[esp+776]
	push	OFFSET $SG224144
	push	eax
	mov	esi, 50					; 00000032H
	xor	edi, edi
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[esp+784], 28		; 0000001cH

; 752  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();
; 753  : 				}
; 754  : 			}
; 755  : 			break;

	jmp	$LN1518@BuildCouns
$LN267@BuildCouns:

; 756  : 			case STRENGTH_POOR:
; 757  : 			{
; 758  : 				int iRating = 45;
; 759  : 				if(iRating > iMessageRating)
; 760  : 				{
; 761  : 					iMessageRating = iRating;
; 762  : 					eAdvisor = ADVISOR_MILITARY;
; 763  : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_MILITARY_STRENGTH_COMPARED_TO_US_POOR");

	lea	edx, DWORD PTR $T226498[esp+776]
	push	OFFSET $SG224150
	push	edx
	mov	esi, 45					; 0000002dH
	xor	edi, edi
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 29		; 0000001dH
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226498[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 764  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	lea	ecx, DWORD PTR [eax+ebp]

; 765  : 				}
; 766  : 			}
; 767  : 			break;

	jmp	$LN1515@BuildCouns
$LN265@BuildCouns:

; 768  : 			case STRENGTH_AVERAGE:
; 769  : 			{
; 770  : 				int iRating = 40;
; 771  : 				if(iRating > iMessageRating)
; 772  : 				{
; 773  : 					iMessageRating = iRating;
; 774  : 					eAdvisor = ADVISOR_MILITARY;
; 775  : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_MILITARY_STRENGTH_COMPARED_TO_US_AVERAGE");

	lea	ecx, DWORD PTR $T226500[esp+776]
	push	OFFSET $SG224156
	push	ecx
	mov	esi, 40					; 00000028H
	xor	edi, edi
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 30		; 0000001eH
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226500[esp+776]

; 776  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();
; 777  : 				}
; 778  : 			}
; 779  : 			break;

	jmp	$LN1516@BuildCouns
$LN263@BuildCouns:

; 780  : 			case STRENGTH_STRONG:
; 781  : 			{
; 782  : 				int iRating = 45;
; 783  : 				if(iRating > iMessageRating)
; 784  : 				{
; 785  : 					iMessageRating = iRating;
; 786  : 					eAdvisor = ADVISOR_MILITARY;
; 787  : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_MILITARY_STRENGTH_COMPARED_TO_US_STRONG");

	lea	eax, DWORD PTR $T226502[esp+776]
	push	OFFSET $SG224162
	push	eax
	mov	esi, 45					; 0000002dH
	xor	edi, edi
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[esp+784], 31		; 0000001fH

; 788  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();
; 789  : 				}
; 790  : 			}
; 791  : 			break;

	jmp	$LN1517@BuildCouns
$LN261@BuildCouns:

; 792  : 			case STRENGTH_POWERFUL:
; 793  : 			{
; 794  : 				int iRating = 80;
; 795  : 				if(iRating > iMessageRating)
; 796  : 				{
; 797  : 					iMessageRating = iRating;
; 798  : 					eAdvisor = ADVISOR_MILITARY;
; 799  : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_MILITARY_STRENGTH_COMPARED_TO_US_POWERFUL");

	lea	edx, DWORD PTR $T226504[esp+776]
	push	OFFSET $SG224168
	push	edx
	mov	esi, 80					; 00000050H
	xor	edi, edi
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 32		; 00000020H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226504[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 800  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	lea	ecx, DWORD PTR [eax+ebp]

; 801  : 				}
; 802  : 			}
; 803  : 			break;

	jmp	SHORT $LN1515@BuildCouns
$LN259@BuildCouns:

; 804  : 			case STRENGTH_IMMENSE:
; 805  : 			{
; 806  : 				int iRating = 90;
; 807  : 				if(iRating > iMessageRating)
; 808  : 				{
; 809  : 					iMessageRating = iRating;
; 810  : 					eAdvisor = ADVISOR_MILITARY;
; 811  : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_MILITARY_STRENGTH_COMPARED_TO_US_IMMENSE");

	lea	ecx, DWORD PTR $T226506[esp+776]
	push	OFFSET $SG224174
	push	ecx
	mov	esi, 90					; 0000005aH
	xor	edi, edi
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 33		; 00000021H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226506[esp+776]
$LN1516@BuildCouns:
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 812  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	lea	ecx, DWORD PTR [edx+ebp]
$LN1515@BuildCouns:
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx
$LN871@BuildCouns:

; 813  : 				}
; 814  : 			}
; 815  : 			break;
; 816  : 			}
; 817  : 		}
; 818  : 
; 819  : 		// look at get military posture
; 820  : 		AggressivePostureTypes eMilitaryAggressivePostureTypes = pDiplomacyAI->GetMilitaryAggressivePosture(eOtherPlayer);

	mov	eax, DWORD PTR _iPlayer$224077[esp+776]
	mov	ecx, DWORD PTR _pDiplomacyAI$[esp+776]
	push	eax
	call	?GetMilitaryAggressivePosture@CvDiplomacyAI@@QBE?AW4AggressivePostureTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetMilitaryAggressivePosture

; 821  : 		if(!GET_TEAM(eTeam).isAtWar(eOtherTeam))

	mov	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	edx, DWORD PTR tv6978[esp+776]
	mov	DWORD PTR _eMilitaryAggressivePostureTypes$224176[esp+776], eax
	mov	eax, DWORD PTR $T227431[esp+776]
	add	ecx, edx
	push	eax
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	test	al, al
	jne	$LN877@BuildCouns

; 822  : 		{
; 823  : 			switch(eMilitaryAggressivePostureTypes)

	mov	eax, DWORD PTR _eMilitaryAggressivePostureTypes$224176[esp+776]
	sub	eax, 2
	je	$LN252@BuildCouns
	sub	eax, 1
	je	SHORT $LN250@BuildCouns
	sub	eax, 1
	jne	$LN877@BuildCouns

; 853  : 			case AGGRESSIVE_POSTURE_INCREDIBLE:
; 854  : 			{
; 855  : 				int iRating = 90;
; 856  : 				if(iRating > iMessageRating)

	cmp	esi, 90					; 0000005aH
	jge	$LN877@BuildCouns

; 857  : 				{
; 858  : 					iMessageRating = iRating;
; 859  : 					eAdvisor = ADVISOR_FOREIGN;
; 860  : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_MILITARY_AGGRESSIVE_POSTURE_INCREDIBLE");

	lea	ecx, DWORD PTR $T226512[esp+776]
	push	OFFSET $SG224200
	push	ecx
	lea	esi, DWORD PTR [eax+90]
	lea	edi, DWORD PTR [eax+2]
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 36		; 00000024H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226512[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 861  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	lea	ecx, DWORD PTR [edx+ebp]

; 862  : 				}
; 863  : 			}
; 864  : 			break;

	jmp	$LN1519@BuildCouns
$LN250@BuildCouns:

; 838  : 				}
; 839  : 			}
; 840  : 			break;
; 841  : 			case AGGRESSIVE_POSTURE_HIGH:
; 842  : 			{
; 843  : 				int iRating = 75;
; 844  : 				if(iRating > iMessageRating)

	cmp	esi, 75					; 0000004bH
	jge	$LN877@BuildCouns

; 845  : 				{
; 846  : 					iMessageRating = iRating;
; 847  : 					eAdvisor = ADVISOR_FOREIGN;
; 848  : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_MILITARY_AGGRESSIVE_POSTURE_HIGH");

	lea	eax, DWORD PTR $T226510[esp+776]
	push	OFFSET $SG224194
	mov	esi, 75					; 0000004bH
	push	eax
	lea	edi, DWORD PTR [esi-73]
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 35		; 00000023H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226510[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 849  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	ecx, ebp

; 850  : 				}
; 851  : 			}
; 852  : 			break;

	jmp	SHORT $LN1519@BuildCouns
$LN252@BuildCouns:

; 824  : 			{
; 825  : 			case AGGRESSIVE_POSTURE_NONE:
; 826  : 				break;
; 827  : 			case AGGRESSIVE_POSTURE_LOW:
; 828  : 				break;
; 829  : 			case AGGRESSIVE_POSTURE_MEDIUM:
; 830  : 			{
; 831  : 				int iRating = 51;
; 832  : 				if(iRating > iMessageRating)

	cmp	esi, 51					; 00000033H
	jge	SHORT $LN877@BuildCouns

; 833  : 				{
; 834  : 					iMessageRating = iRating;
; 835  : 					eAdvisor = ADVISOR_FOREIGN;
; 836  : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_MILITARY_AGGRESSIVE_POSTURE_MEDIUM");

	lea	edx, DWORD PTR $T226508[esp+776]
	push	OFFSET $SG224188
	mov	esi, 51					; 00000033H
	push	edx
	lea	edi, DWORD PTR [esi-49]
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 34		; 00000022H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226508[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 837  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	lea	ecx, DWORD PTR [eax+ebp]
$LN1519@BuildCouns:
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx
$LN877@BuildCouns:

; 865  : 			}
; 866  : 		}
; 867  : 
; 868  : 		// look at expansion aggressive posture
; 869  : 		AggressivePostureTypes eExpansionAggressivePostureTypes = pDiplomacyAI->GetExpansionAggressivePosture(eOtherPlayer);

	mov	ecx, DWORD PTR _iPlayer$224077[esp+776]
	push	ecx
	mov	ecx, DWORD PTR _pDiplomacyAI$[esp+780]
	call	?GetExpansionAggressivePosture@CvDiplomacyAI@@QBE?AW4AggressivePostureTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetExpansionAggressivePosture

; 870  : 		if(!GET_TEAM(eTeam).isAtWar(eOtherTeam))

	mov	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _eExpansionAggressivePostureTypes$224202[esp+776], eax
	mov	eax, DWORD PTR tv6978[esp+776]
	lea	ecx, DWORD PTR [edx+eax]
	mov	edx, DWORD PTR $T227431[esp+776]
	push	edx
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	test	al, al
	jne	$LN891@BuildCouns

; 871  : 		{
; 872  : 			switch(eExpansionAggressivePostureTypes)

	mov	eax, DWORD PTR _eExpansionAggressivePostureTypes$224202[esp+776]
	sub	eax, 2
	je	$LN241@BuildCouns
	sub	eax, 1
	je	SHORT $LN239@BuildCouns
	sub	eax, 1
	jne	$LN891@BuildCouns

; 902  : 			case AGGRESSIVE_POSTURE_INCREDIBLE:
; 903  : 			{
; 904  : 				int iRating = 80;
; 905  : 				if(iRating > iMessageRating)

	cmp	esi, 80					; 00000050H
	jge	$LN891@BuildCouns

; 906  : 				{
; 907  : 					iMessageRating = iRating;

	lea	esi, DWORD PTR [eax+80]

; 908  : 					eAdvisor = ADVISOR_FOREIGN;

	lea	edi, DWORD PTR [eax+2]

; 909  : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_EXPANSION_AGGRESSIVE_POSTURE_INCREDIBLE");

	lea	eax, DWORD PTR $T226518[esp+776]
	push	OFFSET $SG224226
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 39		; 00000027H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226518[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 910  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	ecx, ebp

; 911  : 				}
; 912  : 			}
; 913  : 			break;

	jmp	$LN1520@BuildCouns
$LN239@BuildCouns:

; 887  : 				}
; 888  : 			}
; 889  : 			break;
; 890  : 			case AGGRESSIVE_POSTURE_HIGH:
; 891  : 			{
; 892  : 				int iRating = 65;
; 893  : 				if(iRating > iMessageRating)

	cmp	esi, 65					; 00000041H
	jge	$LN891@BuildCouns

; 894  : 				{
; 895  : 					iMessageRating = iRating;
; 896  : 					eAdvisor = ADVISOR_FOREIGN;
; 897  : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_EXPANSION_AGGRESSIVE_POSTURE_HIGH");

	lea	edx, DWORD PTR $T226516[esp+776]
	push	OFFSET $SG224220
	mov	esi, 65					; 00000041H
	push	edx
	lea	edi, DWORD PTR [esi-63]
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 38		; 00000026H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226516[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 898  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	lea	ecx, DWORD PTR [eax+ebp]

; 899  : 				}
; 900  : 			}
; 901  : 			break;

	jmp	SHORT $LN1520@BuildCouns
$LN241@BuildCouns:

; 873  : 			{
; 874  : 			case AGGRESSIVE_POSTURE_NONE:
; 875  : 				break;
; 876  : 			case AGGRESSIVE_POSTURE_LOW:
; 877  : 				break;
; 878  : 			case AGGRESSIVE_POSTURE_MEDIUM:
; 879  : 			{
; 880  : 				int iRating = 41;
; 881  : 				if(iRating > iMessageRating)

	cmp	esi, 41					; 00000029H
	jge	SHORT $LN891@BuildCouns

; 882  : 				{
; 883  : 					iMessageRating = iRating;
; 884  : 					eAdvisor = ADVISOR_FOREIGN;
; 885  : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_EXPANSION_AGGRESSIVE_POSTURE_MEDIUM");

	lea	ecx, DWORD PTR $T226514[esp+776]
	push	OFFSET $SG224214
	mov	esi, 41					; 00000029H
	push	ecx
	lea	edi, DWORD PTR [esi-39]
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 37		; 00000025H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226514[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 886  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	lea	ecx, DWORD PTR [edx+ebp]
$LN1520@BuildCouns:
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx
$LN891@BuildCouns:

; 914  : 			}
; 915  : 		}
; 916  : 
; 917  : 		ThreatTypes eWarmongerThreat = pDiplomacyAI->GetWarmongerThreat(eOtherPlayer);

	mov	eax, DWORD PTR _iPlayer$224077[esp+776]
	mov	ecx, DWORD PTR _pDiplomacyAI$[esp+776]
	push	eax
	call	?GetWarmongerThreat@CvDiplomacyAI@@QBE?AW4ThreatTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetWarmongerThreat

; 918  : 		if(!GET_TEAM(eTeam).isAtWar(eOtherTeam))

	mov	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	edx, DWORD PTR tv6978[esp+776]
	mov	DWORD PTR _eWarmongerThreat$224228[esp+776], eax
	mov	eax, DWORD PTR $T227431[esp+776]
	add	ecx, edx
	push	eax
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	test	al, al
	jne	$LN921@BuildCouns

; 919  : 		{
; 920  : 			switch(eWarmongerThreat)

	mov	eax, DWORD PTR _eWarmongerThreat$224228[esp+776]
	cmp	eax, 4
	ja	$LN921@BuildCouns
	jmp	DWORD PTR $LN1535@BuildCouns[eax*4]
$LN232@BuildCouns:

; 921  : 			{
; 922  : 			case THREAT_NONE:
; 923  : 			{
; 924  : 				int iRating = 20;
; 925  : 				if(iRating > iMessageRating)

	cmp	esi, 20					; 00000014H
	jge	$LN921@BuildCouns

; 926  : 				{
; 927  : 					iMessageRating = iRating;
; 928  : 					eAdvisor = ADVISOR_FOREIGN;
; 929  : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_WARMONGER_THREAT_NONE");

	lea	ecx, DWORD PTR $T226520[esp+776]
	push	OFFSET $SG224238
	mov	esi, 20					; 00000014H
	push	ecx
	lea	edi, DWORD PTR [esi-18]
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 40		; 00000028H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226520[esp+776]
$LN1532@BuildCouns:
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 930  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	lea	ecx, DWORD PTR [edx+ebp]
$LN1521@BuildCouns:
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 931  : 				}
; 932  : 			}
; 933  : 			break;

	jmp	$LN1444@BuildCouns
$LN230@BuildCouns:

; 934  : 			case THREAT_MINOR:
; 935  : 			{
; 936  : 				int iRating = 25;
; 937  : 				if(iRating > iMessageRating)

	cmp	esi, 25					; 00000019H
	jge	$LN921@BuildCouns

; 938  : 				{
; 939  : 					iMessageRating = iRating;
; 940  : 					eAdvisor = ADVISOR_FOREIGN;
; 941  : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_WARMONGER_THREAT_MINOR");

	lea	eax, DWORD PTR $T226522[esp+776]
	push	OFFSET $SG224244
	mov	esi, 25					; 00000019H
	push	eax
	lea	edi, DWORD PTR [esi-23]
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 41		; 00000029H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226522[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 942  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	ecx, ebp

; 943  : 				}
; 944  : 			}
; 945  : 
; 946  : 			break;

	jmp	SHORT $LN1521@BuildCouns
$LN228@BuildCouns:

; 947  : 			case THREAT_MAJOR:
; 948  : 			{
; 949  : 				int iRating = 30;
; 950  : 				if(iRating > iMessageRating)

	cmp	esi, 30					; 0000001eH
	jge	$LN921@BuildCouns

; 951  : 				{
; 952  : 					iMessageRating = iRating;
; 953  : 					eAdvisor = ADVISOR_FOREIGN;
; 954  : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_WARMONGER_THREAT_MAJOR");

	lea	edx, DWORD PTR $T226524[esp+776]
	push	OFFSET $SG224250
	mov	esi, 30					; 0000001eH
	push	edx
	lea	edi, DWORD PTR [esi-28]
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 42		; 0000002aH
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226524[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 955  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	lea	ecx, DWORD PTR [eax+ebp]

; 956  : 				}
; 957  : 			}
; 958  : 			break;

	jmp	$LN1521@BuildCouns
$LN226@BuildCouns:

; 959  : 			case THREAT_SEVERE:
; 960  : 			{
; 961  : 				int iRating = 60;
; 962  : 				if(iRating > iMessageRating)

	cmp	esi, 60					; 0000003cH
	jge	$LN921@BuildCouns

; 963  : 				{
; 964  : 					iMessageRating = iRating;
; 965  : 					eAdvisor = ADVISOR_FOREIGN;
; 966  : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_WARMONGER_THREAT_SEVERE");

	lea	ecx, DWORD PTR $T226526[esp+776]
	push	OFFSET $SG224256
	mov	esi, 60					; 0000003cH
	push	ecx
	lea	edi, DWORD PTR [esi-58]
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 43		; 0000002bH
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226526[esp+776]

; 967  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();
; 968  : 				}
; 969  : 			}
; 970  : 			break;

	jmp	$LN1532@BuildCouns
$LN224@BuildCouns:

; 971  : 			case THREAT_CRITICAL:
; 972  : 			{
; 973  : 				int iRating = 80;
; 974  : 				if(iRating > iMessageRating)

	cmp	esi, 80					; 00000050H
	jge	SHORT $LN921@BuildCouns

; 975  : 				{
; 976  : 					iMessageRating = iRating;
; 977  : 					eAdvisor = ADVISOR_FOREIGN;
; 978  : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_WARMONGER_THREAT_CRITICAL");

	lea	eax, DWORD PTR $T226528[esp+776]
	push	OFFSET $SG224262
	mov	esi, 80					; 00000050H
	push	eax
	lea	edi, DWORD PTR [esi-78]
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 44		; 0000002cH
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226528[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 979  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	ecx, ebp

; 980  : 				}
; 981  : 			}
; 982  : 			break;
; 983  : 			}
; 984  : 		}
; 985  : 
; 986  : 		if(eAdvisor != NO_ADVISOR_TYPE)

	jmp	$LN1521@BuildCouns

; 979  : 					strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();

$LN921@BuildCouns:

; 980  : 				}
; 981  : 			}
; 982  : 			break;
; 983  : 			}
; 984  : 		}
; 985  : 
; 986  : 		if(eAdvisor != NO_ADVISOR_TYPE)

	cmp	edi, -1
	je	SHORT $LN295@BuildCouns
$LN1444@BuildCouns:

; 987  : 		{
; 988  : 			bool bSuccess = SetCounselEntry(uiCounselIndex, eAdvisor, strLoc.toUTF8(), iMessageRating);

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	edx, DWORD PTR _uiCounselIndex$[esp+776]
	mov	DWORD PTR $T227665[esp+776], eax
	mov	eax, DWORD PTR _this$[esp+776]
	cmp	edx, DWORD PTR [eax+4]
	jae	SHORT $LN1467@BuildCouns
	mov	ecx, DWORD PTR tv7403[esp+776]
	mov	edx, eax
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+eax], edi
	mov	eax, DWORD PTR $T227665[esp+776]
	mov	edx, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR [ecx+edx+4]
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	mov	ecx, DWORD PTR _this$[esp+788]
	mov	eax, DWORD PTR tv7403[esp+788]
	mov	edx, DWORD PTR [ecx]

; 989  : 			CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 990  : 			if(!bSuccess)
; 991  : 			{
; 992  : 				break;
; 993  : 			}
; 994  : 			uiCounselIndex++;

	inc	DWORD PTR _uiCounselIndex$[esp+788]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [eax+edx+516], esi
	add	eax, 520				; 00000208H
	mov	DWORD PTR tv7403[esp+776], eax
$LN295@BuildCouns:
	inc	DWORD PTR _iPlayer$224077[esp+776]
	add	ebp, 63236				; 0000f704H
	cmp	ebp, 1391192				; 00153a58H
	jl	$LL1475@BuildCouns
$LN1467@BuildCouns:

; 995  : 		}
; 996  : 	}
; 997  : 
; 998  : 	// go through diplomatic list for competitions with other civs with minor civs
; 999  : 	for(int iPlayer = 0; iPlayer < MAX_MAJOR_CIVS; iPlayer++)

	mov	eax, DWORD PTR _uiCounselIndex$[esp+776]
	mov	ebp, DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	edi, DWORD PTR __imp_??1String@Localization@@UAE@XZ
	xor	esi, esi
	imul	eax, 520				; 00000208H
	mov	DWORD PTR _iPlayer$224267[esp+776], esi
	mov	DWORD PTR tv7491[esp+776], eax
$LL1497@BuildCouns:

; 1000 : 	{
; 1001 : 		// reset the ratings per player
; 1002 : 		int iMessageRating = 0;
; 1003 : 		AdvisorTypes eAdvisor = NO_ADVISOR_TYPE;
; 1004 : 
; 1005 : 		PlayerTypes eOtherPlayer = (PlayerTypes)iPlayer;
; 1006 : 		TeamTypes eOtherTeam = GET_PLAYER(eOtherPlayer).getTeam();

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	eax, DWORD PTR [esi+ecx+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN942@BuildCouns
	mov	edx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [edx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR $T227683[esp+776], eax
	jmp	SHORT $LN943@BuildCouns
$LN942@BuildCouns:
	mov	DWORD PTR $T227683[esp+776], -1
$LN943@BuildCouns:

; 1007 : 
; 1008 : 		// don't evaluate yourself
; 1009 : 		if(eOtherPlayer == ePlayer)

	mov	edx, DWORD PTR _iPlayer$224267[esp+776]
	cmp	edx, DWORD PTR _ePlayer$[esp+772]
	je	$LN219@BuildCouns

; 1010 : 		{
; 1011 : 			continue;
; 1012 : 		}
; 1013 : 
; 1014 : 		// don't evaluate teammates
; 1015 : 		if(eOtherTeam == eTeam)

	mov	eax, DWORD PTR $T226713[esp+776]
	cmp	DWORD PTR $T227683[esp+776], eax
	je	$LN219@BuildCouns

; 1016 : 		{
; 1017 : 			continue;
; 1018 : 		}
; 1019 : 
; 1020 : 		// don't evaluate dead people
; 1021 : 		if(!GET_PLAYER(eOtherPlayer).isAlive())

	cmp	BYTE PTR [esi+ecx+2256], 0
	je	$LN219@BuildCouns

; 1022 : 		{
; 1023 : 			continue;
; 1024 : 		}
; 1025 : 
; 1026 : 		// don't evaluate players we haven't met
; 1027 : 		if(!GET_TEAM(eTeam).isHasMet(eOtherTeam))

	mov	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	imul	eax, 2984				; 00000ba8H
	mov	edx, DWORD PTR $T227683[esp+776]
	add	ecx, eax
	push	edx
	mov	DWORD PTR tv6978[esp+780], eax
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	test	al, al
	je	$LN219@BuildCouns

; 1028 : 		{
; 1029 : 			continue;
; 1030 : 		}
; 1031 : 
; 1032 : 		if(GET_TEAM(eTeam).isAtWar(eOtherTeam))

	mov	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	edx, DWORD PTR $T227683[esp+776]
	mov	ecx, DWORD PTR tv6978[esp+776]
	add	ecx, eax
	push	edx
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	test	al, al
	jne	$LN219@BuildCouns

; 1033 : 		{
; 1034 : 			continue;
; 1035 : 		}
; 1036 : 
; 1037 : 		DisputeLevelTypes eMinorCivDisputeLevel = pDiplomacyAI->GetMinorCivDisputeLevel(eOtherPlayer);

	mov	eax, DWORD PTR _iPlayer$224267[esp+776]
	mov	ecx, DWORD PTR _pDiplomacyAI$[esp+776]
	push	eax
	call	?GetMinorCivDisputeLevel@CvDiplomacyAI@@QBE?AW4DisputeLevelTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetMinorCivDisputeLevel

; 1038 : 		switch(eMinorCivDisputeLevel)

	sub	eax, 1
	je	$LN209@BuildCouns
	sub	eax, 1
	je	$LN206@BuildCouns
	sub	eax, 1
	jne	$LN219@BuildCouns

; 1085 : 		case DISPUTE_LEVEL_FIERCE:
; 1086 : 		{
; 1087 : 			iMessageRating = 40;
; 1088 : 
; 1089 : 			DiploStatementTypes eStatement;
; 1090 : 			int iMinorCiv = NO_PLAYER;
; 1091 : 			pDiplomacyAI->DoMinorCivCompetitionStatement(eOtherPlayer, eStatement, iMinorCiv, true);

	mov	eax, DWORD PTR _iPlayer$224267[esp+776]
	push	1
	lea	ecx, DWORD PTR _iMinorCiv$224311[esp+780]
	push	ecx
	mov	ecx, DWORD PTR _pDiplomacyAI$[esp+784]
	lea	edx, DWORD PTR _eStatement$224310[esp+784]
	push	edx
	push	eax
	mov	DWORD PTR _iMessageRating$224271[esp+792], 40 ; 00000028H
	mov	DWORD PTR _iMinorCiv$224311[esp+792], -1
	call	?DoMinorCivCompetitionStatement@CvDiplomacyAI@@QAEXW4PlayerTypes@@AAW4DiploStatementTypes@@AAH_N@Z ; CvDiplomacyAI::DoMinorCivCompetitionStatement

; 1092 : 
; 1093 : 			if(iMinorCiv != NO_PLAYER)

	cmp	DWORD PTR _iMinorCiv$224311[esp+776], -1
	je	$LN219@BuildCouns

; 1094 : 			{
; 1095 : 				eAdvisor = ADVISOR_FOREIGN;
; 1096 : 				strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_MINOR_CIV_DISPUTE_LEVEL_FIERCE");

	lea	ecx, DWORD PTR $T226536[esp+776]
	push	OFFSET $SG224314
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 47		; 0000002fH
	call	ebp
	lea	ecx, DWORD PTR $T226536[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1097 : 
; 1098 : 				strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	lea	ecx, DWORD PTR [esi+edx]

; 1099 : 
; 1100 : 				CvMinorCivInfo* pkMinorCivInfo = GC.getMinorCivInfo(GET_PLAYER((PlayerTypes)iMinorCiv).GetMinorCivAI()->GetMinorCivType());
; 1101 : 				if(pkMinorCivInfo != NULL)
; 1102 : 					strLoc << pkMinorCivInfo->GetTextKey();
; 1103 : 			}
; 1104 : 		}
; 1105 : 		break;

	jmp	$LN1524@BuildCouns
$LN206@BuildCouns:

; 1062 : 			}
; 1063 : 		}
; 1064 : 		break;
; 1065 : 		case DISPUTE_LEVEL_STRONG:
; 1066 : 		{
; 1067 : 			iMessageRating = 30;
; 1068 : 			DiploStatementTypes eStatement;
; 1069 : 			int iMinorCiv = NO_PLAYER;
; 1070 : 			pDiplomacyAI->DoMinorCivCompetitionStatement(eOtherPlayer, eStatement, iMinorCiv, true);

	mov	edx, DWORD PTR _iPlayer$224267[esp+776]
	push	1
	lea	eax, DWORD PTR _iMinorCiv$224300[esp+780]
	push	eax
	lea	ecx, DWORD PTR _eStatement$224299[esp+784]
	push	ecx
	mov	ecx, DWORD PTR _pDiplomacyAI$[esp+788]
	push	edx
	mov	DWORD PTR _iMessageRating$224271[esp+792], 30 ; 0000001eH
	mov	DWORD PTR _iMinorCiv$224300[esp+792], -1
	call	?DoMinorCivCompetitionStatement@CvDiplomacyAI@@QAEXW4PlayerTypes@@AAW4DiploStatementTypes@@AAH_N@Z ; CvDiplomacyAI::DoMinorCivCompetitionStatement

; 1071 : 
; 1072 : 			if(iMinorCiv != NO_PLAYER)

	cmp	DWORD PTR _iMinorCiv$224300[esp+776], -1
	je	$LN219@BuildCouns

; 1073 : 			{
; 1074 : 				eAdvisor = ADVISOR_FOREIGN;
; 1075 : 				strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_MINOR_CIV_DISPUTE_LEVEL_STRONG");

	lea	eax, DWORD PTR $T226533[esp+776]
	push	OFFSET $SG224303
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 46		; 0000002eH
	call	ebp
	lea	ecx, DWORD PTR $T226533[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1076 : 
; 1077 : 				strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	ecx, esi

; 1078 : 
; 1079 : 				CvMinorCivInfo* pkMinorCivInfo = GC.getMinorCivInfo(GET_PLAYER((PlayerTypes)iMinorCiv).GetMinorCivAI()->GetMinorCivType());
; 1080 : 				if(pkMinorCivInfo != NULL)
; 1081 : 					strLoc << pkMinorCivInfo->GetTextKey();
; 1082 : 			}
; 1083 : 		}
; 1084 : 		break;

	jmp	SHORT $LN1524@BuildCouns
$LN209@BuildCouns:

; 1039 : 		{
; 1040 : 
; 1041 : 		case DISPUTE_LEVEL_NONE:
; 1042 : 			break;
; 1043 : 
; 1044 : 		case DISPUTE_LEVEL_WEAK:
; 1045 : 		{
; 1046 : 			iMessageRating = 20;
; 1047 : 
; 1048 : 			DiploStatementTypes eStatement;
; 1049 : 			int iMinorCiv = NO_PLAYER;
; 1050 : 			pDiplomacyAI->DoMinorCivCompetitionStatement(eOtherPlayer, eStatement, iMinorCiv, true);

	mov	ecx, DWORD PTR _iPlayer$224267[esp+776]
	push	1
	lea	edx, DWORD PTR _iMinorCiv$224289[esp+780]
	push	edx
	lea	eax, DWORD PTR _eStatement$224288[esp+784]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR _pDiplomacyAI$[esp+792]
	mov	DWORD PTR _iMessageRating$224271[esp+792], 20 ; 00000014H
	mov	DWORD PTR _iMinorCiv$224289[esp+792], -1
	call	?DoMinorCivCompetitionStatement@CvDiplomacyAI@@QAEXW4PlayerTypes@@AAW4DiploStatementTypes@@AAH_N@Z ; CvDiplomacyAI::DoMinorCivCompetitionStatement

; 1051 : 
; 1052 : 			if(iMinorCiv != NO_PLAYER)

	cmp	DWORD PTR _iMinorCiv$224289[esp+776], -1
	je	$LN219@BuildCouns

; 1053 : 			{
; 1054 : 				eAdvisor = ADVISOR_FOREIGN;
; 1055 : 				strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_MINOR_CIV_DISPUTE_LEVEL_WEAK");

	lea	edx, DWORD PTR $T226530[esp+776]
	push	OFFSET $SG224292
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 45		; 0000002dH
	call	ebp
	lea	ecx, DWORD PTR $T226530[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1056 : 
; 1057 : 				strLoc << GET_PLAYER(eOtherPlayer).getCivilizationInfo().GetTextKey();

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	lea	ecx, DWORD PTR [esi+eax]
$LN1524@BuildCouns:
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 1058 : 
; 1059 : 				CvMinorCivInfo* pkMinorCivInfo = GC.getMinorCivInfo(GET_PLAYER((PlayerTypes)iMinorCiv).GetMinorCivAI()->GetMinorCivType());

	mov	ecx, DWORD PTR _iMinorCiv$224289[esp+776]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetMinorCivType@CvMinorCivAI@@QBE?AW4MinorCivTypes@@XZ ; CvMinorCivAI::GetMinorCivType
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getMinorCivInfo@CvGlobals@@QAEPAVCvMinorCivInfo@@W4MinorCivTypes@@@Z ; CvGlobals::getMinorCivInfo

; 1060 : 				if(pkMinorCivInfo != NULL)

	test	eax, eax
	je	SHORT $LN1446@BuildCouns

; 1061 : 					strLoc << pkMinorCivInfo->GetTextKey();

	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx
$LN1446@BuildCouns:

; 1106 : 		}
; 1107 : 
; 1108 : 		if(eAdvisor != NO_ADVISOR_TYPE)
; 1109 : 		{
; 1110 : 			bool bSuccess = SetCounselEntry(uiCounselIndex, eAdvisor, strLoc.toUTF8(), iMessageRating);

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	ecx, DWORD PTR _uiCounselIndex$[esp+776]
	mov	edx, DWORD PTR _this$[esp+776]
	cmp	ecx, DWORD PTR [edx+4]
	jae	SHORT $LN1469@BuildCouns
	mov	ecx, edx
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv7491[esp+776]
	mov	DWORD PTR [ecx+edx], 2
	mov	edx, DWORD PTR _this$[esp+776]
	mov	edx, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR [ecx+edx+4]
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	mov	eax, DWORD PTR _this$[esp+788]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR tv7491[esp+788]
	mov	edx, DWORD PTR _iMessageRating$224271[esp+788]

; 1111 : 			CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 1112 : 			if(!bSuccess)
; 1113 : 			{
; 1114 : 				break;
; 1115 : 			}
; 1116 : 			uiCounselIndex++;

	inc	DWORD PTR _uiCounselIndex$[esp+788]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [eax+ecx+516], edx
	add	eax, 520				; 00000208H
	mov	DWORD PTR tv7491[esp+776], eax
$LN219@BuildCouns:
	inc	DWORD PTR _iPlayer$224267[esp+776]
	add	esi, 63236				; 0000f704H
	cmp	esi, 1391192				; 00153a58H
	jl	$LL1497@BuildCouns
$LN1469@BuildCouns:

; 1117 : 		}
; 1118 : 	}
; 1119 : 
; 1120 : 	// evaluate our gold situation
; 1121 : 	{
; 1122 : 		int iMessageRating = 0;
; 1123 : 		AdvisorTypes eAdvisor = ADVISOR_ECONOMIC;
; 1124 : 		CvTreasury* pTreasury = GET_PLAYER(ePlayer).GetTreasury();

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	esi, DWORD PTR tv5440[esp+776]
	lea	ecx, DWORD PTR [esi+eax]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury

; 1125 : 
; 1126 : 		int iGoldIncome = GET_PLAYER(ePlayer).calculateGoldRate();

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	ecx, esi
	mov	DWORD PTR _pTreasury$224325[esp+776], eax
	call	?calculateGoldRate@CvPlayer@@QBEHXZ	; CvPlayer::calculateGoldRate

; 1127 : 		int iGold = pTreasury->GetGold();

	mov	ecx, DWORD PTR _pTreasury$224325[esp+776]
	mov	DWORD PTR _iGoldIncome$224326[esp+776], eax
	call	?GetGold@CvTreasury@@QBEHXZ		; CvTreasury::GetGold

; 1128 : 
; 1129 : 		int iHighestCost = 0;

	xor	esi, esi
	mov	DWORD PTR _iGold$224327[esp+776], eax

; 1130 : 		enum
; 1131 : 		{
; 1132 : 		    COST_UNIT_MAINTENANCE,
; 1133 : 		    COST_UNIT_SUPPLY,
; 1134 : 		    COST_BUILDING_MAINTENANCE,
; 1135 : 		    COST_IMPROVEMENT_MAINTENANCE,
; 1136 : 		    COST_DIPLOMACY,
; 1137 : 		    NUM_COSTS
; 1138 : 		};
; 1139 : 		int uiHighestCostCategory = NUM_COSTS;

	mov	DWORD PTR _uiHighestCostCategory$224336[esp+776], 5

; 1140 : 
; 1141 : 		for(uint ui = 0; ui < NUM_COSTS; ui++)

	mov	DWORD PTR _ui$224337[esp+776], esi
	npad	4
$LL198@BuildCouns:

; 1142 : 		{
; 1143 : 			switch(ui)

	mov	eax, DWORD PTR _ui$224337[esp+776]
	cmp	eax, 4
	ja	$LN197@BuildCouns
	jmp	DWORD PTR $LN1536@BuildCouns[eax*4]
$LN193@BuildCouns:

; 1144 : 			{
; 1145 : 			case COST_UNIT_MAINTENANCE:
; 1146 : 				if(pTreasury->GetExpensePerTurnUnitMaintenance() > iHighestCost)

	mov	edx, DWORD PTR _pTreasury$224325[esp+776]
	mov	eax, DWORD PTR [edx+16]
	cmp	eax, esi
	jle	$LN197@BuildCouns

; 1147 : 				{
; 1148 : 					uiHighestCostCategory = ui;

	mov	DWORD PTR _uiHighestCostCategory$224336[esp+776], 0

; 1149 : 					iHighestCost = pTreasury->GetExpensePerTurnUnitMaintenance();

	mov	esi, eax

; 1150 : 				}
; 1151 : 				break;

	jmp	$LN197@BuildCouns
$LN191@BuildCouns:

; 1152 : 			case COST_UNIT_SUPPLY:
; 1153 : 				if(pTreasury->GetExpensePerTurnUnitSupply() > iHighestCost)

	mov	eax, DWORD PTR _pTreasury$224325[esp+776]
	mov	eax, DWORD PTR [eax+20]
	cmp	eax, esi
	jle	SHORT $LN197@BuildCouns

; 1154 : 				{
; 1155 : 					uiHighestCostCategory = ui;

	mov	DWORD PTR _uiHighestCostCategory$224336[esp+776], 1

; 1156 : 					iHighestCost = pTreasury->GetExpensePerTurnUnitSupply();

	mov	esi, eax

; 1157 : 				}
; 1158 : 				break;

	jmp	SHORT $LN197@BuildCouns
$LN189@BuildCouns:

; 1159 : 			case COST_BUILDING_MAINTENANCE:
; 1160 : 				if(pTreasury->GetBuildingGoldMaintenance() > iHighestCost)

	mov	ecx, DWORD PTR _pTreasury$224325[esp+776]
	call	?GetBuildingGoldMaintenance@CvTreasury@@QBEHXZ ; CvTreasury::GetBuildingGoldMaintenance
	cmp	eax, esi
	jle	SHORT $LN197@BuildCouns

; 1161 : 				{
; 1162 : 					uiHighestCostCategory = ui;
; 1163 : 					iHighestCost = pTreasury->GetBuildingGoldMaintenance();

	mov	ecx, DWORD PTR _pTreasury$224325[esp+776]
	mov	DWORD PTR _uiHighestCostCategory$224336[esp+776], 2
	call	?GetBuildingGoldMaintenance@CvTreasury@@QBEHXZ ; CvTreasury::GetBuildingGoldMaintenance
	mov	esi, eax

; 1164 : 				}
; 1165 : 				break;

	jmp	SHORT $LN197@BuildCouns
$LN187@BuildCouns:

; 1166 : 			case COST_IMPROVEMENT_MAINTENANCE:
; 1167 : 				if(pTreasury->GetImprovementGoldMaintenance() > iHighestCost)

	mov	ecx, DWORD PTR _pTreasury$224325[esp+776]
	call	?GetImprovementGoldMaintenance@CvTreasury@@QBEHXZ ; CvTreasury::GetImprovementGoldMaintenance
	cmp	eax, esi
	jle	SHORT $LN197@BuildCouns

; 1168 : 				{
; 1169 : 					uiHighestCostCategory = ui;
; 1170 : 					iHighestCost = pTreasury->GetBuildingGoldMaintenance();

	mov	ecx, DWORD PTR _pTreasury$224325[esp+776]
	mov	DWORD PTR _uiHighestCostCategory$224336[esp+776], 3
	call	?GetBuildingGoldMaintenance@CvTreasury@@QBEHXZ ; CvTreasury::GetBuildingGoldMaintenance
	mov	esi, eax

; 1171 : 				}
; 1172 : 				break;

	jmp	SHORT $LN197@BuildCouns
$LN185@BuildCouns:

; 1173 : 			case COST_DIPLOMACY:
; 1174 : 				if(pTreasury->GetGoldPerTurnFromDiplomacy() < -(iHighestCost))

	mov	ecx, DWORD PTR _pTreasury$224325[esp+776]
	call	?GetGoldPerTurnFromDiplomacy@CvTreasury@@QBEHXZ ; CvTreasury::GetGoldPerTurnFromDiplomacy
	mov	ecx, esi
	neg	ecx
	cmp	eax, ecx
	jge	SHORT $LN197@BuildCouns

; 1175 : 				{
; 1176 : 					uiHighestCostCategory = ui;
; 1177 : 					iHighestCost = -(pTreasury->GetGoldPerTurnFromDiplomacy());

	mov	ecx, DWORD PTR _pTreasury$224325[esp+776]
	mov	DWORD PTR _uiHighestCostCategory$224336[esp+776], 4
	call	?GetGoldPerTurnFromDiplomacy@CvTreasury@@QBEHXZ ; CvTreasury::GetGoldPerTurnFromDiplomacy
	mov	esi, eax
	neg	esi
$LN197@BuildCouns:
	mov	eax, DWORD PTR _ui$224337[esp+776]
	inc	eax
	mov	DWORD PTR _ui$224337[esp+776], eax
	cmp	eax, 5
	jb	$LL198@BuildCouns

; 1178 : 				}
; 1179 : 				break;
; 1180 : 			}
; 1181 : 		}
; 1182 : 
; 1183 : 
; 1184 : 		if(iGold <= 0)  // we're bankrupt

	mov	ecx, DWORD PTR _iGold$224327[esp+776]
	test	ecx, ecx
	jg	$LN183@BuildCouns

; 1185 : 		{
; 1186 : 			if(iGoldIncome <= 0)

	cmp	DWORD PTR _iGoldIncome$224326[esp+776], 0

; 1187 : 			{
; 1188 : 				//    if our income is negative or zero
; 1189 : 				iMessageRating = 99;
; 1190 : 				switch(uiHighestCostCategory)

	mov	eax, DWORD PTR _uiHighestCostCategory$224336[esp+776]
	jg	$LN182@BuildCouns
	mov	DWORD PTR _iMessageRating$224323[esp+776], 99 ; 00000063H
	cmp	eax, 4
	ja	$LN174@BuildCouns
	jmp	DWORD PTR $LN1537@BuildCouns[eax*4]
$LN179@BuildCouns:

; 1191 : 				{
; 1192 : 				case COST_UNIT_MAINTENANCE:
; 1193 : 					strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_DOWN_UNIT_MAINTENANCE");

	lea	edx, DWORD PTR $T226539[esp+776]
	push	OFFSET $SG224363
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 48		; 00000030H
	call	ebp
	lea	ecx, DWORD PTR $T226539[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1194 : 					strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1195 : 					break;

	jmp	$LN141@BuildCouns
$LN178@BuildCouns:

; 1196 : 				case COST_UNIT_SUPPLY:
; 1197 : 					strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_DOWN_UNIT_SUPPLY");

	lea	eax, DWORD PTR $T226540[esp+776]
	push	OFFSET $SG224366
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 49		; 00000031H
	call	ebp
	lea	ecx, DWORD PTR $T226540[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1198 : 					strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1199 : 					break;

	jmp	$LN141@BuildCouns
$LN177@BuildCouns:

; 1200 : 				case COST_BUILDING_MAINTENANCE:
; 1201 : 					strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_DOWN_BUILDING_MAINTENANCE");

	lea	ecx, DWORD PTR $T226541[esp+776]
	push	OFFSET $SG224369
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 50		; 00000032H
	call	ebp
	lea	ecx, DWORD PTR $T226541[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1202 : 					strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1203 : 					break;

	jmp	$LN141@BuildCouns
$LN176@BuildCouns:

; 1204 : 				case COST_IMPROVEMENT_MAINTENANCE:
; 1205 : 					strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_DOWN_DIPLOMACY");

	lea	edx, DWORD PTR $T226542[esp+776]
	push	OFFSET $SG224372
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 51		; 00000033H
	call	ebp
	lea	ecx, DWORD PTR $T226542[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1206 : 					strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1207 : 					break;

	jmp	$LN141@BuildCouns
$LN175@BuildCouns:

; 1208 : 				case COST_DIPLOMACY:
; 1209 : 					strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_DOWN_IMPROVEMENT_MAINTENANCE");

	lea	eax, DWORD PTR $T226543[esp+776]
	push	OFFSET $SG224375
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 52		; 00000034H
	call	ebp
	lea	ecx, DWORD PTR $T226543[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1210 : 					strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1211 : 					break;

	jmp	$LN141@BuildCouns
$LN174@BuildCouns:

; 1212 : 				default:
; 1213 : 					strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_DOWN");

	lea	ecx, DWORD PTR $T226544[esp+776]
	push	OFFSET $SG224378
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[esp+784], 53		; 00000035H

; 1214 : 					break;
; 1215 : 				}
; 1216 : 			}
; 1217 : 			else

	jmp	$LN1525@BuildCouns
$LN182@BuildCouns:

; 1218 : 			{
; 1219 : 				iMessageRating = 95;

	mov	DWORD PTR _iMessageRating$224323[esp+776], 95 ; 0000005fH

; 1220 : 				switch(uiHighestCostCategory)

	cmp	eax, 4
	ja	$LN165@BuildCouns
	jmp	DWORD PTR $LN1538@BuildCouns[eax*4]
$LN170@BuildCouns:

; 1221 : 				{
; 1222 : 				case COST_UNIT_MAINTENANCE:
; 1223 : 					strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_UP_UNIT_MAINTENANCE");

	lea	edx, DWORD PTR $T226545[esp+776]
	push	OFFSET $SG224386
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 54		; 00000036H
	call	ebp
	lea	ecx, DWORD PTR $T226545[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1224 : 					strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1225 : 					break;

	jmp	$LN141@BuildCouns
$LN169@BuildCouns:

; 1226 : 				case COST_UNIT_SUPPLY:
; 1227 : 					strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_UP_UNIT_SUPPLY");

	lea	eax, DWORD PTR $T226546[esp+776]
	push	OFFSET $SG224389
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 55		; 00000037H
	call	ebp
	lea	ecx, DWORD PTR $T226546[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1228 : 					strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1229 : 					break;

	jmp	$LN141@BuildCouns
$LN168@BuildCouns:

; 1230 : 				case COST_BUILDING_MAINTENANCE:
; 1231 : 					strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_UP_BUILDING_MAINTENANCE");

	lea	ecx, DWORD PTR $T226547[esp+776]
	push	OFFSET $SG224392
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 56		; 00000038H
	call	ebp
	lea	ecx, DWORD PTR $T226547[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1232 : 					strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1233 : 					break;

	jmp	$LN141@BuildCouns
$LN167@BuildCouns:

; 1234 : 				case COST_IMPROVEMENT_MAINTENANCE:
; 1235 : 					strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_UP_IMPROVEMENT_MAINTENANCE");

	lea	edx, DWORD PTR $T226548[esp+776]
	push	OFFSET $SG224395
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 57		; 00000039H
	call	ebp
	lea	ecx, DWORD PTR $T226548[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1236 : 					strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1237 : 					break;

	jmp	$LN141@BuildCouns
$LN166@BuildCouns:

; 1238 : 				case COST_DIPLOMACY:
; 1239 : 					strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_UP_DIPLOMACY");

	lea	eax, DWORD PTR $T226549[esp+776]
	push	OFFSET $SG224398
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 58		; 0000003aH
	call	ebp
	lea	ecx, DWORD PTR $T226549[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1240 : 					strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1241 : 					break;

	jmp	$LN141@BuildCouns
$LN165@BuildCouns:

; 1242 : 				default:
; 1243 : 					strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_BROKE_AND_GOING_UP");

	lea	ecx, DWORD PTR $T226550[esp+776]
	push	OFFSET $SG224401
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[esp+784], 59		; 0000003bH

; 1244 : 					break;
; 1245 : 				}
; 1246 : 			}
; 1247 : 		}
; 1248 : 		else // we're not bankrupt!

	jmp	$LN1525@BuildCouns
$LN183@BuildCouns:

; 1249 : 		{
; 1250 : 			if(iGoldIncome <= 0)

	mov	eax, DWORD PTR _iGoldIncome$224326[esp+776]
	test	eax, eax
	jg	$LN163@BuildCouns

; 1251 : 			{
; 1252 : 				// we're going bankrupt
; 1253 : 				if(iGoldIncome < 0 && iGold / abs(iGoldIncome) <= 5)

	jge	$LN1495@BuildCouns
	cdq
	xor	eax, edx
	sub	eax, edx
	mov	DWORD PTR tv6752[esp+776], eax
	mov	eax, ecx
	mov	ecx, DWORD PTR tv6752[esp+776]
	cdq
	idiv	ecx
	cmp	eax, 5
	jg	$LN1495@BuildCouns

; 1254 : 				{
; 1255 : 					iMessageRating = 80;
; 1256 : 					switch(uiHighestCostCategory)

	mov	eax, DWORD PTR _uiHighestCostCategory$224336[esp+776]
	mov	DWORD PTR _iMessageRating$224323[esp+776], 80 ; 00000050H
	cmp	eax, 4
	ja	$LN154@BuildCouns
	jmp	DWORD PTR $LN1539@BuildCouns[eax*4]
$LN159@BuildCouns:

; 1257 : 					{
; 1258 : 					case COST_UNIT_MAINTENANCE:
; 1259 : 						strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_GOING_BROKE_UNIT_MAINTENANCE");

	lea	edx, DWORD PTR $T226551[esp+776]
	push	OFFSET $SG224411
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 60		; 0000003cH
	call	ebp
	lea	ecx, DWORD PTR $T226551[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1260 : 						strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1261 : 						break;

	jmp	$LN141@BuildCouns
$LN158@BuildCouns:

; 1262 : 					case COST_UNIT_SUPPLY:
; 1263 : 						strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_GOING_BROKE_UNIT_SUPPLY");

	lea	eax, DWORD PTR $T226552[esp+776]
	push	OFFSET $SG224414
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 61		; 0000003dH
	call	ebp
	lea	ecx, DWORD PTR $T226552[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1264 : 						strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1265 : 						break;

	jmp	$LN141@BuildCouns
$LN157@BuildCouns:

; 1266 : 					case COST_BUILDING_MAINTENANCE:
; 1267 : 						strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_GOING_BROKE_BUILDING_MAINTENANCE");

	lea	ecx, DWORD PTR $T226553[esp+776]
	push	OFFSET $SG224417
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 62		; 0000003eH
	call	ebp
	lea	ecx, DWORD PTR $T226553[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1268 : 						strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1269 : 						break;

	jmp	$LN141@BuildCouns
$LN156@BuildCouns:

; 1270 : 					case COST_IMPROVEMENT_MAINTENANCE:
; 1271 : 						strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_GOING_BROKE_IMPROVEMENT_MAINTENANCE");

	lea	edx, DWORD PTR $T226554[esp+776]
	push	OFFSET $SG224420
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 63		; 0000003fH
	call	ebp
	lea	ecx, DWORD PTR $T226554[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1272 : 						strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1273 : 						break;

	jmp	$LN141@BuildCouns
$LN155@BuildCouns:

; 1274 : 					case COST_DIPLOMACY:
; 1275 : 						strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_GOING_BROKE_DIPLOMACY");

	lea	eax, DWORD PTR $T226555[esp+776]
	push	OFFSET $SG224423
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 64		; 00000040H
	call	ebp
	lea	ecx, DWORD PTR $T226555[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1276 : 						strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1277 : 						break;

	jmp	$LN141@BuildCouns
$LN154@BuildCouns:

; 1278 : 					default:
; 1279 : 						strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_GOING_BROKE");

	lea	ecx, DWORD PTR $T226556[esp+776]
	push	OFFSET $SG224426
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[esp+784], 65		; 00000041H

; 1280 : 						break;
; 1281 : 					}
; 1282 : 				}
; 1283 : 				else

	jmp	$LN1525@BuildCouns
$LN1495@BuildCouns:

; 1284 : 				{
; 1285 : 					iMessageRating = 75;
; 1286 : 					switch(uiHighestCostCategory)

	mov	eax, DWORD PTR _uiHighestCostCategory$224336[esp+776]
	mov	DWORD PTR _iMessageRating$224323[esp+776], 75 ; 0000004bH
	cmp	eax, 4
	ja	$LN145@BuildCouns
	jmp	DWORD PTR $LN1540@BuildCouns[eax*4]
$LN150@BuildCouns:

; 1287 : 					{
; 1288 : 					case COST_UNIT_MAINTENANCE:
; 1289 : 						strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_LOSING_MONEY_UNIT_MAINTENANCE");

	lea	edx, DWORD PTR $T226557[esp+776]
	push	OFFSET $SG224434
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 66		; 00000042H
	call	ebp
	lea	ecx, DWORD PTR $T226557[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1290 : 						strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1291 : 						break;

	jmp	$LN141@BuildCouns
$LN149@BuildCouns:

; 1292 : 					case COST_UNIT_SUPPLY:
; 1293 : 						strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_LOSING_MONEY_UNIT_SUPPLY");

	lea	eax, DWORD PTR $T226558[esp+776]
	push	OFFSET $SG224437
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 67		; 00000043H
	call	ebp
	lea	ecx, DWORD PTR $T226558[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1294 : 						strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1295 : 						break;

	jmp	$LN141@BuildCouns
$LN148@BuildCouns:

; 1296 : 					case COST_BUILDING_MAINTENANCE:
; 1297 : 						strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_LOSING_MONEY_BUILDING_MAINTENANCE");

	lea	ecx, DWORD PTR $T226559[esp+776]
	push	OFFSET $SG224440
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 68		; 00000044H
	call	ebp
	lea	ecx, DWORD PTR $T226559[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1298 : 						strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1299 : 						break;

	jmp	$LN141@BuildCouns
$LN147@BuildCouns:

; 1300 : 					case COST_IMPROVEMENT_MAINTENANCE:
; 1301 : 						strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_LOSING_MONEY_IMPROVEMENT_MAINTENANCE");

	lea	edx, DWORD PTR $T226560[esp+776]
	push	OFFSET $SG224443
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 69		; 00000045H
	call	ebp
	lea	ecx, DWORD PTR $T226560[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1302 : 						strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1303 : 						break;

	jmp	$LN141@BuildCouns
$LN146@BuildCouns:

; 1304 : 					case COST_DIPLOMACY:
; 1305 : 						strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_LOSING_MONEY_DIPLOMACY");

	lea	eax, DWORD PTR $T226561[esp+776]
	push	OFFSET $SG224446
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 70		; 00000046H
	call	ebp
	lea	ecx, DWORD PTR $T226561[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1306 : 						strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1307 : 						break;

	jmp	$LN141@BuildCouns
$LN145@BuildCouns:

; 1308 : 					default:
; 1309 : 						strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_LOSING_MONEY");

	lea	ecx, DWORD PTR $T226562[esp+776]
	push	OFFSET $SG224449
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[esp+784], 71		; 00000047H

; 1310 : 						break;
; 1311 : 					}
; 1312 : 				}

	jmp	$LN1525@BuildCouns
$LN163@BuildCouns:

; 1313 : 			}
; 1314 : 			else if(iHighestCost > 0)

	test	esi, esi
	jle	$LN1476@BuildCouns

; 1315 : 			{
; 1316 : 				iMessageRating = 20;
; 1317 : 				switch(uiHighestCostCategory)

	mov	eax, DWORD PTR _uiHighestCostCategory$224336[esp+776]
	mov	DWORD PTR _iMessageRating$224323[esp+776], 20 ; 00000014H
	cmp	eax, 4
	ja	$LN135@BuildCouns
	jmp	DWORD PTR $LN1541@BuildCouns[eax*4]
$LN140@BuildCouns:

; 1318 : 				{
; 1319 : 				case COST_UNIT_MAINTENANCE:
; 1320 : 					strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_MAKING_MONEY_UNIT_MAINTENANCE");

	lea	edx, DWORD PTR $T226563[esp+776]
	push	OFFSET $SG224458
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 72		; 00000048H
	call	ebp
	lea	ecx, DWORD PTR $T226563[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1321 : 					strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1322 : 					break;

	jmp	$LN141@BuildCouns
$LN139@BuildCouns:

; 1323 : 				case COST_UNIT_SUPPLY:
; 1324 : 					strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_MAKING_MONEY_UNIT_SUPPLY");

	lea	eax, DWORD PTR $T226564[esp+776]
	push	OFFSET $SG224461
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 73		; 00000049H
	call	ebp
	lea	ecx, DWORD PTR $T226564[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1325 : 					strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1326 : 					break;

	jmp	$LN141@BuildCouns
$LN138@BuildCouns:

; 1327 : 				case COST_BUILDING_MAINTENANCE:
; 1328 : 					strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_MAKING_MONEY_BUILDING_MAINTENANCE");

	lea	ecx, DWORD PTR $T226565[esp+776]
	push	OFFSET $SG224464
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 74		; 0000004aH
	call	ebp
	lea	ecx, DWORD PTR $T226565[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1329 : 					strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1330 : 					break;

	jmp	$LN141@BuildCouns
$LN137@BuildCouns:

; 1331 : 				case COST_IMPROVEMENT_MAINTENANCE:
; 1332 : 					strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_MAKING_MONEY_IMPROVEMENT_MAINTENANCE");

	lea	edx, DWORD PTR $T226566[esp+776]
	push	OFFSET $SG224467
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 75		; 0000004bH
	call	ebp
	lea	ecx, DWORD PTR $T226566[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1333 : 					strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1334 : 					break;

	jmp	$LN141@BuildCouns
$LN136@BuildCouns:

; 1335 : 				case COST_DIPLOMACY:
; 1336 : 					strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_MAKING_MONEY_DIPLOMACY");

	lea	eax, DWORD PTR $T226567[esp+776]
	push	OFFSET $SG224470
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 76		; 0000004cH
	call	ebp
	lea	ecx, DWORD PTR $T226567[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1337 : 					strLoc << iHighestCost;

	push	esi
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 1338 : 					break;

	jmp	SHORT $LN141@BuildCouns
$LN135@BuildCouns:

; 1339 : 				default:
; 1340 : 					strLoc = Localization::Lookup("TXT_KEY_FINANCESTRATEGY_MAKING_MONEY");

	lea	ecx, DWORD PTR $T226568[esp+776]
	push	OFFSET $SG224473
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[esp+784], 77		; 0000004dH
$LN1525@BuildCouns:
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebp
	lea	ecx, DWORD PTR $T226568[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi
$LN141@BuildCouns:

; 1341 : 					break;
; 1342 : 				}
; 1343 : 
; 1344 : 			}
; 1345 : 		}
; 1346 : 
; 1347 : 		if(iHighestCost > 0)

	test	esi, esi
	jle	SHORT $LN1476@BuildCouns

; 1348 : 		{
; 1349 : #ifdef CVASSERT_ENABLE
; 1350 : 			bool bSuccess = SetCounselEntry(uiCounselIndex, eAdvisor, strLoc.toUTF8(), iMessageRating);
; 1351 : 			DEBUG_VARIABLE(bSuccess);
; 1352 : 			CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 1353 : #else
; 1354 : 			SetCounselEntry(uiCounselIndex, eAdvisor, strLoc.toUTF8(), iMessageRating);

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	edx, DWORD PTR _this$[esp+776]
	mov	ecx, DWORD PTR _uiCounselIndex$[esp+776]
	cmp	ecx, DWORD PTR [edx+4]
	jae	SHORT $LN1496@BuildCouns
	mov	esi, ecx
	imul	esi, 520				; 00000208H
	mov	ecx, edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [esi+edx], 1
	mov	ecx, DWORD PTR [ecx]
	push	eax
	lea	ecx, DWORD PTR [esi+ecx+4]
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	mov	edx, DWORD PTR _this$[esp+788]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _iMessageRating$224323[esp+788]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+eax+516], ecx
$LN1496@BuildCouns:

; 1355 : #endif
; 1356 : 			uiCounselIndex++;

	inc	DWORD PTR _uiCounselIndex$[esp+776]
$LN1476@BuildCouns:

; 1357 : 		}
; 1358 : 	}
; 1359 : 
; 1360 : 	// finding minor civs that we are about to lose a friendship/ally status with
; 1361 : 	for(uint ui = MAX_MAJOR_CIVS; ui < MAX_CIV_PLAYERS; ui++)

	mov	eax, DWORD PTR $T226713[esp+776]
	imul	eax, 2984				; 00000ba8H
	mov	DWORD PTR tv6978[esp+776], eax
	mov	eax, DWORD PTR _uiCounselIndex$[esp+776]
	imul	eax, 520				; 00000208H
	mov	DWORD PTR _ui$224475[esp+776], 22	; 00000016H
	mov	DWORD PTR tv7557[esp+776], eax
	mov	DWORD PTR tv7559[esp+776], 1391192	; 00153a58H
	jmp	SHORT $LN133@BuildCouns
	npad	11
$LL1477@BuildCouns:
	mov	ebp, DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	edi, DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN133@BuildCouns:

; 1362 : 	{
; 1363 : 		int iMessageRating = 0;
; 1364 : 		AdvisorTypes eAdvisor = ADVISOR_FOREIGN;
; 1365 : 		//MinorCivQuestTypes eQuest = NO_MINOR_CIV_QUEST_TYPE;
; 1366 : 		PlayerTypes eEnemyPlayer = NO_PLAYER;
; 1367 : 
; 1368 : 		PlayerTypes eMinorPlayer = (PlayerTypes)ui;
; 1369 : 
; 1370 : 		TeamTypes eMinorTeam = GET_PLAYER(eMinorPlayer).getTeam();

	mov	edx, DWORD PTR tv7559[esp+776]
	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	eax, DWORD PTR [edx+eax+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN1075@BuildCouns
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	esi, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN1076@BuildCouns
$LN1075@BuildCouns:
	or	esi, -1
$LN1076@BuildCouns:

; 1371 : 
; 1372 : 		// don't evaluate players we haven't met
; 1373 : 		if(!GET_TEAM(eTeam).isHasMet(eMinorTeam))

	mov	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	ecx, DWORD PTR tv6978[esp+776]
	add	ecx, eax
	push	esi
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	test	al, al
	je	$LN132@BuildCouns

; 1374 : 		{
; 1375 : 			continue;
; 1376 : 		}
; 1377 : 
; 1378 : 		if(GET_TEAM(eTeam).isAtWar(eMinorTeam))

	mov	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	eax, DWORD PTR tv6978[esp+776]
	lea	ecx, DWORD PTR [edx+eax]
	push	esi
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	test	al, al
	jne	$LN132@BuildCouns

; 1379 : 		{
; 1380 : 			continue;
; 1381 : 		}
; 1382 : 
; 1383 : 		if(!GET_PLAYER(eMinorPlayer).isAlive())

	mov	ecx, DWORD PTR tv7559[esp+776]
	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	ecx, edx
	cmp	BYTE PTR [ecx+2256], al
	jne	$LN128@BuildCouns

; 1384 : 		{
; 1385 : 			if(!GET_PLAYER(eMinorPlayer).isEverAlive())

	cmp	BYTE PTR [ecx+2268], al
	je	$LN132@BuildCouns

; 1386 : 			{
; 1387 : 				continue;
; 1388 : 			}
; 1389 : 
; 1390 : 			// see if we ganked their city
; 1391 : 			PlayerTypes eCapturingPlayer = NO_PLAYER;

	or	esi, -1
	xor	ebp, ebp
	npad	4
$LL1470@BuildCouns:

; 1394 : 			{
; 1395 : 				if(eCapturingPlayer != NO_PLAYER)

	cmp	esi, -1
	jne	SHORT $LN1435@BuildCouns

; 1396 : 				{
; 1397 : 					break;
; 1398 : 				}
; 1399 : 
; 1400 : 				PlayerTypes eCheckPlayer = (PlayerTypes)ui2;
; 1401 : 
; 1402 : 				int iCityIndex;
; 1403 : 				CvCity* pCapCity;
; 1404 : 				for(pCapCity = GET_PLAYER(eCheckPlayer).firstCity(&iCityIndex); pCapCity != NULL; pCapCity = GET_PLAYER(eCheckPlayer).nextCity(&iCityIndex))

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	0
	lea	edx, DWORD PTR _iCityIndex$224497[esp+780]
	lea	ecx, DWORD PTR [eax+ebp]
	push	edx
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	edi, eax
	test	edi, edi
	je	SHORT $LN125@BuildCouns
	npad	1
$LL122@BuildCouns:

; 1405 : 				{
; 1406 : 					if(pCapCity->getOriginalOwner() == eMinorPlayer)

	mov	ecx, edi
	call	?getOriginalOwner@CvCity@@QBE?AW4PlayerTypes@@XZ ; CvCity::getOriginalOwner
	cmp	eax, DWORD PTR _ui$224475[esp+776]
	je	SHORT $LN1396@BuildCouns
	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	0
	lea	edx, DWORD PTR _iCityIndex$224497[esp+780]
	lea	ecx, DWORD PTR [eax+ebp]
	push	edx
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	edi, eax
	test	edi, edi
	jne	SHORT $LL122@BuildCouns

; 1778 : 	{
; 1779 : 		CvPlot* pPlot = NULL;
; 1780 : 		// when we encounter the first plot that is invalid, the rest of the list will be invalid
; 1781 : 		if(aiPlots[ui] == -1)

	jmp	SHORT $LN125@BuildCouns
$LN1396@BuildCouns:

; 1407 : 					{
; 1408 : 						eCapturingPlayer = pCapCity->getOwner();

	mov	esi, DWORD PTR [edi+84]
$LN125@BuildCouns:

; 1392 : 
; 1393 : 			for(uint ui2 = 0; ui2 < MAX_MAJOR_CIVS; ui2++)

	add	ebp, 63236				; 0000f704H
	cmp	ebp, 1391192				; 00153a58H
	jb	SHORT $LL1470@BuildCouns

; 1409 : 						break;
; 1410 : 					}
; 1411 : 				}
; 1412 : 			}
; 1413 : 
; 1414 : 			//antonjs: todo: don't show counsel to liberate if the CS was taken over peacefully with buyout (Austria UA)
; 1415 : 			// don't mention it if we conquered the city-state
; 1416 : 			if(eCapturingPlayer != NO_PLAYER && eCapturingPlayer != ePlayer)

	cmp	esi, -1
	je	$LN132@BuildCouns
$LN1435@BuildCouns:
	cmp	esi, DWORD PTR _ePlayer$[esp+772]
	je	$LN132@BuildCouns

; 1417 : 			{
; 1418 : 				iMessageRating = 10;
; 1419 : 				CvMinorCivAI* pMinorCivAI = GET_PLAYER(eMinorPlayer).GetMinorCivAI();

	mov	eax, DWORD PTR tv7559[esp+776]
	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	ecx, eax
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI

; 1420 : 
; 1421 : 				strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_LIBERATE_CITY_STATE");

	lea	edx, DWORD PTR $T226569[esp+776]
	push	OFFSET $SG224506
	push	edx
	mov	edi, eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 78		; 0000004eH
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226569[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1422 : 				strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();

	mov	ecx, edi
	call	?GetMinorCivType@CvMinorCivAI@@QBE?AW4MinorCivTypes@@XZ ; CvMinorCivAI::GetMinorCivType
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getMinorCivInfo@CvGlobals@@QAEPAVCvMinorCivInfo@@W4MinorCivTypes@@@Z ; CvGlobals::getMinorCivInfo
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 1423 : 				strLoc << GET_PLAYER(eCapturingPlayer).getCivilizationInfo().GetTextKey();

	imul	esi, 63236				; 0000f704H
	add	esi, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, esi
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 1424 : 				strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();

	mov	ecx, edi
	call	?GetMinorCivType@CvMinorCivAI@@QBE?AW4MinorCivTypes@@XZ ; CvMinorCivAI::GetMinorCivType
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getMinorCivInfo@CvGlobals@@QAEPAVCvMinorCivInfo@@W4MinorCivTypes@@@Z ; CvGlobals::getMinorCivInfo
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 1425 : 
; 1426 : 				bool bSuccess = SetCounselEntry(uiCounselIndex, eAdvisor, strLoc.toUTF8(), iMessageRating);

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	esi, DWORD PTR _this$[esp+776]
	mov	ecx, DWORD PTR _uiCounselIndex$[esp+776]
	cmp	ecx, DWORD PTR [esi+4]
	jae	$LN1472@BuildCouns
	mov	edx, DWORD PTR [esi]
	mov	edi, DWORD PTR tv7557[esp+776]
	mov	DWORD PTR [edi+edx], 2
	mov	ecx, DWORD PTR [esi]
	push	eax
	lea	ecx, DWORD PTR [edi+ecx+4]
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	mov	edx, DWORD PTR [esi]

; 1427 : 				CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 1428 : 				if(!bSuccess)
; 1429 : 				{
; 1430 : 					break;
; 1431 : 				}
; 1432 : 				uiCounselIndex++;

	inc	DWORD PTR _uiCounselIndex$[esp+788]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [edi+edx+516], 10		; 0000000aH
	add	edi, 520				; 00000208H
	mov	DWORD PTR tv7557[esp+776], edi

; 1433 : 			}
; 1434 : 
; 1435 : 			continue;

	jmp	$LN132@BuildCouns
$LN128@BuildCouns:

; 1436 : 		}
; 1437 : 
; 1438 : 		CvMinorCivAI* pMinorCivAI = GET_PLAYER(eMinorPlayer).GetMinorCivAI();

	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	esi, eax

; 1439 : 
; 1440 : 
; 1441 : 		if(pMinorCivAI->IsAllies(ePlayer) && pMinorCivAI->IsCloseToNotBeingAllies(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[esp+772]
	push	eax
	mov	ecx, esi
	call	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAllies
	test	al, al
	je	SHORT $LN116@BuildCouns
	mov	ecx, DWORD PTR _ePlayer$[esp+772]
	push	ecx
	mov	ecx, esi
	call	?IsCloseToNotBeingAllies@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsCloseToNotBeingAllies
	test	al, al
	je	SHORT $LN116@BuildCouns

; 1442 : 		{
; 1443 : 			// warn the player they are about to not be an ally with a minor civ
; 1444 : 			iMessageRating = 80;
; 1445 : 			if(eEnemyPlayer != NO_PLAYER)
; 1446 : 			{
; 1447 : 				strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_ALLY_WAR_WITH_MAJOR");
; 1448 : 				strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1449 : 				strLoc << GET_PLAYER(eEnemyPlayer).getCivilizationInfo().GetTextKey();
; 1450 : 			}
; 1451 : 			/*
; 1452 : 			else if (eQuest != NO_MINOR_CIV_QUEST_TYPE)
; 1453 : 			{
; 1454 : 				int iQuestData = pMinorCivAI->GetQuestData1(ePlayer, eQuest);
; 1455 : 
; 1456 : 				switch (eQuest)
; 1457 : 				{
; 1458 : 				case MINOR_CIV_QUEST_ROUTE:
; 1459 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_ALLY_QUEST_ROUTE");
; 1460 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1461 : 					break;
; 1462 : 				case MINOR_CIV_QUEST_KILL_CAMP:
; 1463 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_ALLY_QUEST_KILL_CAMP");
; 1464 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1465 : 					break;
; 1466 : 				case MINOR_CIV_QUEST_CONNECT_RESOURCE:
; 1467 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_ALLY_QUEST_CONNECT_RESOURCE");
; 1468 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1469 : 					strLoc << GC.getResourceInfo((ResourceTypes)iQuestData)->GetTextKey();
; 1470 : 					break;
; 1471 : 				case MINOR_CIV_QUEST_CONSTRUCT_WONDER:
; 1472 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_ALLY_QUEST_CONSTRUCT_WONDER");
; 1473 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1474 : 					strLoc << GC.getBuildingInfo((BuildingTypes)iQuestData)->GetDescription();
; 1475 : 					break;
; 1476 : 				case MINOR_CIV_QUEST_GREAT_PERSON:
; 1477 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_ALLY_QUEST_GREAT_PERSON");
; 1478 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1479 : 					strLoc << GC.getUnitInfo((UnitTypes)iQuestData)->GetDescription();
; 1480 : 					break;
; 1481 : 				case MINOR_CIV_QUEST_KILL_CITY_STATE:
; 1482 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_ALLY_QUEST_KILL_CITY_STATE");
; 1483 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1484 : 					strLoc << GC.getMinorCivInfo(GET_PLAYER((PlayerTypes)iQuestData).GetMinorCivAI()->GetMinorCivType())->GetTextKey();
; 1485 : 					break;
; 1486 : 				case MINOR_CIV_QUEST_FIND_PLAYER:
; 1487 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_ALLY_QUEST_FIND_PLAYER");
; 1488 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1489 : 					strLoc << GET_PLAYER((PlayerTypes)iQuestData).getCivilizationInfo().GetTextKey();
; 1490 : 					break;
; 1491 : 				case MINOR_CIV_QUEST_FIND_NATURAL_WONDER:
; 1492 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_ALLY_QUEST_FIND_NATURAL_WONDER");
; 1493 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1494 : 					break;
; 1495 : 				default:
; 1496 : 					CvAssertMsg(false, "No entry for this quest type!");
; 1497 : 					break;
; 1498 : 				}
; 1499 : 			}
; 1500 : 			else if (pMinorCivAI->GetTurnsSinceThreatenedByBarbarians() >= 0)
; 1501 : 			{
; 1502 : 				strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_ALLY_QUEST_CLEAR_BARBARIANS");
; 1503 : 				strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1504 : 			}
; 1505 : 			*/
; 1506 : 			else
; 1507 : 			{
; 1508 : 				strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_ALLY");

	lea	edx, DWORD PTR $T226576[esp+776]
	push	OFFSET $SG224521
	push	edx
	mov	DWORD PTR _iMessageRating$224479[esp+784], 80 ; 00000050H
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[esp+784], 80		; 00000050H

; 1509 : 				strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1510 : 			}

	jmp	SHORT $LN1526@BuildCouns
$LN116@BuildCouns:

; 1511 : 		}
; 1512 : 		else if(pMinorCivAI->IsFriends(ePlayer) && pMinorCivAI->IsCloseToNotBeingFriends(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[esp+772]
	push	eax
	mov	ecx, esi
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	test	al, al
	je	$LN132@BuildCouns
	mov	ecx, DWORD PTR _ePlayer$[esp+772]
	push	ecx
	mov	ecx, esi
	call	?IsCloseToNotBeingFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsCloseToNotBeingFriends
	test	al, al
	je	$LN132@BuildCouns

; 1513 : 		{
; 1514 : 			// warn the player they are about to not be an friend with a minor civ
; 1515 : 			iMessageRating = 60;
; 1516 : 			if(eEnemyPlayer != NO_PLAYER)
; 1517 : 			{
; 1518 : 				strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_FRIENDSHIP_WAR_WITH_MAJOR");
; 1519 : 				strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1520 : 				strLoc << GET_PLAYER(eEnemyPlayer).getCivilizationInfo().GetTextKey();
; 1521 : 			}
; 1522 : 			/*
; 1523 : 			else if (eQuest != NO_MINOR_CIV_QUEST_TYPE)
; 1524 : 			{
; 1525 : 				int iQuestData = pMinorCivAI->GetQuestData1(ePlayer, eQuest);
; 1526 : 
; 1527 : 				switch (eQuest)
; 1528 : 				{
; 1529 : 				case MINOR_CIV_QUEST_ROUTE:
; 1530 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_FRIENDSHIP_QUEST_ROUTE");
; 1531 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1532 : 					break;
; 1533 : 				case MINOR_CIV_QUEST_KILL_CAMP:
; 1534 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_FRIENDSHIP_QUEST_KILL_CAMP");
; 1535 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1536 : 					break;
; 1537 : 				case MINOR_CIV_QUEST_CONNECT_RESOURCE:
; 1538 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_FRIENDSHIP_QUEST_CONNECT_RESOURCE");
; 1539 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1540 : 					strLoc << GC.getResourceInfo((ResourceTypes)iQuestData)->GetTextKey();
; 1541 : 					break;
; 1542 : 				case MINOR_CIV_QUEST_CONSTRUCT_WONDER:
; 1543 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_FRIENDSHIP_QUEST_CONSTRUCT_WONDER");
; 1544 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1545 : 					strLoc << GC.getBuildingInfo((BuildingTypes)iQuestData)->GetDescription();
; 1546 : 					break;
; 1547 : 				case MINOR_CIV_QUEST_GREAT_PERSON:
; 1548 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_FRIENDSHIP_QUEST_GREAT_PERSON");
; 1549 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1550 : 					strLoc << GC.getUnitInfo((UnitTypes)iQuestData)->GetDescription();
; 1551 : 					break;
; 1552 : 				case MINOR_CIV_QUEST_KILL_CITY_STATE:
; 1553 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_FRIENDSHIP_QUEST_KILL_CITY_STATE");
; 1554 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1555 : 					strLoc << GC.getMinorCivInfo(GET_PLAYER((PlayerTypes)iQuestData).GetMinorCivAI()->GetMinorCivType())->GetTextKey();
; 1556 : 					break;
; 1557 : 				case MINOR_CIV_QUEST_FIND_PLAYER:
; 1558 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_FRIENDSHIP_QUEST_FIND_PLAYER");
; 1559 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1560 : 					strLoc << GET_PLAYER((PlayerTypes)iQuestData).getCivilizationInfo().GetTextKey();
; 1561 : 					break;
; 1562 : 				case MINOR_CIV_QUEST_FIND_NATURAL_WONDER:
; 1563 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_FRIENDSHIP_QUEST_FIND_NATURAL_WONDER");
; 1564 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1565 : 					break;
; 1566 : 				default:
; 1567 : 					CvAssertMsg(false, "No entry for this quest type!");
; 1568 : 					break;
; 1569 : 				}
; 1570 : 			}
; 1571 : 			else if (pMinorCivAI->GetTurnsSinceThreatenedByBarbarians() >= 0)
; 1572 : 			{
; 1573 : 				strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_FRIENDSHIP_QUEST_CLEAR_BARBARIANS");
; 1574 : 				strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1575 : 			}
; 1576 : 			*/
; 1577 : 			else
; 1578 : 			{
; 1579 : 				strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_ALMOST_LOST_CITY_STATE_FRIENDSHIP");

	lea	edx, DWORD PTR $T226581[esp+776]
	push	OFFSET $SG224532
	push	edx
	mov	DWORD PTR _iMessageRating$224479[esp+784], 60 ; 0000003cH
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[esp+784], 82		; 00000052H
$LN1526@BuildCouns:
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebp
	lea	ecx, DWORD PTR $T226581[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	edi

; 1580 : 				strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();

	mov	ecx, esi
	call	?GetMinorCivType@CvMinorCivAI@@QBE?AW4MinorCivTypes@@XZ ; CvMinorCivAI::GetMinorCivType
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getMinorCivInfo@CvGlobals@@QAEPAVCvMinorCivInfo@@W4MinorCivTypes@@@Z ; CvGlobals::getMinorCivInfo
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 1581 : 			}
; 1582 : 		}
; 1583 : 		else
; 1584 : 		{
; 1585 : 			iMessageRating = 20;
; 1586 : 			if(eEnemyPlayer != NO_PLAYER)
; 1587 : 			{
; 1588 : 				strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_BEFRIEND_CITY_STATE_WAR_WITH_MAJOR");
; 1589 : 				strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1590 : 				strLoc << GET_PLAYER(eEnemyPlayer).getCivilizationInfo().GetTextKey();
; 1591 : 			}
; 1592 : 			/*
; 1593 : 			else if (eQuest != NO_MINOR_CIV_QUEST_TYPE)
; 1594 : 			{
; 1595 : 				int iQuestData = pMinorCivAI->GetQuestData1(ePlayer, eQuest);
; 1596 : 
; 1597 : 				switch (eQuest)
; 1598 : 				{
; 1599 : 				case MINOR_CIV_QUEST_ROUTE:
; 1600 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_BEFRIEND_CITY_STATE_QUEST_ROUTE");
; 1601 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1602 : 					break;
; 1603 : 				case MINOR_CIV_QUEST_KILL_CAMP:
; 1604 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_BEFRIEND_CITY_STATE_QUEST_KILL_CAMP");
; 1605 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1606 : 					break;
; 1607 : 				case MINOR_CIV_QUEST_CONNECT_RESOURCE:
; 1608 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_BEFRIEND_CITY_STATE_QUEST_CONNECT_RESOURCE");
; 1609 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1610 : 					strLoc << GC.getResourceInfo((ResourceTypes)iQuestData)->GetTextKey();
; 1611 : 					break;
; 1612 : 				case MINOR_CIV_QUEST_CONSTRUCT_WONDER:
; 1613 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_BEFRIEND_CITY_STATE_QUEST_CONSTRUCT_WONDER");
; 1614 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1615 : 					strLoc << GC.getBuildingInfo((BuildingTypes)iQuestData)->GetDescription();
; 1616 : 					break;
; 1617 : 				case MINOR_CIV_QUEST_GREAT_PERSON:
; 1618 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_BEFRIEND_CITY_STATE_QUEST_GREAT_PERSON");
; 1619 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1620 : 					strLoc << GC.getUnitInfo((UnitTypes)iQuestData)->GetDescription();
; 1621 : 					break;
; 1622 : 				case MINOR_CIV_QUEST_KILL_CITY_STATE:
; 1623 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_BEFRIEND_CITY_STATE_QUEST_KILL_CITY_STATE");
; 1624 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1625 : 					strLoc << GC.getMinorCivInfo(GET_PLAYER((PlayerTypes)iQuestData).GetMinorCivAI()->GetMinorCivType())->GetTextKey();
; 1626 : 					break;
; 1627 : 				case MINOR_CIV_QUEST_FIND_PLAYER:
; 1628 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_BEFRIEND_CITY_STATE_QUEST_FIND_PLAYER");
; 1629 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1630 : 					strLoc << GET_PLAYER((PlayerTypes)iQuestData).getCivilizationInfo().GetTextKey();
; 1631 : 					break;
; 1632 : 				case MINOR_CIV_QUEST_FIND_NATURAL_WONDER:
; 1633 : 					strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_BEFRIEND_CITY_STATE_QUEST_FIND_NATURAL_WONDER");
; 1634 : 					strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1635 : 					break;
; 1636 : 				default:
; 1637 : 					CvAssertMsg(false, "No entry for this quest type!");
; 1638 : 					break;
; 1639 : 				}
; 1640 : 			}
; 1641 : 			else if (pMinorCivAI->GetTurnsSinceThreatenedByBarbarians() >= 0)
; 1642 : 			{
; 1643 : 				strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_BEFRIEND_CITY_STATE_QUEST_CLEAR_BARBARIANS");
; 1644 : 				strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1645 : 			}
; 1646 : 			*/
; 1647 : 			else
; 1648 : 			{
; 1649 : 				iMessageRating = 0;
; 1650 : 			}
; 1651 : 			//else
; 1652 : 			//{
; 1653 : 			//	strLoc = Localization::Lookup("TXT_KEY_DIPLOSTRATEGY_BEFRIEND_CITY_STATE");
; 1654 : 			//	strLoc << GC.getMinorCivInfo(pMinorCivAI->GetMinorCivType())->GetTextKey();
; 1655 : 			//}
; 1656 : 		}
; 1657 : 
; 1658 : 		if(iMessageRating > 0)
; 1659 : 		{
; 1660 : 			bool bSuccess = SetCounselEntry(uiCounselIndex, eAdvisor, strLoc.toUTF8(), iMessageRating);

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	ecx, DWORD PTR _this$[esp+776]
	mov	edx, DWORD PTR _uiCounselIndex$[esp+776]
	cmp	edx, DWORD PTR [ecx+4]
	jae	SHORT $LN1472@BuildCouns
	mov	esi, DWORD PTR tv7557[esp+776]
	mov	edi, ecx
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [esi+ecx], 2
	mov	edx, DWORD PTR [edi]
	push	eax
	lea	ecx, DWORD PTR [esi+edx+4]
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR _iMessageRating$224479[esp+788]

; 1661 : 			CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 1662 : 			if(!bSuccess)
; 1663 : 			{
; 1664 : 				break;
; 1665 : 			}
; 1666 : 			uiCounselIndex++;

	inc	DWORD PTR _uiCounselIndex$[esp+788]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+eax+516], ecx
	add	esi, 520				; 00000208H
	mov	DWORD PTR tv7557[esp+776], esi
$LN132@BuildCouns:
	mov	eax, DWORD PTR tv7559[esp+776]
	inc	DWORD PTR _ui$224475[esp+776]
	add	eax, 63236				; 0000f704H
	mov	DWORD PTR tv7559[esp+776], eax
	cmp	eax, 3983868				; 003cc9fcH
	jb	$LL1477@BuildCouns
$LN1472@BuildCouns:

; 1667 : 		}
; 1668 : 	}
; 1669 : 
; 1670 : 	// find the biggest city
; 1671 : 	CvCity* pBiggestCity = NULL;
; 1672 : 	int iMaxPopulation = 0;
; 1673 : 	for(pLoopCity = GET_PLAYER(ePlayer).firstCity(&iLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER(ePlayer).nextCity(&iLoop))

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ebp, DWORD PTR tv5440[esp+776]
	xor	edi, edi
	push	edi
	lea	eax, DWORD PTR _iLoop$[esp+780]
	lea	ecx, DWORD PTR [edx+ebp]
	push	eax
	mov	DWORD PTR _pBiggestCity$[esp+784], edi
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	esi, eax
	test	esi, esi
	je	$LN1479@BuildCouns
	npad	1
$LL104@BuildCouns:

; 1674 : 	{
; 1675 : 		if(pLoopCity->getPopulation() > iMaxPopulation)

	mov	ecx, esi
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	cmp	eax, edi
	jle	SHORT $LN103@BuildCouns

; 1676 : 		{
; 1677 : 			pBiggestCity = pLoopCity;
; 1678 : 			iMaxPopulation = pBiggestCity->getPopulation();

	mov	ecx, esi
	mov	DWORD PTR _pBiggestCity$[esp+776], esi
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	mov	edi, eax
$LN103@BuildCouns:
	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	0
	lea	edx, DWORD PTR _iLoop$[esp+780]
	add	ecx, ebp
	push	edx
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LL104@BuildCouns

; 1679 : 		}
; 1680 : 	}
; 1681 : 
; 1682 : 	if(pBiggestCity)

	mov	ebp, DWORD PTR _pBiggestCity$[esp+776]
	test	ebp, ebp
	je	$LN1479@BuildCouns

; 1683 : 	{
; 1684 : 		CvString strBuildingClass;

	lea	ecx, DWORD PTR _strBuildingClass$224551[esp+776]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[esp+784], 84		; 00000054H

; 1685 : 		for(uint uiLoop = 0; uiLoop < 4; uiLoop++)

	mov	DWORD PTR _uiLoop$224552[esp+776], esi
	npad	6
$LL1510@BuildCouns:

; 1686 : 		{
; 1687 : 			// for every science improvement building
; 1688 : 			switch(uiLoop)

	cmp	esi, 3
	ja	SHORT $LN1183@BuildCouns
	jmp	DWORD PTR $LN1542@BuildCouns[esi*4]
$LN94@BuildCouns:

; 1689 : 			{
; 1690 : 			case 0:
; 1691 : 				strBuildingClass = "BUILDINGCLASS_LIBRARY";

	push	OFFSET $SG224561

; 1692 : 				break;

	jmp	SHORT $LN1527@BuildCouns
$LN93@BuildCouns:

; 1693 : 			case 1:
; 1694 : 				strBuildingClass = "BUILDINGCLASS_UNIVERSITY";

	push	OFFSET $SG224563

; 1695 : 				break;

	jmp	SHORT $LN1527@BuildCouns
$LN92@BuildCouns:

; 1696 : 			case 2:
; 1697 : 				strBuildingClass = "BUILDINGCLASS_PUBLIC_SCHOOL";

	push	OFFSET $SG224565

; 1698 : 				break;

	jmp	SHORT $LN1527@BuildCouns
$LN91@BuildCouns:

; 1699 : 			case 3:
; 1700 : 				strBuildingClass = "BUILDINGCLASS_LABORATORY";

	push	OFFSET $SG224567
$LN1527@BuildCouns:
	lea	ecx, DWORD PTR _strBuildingClass$224551[esp+780]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
$LN1183@BuildCouns:

; 1701 : 				break;
; 1702 : 			}
; 1703 : 
; 1704 : 			BuildingClassTypes eScienceBuildingClass = NO_BUILDINGCLASS;
; 1705 : #ifdef AUI_WARNING_FIXES
; 1706 : 			for (uint i = 0; i < GC.getNumBuildingClassInfos(); i++)
; 1707 : #else
; 1708 : 			for(int i = 0; i < GC.getNumBuildingClassInfos(); i++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	edi, edi
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	test	eax, eax
	jle	$LN98@BuildCouns
	npad	9
$LL90@BuildCouns:

; 1709 : #endif
; 1710 : 			{
; 1711 : 				BuildingClassTypes eBuildingClass = (BuildingClassTypes)i;
; 1712 : 
; 1713 : 				CvBuildingClassInfo* pkBuildingClassInfo = GC.getBuildingClassInfo(eBuildingClass);

	push	edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingClassInfo@CvGlobals@@QAEPAVCvBuildingClassInfo@@W4BuildingClassTypes@@@Z ; CvGlobals::getBuildingClassInfo

; 1714 : 				if(!pkBuildingClassInfo)

	test	eax, eax
	je	SHORT $LN89@BuildCouns

; 1715 : 				{
; 1716 : 					continue;
; 1717 : 				}
; 1718 : 
; 1719 : 				if(GC.getBuildingClassInfo(eBuildingClass)->GetType() == strBuildingClass)

	push	edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingClassInfo@CvGlobals@@QAEPAVCvBuildingClassInfo@@W4BuildingClassTypes@@@Z ; CvGlobals::getBuildingClassInfo
	lea	ecx, DWORD PTR [eax+176]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	lea	ecx, DWORD PTR _strBuildingClass$224551[esp+776]
	push	ecx
	push	eax
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NPBDABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	add	esp, 8
	test	al, al
	jne	SHORT $LN1400@BuildCouns
$LN89@BuildCouns:

; 1701 : 				break;
; 1702 : 			}
; 1703 : 
; 1704 : 			BuildingClassTypes eScienceBuildingClass = NO_BUILDINGCLASS;
; 1705 : #ifdef AUI_WARNING_FIXES
; 1706 : 			for (uint i = 0; i < GC.getNumBuildingClassInfos(); i++)
; 1707 : #else
; 1708 : 			for(int i = 0; i < GC.getNumBuildingClassInfos(); i++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	edi
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	cmp	edi, eax
	jl	SHORT $LL90@BuildCouns

; 1778 : 	{
; 1779 : 		CvPlot* pPlot = NULL;
; 1780 : 		// when we encounter the first plot that is invalid, the rest of the list will be invalid
; 1781 : 		if(aiPlots[ui] == -1)

	jmp	SHORT $LN98@BuildCouns
$LN1400@BuildCouns:

; 1720 : 				{
; 1721 : 					eScienceBuildingClass = eBuildingClass;
; 1722 : 					break;
; 1723 : 				}
; 1724 : 			}
; 1725 : 
; 1726 : 			if(eScienceBuildingClass == NO_BUILDINGCLASS)

	cmp	edi, -1
	je	SHORT $LN98@BuildCouns

; 1727 : 			{
; 1728 : 				continue;
; 1729 : 			}
; 1730 : 
; 1731 : 			BuildingTypes eRecommendedResearchBuilding = NO_BUILDING;
; 1732 : #ifdef AUI_WARNING_FIXES
; 1733 : 			for (uint i = 0; i < GC.getNumBuildingInfos(); i++)
; 1734 : #else
; 1735 : 			for(int i = 0; i < GC.getNumBuildingInfos(); i++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	esi, esi
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	test	eax, eax
	jle	SHORT $LN1509@BuildCouns
$LL84@BuildCouns:

; 1736 : #endif
; 1737 : 			{
; 1738 : 				BuildingTypes eBuildingType = (BuildingTypes)i;
; 1739 : 				CvBuildingEntry* pkEntry = GC.getBuildingInfo(eBuildingType);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo

; 1740 : 				if(!pkEntry || pkEntry->GetBuildingClassType() != eScienceBuildingClass)

	test	eax, eax
	je	SHORT $LN83@BuildCouns
	mov	ecx, eax
	call	?GetBuildingClassType@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetBuildingClassType
	cmp	eax, edi
	jne	SHORT $LN83@BuildCouns

; 1741 : 				{
; 1742 : 					continue;
; 1743 : 				}
; 1744 : 
; 1745 : 				if(pBiggestCity->canConstruct(eBuildingType))

	push	0
	push	0
	push	0
	push	0
	push	esi
	mov	ecx, ebp
	call	?canConstruct@CvCity@@QBE_NW4BuildingTypes@@_N11PAVCvString@@@Z ; CvCity::canConstruct
	test	al, al
	jne	SHORT $LN1401@BuildCouns
$LN83@BuildCouns:

; 1727 : 			{
; 1728 : 				continue;
; 1729 : 			}
; 1730 : 
; 1731 : 			BuildingTypes eRecommendedResearchBuilding = NO_BUILDING;
; 1732 : #ifdef AUI_WARNING_FIXES
; 1733 : 			for (uint i = 0; i < GC.getNumBuildingInfos(); i++)
; 1734 : #else
; 1735 : 			for(int i = 0; i < GC.getNumBuildingInfos(); i++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	esi
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	cmp	esi, eax
	jl	SHORT $LL84@BuildCouns

; 1778 : 	{
; 1779 : 		CvPlot* pPlot = NULL;
; 1780 : 		// when we encounter the first plot that is invalid, the rest of the list will be invalid
; 1781 : 		if(aiPlots[ui] == -1)

	jmp	SHORT $LN1509@BuildCouns
$LN1401@BuildCouns:

; 1746 : 				{
; 1747 : 					eRecommendedResearchBuilding = eBuildingType;
; 1748 : 					break;
; 1749 : 				}
; 1750 : 			}
; 1751 : 
; 1752 : 			if(eRecommendedResearchBuilding != NO_BUILDING)

	cmp	esi, -1
	jne	SHORT $LN1402@BuildCouns
$LN1509@BuildCouns:
	mov	esi, DWORD PTR _uiLoop$224552[esp+776]
$LN98@BuildCouns:

; 1685 : 		for(uint uiLoop = 0; uiLoop < 4; uiLoop++)

	inc	esi
	mov	DWORD PTR _uiLoop$224552[esp+776], esi
	cmp	esi, 4
	jb	$LL1510@BuildCouns

; 1778 : 	{
; 1779 : 		CvPlot* pPlot = NULL;
; 1780 : 		// when we encounter the first plot that is invalid, the rest of the list will be invalid
; 1781 : 		if(aiPlots[ui] == -1)

	jmp	$LN1478@BuildCouns
$LN1402@BuildCouns:

; 1753 : 			{
; 1754 : 
; 1755 : 				strLoc = Localization::Lookup("TXT_KEY_SCIENCESTRATEGY_RESEARCH_BUILDING_IN_BIG_CITY");

	lea	edx, DWORD PTR $T226586[esp+776]
	push	OFFSET $SG224592
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 85		; 00000055H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226586[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 84		; 00000054H
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1756 : 				strLoc << pBiggestCity->getNameKey();

	mov	ecx, ebp
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 1757 : 				strLoc << GC.getBuildingInfo(eRecommendedResearchBuilding)->GetTextKey();

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 1758 : 				strLoc << GC.getBuildingInfo(eRecommendedResearchBuilding)->GetTextKey();

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 1759 : 
; 1760 : 				bool bSuccess = SetCounselEntry(uiCounselIndex, ADVISOR_SCIENCE, strLoc.toUTF8(), 20);

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	ebp, DWORD PTR _uiCounselIndex$[esp+776]
	mov	edi, DWORD PTR _this$[esp+776]
	cmp	ebp, DWORD PTR [edi+4]
	jae	SHORT $LN1478@BuildCouns
	mov	ecx, DWORD PTR [edi]
	mov	esi, ebp
	imul	esi, 520				; 00000208H
	mov	DWORD PTR [esi+ecx], 3
	mov	edx, DWORD PTR [edi]
	push	eax
	lea	ecx, DWORD PTR [esi+edx+4]
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	mov	eax, DWORD PTR [edi]
	add	esp, 12					; 0000000cH

; 1761 : 				CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 1762 : 				if(!bSuccess)
; 1763 : 				{
; 1764 : 					break;
; 1765 : 				}
; 1766 : 				uiCounselIndex++;

	inc	ebp
	mov	DWORD PTR [esi+eax+516], 20		; 00000014H
	mov	DWORD PTR _uiCounselIndex$[esp+776], ebp
$LN1478@BuildCouns:

; 1767 : 
; 1768 : 				break;
; 1769 : 			}
; 1770 : 		}
; 1771 : 	}

	lea	ecx, DWORD PTR _strBuildingClass$224551[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN1479@BuildCouns:

; 1772 : 
; 1773 : 	CvPlotsVector& aiPlots = GET_PLAYER(ePlayer).GetPlots();

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	edx, DWORD PTR tv5440[esp+776]
	add	ecx, edx
	call	?GetPlots@CvPlayer@@QAEAAV?$FStaticVector@H$0DJAA@$00$0BCJ@$0A@@@XZ ; CvPlayer::GetPlots
	mov	ebp, eax

; 1774 : 	ResourceTypes eRecommendedResource = NO_RESOURCE;
; 1775 : 	CvPlot* pResourcePlot = NULL;

	xor	eax, eax
	mov	DWORD PTR _aiPlots$[esp+776], ebp
	mov	DWORD PTR _eRecommendedResource$[esp+776], -1
	mov	DWORD PTR _pResourcePlot$[esp+776], eax

; 1776 : 	int iNumOfResource = MAX_INT;

	mov	DWORD PTR _iNumOfResource$[esp+776], 2147483647 ; 7fffffffH

; 1777 : 	for(uint ui = 0; ui < aiPlots.size(); ui++)

	mov	DWORD PTR _ui$224602[esp+776], eax
	cmp	DWORD PTR [ebp+4], eax
	jbe	$LN1480@BuildCouns
$LL1507@BuildCouns:

; 1778 : 	{
; 1779 : 		CvPlot* pPlot = NULL;
; 1780 : 		// when we encounter the first plot that is invalid, the rest of the list will be invalid
; 1781 : 		if(aiPlots[ui] == -1)

	mov	ecx, DWORD PTR [ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
	cmp	eax, -1
	je	$LN1405@BuildCouns

; 1782 : 		{
; 1783 : 			break;
; 1784 : 		}
; 1785 : 
; 1786 : 		pPlot = GC.getMap().plotByIndex(aiPlots[ui]);

	test	eax, eax
	jl	$LN75@BuildCouns
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	eax, DWORD PTR [ecx+4028]
	jge	$LN75@BuildCouns
	imul	eax, 484				; 000001e4H
	add	eax, DWORD PTR [ecx+4068]
	mov	DWORD PTR _pPlot$224606[esp+776], eax

; 1787 : 		if(!pPlot)

	test	eax, eax
	je	$LN75@BuildCouns

; 1788 : 		{
; 1789 : 			continue;
; 1790 : 		}
; 1791 : 
; 1792 : 		ResourceTypes eResource = pPlot->getResourceType(GET_PLAYER(ePlayer).getTeam());

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, DWORD PTR tv5440[esp+776]
	mov	edx, DWORD PTR [ecx+edx+44]
	cmp	edx, 63					; 0000003fH
	ja	SHORT $LN1233@BuildCouns
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	ecx, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [ecx+edx*4]
	jmp	SHORT $LN1234@BuildCouns
$LN1233@BuildCouns:
	or	edx, -1
$LN1234@BuildCouns:
	push	edx
	mov	ecx, eax
	call	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z ; CvPlot::getResourceType
	mov	esi, eax
	mov	DWORD PTR _eResource$224609[esp+776], esi

; 1793 : 		if(eResource == NO_RESOURCE)

	cmp	esi, -1
	je	$LN75@BuildCouns

; 1794 : 		{
; 1795 : 			continue;
; 1796 : 		}
; 1797 : 
; 1798 : 		if(GC.getResourceInfo(eResource)->getResourceUsage() == RESOURCEUSAGE_LUXURY || GC.getResourceInfo(eResource)->getResourceUsage() == RESOURCEUSAGE_STRATEGIC)

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	ecx, eax
	call	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ ; CvResourceInfo::getResourceUsage
	cmp	eax, 2
	je	SHORT $LN69@BuildCouns
	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	ecx, eax
	call	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ ; CvResourceInfo::getResourceUsage
	cmp	eax, 1
	jne	$LN75@BuildCouns
$LN69@BuildCouns:

; 1799 : 		{
; 1800 : 			// if we don't have any of this resource
; 1801 : 			if(GET_PLAYER(ePlayer).getNumResourceTotal(eResource) < iNumOfResource)

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	eax, DWORD PTR tv5440[esp+776]
	push	1
	lea	ecx, DWORD PTR [eax+edx]
	push	esi
	call	?getNumResourceTotal@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceTotal
	cmp	eax, DWORD PTR _iNumOfResource$[esp+776]
	jge	$LN75@BuildCouns

; 1802 : 			{
; 1803 : #ifdef AUI_WARNING_FIXES
; 1804 : 				for (uint iBuild = 0; iBuild < GC.getNumBuildInfos(); iBuild++)
; 1805 : #else
; 1806 : 				for(int iBuild = 0; iBuild < GC.getNumBuildInfos(); iBuild++)

	xor	edi, edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iBuild$224614[esp+776], edi
	call	?getNumBuildInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildInfos
	test	eax, eax
	jle	$LN75@BuildCouns
	npad	8
$LL1490@BuildCouns:
	mov	esi, DWORD PTR _pPlot$224606[esp+776]
	mov	ebp, DWORD PTR _eResource$224609[esp+776]

; 1807 : #endif
; 1808 : 				{
; 1809 : 					BuildTypes eBuild = (BuildTypes)iBuild;
; 1810 : 					CvBuildInfo* pkBuild = GC.getBuildInfo(eBuild);

	push	edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildInfo@CvGlobals@@QAEPAVCvBuildInfo@@W4BuildTypes@@@Z ; CvGlobals::getBuildInfo

; 1811 : 					if(pkBuild == NULL)

	test	eax, eax
	je	$LN66@BuildCouns

; 1812 : 					{
; 1813 : 						continue;
; 1814 : 					}
; 1815 : 
; 1816 : 					ImprovementTypes eImprovement = (ImprovementTypes)pkBuild->getImprovement();

	mov	ecx, eax
	call	?getImprovement@CvBuildInfo@@QBEHXZ	; CvBuildInfo::getImprovement

; 1817 : 					if(eImprovement == NO_IMPROVEMENT)

	cmp	eax, -1
	je	$LN66@BuildCouns

; 1818 : 					{
; 1819 : 						continue;
; 1820 : 					}
; 1821 : 
; 1822 : 					if(!GC.getImprovementInfo(eImprovement)->IsImprovementResourceTrade(eResource))

	push	ebp
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getImprovementInfo@CvGlobals@@QAEPAVCvImprovementEntry@@W4ImprovementTypes@@@Z ; CvGlobals::getImprovementInfo
	mov	ecx, eax
	call	?IsImprovementResourceTrade@CvImprovementEntry@@QBE_NH@Z ; CvImprovementEntry::IsImprovementResourceTrade
	test	al, al
	je	$LN66@BuildCouns

; 1823 : 					{
; 1824 : 						continue;
; 1825 : 					}
; 1826 : 
; 1827 : 					if(GET_PLAYER(ePlayer).canBuild(pPlot, eBuild))

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	edx, DWORD PTR tv5440[esp+776]
	push	1
	push	1
	push	0
	push	0
	push	edi
	add	ecx, edx
	push	esi
	call	?canBuild@CvPlayer@@QBE_NPBVCvPlot@@W4BuildTypes@@_N222@Z ; CvPlayer::canBuild
	test	al, al
	je	$LN66@BuildCouns

; 1828 : 					{
; 1829 : 						// ensure there is a city working this tile
; 1830 : 						if(pPlot->getWorkingCity())

	mov	ecx, esi
	call	?getWorkingCity@CvPlot@@QBEPAVCvCity@@XZ ; CvPlot::getWorkingCity
	test	eax, eax
	je	$LN66@BuildCouns

; 1831 : 						{
; 1832 : 							// check for a worker in this plot
; 1833 : 							bool bWorkerAlreadyOnIt = false;
; 1834 : 							IDInfo* pPlotUnitNode = pPlot->headUnitNode();

	mov	ecx, esi
	call	?headUnitNode@CvPlot@@QAEPAUIDInfo@@XZ	; CvPlot::headUnitNode
	mov	edi, eax

; 1835 : 
; 1836 : 							while(pPlotUnitNode != NULL)

	test	edi, edi
	je	SHORT $LN1503@BuildCouns
$LL59@BuildCouns:

; 1837 : 							{
; 1838 : 								CvUnit* pLoopUnit = ::getUnit(*pPlotUnitNode);

	push	edi
	call	?getUnit@@YAPAVCvUnit@@ABUIDInfo@@@Z	; getUnit
	add	esp, 4

; 1839 : 								pPlotUnitNode = pPlot->nextUnitNode(pPlotUnitNode);

	push	edi
	mov	ecx, esi
	mov	ebp, eax
	call	?nextUnitNode@CvPlot@@QAEPAUIDInfo@@PAU2@@Z ; CvPlot::nextUnitNode
	mov	edi, eax

; 1840 : 
; 1841 : 								if(pLoopUnit->getOwner() != ePlayer)

	mov	eax, DWORD PTR [ebp+40]
	mov	DWORD PTR _pPlotUnitNode$224629[esp+776], edi
	cmp	eax, DWORD PTR _ePlayer$[esp+772]
	jne	SHORT $LN1492@BuildCouns

; 1842 : 								{
; 1843 : 									continue;
; 1844 : 								}
; 1845 : 
; 1846 : 								// walk through missions
; 1847 : 								int iNumMissions = pLoopUnit->GetLengthMissionQueue();

	mov	ecx, ebp
	call	?GetLengthMissionQueue@CvUnit@@QBEHXZ	; CvUnit::GetLengthMissionQueue

; 1848 : 								for(int i = 0; i < iNumMissions; i++)

	xor	esi, esi
	mov	DWORD PTR _iNumMissions$224635[esp+776], eax
	test	eax, eax
	jle	SHORT $LN1492@BuildCouns
	npad	2
$LL56@BuildCouns:

; 1849 : 								{
; 1850 : 									const MissionData* pMission = pLoopUnit->GetMissionData(i);

	push	esi
	mov	ecx, ebp
	call	?GetMissionData@CvUnit@@QAEPBUMissionData@@H@Z ; CvUnit::GetMissionData
	mov	edi, eax

; 1851 : 									if(pMission->eMissionType == CvTypes::getMISSION_BUILD() && pMission->iData1 == eBuild)

	call	?getMISSION_BUILD@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_BUILD
	cmp	DWORD PTR [edi], eax
	jne	SHORT $LN55@BuildCouns
	mov	ecx, DWORD PTR _iBuild$224614[esp+776]
	cmp	DWORD PTR [edi+4], ecx
	je	SHORT $LN66@BuildCouns
$LN55@BuildCouns:

; 1848 : 								for(int i = 0; i < iNumMissions; i++)

	inc	esi
	cmp	esi, DWORD PTR _iNumMissions$224635[esp+776]
	jl	SHORT $LL56@BuildCouns
	mov	edi, DWORD PTR _pPlotUnitNode$224629[esp+776]
$LN1492@BuildCouns:

; 1835 : 
; 1836 : 							while(pPlotUnitNode != NULL)

	mov	esi, DWORD PTR _pPlot$224606[esp+776]
	test	edi, edi
	jne	SHORT $LL59@BuildCouns
	mov	ebp, DWORD PTR _eResource$224609[esp+776]
$LN1503@BuildCouns:

; 1852 : 									{
; 1853 : 										bWorkerAlreadyOnIt = true;
; 1854 : 										break;
; 1855 : 									}
; 1856 : 
; 1857 : 								}
; 1858 : 
; 1859 : 								if(bWorkerAlreadyOnIt)
; 1860 : 								{
; 1861 : 									break;
; 1862 : 								}
; 1863 : 							}
; 1864 : 
; 1865 : 							if(!bWorkerAlreadyOnIt)
; 1866 : 							{
; 1867 : 								eRecommendedResource = eResource;
; 1868 : 								pResourcePlot = pPlot;
; 1869 : 								iNumOfResource = GET_PLAYER(ePlayer).getNumResourceTotal(eResource);

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	eax, DWORD PTR tv5440[esp+776]
	push	1
	lea	ecx, DWORD PTR [eax+edx]
	push	ebp
	mov	DWORD PTR _eRecommendedResource$[esp+784], ebp
	mov	DWORD PTR _pResourcePlot$[esp+784], esi
	call	?getNumResourceTotal@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceTotal
	mov	DWORD PTR _iNumOfResource$[esp+776], eax
$LN66@BuildCouns:
	mov	edi, DWORD PTR _iBuild$224614[esp+776]
	inc	edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iBuild$224614[esp+776], edi
	call	?getNumBuildInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildInfos
	cmp	edi, eax
	jl	$LL1490@BuildCouns

; 1802 : 			{
; 1803 : #ifdef AUI_WARNING_FIXES
; 1804 : 				for (uint iBuild = 0; iBuild < GC.getNumBuildInfos(); iBuild++)
; 1805 : #else
; 1806 : 				for(int iBuild = 0; iBuild < GC.getNumBuildInfos(); iBuild++)

	mov	ebp, DWORD PTR _aiPlots$[esp+776]
$LN75@BuildCouns:

; 1777 : 	for(uint ui = 0; ui < aiPlots.size(); ui++)

	mov	eax, DWORD PTR _ui$224602[esp+776]
	inc	eax
	mov	DWORD PTR _ui$224602[esp+776], eax
	cmp	eax, DWORD PTR [ebp+4]
	jb	$LL1507@BuildCouns
$LN1405@BuildCouns:

; 1870 : 							}
; 1871 : 						}
; 1872 : 					}
; 1873 : 				}
; 1874 : 			}
; 1875 : 		}
; 1876 : 	}
; 1877 : 
; 1878 : 	if(eRecommendedResource != NO_RESOURCE)

	mov	esi, DWORD PTR _eRecommendedResource$[esp+776]
	cmp	esi, -1
	je	$LN1480@BuildCouns

; 1879 : 	{
; 1880 : 		if(iNumOfResource == 0)

	cmp	DWORD PTR _iNumOfResource$[esp+776], 0
	jne	SHORT $LN49@BuildCouns

; 1881 : 		{
; 1882 : 			strLoc = Localization::Lookup("TXT_KEY_CITYIMPROVEMENTSTRATEGY_PLUG_UP_RESOURCES_HAVE_ZERO");

	lea	ecx, DWORD PTR $T226590[esp+776]
	push	OFFSET $SG224647
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[esp+784], 86		; 00000056H

; 1883 : 		}
; 1884 : 		else

	jmp	SHORT $LN1528@BuildCouns
$LN49@BuildCouns:

; 1885 : 		{
; 1886 : 			strLoc = Localization::Lookup("TXT_KEY_CITYIMPROVEMENTSTRATEGY_PLUG_UP_RESOURCES_HAVE_MORE");

	lea	edx, DWORD PTR $T226591[esp+776]
	push	OFFSET $SG224650
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[esp+784], 87		; 00000057H
$LN1528@BuildCouns:
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226591[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1887 : 		}
; 1888 : 		strLoc << GC.getResourceInfo(eRecommendedResource)->GetTextKey();

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 1889 : 		strLoc << pResourcePlot->getWorkingCity()->getNameKey();

	mov	ecx, DWORD PTR _pResourcePlot$[esp+776]
	call	?getWorkingCity@CvPlot@@QBEPAVCvCity@@XZ ; CvPlot::getWorkingCity
	mov	ecx, eax
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 1890 : 
; 1891 : #ifdef CVASSERT_ENABLE
; 1892 : 		bool bSuccess = SetCounselEntry(uiCounselIndex, ADVISOR_ECONOMIC, strLoc.toUTF8(), 20);
; 1893 : 		DEBUG_VARIABLE(bSuccess);
; 1894 : 		CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 1895 : #else
; 1896 : 		SetCounselEntry(uiCounselIndex, ADVISOR_ECONOMIC, strLoc.toUTF8(), 20);

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	edi, DWORD PTR _uiCounselIndex$[esp+776]
	mov	ebp, DWORD PTR _this$[esp+776]
	cmp	edi, DWORD PTR [ebp+4]
	jae	SHORT $LN1253@BuildCouns
	mov	ecx, DWORD PTR [ebp]
	mov	esi, edi
	imul	esi, 520				; 00000208H
	mov	DWORD PTR [esi+ecx], 1
	mov	edx, DWORD PTR [ebp]
	push	eax
	lea	ecx, DWORD PTR [esi+edx+4]
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	mov	eax, DWORD PTR [ebp]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+eax+516], 20		; 00000014H
$LN1253@BuildCouns:

; 1897 : #endif
; 1898 : 		uiCounselIndex++;

	inc	edi
	mov	DWORD PTR _uiCounselIndex$[esp+776], edi
$LN1480@BuildCouns:

; 1899 : 	}
; 1900 : 
; 1901 : 	ResourceTypes eTradableResource = NO_RESOURCE;
; 1902 : 	PlayerTypes eTargetPlayer = NO_PLAYER;
; 1903 : 	TeamTypes ePlayerTeam = GET_PLAYER(ePlayer).getTeam();

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	eax, DWORD PTR tv5440[esp+776]
	mov	eax, DWORD PTR [eax+edx+44]
	or	ecx, -1
	mov	DWORD PTR _eTradableResource$[esp+776], ecx
	mov	DWORD PTR _eTargetPlayer$[esp+776], ecx
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN1271@BuildCouns
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR $T228332[esp+776], eax
	jmp	SHORT $LN1272@BuildCouns
$LN1271@BuildCouns:
	mov	DWORD PTR $T228332[esp+776], ecx
$LN1272@BuildCouns:

; 1904 : #ifdef AUI_WARNING_FIXES
; 1905 : 	for (uint i = 0; i < GC.getNumResourceInfos(); i++)
; 1906 : #else
; 1907 : 	for(int i = 0; i < GC.getNumResourceInfos(); i++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	ebp, ebp
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	test	eax, eax
	jle	$LN23@BuildCouns
$LL47@BuildCouns:

; 1908 : #endif
; 1909 : 	{
; 1910 : 		ResourceTypes eResource = (ResourceTypes)i;
; 1911 : 		CvResourceInfo* pResourceInfo = GC.getResourceInfo(eResource);

	push	ebp
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	esi, eax

; 1912 : 		if (pResourceInfo == NULL)

	test	esi, esi
	je	$LN46@BuildCouns

; 1913 : 		{
; 1914 : 			continue;
; 1915 : 		}
; 1916 : 
; 1917 : 		if(pResourceInfo->getResourceUsage() != RESOURCEUSAGE_LUXURY && pResourceInfo->getResourceUsage() != RESOURCEUSAGE_STRATEGIC)

	mov	ecx, esi
	call	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ ; CvResourceInfo::getResourceUsage
	cmp	eax, 2
	je	SHORT $LN43@BuildCouns
	mov	ecx, esi
	call	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ ; CvResourceInfo::getResourceUsage
	cmp	eax, 1
	jne	$LN46@BuildCouns
$LN43@BuildCouns:

; 1918 : 		{
; 1919 : 			continue;
; 1920 : 		}
; 1921 : 
; 1922 : 		// not enough to trade
; 1923 : 		if(GET_PLAYER(ePlayer).getNumResourceAvailable(eResource, false) <= 1)

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	edx, DWORD PTR tv5440[esp+776]
	push	0
	add	ecx, edx
	push	ebp
	call	?getNumResourceAvailable@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceAvailable
	cmp	eax, 1
	jle	$LN46@BuildCouns

; 1924 : 		{
; 1925 : 			continue;
; 1926 : 		}
; 1927 : 
; 1928 : 		for(int j = 0; j < MAX_MAJOR_CIVS; j++)

	xor	eax, eax
	mov	DWORD PTR _j$224666[esp+776], eax
	mov	DWORD PTR tv7629[esp+776], eax
	npad	4
$LL41@BuildCouns:

; 1929 : 		{
; 1930 : 			PlayerTypes eOtherPlayer = (PlayerTypes)j;
; 1931 : 			TeamTypes eOtherTeam = GET_PLAYER(eOtherPlayer).getTeam();

	mov	eax, DWORD PTR tv7629[esp+776]
	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	eax, DWORD PTR [eax+ecx+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN1284@BuildCouns
	mov	edx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [edx+4]
	mov	edi, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN1285@BuildCouns
$LN1284@BuildCouns:
	or	edi, -1
$LN1285@BuildCouns:

; 1932 : 			if(ePlayerTeam == eOtherTeam || !GET_PLAYER(eOtherPlayer).isAlive())

	cmp	DWORD PTR $T228332[esp+776], edi
	je	$LN40@BuildCouns
	mov	eax, DWORD PTR tv7629[esp+776]
	cmp	BYTE PTR [eax+ecx+2256], 0
	je	$LN40@BuildCouns

; 1933 : 			{
; 1934 : 				continue;
; 1935 : 			}
; 1936 : 
; 1937 : 			// if we haven't met or are at war
; 1938 : 			if(!GET_TEAM(ePlayerTeam).isHasMet(eOtherTeam) || GET_TEAM(ePlayerTeam).isAtWar(eOtherTeam))

	mov	esi, DWORD PTR $T228332[esp+776]
	mov	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	imul	esi, 2984				; 00000ba8H
	add	ecx, esi
	push	edi
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	test	al, al
	je	$LN40@BuildCouns
	mov	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	lea	ecx, DWORD PTR [edx+esi]
	push	edi
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	test	al, al
	jne	$LN40@BuildCouns

; 1939 : 			{
; 1940 : 				continue;
; 1941 : 			}
; 1942 : 
; 1943 : 			// other player already has some
; 1944 : 			if(GET_PLAYER(eOtherPlayer).getNumResourceAvailable(eResource, true) != 0)

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, DWORD PTR tv7629[esp+776]
	push	1
	add	ecx, eax
	push	ebp
	call	?getNumResourceAvailable@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceAvailable
	test	eax, eax
	jne	$LN40@BuildCouns

; 1945 : 			{
; 1946 : 				continue;
; 1947 : 			}
; 1948 : 
; 1949 : #ifdef AUI_WARNING_FIXES
; 1950 : 			for (uint k = 0; k < GC.getNumResourceInfos(); k++)
; 1951 : #else
; 1952 : 			for(int k = 0; k < GC.getNumResourceInfos(); k++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	edi, edi
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	test	eax, eax
	jle	$LN40@BuildCouns
	npad	10
$LL33@BuildCouns:

; 1953 : #endif
; 1954 : 			{
; 1955 : 				ResourceTypes eTradebackResource = (ResourceTypes)k;
; 1956 : 				const CvResourceInfo* pkTradeResourceInfo = GC.getResourceInfo(eTradebackResource);

	push	edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	esi, eax

; 1957 : 				if(pkTradeResourceInfo == NULL || (pkTradeResourceInfo->getResourceUsage() != RESOURCEUSAGE_LUXURY && pkTradeResourceInfo->getResourceUsage() != RESOURCEUSAGE_STRATEGIC))

	test	esi, esi
	je	$LN32@BuildCouns
	mov	ecx, esi
	call	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ ; CvResourceInfo::getResourceUsage
	cmp	eax, 2
	je	SHORT $LN30@BuildCouns
	mov	ecx, esi
	call	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ ; CvResourceInfo::getResourceUsage
	cmp	eax, 1
	jne	$LN32@BuildCouns
$LN30@BuildCouns:

; 1958 : 				{
; 1959 : 					continue;
; 1960 : 				}
; 1961 : 
; 1962 : 				// other player has some to trade
; 1963 : 				if(GET_PLAYER(eOtherPlayer).getNumResourceAvailable(eTradebackResource, false) == 0)

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	eax, DWORD PTR tv7629[esp+776]
	push	0
	lea	ecx, DWORD PTR [eax+edx]
	push	edi
	call	?getNumResourceAvailable@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceAvailable
	test	eax, eax
	je	SHORT $LN32@BuildCouns

; 1964 : 				{
; 1965 : 					continue;
; 1966 : 				}
; 1967 : 
; 1968 : 				if(GET_PLAYER(ePlayer).getNumResourceAvailable(eTradebackResource, true) > 0)

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	edx, DWORD PTR tv5440[esp+776]
	push	1
	add	ecx, edx
	push	edi
	call	?getNumResourceAvailable@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceAvailable
	test	eax, eax
	jg	SHORT $LN32@BuildCouns

; 1969 : 				{
; 1970 : 					continue;
; 1971 : 				}
; 1972 : 
; 1973 : 				if(eTradableResource != NO_RESOURCE)

	cmp	DWORD PTR _eTradableResource$[esp+776], -1
	je	SHORT $LN26@BuildCouns

; 1974 : 				{
; 1975 : 					ResourceUsageTypes eTradableResourceUsage = GC.getResourceInfo(eTradableResource)->getResourceUsage();

	mov	eax, DWORD PTR _eTradableResource$[esp+776]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	ecx, eax
	call	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ ; CvResourceInfo::getResourceUsage

; 1976 : 					ResourceUsageTypes eResourceUsage = GC.getResourceInfo(eResource)->getResourceUsage();

	push	ebp
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	esi, eax
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	ecx, eax
	call	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ ; CvResourceInfo::getResourceUsage

; 1977 : 
; 1978 : 					// prefer trading luxury to strategic
; 1979 : 					if(eTradableResourceUsage == RESOURCEUSAGE_STRATEGIC && eResourceUsage == RESOURCEUSAGE_LUXURY)

	cmp	esi, 1
	jne	SHORT $LN32@BuildCouns
	cmp	eax, 2
	jne	SHORT $LN32@BuildCouns

; 1980 : 					{
; 1981 : 						eTradableResource = eResource;
; 1982 : 						eTargetPlayer = eOtherPlayer;

	mov	ecx, DWORD PTR _j$224666[esp+776]
	mov	DWORD PTR _eTargetPlayer$[esp+776], ecx

; 1983 : 					}
; 1984 : 				}
; 1985 : 				else

	jmp	SHORT $LN1529@BuildCouns
$LN26@BuildCouns:

; 1988 : 					eTargetPlayer = eOtherPlayer;

	mov	edx, DWORD PTR _j$224666[esp+776]
	mov	DWORD PTR _eTargetPlayer$[esp+776], edx
$LN1529@BuildCouns:

; 1986 : 				{
; 1987 : 					eTradableResource = eResource;

	mov	DWORD PTR _eTradableResource$[esp+776], ebp
$LN32@BuildCouns:

; 1945 : 			{
; 1946 : 				continue;
; 1947 : 			}
; 1948 : 
; 1949 : #ifdef AUI_WARNING_FIXES
; 1950 : 			for (uint k = 0; k < GC.getNumResourceInfos(); k++)
; 1951 : #else
; 1952 : 			for(int k = 0; k < GC.getNumResourceInfos(); k++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	edi
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	cmp	edi, eax
	jl	$LL33@BuildCouns
$LN40@BuildCouns:

; 1924 : 		{
; 1925 : 			continue;
; 1926 : 		}
; 1927 : 
; 1928 : 		for(int j = 0; j < MAX_MAJOR_CIVS; j++)

	mov	eax, DWORD PTR tv7629[esp+776]
	inc	DWORD PTR _j$224666[esp+776]
	add	eax, 63236				; 0000f704H
	cmp	eax, 1391192				; 00153a58H
	mov	DWORD PTR tv7629[esp+776], eax
	jl	$LL41@BuildCouns
$LN46@BuildCouns:

; 1904 : #ifdef AUI_WARNING_FIXES
; 1905 : 	for (uint i = 0; i < GC.getNumResourceInfos(); i++)
; 1906 : #else
; 1907 : 	for(int i = 0; i < GC.getNumResourceInfos(); i++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	ebp
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos
	cmp	ebp, eax
	jl	$LL47@BuildCouns

; 1989 : 				}
; 1990 : 			}
; 1991 : 		}
; 1992 : 	}
; 1993 : 
; 1994 : 	if(eTradableResource != NO_RESOURCE)

	mov	esi, DWORD PTR _eTradableResource$[esp+776]
	cmp	esi, -1
	je	$LN23@BuildCouns

; 1995 : 	{
; 1996 : 		ResourceUsageTypes eResourceUsage = GC.getResourceInfo(eTradableResource)->getResourceUsage();

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	ecx, eax
	call	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ ; CvResourceInfo::getResourceUsage

; 1997 : 		if(eResourceUsage == RESOURCEUSAGE_LUXURY)

	cmp	eax, 2
	jne	SHORT $LN22@BuildCouns

; 1998 : 		{
; 1999 : 			strLoc = Localization::Lookup("TXT_KEY_RESOURCESTRATEGY_TRADE_LUXURIES");

	lea	eax, DWORD PTR $T226594[esp+776]
	push	OFFSET $SG224698
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[esp+784], 88		; 00000058H
	jmp	SHORT $LN1530@BuildCouns
$LN22@BuildCouns:

; 2000 : 		}
; 2001 : 		else if(eResourceUsage == RESOURCEUSAGE_STRATEGIC)

	cmp	eax, 1
	jne	SHORT $LN20@BuildCouns

; 2002 : 		{
; 2003 : 			strLoc = Localization::Lookup("TXT_KEY_RESOURCESTRATEGY_TRADE_STRATEGIC");

	lea	ecx, DWORD PTR $T226595[esp+776]
	push	OFFSET $SG224702
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[esp+784], 89		; 00000059H
$LN1530@BuildCouns:
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226595[esp+776]
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN20@BuildCouns:

; 2004 : 		}
; 2005 : 		else
; 2006 : 		{
; 2007 : 			CvAssertMsg(false, "Can't trade a bonus resource");
; 2008 : 		}
; 2009 : 
; 2010 : 		strLoc << GC.getResourceInfo(eTradableResource)->GetTextKey();

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 2011 : 		strLoc << GET_PLAYER(eTargetPlayer).getCivilizationInfo().GetTextKey();

	mov	ecx, DWORD PTR _eTargetPlayer$[esp+776]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?GetTextKey@CvBaseInfo@@QBEPBDXZ	; CvBaseInfo::GetTextKey
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	call	ebx

; 2012 : 
; 2013 : #ifdef CVASSERT_ENABLE
; 2014 : 		bool bSuccess = SetCounselEntry(uiCounselIndex, ADVISOR_FOREIGN, strLoc.toUTF8(), 20);
; 2015 : 		DEBUG_VARIABLE(bSuccess);
; 2016 : 		CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 2017 : #else
; 2018 : 		SetCounselEntry(uiCounselIndex, ADVISOR_FOREIGN, strLoc.toUTF8(), 20);

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	ebx, DWORD PTR _uiCounselIndex$[esp+776]
	mov	edi, DWORD PTR _this$[esp+776]
	cmp	ebx, DWORD PTR [edi+4]
	jae	SHORT $LN1312@BuildCouns
	mov	edx, DWORD PTR [edi]
	mov	esi, ebx
	imul	esi, 520				; 00000208H
	mov	DWORD PTR [esi+edx], 2
	mov	ecx, DWORD PTR [edi]
	push	eax
	lea	ecx, DWORD PTR [esi+ecx+4]
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	mov	edx, DWORD PTR [edi]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+edx+516], 20		; 00000014H
$LN1312@BuildCouns:

; 2019 : #endif
; 2020 : 		uiCounselIndex++;

	inc	ebx
	mov	DWORD PTR _uiCounselIndex$[esp+776], ebx
$LN23@BuildCouns:

; 2021 : 	}
; 2022 : 
; 2023 : 	// search for each advisor type. If there isn't an entry of that type, add the default string
; 2024 : 	bool abAdvisorUsed[NUM_ADVISOR_TYPES];
; 2025 : 	for(uint ui = 0; ui < NUM_ADVISOR_TYPES; ui++)
; 2026 : 	{
; 2027 : 		abAdvisorUsed[ui] = false;
; 2028 : 	}
; 2029 : 
; 2030 : 	for(uint ui = 0; ui < m_aCounsel.size(); ui++)

	mov	ebp, DWORD PTR _this$[esp+776]
	mov	esi, DWORD PTR [ebp+4]
	xor	edi, edi
	xor	ecx, ecx
	mov	DWORD PTR _abAdvisorUsed$[esp+776], edi
	cmp	esi, edi
	jbe	SHORT $LN1481@BuildCouns
	mov	edx, DWORD PTR [ebp]
	npad	2
$LL15@BuildCouns:

; 2031 : 	{
; 2032 : 		if(m_aCounsel[ui].m_eAdvisor == NO_ADVISOR_TYPE || m_aCounsel[ui].m_eAdvisor == NUM_ADVISOR_TYPES)

	mov	eax, DWORD PTR [edx]
	cmp	eax, -1
	je	SHORT $LN14@BuildCouns
	cmp	eax, 4
	je	SHORT $LN14@BuildCouns

; 2033 : 		{
; 2034 : 			continue;
; 2035 : 		}
; 2036 : 		abAdvisorUsed[m_aCounsel[ui].m_eAdvisor] = true;

	mov	BYTE PTR _abAdvisorUsed$[esp+eax+776], 1
$LN14@BuildCouns:

; 2021 : 	}
; 2022 : 
; 2023 : 	// search for each advisor type. If there isn't an entry of that type, add the default string
; 2024 : 	bool abAdvisorUsed[NUM_ADVISOR_TYPES];
; 2025 : 	for(uint ui = 0; ui < NUM_ADVISOR_TYPES; ui++)
; 2026 : 	{
; 2027 : 		abAdvisorUsed[ui] = false;
; 2028 : 	}
; 2029 : 
; 2030 : 	for(uint ui = 0; ui < m_aCounsel.size(); ui++)

	inc	ecx
	add	edx, 520				; 00000208H
	cmp	ecx, esi
	jb	SHORT $LL15@BuildCouns
$LN1481@BuildCouns:

; 2037 : 	}
; 2038 : 
; 2039 : 	for(uint ui = 0; ui < NUM_ADVISOR_TYPES; ui++)

	mov	esi, DWORD PTR _uiCounselIndex$[esp+776]
	mov	ebx, DWORD PTR __imp_??1String@Localization@@UAE@XZ
	imul	esi, 520				; 00000208H
	npad	4
$LL10@BuildCouns:

; 2040 : 	{
; 2041 : 		if(!abAdvisorUsed[ui])

	cmp	BYTE PTR _abAdvisorUsed$[esp+edi+776], 0
	jne	$LN9@BuildCouns

; 2042 : 		{
; 2043 : 			AdvisorTypes eAdvisorTypes = (AdvisorTypes)ui;
; 2044 : 			switch(eAdvisorTypes)

	cmp	edi, 3
	ja	$LN5@BuildCouns
	jmp	DWORD PTR $LN1543@BuildCouns[edi*4]
$LN4@BuildCouns:

; 2045 : 			{
; 2046 : 			case ADVISOR_SCIENCE:
; 2047 : 				strLoc = Localization::Lookup("TXT_KEY_BASESTRATEGY_NOTHING_TO_SAY_SCIENCE");

	lea	eax, DWORD PTR $T226598[esp+776]
	push	OFFSET $SG224730
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 90		; 0000005aH
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226598[esp+776]

; 2048 : 				break;

	jmp	$LN1531@BuildCouns
$LN3@BuildCouns:

; 2049 : 			case ADVISOR_ECONOMIC:
; 2050 : 				strLoc = Localization::Lookup("TXT_KEY_BASESTRATEGY_NOTHING_TO_SAY_ECONOMIC");

	lea	ecx, DWORD PTR $T226599[esp+776]
	push	OFFSET $SG224733
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 91		; 0000005bH
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226599[esp+776]

; 2051 : 				break;

	jmp	SHORT $LN1531@BuildCouns
$LN2@BuildCouns:

; 2052 : 			case ADVISOR_MILITARY:
; 2053 : 				strLoc = Localization::Lookup("TXT_KEY_BASESTRATEGY_NOTHING_TO_SAY_MILITARY");

	lea	edx, DWORD PTR $T226600[esp+776]
	push	OFFSET $SG224736
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 92		; 0000005cH
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226600[esp+776]

; 2054 : 				break;

	jmp	SHORT $LN1531@BuildCouns
$LN1@BuildCouns:

; 2055 : 			case ADVISOR_FOREIGN:
; 2056 : 				strLoc = Localization::Lookup("TXT_KEY_BASESTRATEGY_NOTHING_TO_SAY_FOREIGN");

	lea	eax, DWORD PTR $T226601[esp+776]
	push	OFFSET $SG224739
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strLoc$[esp+780]
	mov	BYTE PTR __$EHRec$[esp+788], 93		; 0000005dH
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T226601[esp+776]
$LN1531@BuildCouns:
	mov	BYTE PTR __$EHRec$[esp+784], 0
	call	ebx
$LN5@BuildCouns:

; 2057 : 				break;
; 2058 : 			}
; 2059 : 
; 2060 : #ifdef CVASSERT_ENABLE
; 2061 : 			bool bSuccess = SetCounselEntry(uiCounselIndex, eAdvisorTypes, strLoc.toUTF8(), 0);
; 2062 : 			DEBUG_VARIABLE(bSuccess);
; 2063 : 			CvAssertMsg(bSuccess, "Unable to add counsel to list. Too many strategies running at once");
; 2064 : #else
; 2065 : 			SetCounselEntry(uiCounselIndex, eAdvisorTypes, strLoc.toUTF8(), 0);

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	ecx, DWORD PTR _uiCounselIndex$[esp+776]
	cmp	ecx, DWORD PTR [ebp+4]
	jae	SHORT $LN1333@BuildCouns
	mov	edx, DWORD PTR [ebp]
	mov	DWORD PTR [esi+edx], edi
	mov	ecx, DWORD PTR [ebp]
	push	eax
	lea	ecx, DWORD PTR [esi+ecx+4]
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	mov	edx, DWORD PTR [ebp]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+edx+516], 0
$LN1333@BuildCouns:

; 2066 : #endif
; 2067 : 			uiCounselIndex++;

	inc	DWORD PTR _uiCounselIndex$[esp+776]
	add	esi, 520				; 00000208H
$LN9@BuildCouns:
	inc	edi
	cmp	edi, 4
	jb	$LL10@BuildCouns

; 2068 : 		}
; 2069 : 	}
; 2070 : 
; 2071 : 	// sort the list
; 2072 : 	std::sort(&m_aCounsel[0], &m_aCounsel[0] + m_aCounsel.size(), CounselSort);

	mov	eax, DWORD PTR [ebp+4]
	mov	ecx, DWORD PTR [ebp]
	imul	eax, 520				; 00000208H
	add	eax, ecx
	mov	esi, eax
	mov	edx, esi
	sub	edx, ecx
	mov	eax, 2114445439				; 7e07e07fH
	imul	edx
	sar	edx, 8
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	push	OFFSET ?CounselSort@@YA_NUCounsel@CvAdvisorCounsel@@0@Z ; CounselSort
	add	eax, edx
	push	eax
	push	esi
	push	ecx
	call	??$_Sort@PAUCounsel@CvAdvisorCounsel@@HP6A_NU12@0@Z@std@@YAXPAUCounsel@CvAdvisorCounsel@@0HP6A_NU12@1@Z@Z ; std::_Sort<CvAdvisorCounsel::Counsel *,int,bool (__cdecl*)(CvAdvisorCounsel::Counsel,CvAdvisorCounsel::Counsel)>
	add	esp, 16					; 00000010H

; 2073 : }

	lea	ecx, DWORD PTR _strLoc$[esp+776]
	mov	DWORD PTR __$EHRec$[esp+784], -1
	call	ebx
$LN382@BuildCouns:
	mov	ecx, DWORD PTR __$EHRec$[esp+776]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 760				; 000002f8H
	ret	4
	npad	3
$LN1533@BuildCouns:
	DD	$LN284@BuildCouns
	DD	$LN282@BuildCouns
	DD	$LN280@BuildCouns
	DD	$LN280@BuildCouns
	DD	$LN278@BuildCouns
	DD	$LN276@BuildCouns
$LN1534@BuildCouns:
	DD	$LN271@BuildCouns
	DD	$LN269@BuildCouns
	DD	$LN267@BuildCouns
	DD	$LN265@BuildCouns
	DD	$LN263@BuildCouns
	DD	$LN261@BuildCouns
	DD	$LN259@BuildCouns
$LN1535@BuildCouns:
	DD	$LN232@BuildCouns
	DD	$LN230@BuildCouns
	DD	$LN228@BuildCouns
	DD	$LN226@BuildCouns
	DD	$LN224@BuildCouns
$LN1536@BuildCouns:
	DD	$LN193@BuildCouns
	DD	$LN191@BuildCouns
	DD	$LN189@BuildCouns
	DD	$LN187@BuildCouns
	DD	$LN185@BuildCouns
$LN1537@BuildCouns:
	DD	$LN179@BuildCouns
	DD	$LN178@BuildCouns
	DD	$LN177@BuildCouns
	DD	$LN176@BuildCouns
	DD	$LN175@BuildCouns
$LN1538@BuildCouns:
	DD	$LN170@BuildCouns
	DD	$LN169@BuildCouns
	DD	$LN168@BuildCouns
	DD	$LN167@BuildCouns
	DD	$LN166@BuildCouns
$LN1539@BuildCouns:
	DD	$LN159@BuildCouns
	DD	$LN158@BuildCouns
	DD	$LN157@BuildCouns
	DD	$LN156@BuildCouns
	DD	$LN155@BuildCouns
$LN1540@BuildCouns:
	DD	$LN150@BuildCouns
	DD	$LN149@BuildCouns
	DD	$LN148@BuildCouns
	DD	$LN147@BuildCouns
	DD	$LN146@BuildCouns
$LN1541@BuildCouns:
	DD	$LN140@BuildCouns
	DD	$LN139@BuildCouns
	DD	$LN138@BuildCouns
	DD	$LN137@BuildCouns
	DD	$LN136@BuildCouns
$LN1542@BuildCouns:
	DD	$LN94@BuildCouns
	DD	$LN93@BuildCouns
	DD	$LN92@BuildCouns
	DD	$LN91@BuildCouns
$LN1543@BuildCouns:
	DD	$LN2@BuildCouns
	DD	$LN3@BuildCouns
	DD	$LN1@BuildCouns
	DD	$LN4@BuildCouns
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$0:
	lea	ecx, DWORD PTR _strLoc$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$1:
	lea	ecx, DWORD PTR $T226434[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$2:
	lea	ecx, DWORD PTR $T226435[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$3:
	lea	ecx, DWORD PTR $T226436[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$4:
	lea	ecx, DWORD PTR $T226437[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$5:
	lea	ecx, DWORD PTR $T226438[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$6:
	lea	ecx, DWORD PTR $T226439[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$7:
	lea	ecx, DWORD PTR $T226440[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$8:
	lea	ecx, DWORD PTR $T226442[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$9:
	lea	ecx, DWORD PTR $T226446[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$10:
	lea	ecx, DWORD PTR $T226450[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$11:
	lea	ecx, DWORD PTR $T226454[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$12:
	lea	ecx, DWORD PTR $T226457[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$13:
	lea	ecx, DWORD PTR $T226460[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$14:
	lea	ecx, DWORD PTR $T226465[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$15:
	lea	ecx, DWORD PTR $T226469[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$16:
	lea	ecx, DWORD PTR $T226474[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$17:
	lea	ecx, DWORD PTR $T226477[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$18:
	lea	ecx, DWORD PTR $T226480[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$19:
	lea	ecx, DWORD PTR $T226481[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$20:
	lea	ecx, DWORD PTR $T226482[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$21:
	lea	ecx, DWORD PTR $T226483[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$22:
	lea	ecx, DWORD PTR $T226484[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$23:
	lea	ecx, DWORD PTR $T226486[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$24:
	lea	ecx, DWORD PTR $T226488[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$25:
	lea	ecx, DWORD PTR $T226490[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$26:
	lea	ecx, DWORD PTR $T226492[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$27:
	lea	ecx, DWORD PTR $T226494[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$28:
	lea	ecx, DWORD PTR $T226496[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$29:
	lea	ecx, DWORD PTR $T226498[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$30:
	lea	ecx, DWORD PTR $T226500[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$31:
	lea	ecx, DWORD PTR $T226502[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$32:
	lea	ecx, DWORD PTR $T226504[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$33:
	lea	ecx, DWORD PTR $T226506[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$36:
	lea	ecx, DWORD PTR $T226512[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$35:
	lea	ecx, DWORD PTR $T226510[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$34:
	lea	ecx, DWORD PTR $T226508[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$39:
	lea	ecx, DWORD PTR $T226518[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$38:
	lea	ecx, DWORD PTR $T226516[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$37:
	lea	ecx, DWORD PTR $T226514[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$40:
	lea	ecx, DWORD PTR $T226520[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$41:
	lea	ecx, DWORD PTR $T226522[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$42:
	lea	ecx, DWORD PTR $T226524[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$43:
	lea	ecx, DWORD PTR $T226526[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$44:
	lea	ecx, DWORD PTR $T226528[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$47:
	lea	ecx, DWORD PTR $T226536[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$46:
	lea	ecx, DWORD PTR $T226533[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$45:
	lea	ecx, DWORD PTR $T226530[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$48:
	lea	ecx, DWORD PTR $T226539[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$49:
	lea	ecx, DWORD PTR $T226540[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$50:
	lea	ecx, DWORD PTR $T226541[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$51:
	lea	ecx, DWORD PTR $T226542[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$52:
	lea	ecx, DWORD PTR $T226543[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$53:
	lea	ecx, DWORD PTR $T226544[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$54:
	lea	ecx, DWORD PTR $T226545[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$55:
	lea	ecx, DWORD PTR $T226546[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$56:
	lea	ecx, DWORD PTR $T226547[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$57:
	lea	ecx, DWORD PTR $T226548[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$58:
	lea	ecx, DWORD PTR $T226549[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$59:
	lea	ecx, DWORD PTR $T226550[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$60:
	lea	ecx, DWORD PTR $T226551[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$61:
	lea	ecx, DWORD PTR $T226552[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$62:
	lea	ecx, DWORD PTR $T226553[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$63:
	lea	ecx, DWORD PTR $T226554[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$64:
	lea	ecx, DWORD PTR $T226555[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$65:
	lea	ecx, DWORD PTR $T226556[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$66:
	lea	ecx, DWORD PTR $T226557[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$67:
	lea	ecx, DWORD PTR $T226558[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$68:
	lea	ecx, DWORD PTR $T226559[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$69:
	lea	ecx, DWORD PTR $T226560[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$70:
	lea	ecx, DWORD PTR $T226561[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$71:
	lea	ecx, DWORD PTR $T226562[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$72:
	lea	ecx, DWORD PTR $T226563[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$73:
	lea	ecx, DWORD PTR $T226564[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$74:
	lea	ecx, DWORD PTR $T226565[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$75:
	lea	ecx, DWORD PTR $T226566[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$76:
	lea	ecx, DWORD PTR $T226567[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$77:
	lea	ecx, DWORD PTR $T226568[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$78:
	lea	ecx, DWORD PTR $T226569[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$80:
	lea	ecx, DWORD PTR $T226576[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$82:
	lea	ecx, DWORD PTR $T226581[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$84:
	lea	ecx, DWORD PTR _strBuildingClass$224551[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$85:
	lea	ecx, DWORD PTR $T226586[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$86:
	lea	ecx, DWORD PTR $T226590[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$87:
	lea	ecx, DWORD PTR $T226591[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$88:
	lea	ecx, DWORD PTR $T226594[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$89:
	lea	ecx, DWORD PTR $T226595[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$90:
	lea	ecx, DWORD PTR $T226598[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$91:
	lea	ecx, DWORD PTR $T226599[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$92:
	lea	ecx, DWORD PTR $T226600[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z$93:
	lea	ecx, DWORD PTR $T226601[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z ENDP ; CvAdvisorCounsel::BuildCounselList
END
