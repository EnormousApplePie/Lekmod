; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	s:\LEKMOD_DLL\CvGameCoreDLL_Expansion2\Lua\CvLuaCity.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG219983 DB	'IsNone', 00H
	ORG $+1
$SG219984 DB	'Kill', 00H
	ORG $+3
$SG219985 DB	'CreateGreatGeneral', 00H
	ORG $+1
$SG219986 DB	'CreateGreatAdmiral', 00H
	ORG $+1
$SG219987 DB	'DoTask', 00H
	ORG $+1
$SG219988 DB	'ChooseProduction', 00H
	ORG $+3
$SG219989 DB	'GetCityPlotIndex', 00H
	ORG $+3
$SG219990 DB	'GetCityIndexPlot', 00H
	ORG $+3
$SG219991 DB	'CanWork', 00H
$SG219992 DB	'IsPlotBlockaded', 00H
$SG219993 DB	'ClearWorkingOverride', 00H
	ORG $+3
$SG219994 DB	'CountNumImprovedPlots', 00H
	ORG $+2
$SG219995 DB	'CountNumWaterPlots', 00H
	ORG $+1
$SG219996 DB	'CountNumRiverPlots', 00H
	ORG $+1
$SG219997 DB	'FindPopulationRank', 00H
	ORG $+1
$SG219998 DB	'FindBaseYieldRateRank', 00H
	ORG $+2
$SG219999 DB	'FindYieldRateRank', 00H
	ORG $+2
$SG220000 DB	'AllUpgradesAvailable', 00H
	ORG $+3
$SG220001 DB	'IsWorldWondersMaxed', 00H
$SG220002 DB	'IsTeamWondersMaxed', 00H
	ORG $+1
$SG220003 DB	'IsNationalWondersMaxed', 00H
	ORG $+1
$SG220004 DB	'IsBuildingsMaxed', 00H
	ORG $+3
$SG220005 DB	'CanTrainTooltip', 00H
$SG220006 DB	'CanTrain', 00H
	ORG $+3
$SG220007 DB	'CanConstructTooltip', 00H
$SG220008 DB	'CanConstruct', 00H
	ORG $+3
$SG220009 DB	'CanCreate', 00H
	ORG $+2
$SG220010 DB	'CanPrepare', 00H
	ORG $+1
$SG220011 DB	'CanMaintain', 00H
$SG220012 DB	'GetPurchaseUnitTooltip', 00H
	ORG $+1
$SG220013 DB	'GetFaithPurchaseUnitTooltip', 00H
$SG220014 DB	'GetPurchaseBuildingTooltip', 00H
	ORG $+1
$SG220015 DB	'GetFaithPurchaseBuildingTooltip', 00H
$SG220016 DB	'CanJoin', 00H
$SG220017 DB	'IsBuildingLocalResourceValid', 00H
	ORG $+3
$SG220018 DB	'GetResourceDemanded', 00H
$SG220019 DB	'SetResourceDemanded', 00H
$SG220020 DB	'DoPickResourceDemanded', 00H
	ORG $+1
$SG220021 DB	'GetFoodTurnsLeft', 00H
	ORG $+3
$SG220022 DB	'IsProduction', 00H
	ORG $+3
$SG220023 DB	'IsProductionLimited', 00H
$SG220024 DB	'IsProductionUnit', 00H
	ORG $+3
$SG220025 DB	'IsProductionBuilding', 00H
	ORG $+3
$SG220026 DB	'IsProductionProject', 00H
$SG220027 DB	'IsProductionSpecialist', 00H
	ORG $+1
$SG220028 DB	'IsProductionProcess', 00H
$SG220029 DB	'CanContinueProduction', 00H
	ORG $+2
$SG220030 DB	'GetProductionExperience', 00H
$SG220031 DB	'AddProductionExperience', 00H
$SG220032 DB	'GetProductionUnit', 00H
	ORG $+2
$SG220033 DB	'GetProductionUnitAI', 00H
$SG220034 DB	'GetProductionBuilding', 00H
	ORG $+2
$SG220035 DB	'GetProductionProject', 00H
	ORG $+3
$SG220036 DB	'GetProductionSpecialist', 00H
$SG220037 DB	'GetProductionProcess', 00H
	ORG $+3
$SG220038 DB	'GetProductionNameKey', 00H
	ORG $+3
$SG220039 DB	'GetGeneralProductionTurnsLeft', 00H
	ORG $+2
$SG220040 DB	'IsFoodProduction', 00H
	ORG $+3
$SG220041 DB	'GetFirstUnitOrder', 00H
	ORG $+2
$SG220042 DB	'GetFirstProjectOrder', 00H
	ORG $+3
$SG220043 DB	'GetFirstSpecialistOrder', 00H
$SG220044 DB	'GetOrderFromQueue', 00H
	ORG $+2
$SG220045 DB	'GetNumTrainUnitAI', 00H
	ORG $+2
$SG220046 DB	'GetFirstBuildingOrder', 00H
	ORG $+2
$SG220047 DB	'IsUnitFoodProduction', 00H
	ORG $+3
$SG220048 DB	'GetProduction', 00H
	ORG $+2
$SG220049 DB	'GetProductionTimes100', 00H
	ORG $+2
$SG220050 DB	'GetProductionNeeded', 00H
$SG220051 DB	'GetUnitProductionNeeded', 00H
$SG220052 DB	'GetBuildingProductionNeeded', 00H
$SG220053 DB	'GetProjectProductionNeeded', 00H
	ORG $+1
$SG220054 DB	'GetProductionTurnsLeft', 00H
	ORG $+1
$SG220055 DB	'GetUnitProductionTurnsLeft', 00H
	ORG $+1
$SG220056 DB	'GetBuildingProductionTurnsLeft', 00H
	ORG $+1
$SG220057 DB	'GetProjectProductionTurnsLeft', 00H
	ORG $+2
$SG220058 DB	'GetSpecialistProductionTurnsLeft', 00H
	ORG $+3
$SG220059 DB	'CreateApolloProgram', 00H
$SG220060 DB	'IsCanPurchase', 00H
	ORG $+2
$SG220061 DB	'GetUnitPurchaseCost', 00H
$SG220062 DB	'GetUnitFaithPurchaseCost', 00H
	ORG $+3
$SG220063 DB	'GetBuildingPurchaseCost', 00H
$SG220064 DB	'GetBuildingFaithPurchaseCost', 00H
	ORG $+3
$SG220065 DB	'GetProjectPurchaseCost', 00H
	ORG $+1
$SG220066 DB	'SetProduction', 00H
	ORG $+2
$SG220067 DB	'ChangeProduction', 00H
	ORG $+3
$SG220068 DB	'GetYieldModifierTooltip', 00H
$SG220069 DB	'GetProductionModifier', 00H
	ORG $+2
$SG220070 DB	'GetCurrentProductionDifference', 00H
	ORG $+1
$SG220071 DB	'GetRawProductionDifference', 00H
	ORG $+1
$SG220072 DB	'GetCurrentProductionDifferenceTimes100', 00H
	ORG $+1
$SG220073 DB	'GetRawProductionDifferenceTimes100', 00H
	ORG $+1
$SG220074 DB	'GetUnitProductionModifier', 00H
	ORG $+2
$SG220075 DB	'GetBuildingProductionModifier', 00H
	ORG $+2
$SG220076 DB	'GetProjectProductionModifier', 00H
	ORG $+3
$SG220077 DB	'GetSpecialistProductionModifier', 00H
$SG220078 DB	'GetExtraProductionDifference', 00H
	ORG $+3
$SG220079 DB	'CanHurry', 00H
	ORG $+3
$SG220080 DB	'Hurry', 00H
	ORG $+2
$SG220081 DB	'GetConscriptUnit', 00H
	ORG $+3
$SG220082 DB	'GetConscriptPopulation', 00H
	ORG $+1
$SG220083 DB	'ConscriptMinCityPopulation', 00H
	ORG $+1
$SG220084 DB	'CanConscript', 00H
	ORG $+3
$SG220085 DB	'Conscript', 00H
	ORG $+2
$SG220086 DB	'GetResourceYieldRateModifier', 00H
	ORG $+3
$SG220087 DB	'GetHandicapType', 00H
$SG220088 DB	'GetCivilizationType', 00H
$SG220089 DB	'GetPersonalityType', 00H
	ORG $+1
$SG220090 DB	'GetArtStyleType', 00H
$SG220091 DB	'GetCitySizeType', 00H
$SG220092 DB	'IsBarbarian', 00H
$SG220093 DB	'IsHuman', 00H
$SG220094 DB	'IsVisible', 00H
	ORG $+2
$SG220095 DB	'IsCapital', 00H
	ORG $+2
$SG220096 DB	'IsOriginalCapital', 00H
	ORG $+2
$SG220097 DB	'IsOriginalMajorCapital', 00H
	ORG $+1
$SG220098 DB	'IsCoastal', 00H
	ORG $+2
$SG220099 DB	'FoodConsumption', 00H
$SG220100 DB	'FoodDifference', 00H
	ORG $+1
$SG220101 DB	'FoodDifferenceTimes100', 00H
	ORG $+1
$SG220102 DB	'GrowthThreshold', 00H
$SG220103 DB	'ProductionLeft', 00H
	ORG $+1
$SG220104 DB	'HurryCost', 00H
	ORG $+2
$SG220105 DB	'HurryGold', 00H
	ORG $+2
$SG220106 DB	'HurryPopulation', 00H
$SG220107 DB	'HurryProduction', 00H
$SG220108 DB	'MaxHurryPopulation', 00H
	ORG $+1
$SG220109 DB	'GetNumBuilding', 00H
	ORG $+1
$SG220110 DB	'IsHasBuilding', 00H
	ORG $+2
$SG220111 DB	'GetNumActiveBuilding', 00H
	ORG $+3
$SG220112 DB	'GetID', 00H
	ORG $+2
$SG220113 DB	'GetX', 00H
	ORG $+3
$SG220114 DB	'GetY', 00H
	ORG $+3
$SG220115 DB	'At', 00H
	ORG $+1
$SG220116 DB	'AtPlot', 00H
	ORG $+1
$SG220117 DB	'Plot', 00H
	ORG $+3
$SG220118 DB	'Area', 00H
	ORG $+3
$SG220119 DB	'WaterArea', 00H
	ORG $+2
$SG220120 DB	'GetRallyPlot', 00H
	ORG $+3
$SG220121 DB	'CanBuyPlot', 00H
	ORG $+1
$SG220122 DB	'CanBuyPlotAt', 00H
	ORG $+3
$SG220123 DB	'GetNextBuyablePlot', 00H
	ORG $+1
$SG220124 DB	'GetBuyablePlotList', 00H
	ORG $+1
$SG220125 DB	'GetBuyPlotCost', 00H
	ORG $+1
$SG220126 DB	'CanBuyAnyPlot', 00H
	ORG $+2
$SG220127 DB	'GetGarrisonedUnit', 00H
	ORG $+2
$SG220128 DB	'GetGameTurnFounded', 00H
	ORG $+1
$SG220129 DB	'GetGameTurnAcquired', 00H
$SG220130 DB	'GetGameTurnLastExpanded', 00H
$SG220131 DB	'GetPopulation', 00H
	ORG $+2
$SG220132 DB	'SetPopulation', 00H
	ORG $+2
$SG220133 DB	'ChangePopulation', 00H
	ORG $+3
$SG220134 DB	'GetRealPopulation', 00H
	ORG $+2
$SG220135 DB	'GetHighestPopulation', 00H
	ORG $+3
$SG220136 DB	'SetHighestPopulation', 00H
	ORG $+3
$SG220137 DB	'GetNumGreatPeople', 00H
	ORG $+2
$SG220138 DB	'GetBaseGreatPeopleRate', 00H
	ORG $+1
$SG220139 DB	'GetGreatPeopleRate', 00H
	ORG $+1
$SG220140 DB	'GetTotalGreatPeopleRateModifier', 00H
$SG220141 DB	'ChangeBaseGreatPeopleRate', 00H
	ORG $+2
$SG220142 DB	'GetGreatPeopleRateModifier', 00H
	ORG $+1
$SG220143 DB	'GetJONSCultureStored', 00H
	ORG $+3
$SG220144 DB	'SetJONSCultureStored', 00H
	ORG $+3
$SG220145 DB	'ChangeJONSCultureStored', 00H
$SG220146 DB	'GetJONSCultureStoredTimes100', 00H
	ORG $+3
$SG220147 DB	'SetJONSCultureStoredTimes100', 00H
	ORG $+3
$SG220148 DB	'ChangeJONSCultureStoredTimes100', 00H
$SG220149 DB	'GetJONSCulturePerTurnTimes100', 00H
	ORG $+2
$SG220150 DB	'GetJONSCultureLevel', 00H
$SG220151 DB	'SetJONSCultureLevel', 00H
$SG220152 DB	'ChangeJONSCultureLevel', 00H
	ORG $+1
$SG220153 DB	'DoJONSCultureLevelIncrease', 00H
	ORG $+1
$SG220154 DB	'GetJONSCultureThreshold', 00H
$SG220155 DB	'GetJONSCulturePerTurn', 00H
	ORG $+2
$SG220156 DB	'GetBaseJONSCulturePerTurn', 00H
	ORG $+2
$SG220157 DB	'GetJONSCulturePerTurnFromBuildings', 00H
	ORG $+1
$SG220158 DB	'ChangeJONSCulturePerTurnFromBuildings', 00H
	ORG $+2
$SG220159 DB	'GetJONSCulturePerTurnFromPolicies', 00H
	ORG $+2
$SG220160 DB	'ChangeJONSCulturePerTurnFromPolicies', 00H
	ORG $+3
$SG220161 DB	'GetJONSCulturePerTurnFromSpecialists', 00H
	ORG $+3
$SG220162 DB	'ChangeJONSCulturePerTurnFromSpecialists', 00H
$SG220163 DB	'GetJONSCulturePerTurnFromGreatWorks', 00H
$SG220164 DB	'GetJONSCulturePerTurnFromTraits', 00H
$SG220165 DB	'GetJONSCulturePerTurnFromReligion', 00H
	ORG $+2
$SG220166 DB	'GetJONSCulturePerTurnFromLeagues', 00H
	ORG $+3
$SG220167 DB	'GetCultureRateModifier', 00H
	ORG $+1
$SG220168 DB	'ChangeCultureRateModifier', 00H
	ORG $+2
$SG220169 DB	'GetNumGreatWorks', 00H
	ORG $+3
$SG220170 DB	'GetNumGreatWorkSlots', 00H
	ORG $+3
$SG220171 DB	'GetBaseTourism', 00H
	ORG $+1
$SG220172 DB	'GetTourismMultiplier', 00H
	ORG $+3
$SG220173 DB	'GetTourismTooltip', 00H
	ORG $+2
$SG220174 DB	'GetFilledSlotsTooltip', 00H
	ORG $+2
$SG220175 DB	'GetTotalSlotsTooltip', 00H
	ORG $+3
$SG220176 DB	'ClearGreatWorks', 00H
$SG220177 DB	'GetFaithBuildingTourism', 00H
$SG220178 DB	'IsThemingBonusPossible', 00H
	ORG $+1
$SG220179 DB	'GetThemingBonus', 00H
$SG220180 DB	'GetThemingTooltip', 00H
	ORG $+2
$SG220181 DB	'GetFaithPerTurn', 00H
$SG220182 DB	'GetFaithPerTurnFromBuildings', 00H
	ORG $+3
$SG220183 DB	'GetFaithPerTurnFromPolicies', 00H
$SG220184 DB	'GetFaithPerTurnFromTraits', 00H
	ORG $+2
$SG220185 DB	'GetFaithPerTurnFromReligion', 00H
$SG220186 DB	'IsReligionInCity', 00H
	ORG $+3
$SG220187 DB	'IsHolyCityForReligion', 00H
	ORG $+2
$SG220188 DB	'IsHolyCityAnyReligion', 00H
	ORG $+2
$SG220189 DB	'GetNumFollowers', 00H
$SG220190 DB	'GetReligiousMajority', 00H
	ORG $+3
$SG220191 DB	'GetSecondaryReligion', 00H
	ORG $+3
$SG220192 DB	'GetSecondaryReligionPantheonBelief', 00H
	ORG $+1
$SG220193 DB	'GetPressurePerTurn', 00H
	ORG $+1
$SG220194 DB	'ConvertPercentFollowers', 00H
$SG220195 DB	'AdoptReligionFully', 00H
	ORG $+1
$SG220196 DB	'GetReligionBuildingClassHappiness', 00H
	ORG $+2
$SG220197 DB	'GetReligionBuildingClassYieldChange', 00H
$SG220198 DB	'GetLeagueBuildingClassYieldChange', 00H
	ORG $+2
$SG220199 DB	'GetNumTradeRoutesAddingPressure', 00H
$SG220200 DB	'GetNumWorldWonders', 00H
	ORG $+1
$SG220201 DB	'GetNumTeamWonders', 00H
	ORG $+2
$SG220202 DB	'GetNumNationalWonders', 00H
	ORG $+2
$SG220203 DB	'GetNumBuildings', 00H
$SG220204 DB	'GetWonderProductionModifier', 00H
$SG220205 DB	'ChangeWonderProductionModifier', 00H
	ORG $+1
$SG220206 DB	'GetLocalResourceWonderProductionMod', 00H
$SG220207 DB	'ChangeHealRate', 00H
	ORG $+1
$SG220208 DB	'IsNoOccupiedUnhappiness', 00H
$SG220209 DB	'GetFood', 00H
$SG220210 DB	'GetFoodTimes100', 00H
$SG220211 DB	'SetFood', 00H
$SG220212 DB	'ChangeFood', 00H
	ORG $+1
$SG220213 DB	'GetFoodKept', 00H
$SG220214 DB	'GetMaxFoodKeptPercent', 00H
	ORG $+2
$SG220215 DB	'GetOverflowProduction', 00H
	ORG $+2
$SG220216 DB	'SetOverflowProduction', 00H
	ORG $+2
$SG220217 DB	'GetFeatureProduction', 00H
	ORG $+3
$SG220218 DB	'SetFeatureProduction', 00H
	ORG $+3
$SG220219 DB	'GetMilitaryProductionModifier', 00H
	ORG $+2
$SG220220 DB	'GetSpaceProductionModifier', 00H
	ORG $+1
$SG220221 DB	'GetBuildingDefense', 00H
	ORG $+1
$SG220222 DB	'GetFreeExperience', 00H
	ORG $+2
$SG220223 DB	'GetNukeModifier', 00H
$SG220224 DB	'IsResistance', 00H
	ORG $+3
$SG220225 DB	'GetResistanceTurns', 00H
	ORG $+1
$SG220226 DB	'ChangeResistanceTurns', 00H
	ORG $+2
$SG220227 DB	'IsRazing', 00H
	ORG $+3
$SG220228 DB	'GetRazingTurns', 00H
	ORG $+1
$SG220229 DB	'ChangeRazingTurns', 00H
	ORG $+2
$SG220230 DB	'IsOccupied', 00H
	ORG $+1
$SG220231 DB	'SetOccupied', 00H
$SG220232 DB	'IsPuppet', 00H
	ORG $+3
$SG220233 DB	'SetPuppet', 00H
	ORG $+2
$SG220234 DB	'GetHappinessFromBuildings', 00H
	ORG $+2
$SG220235 DB	'GetHappiness', 00H
	ORG $+3
$SG220236 DB	'GetLocalHappiness', 00H
	ORG $+2
$SG220237 DB	'IsNeverLost', 00H
$SG220238 DB	'SetNeverLost', 00H
	ORG $+3
$SG220239 DB	'IsDrafted', 00H
	ORG $+2
$SG220240 DB	'SetDrafted', 00H
	ORG $+1
$SG220241 DB	'IsBlockaded', 00H
$SG220242 DB	'GetWeLoveTheKingDayCounter', 00H
	ORG $+1
$SG220243 DB	'SetWeLoveTheKingDayCounter', 00H
	ORG $+1
$SG220244 DB	'ChangeWeLoveTheKingDayCounter', 00H
	ORG $+2
$SG220245 DB	'GetNumThingsProduced', 00H
	ORG $+3
$SG220246 DB	'IsProductionAutomated', 00H
	ORG $+2
$SG220247 DB	'SetProductionAutomated', 00H
	ORG $+1
$SG220248 DB	'SetCitySizeBoost', 00H
	ORG $+3
$SG220249 DB	'GetOwner', 00H
	ORG $+3
$SG220250 DB	'GetTeam', 00H
$SG220251 DB	'GetPreviousOwner', 00H
	ORG $+3
$SG220252 DB	'GetOriginalOwner', 00H
	ORG $+3
$SG220253 DB	'GetSeaPlotYield', 00H
$SG220254 DB	'GetRiverPlotYield', 00H
	ORG $+2
$SG220255 DB	'GetLakePlotYield', 00H
	ORG $+3
$SG220256 DB	'GetBaseYieldRate', 00H
	ORG $+3
$SG220257 DB	'GetBaseYieldRateFromGreatWorks', 00H
	ORG $+1
$SG220258 DB	'GetBaseYieldRateFromTerrain', 00H
$SG220259 DB	'ChangeBaseYieldRateFromTerrain', 00H
	ORG $+1
$SG220260 DB	'GetBaseYieldRateFromBuildings', 00H
	ORG $+2
$SG220261 DB	'ChangeBaseYieldRateFromBuildings', 00H
	ORG $+3
$SG220262 DB	'GetBaseYieldRateFromSpecialists', 00H
$SG220263 DB	'ChangeBaseYieldRateFromSpecialists', 00H
	ORG $+1
$SG220264 DB	'GetBaseYieldRateFromMisc', 00H
	ORG $+3
$SG220265 DB	'ChangeBaseYieldRateFromMisc', 00H
$SG220266 DB	'GetBaseYieldRateFromReligion', 00H
	ORG $+3
$SG220267 DB	'ChangeBaseYieldRateFromReligion', 00H
$SG220268 DB	'GetYieldPerPopTimes100', 00H
	ORG $+1
$SG220269 DB	'GetBaseYieldRateModifier', 00H
	ORG $+3
$SG220270 DB	'GetYieldRate', 00H
	ORG $+3
$SG220271 DB	'GetYieldRateTimes100', 00H
	ORG $+3
$SG220272 DB	'GetYieldRateModifier', 00H
	ORG $+3
$SG220273 DB	'GetExtraSpecialistYield', 00H
$SG220274 DB	'GetExtraSpecialistYieldOfType', 00H
	ORG $+2
$SG220275 DB	'GetDomainFreeExperience', 00H
$SG220276 DB	'GetDomainProductionModifier', 00H
$SG220277 DB	'IsEverOwned', 00H
$SG220278 DB	'IsRevealed', 00H
	ORG $+1
$SG220279 DB	'SetRevealed', 00H
$SG220280 DB	'GetNameKey', 00H
	ORG $+1
$SG220281 DB	'GetName', 00H
$SG220282 DB	'SetName', 00H
$SG220283 DB	'IsHasResourceLocal', 00H
	ORG $+1
$SG220284 DB	'GetBuildingProduction', 00H
	ORG $+2
$SG220285 DB	'SetBuildingProduction', 00H
	ORG $+2
$SG220286 DB	'ChangeBuildingProduction', 00H
	ORG $+3
$SG220287 DB	'GetBuildingProductionTime', 00H
	ORG $+2
$SG220288 DB	'SetBuildingProductionTime', 00H
	ORG $+2
$SG220289 DB	'ChangeBuildingProductionTime', 00H
	ORG $+3
$SG220290 DB	'GetBuildingOriginalOwner', 00H
	ORG $+3
$SG220291 DB	'GetBuildingOriginalTime', 00H
$SG220292 DB	'GetUnitProduction', 00H
	ORG $+2
$SG220293 DB	'SetUnitProduction', 00H
	ORG $+2
$SG220294 DB	'ChangeUnitProduction', 00H
	ORG $+3
$SG220295 DB	'IsCanAddSpecialistToBuilding', 00H
	ORG $+3
$SG220296 DB	'GetSpecialistUpgradeThreshold', 00H
	ORG $+2
$SG220297 DB	'GetNumSpecialistsAllowedByBuilding', 00H
	ORG $+1
$SG220298 DB	'GetSpecialistCount', 00H
	ORG $+1
$SG220299 DB	'GetSpecialistGreatPersonProgress', 00H
	ORG $+3
$SG220300 DB	'GetSpecialistGreatPersonProgressTimes100', 00H
	ORG $+3
$SG220301 DB	'ChangeSpecialistGreatPersonProgressTimes100', 00H
$SG220302 DB	'GetNumSpecialistsInBuilding', 00H
$SG220303 DB	'DoReallocateCitizens', 00H
	ORG $+3
$SG220304 DB	'DoVerifyWorkingPlots', 00H
	ORG $+3
$SG220305 DB	'IsNoAutoAssignSpecialists', 00H
	ORG $+2
$SG220306 DB	'GetFocusType', 00H
	ORG $+3
$SG220307 DB	'SetFocusType', 00H
	ORG $+3
$SG220308 DB	'IsForcedAvoidGrowth', 00H
$SG220309 DB	'GetUnitCombatFreeExperience', 00H
$SG220310 DB	'GetFreePromotionCount', 00H
	ORG $+2
$SG220311 DB	'IsFreePromotion', 00H
$SG220312 DB	'GetSpecialistFreeExperience', 00H
$SG220313 DB	'UpdateStrengthValue', 00H
$SG220314 DB	'GetStrengthValue', 00H
	ORG $+3
$SG220315 DB	'GetDamage', 00H
	ORG $+2
$SG220316 DB	'SetDamage', 00H
	ORG $+2
$SG220317 DB	'ChangeDamage', 00H
	ORG $+3
$SG220318 DB	'GetMaxHitPoints', 00H
$SG220319 DB	'CanRangeStrike', 00H
	ORG $+1
$SG220320 DB	'CanRangeStrikeNow', 00H
	ORG $+2
$SG220321 DB	'CanRangeStrikeAt', 00H
	ORG $+3
$SG220322 DB	'HasPerformedRangedStrikeThisTurn', 00H
	ORG $+3
$SG220323 DB	'RangeCombatUnitDefense', 00H
	ORG $+1
$SG220324 DB	'RangeCombatDamage', 00H
	ORG $+2
$SG220325 DB	'GetAirStrikeDefenseDamage', 00H
	ORG $+2
$SG220326 DB	'IsWorkingPlot', 00H
	ORG $+2
$SG220327 DB	'AlterWorkingPlot', 00H
	ORG $+3
$SG220328 DB	'IsForcedWorkingPlot', 00H
$SG220329 DB	'GetNumRealBuilding', 00H
	ORG $+1
$SG220330 DB	'SetNumRealBuilding', 00H
	ORG $+1
$SG220331 DB	'GetNumFreeBuilding', 00H
	ORG $+1
$SG220332 DB	'IsBuildingSellable', 00H
	ORG $+1
$SG220333 DB	'GetSellBuildingRefund', 00H
	ORG $+2
$SG220334 DB	'GetTotalBaseBuildingMaintenance', 00H
$SG220335 DB	'GetBuildingGreatWork', 00H
	ORG $+3
$SG220336 DB	'SetBuildingGreatWork', 00H
	ORG $+3
$SG220337 DB	'IsHoldingGreatWork', 00H
	ORG $+1
$SG220338 DB	'GetNumGreatWorksInBuilding', 00H
	ORG $+1
$SG220339 DB	'ClearOrderQueue', 00H
$SG220340 DB	'PushOrder', 00H
	ORG $+2
$SG220341 DB	'PopOrder', 00H
	ORG $+3
$SG220342 DB	'GetOrderQueueLength', 00H
$SG220343 DB	'GetBuildingYieldChange', 00H
	ORG $+1
$SG220344 DB	'SetBuildingYieldChange', 00H
	ORG $+1
$SG220345 DB	'GetBuildingEspionageModifier', 00H
	ORG $+3
$SG220346 DB	'GetBuildingGlobalEspionageModifier', 00H
	ORG $+1
$SG220347 DB	'GetNumCityPlots', 00H
$SG220348 DB	'CanPlaceUnitHere', 00H
	ORG $+3
$SG220349 DB	'GetSpecialistYield', 00H
	ORG $+1
$SG220350 DB	'GetCultureFromSpecialist', 00H
	ORG $+3
$SG220351 DB	'GetNumForcedWorkingPlots', 00H
	ORG $+3
$SG220352 DB	'GetReligionCityRangeStrikeModifier', 00H
	ORG $+1
$SG220358 DB	'City', 00H
	ORG $+3
$SG220672 DB	'TXT_KEY_CANNOT_PURCHASE_UNIT_HERE', 00H
	ORG $+2
$SG220676 DB	'[NEWLINE]', 00H
	ORG $+2
$SG220680 DB	'TXT_KEY_CANNOT_PURCHASE_NO_GOLD', 00H
$SG220684 DB	'[NEWLINE]', 00H
	ORG $+2
$SG220696 DB	'TXT_KEY_CANNOT_PURCHASE_UNIT_HERE', 00H
	ORG $+2
$SG220700 DB	'[NEWLINE]', 00H
	ORG $+2
$SG220704 DB	'TXT_KEY_CANNOT_PURCHASE_NO_FAITH', 00H
	ORG $+3
$SG220708 DB	'[NEWLINE]', 00H
	ORG $+2
$SG220720 DB	'TXT_KEY_CANNOT_PURCHASE_NO_GOLD', 00H
$SG220724 DB	'[NEWLINE]', 00H
	ORG $+2
$SG220736 DB	'TXT_KEY_CANNOT_PURCHASE_NO_FAITH', 00H
	ORG $+3
$SG220740 DB	'[NEWLINE]', 00H
	ORG $+2
$SG223766 DB	'__instances', 00H
$SG223767 DB	'__mode', 00H
	ORG $+1
$SG223768 DB	'v', 00H
	ORG $+2
$SG223770 DB	'__instances', 00H
$SG223773 DB	'__instance', 00H
	ORG $+1
$SG223774 DB	'__index', 00H
$SG223798 DB	'__instance', 00H
	ORG $+5
$SG223804 DB	'Not a valid instance.  Either the instance is NULL or yo'
	DB	'u used ''.'' instead of '':''.', 00H
	ORG $+1
$SG223812 DB	'Instance does not exist.', 00H
	ORG $+3
$SG223823 DB	'__instances', 00H
$SG223824 DB	'__mode', 00H
	ORG $+1
$SG223825 DB	'v', 00H
	ORG $+2
$SG223827 DB	'__instances', 00H
$SG223830 DB	'__instance', 00H
	ORG $+1
$SG223831 DB	'__index', 00H
$SG223846 DB	'__instance', 00H
	ORG $+5
$SG223852 DB	'Not a valid instance.  Either the instance is NULL or yo'
	DB	'u used ''.'' instead of '':''.', 00H
	ORG $+1
$SG223863 DB	'__instances', 00H
$SG223864 DB	'__mode', 00H
	ORG $+1
$SG223865 DB	'v', 00H
	ORG $+2
$SG223867 DB	'__instances', 00H
$SG223870 DB	'__instance', 00H
	ORG $+1
$SG223871 DB	'__index', 00H
$SG223886 DB	'__instance', 00H
	ORG $+1
$SG223892 DB	'Not a valid instance.  Either the instance is NULL or yo'
	DB	'u used ''.'' instead of '':''.', 00H
CONST	ENDS
EXTRN	_lua_tointeger:PROC
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
;	COMDAT ??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z PROC	; CvLuaArgs::toValue<int>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 19   : 		return lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 20   : 	}

	ret	0
??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ENDP	; CvLuaArgs::toValue<int>
_TEXT	ENDS
EXTRN	_lua_toboolean:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z PROC	; CvLuaArgs::toValue<bool>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 24   : 		return lua_toboolean(L, idx) != 0;

	push	eax
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	neg	eax
	sbb	eax, eax
	neg	eax

; 25   : 	}

	ret	0
??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ENDP	; CvLuaArgs::toValue<bool>
_TEXT	ENDS
EXTRN	_lua_pushinteger:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z
_TEXT	SEGMENT
??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z PROC	; CvLuaArgs::pushValue<int>, COMDAT
; _L$ = ecx
; _t$ = eax

; 39   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 40   : 	}

	ret	0
??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ENDP	; CvLuaArgs::pushValue<int>
_TEXT	ENDS
EXTRN	_lua_pushboolean:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z
_TEXT	SEGMENT
??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z PROC	; CvLuaArgs::pushValue<bool>, COMDAT
; _L$ = ecx
; _t$ = eax

; 45   : 		lua_pushboolean(L, t);

	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 46   : 	}

	ret	0
??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ENDP	; CvLuaArgs::pushValue<bool>
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File s:\msvs2008\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 371  : 		{	// construct from message string

	push	esi
	lea	eax, DWORD PTR __Message$[esp]
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 372  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 380  : 		{	// destroy the object

	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 381  : 		}

	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtpy
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
PUBLIC	??_R4logic_error@std@@6B@			; std::logic_error::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	??_R3logic_error@std@@8				; std::logic_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2logic_error@std@@8				; std::logic_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@logic_error@std@@8		; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??0exception@std@@QAE@XZ:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@logic_error@std@@8
; File s:\msvs2008\vc\include\stdexcept
rdata$r	SEGMENT
??_R1A@?0A@EA@logic_error@std@@8 DD FLAT:??_R0?AVlogic_error@std@@@8 ; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT
??_R2logic_error@std@@8 DD FLAT:??_R1A@?0A@EA@logic_error@std@@8 ; std::logic_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT
??_R3logic_error@std@@8 DD 00H				; std::logic_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT
??_R4logic_error@std@@6B@ DD 00H			; std::logic_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_R4logic_error@std@@6B@ ; std::logic_error::`vftable'
	DD	FLAT:??_Elogic_error@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 26   : 		{	// construct from message string

	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+20], esi
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	eax, DWORD PTR __Message$[esp+16]
	push	eax
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR __$EHRec$[esp+32], 0
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z

; 27   : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
??1logic_error@std@@UAE@XZ PROC				; std::logic_error::~logic_error, COMDAT
; _this$ = ecx

; 30   : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 31   : 		}

	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	pop	esi
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
_TEXT	ENDS
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@logic_error@std@@UBEPBDXZ PROC			; std::logic_error::what, COMDAT
; _this$ = ecx

; 35   : 		return (_Str.c_str());

	add	ecx, 12					; 0000000cH
	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar@2
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@2:
	mov	eax, esi
	pop	esi
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
PUBLIC	??_R4length_error@std@@6B@			; std::length_error::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	??_R3length_error@std@@8			; std::length_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2length_error@std@@8			; std::length_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@length_error@std@@8		; std::length_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:PROC		; std::length_error::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@length_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@length_error@std@@8 DD FLAT:??_R0?AVlength_error@std@@@8 ; std::length_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2length_error@std@@8
rdata$r	SEGMENT
??_R2length_error@std@@8 DD FLAT:??_R1A@?0A@EA@length_error@std@@8 ; std::length_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3length_error@std@@8
rdata$r	SEGMENT
??_R3length_error@std@@8 DD 00H				; std::length_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4length_error@std@@6B@
rdata$r	SEGMENT
??_R4length_error@std@@6B@ DD 00H			; std::length_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	FLAT:??_R3length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_R4length_error@std@@6B@ ; std::length_error::`vftable'
	DD	FLAT:??_Elength_error@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::length_error::length_error, COMDAT
; _this$ = ecx

; 105  : 		{	// construct from message string

	mov	eax, DWORD PTR __Message$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	mov	DWORD PTR [esi], OFFSET ??_7length_error@std@@6B@

; 106  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::length_error::length_error
_TEXT	ENDS
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
; Function compile flags: /Ogtpy
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
??1length_error@std@@UAE@XZ PROC			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 109  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 110  : 		}

	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	pop	esi
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC			; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN8@scalar@3
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@3:
	mov	eax, esi
	pop	esi
	ret	4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?GetTypeName@CvLuaCity@@SAPBDXZ			; CvLuaCity::GetTypeName
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
;	COMDAT ?GetTypeName@CvLuaCity@@SAPBDXZ
_TEXT	SEGMENT
?GetTypeName@CvLuaCity@@SAPBDXZ PROC			; CvLuaCity::GetTypeName, COMDAT

; 492  : 	return "City";

	mov	eax, OFFSET $SG220358

; 493  : }

	ret	0
?GetTypeName@CvLuaCity@@SAPBDXZ ENDP			; CvLuaCity::GetTypeName
_TEXT	ENDS
PUBLIC	?lGetBuildingEspionageModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingEspionageModifier
EXTRN	?GetEspionageModifier@CvBuildingEntry@@QBEHXZ:PROC ; CvBuildingEntry::GetEspionageModifier
EXTRN	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z:PROC ; CvGlobals::getBuildingInfo
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingEspionageModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingEspionageModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingEspionageModifier, COMDAT

; 3956 : {

	push	esi

; 3957 : 	//CvCity* pkCity = GetInstance(L);
; 3958 : 	const BuildingTypes eBuilding = (BuildingTypes) lua_tointeger(L, 2);

	mov	esi, DWORD PTR _L$[esp]
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 3959 : 	CvBuildingEntry* pBuildingInfo = GC.getBuildingInfo(eBuilding);

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo

; 3960 : 	CvAssertMsg(pBuildingInfo, "pBuildingInfo is null!");
; 3961 : 	if (pBuildingInfo)

	test	eax, eax
	je	SHORT $LN2@lGetBuildi

; 3962 : 	{
; 3963 : 		lua_pushinteger(L, pBuildingInfo->GetEspionageModifier());

	mov	ecx, eax
	call	?GetEspionageModifier@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetEspionageModifier
	push	eax

; 3964 : 	}
; 3965 : 	else
; 3966 : 	{
; 3967 : 		lua_pushinteger(L, 0);

	push	esi
	call	_lua_pushinteger
	add	esp, 8

; 3968 : 	}
; 3969 : 	return 1;

	mov	eax, 1
	pop	esi

; 3970 : }

	ret	0
$LN2@lGetBuildi:

; 3964 : 	}
; 3965 : 	else
; 3966 : 	{
; 3967 : 		lua_pushinteger(L, 0);

	push	0
	push	esi
	call	_lua_pushinteger
	add	esp, 8

; 3968 : 	}
; 3969 : 	return 1;

	mov	eax, 1
	pop	esi

; 3970 : }

	ret	0
?lGetBuildingEspionageModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingEspionageModifier
_TEXT	ENDS
PUBLIC	?lGetBuildingGlobalEspionageModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingGlobalEspionageModifier
EXTRN	?GetGlobalEspionageModifier@CvBuildingEntry@@QBEHXZ:PROC ; CvBuildingEntry::GetGlobalEspionageModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingGlobalEspionageModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingGlobalEspionageModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingGlobalEspionageModifier, COMDAT

; 3974 : {

	push	esi

; 3975 : 	const BuildingTypes eBuilding = (BuildingTypes)lua_tointeger(L, 2);

	mov	esi, DWORD PTR _L$[esp]
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 3976 : 	CvBuildingEntry* pBuildingInfo = GC.getBuildingInfo(eBuilding);

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo

; 3977 : 	CvAssertMsg(pBuildingInfo, "pBuildingInfo is null!");
; 3978 : 	if (pBuildingInfo)

	test	eax, eax
	je	SHORT $LN2@lGetBuildi@2

; 3979 : 	{
; 3980 : 		lua_pushinteger(L, pBuildingInfo->GetGlobalEspionageModifier());

	mov	ecx, eax
	call	?GetGlobalEspionageModifier@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetGlobalEspionageModifier
	push	eax

; 3981 : 	}
; 3982 : 	else
; 3983 : 	{
; 3984 : 		lua_pushinteger(L, 0);

	push	esi
	call	_lua_pushinteger
	add	esp, 8

; 3985 : 	}
; 3986 : 	return 1;

	mov	eax, 1
	pop	esi

; 3987 : }

	ret	0
$LN2@lGetBuildi@2:

; 3981 : 	}
; 3982 : 	else
; 3983 : 	{
; 3984 : 		lua_pushinteger(L, 0);

	push	0
	push	esi
	call	_lua_pushinteger
	add	esp, 8

; 3985 : 	}
; 3986 : 	return 1;

	mov	eax, 1
	pop	esi

; 3987 : }

	ret	0
?lGetBuildingGlobalEspionageModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingGlobalEspionageModifier
_TEXT	ENDS
PUBLIC	?lGetNumCityPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumCityPlots
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumCityPlots@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumCityPlots@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetNumCityPlots, COMDAT

; 4006 : 	lua_pushinteger(L, NUM_CITY_PLOTS);

	mov	eax, DWORD PTR _L$[esp-4]
	push	37					; 00000025H
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 4007 : 	return 1;

	mov	eax, 1

; 4008 : }

	ret	0
?lGetNumCityPlots@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetNumCityPlots
_TEXT	ENDS
PUBLIC	??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z ; std::vector<int,std::allocator<int> >::operator[]
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z PROC	; std::vector<int,std::allocator<int> >::operator[], COMDAT
; _this$ = ecx

; 775  : 
; 776  :  #if _HAS_ITERATOR_DEBUGGING
; 777  : 		if (size() <= _Pos)
; 778  : 			{
; 779  : 			_DEBUG_ERROR("vector subscript out of range");
; 780  : 			_SCL_SECURE_OUT_OF_RANGE;
; 781  : 			}
; 782  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 783  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 784  : 
; 785  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Pos$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*4]

; 786  : 		}

	ret	4
??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z ENDP	; std::vector<int,std::allocator<int> >::operator[]
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaArea@@VCvArea@@@@SAXPAUlua_State@@PAVCvArea@@@Z ; CvLuaScopedInstance<CvLuaArea,CvArea>::Push
EXTRN	_lua_pushnil:PROC
EXTRN	_lua_remove:PROC
EXTRN	_lua_pushlightuserdata:PROC
EXTRN	_lua_rawget:PROC
EXTRN	?PushMethods@CvLuaArea@@SAXPAUlua_State@@H@Z:PROC ; CvLuaArea::PushMethods
EXTRN	_lua_gettop:PROC
EXTRN	_lua_setfield:PROC
EXTRN	_lua_pushvalue:PROC
EXTRN	_lua_setmetatable:PROC
EXTRN	_lua_rawset:PROC
EXTRN	_lua_pushstring:PROC
EXTRN	_lua_createtable:PROC
EXTRN	_lua_settop:PROC
EXTRN	_lua_type:PROC
EXTRN	_lua_getfield:PROC
EXTRN	?GetTypeName@CvLuaArea@@SAPBDXZ:PROC		; CvLuaArea::GetTypeName
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaArea@@VCvArea@@@@SAXPAUlua_State@@PAVCvArea@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaArea@@VCvArea@@@@SAXPAUlua_State@@PAVCvArea@@@Z PROC ; CvLuaScopedInstance<CvLuaArea,CvArea>::Push, COMDAT

; 39   : {

	push	edi

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	mov	edi, DWORD PTR _pkType$[esp]
	test	edi, edi
	je	$LN4@Push
	push	ebx
	push	ebp
	push	esi

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaArea@@SAPBDXZ		; CvLuaArea::GetTypeName
	mov	esi, DWORD PTR _L$[esp+12]
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_getfield

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN7@Push

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 59   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET $SG223766
	push	esi
	call	_lua_pushstring

; 63   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET $SG223767
	push	esi
	call	_lua_pushstring

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET $SG223768
	push	esi
	call	_lua_pushstring
	add	esp, 68					; 00000044H

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	push	esi
	call	_lua_pushvalue

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaArea@@SAPBDXZ		; CvLuaArea::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_setfield

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	push	esi
	call	_lua_gettop
	push	eax
	push	esi
	call	?PushMethods@CvLuaArea@@SAXPAUlua_State@@H@Z ; CvLuaArea::PushMethods
	add	esp, 56					; 00000038H
$LN7@Push:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET $SG223770
	push	esi
	mov	ebx, eax
	call	_lua_pushstring

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	mov	ebp, eax
	call	_lua_pushlightuserdata

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	SHORT $LN2@Push

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 97   : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET $SG223773
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET $SG223774
	push	esi
	call	_lua_pushstring

; 102  : 			lua_pushvalue(L, type_index);

	push	ebx
	push	esi
	call	_lua_pushvalue
	add	esp, 68					; 00000044H

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_pushvalue

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	push	ebp
	push	esi
	call	_lua_rawset
	add	esp, 40					; 00000028H
$LN2@Push:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	push	ebp
	push	esi
	call	_lua_remove

; 114  : 		lua_remove(L, type_index);

	push	ebx
	push	esi
	call	_lua_remove
	add	esp, 16					; 00000010H
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
$LN4@Push:

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else
; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushnil
	add	esp, 4
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaArea@@VCvArea@@@@SAXPAUlua_State@@PAVCvArea@@@Z ENDP ; CvLuaScopedInstance<CvLuaArea,CvArea>::Push
_TEXT	ENDS
PUBLIC	?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@KAXPAUlua_State@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::DefaultHandleMissingInstance
EXTRN	_luaL_error:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@KAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@KAXPAUlua_State@@@Z PROC ; CvLuaScopedInstance<CvLuaCity,CvCity>::DefaultHandleMissingInstance, COMDAT

; 165  : 	luaL_error(L, "Instance does not exist.");

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET $SG223812
	push	eax
	call	_luaL_error
	add	esp, 8

; 166  : }

	ret	0
?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@KAXPAUlua_State@@@Z ENDP ; CvLuaScopedInstance<CvLuaCity,CvCity>::DefaultHandleMissingInstance
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
EXTRN	?PushMethods@CvLuaPlot@@SAXPAUlua_State@@H@Z:PROC ; CvLuaPlot::PushMethods
EXTRN	?GetTypeName@CvLuaPlot@@SAPBDXZ:PROC		; CvLuaPlot::GetTypeName
; Function compile flags: /Ogtpy
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z PROC ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push, COMDAT

; 39   : {

	push	edi

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	mov	edi, DWORD PTR _pkType$[esp]
	test	edi, edi
	je	$LN4@Push@2
	push	ebx
	push	ebp
	push	esi

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaPlot@@SAPBDXZ		; CvLuaPlot::GetTypeName
	mov	esi, DWORD PTR _L$[esp+12]
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_getfield

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN7@Push@2

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 59   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET $SG223823
	push	esi
	call	_lua_pushstring

; 63   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET $SG223824
	push	esi
	call	_lua_pushstring

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET $SG223825
	push	esi
	call	_lua_pushstring
	add	esp, 68					; 00000044H

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	push	esi
	call	_lua_pushvalue

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaPlot@@SAPBDXZ		; CvLuaPlot::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_setfield

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	push	esi
	call	_lua_gettop
	push	eax
	push	esi
	call	?PushMethods@CvLuaPlot@@SAXPAUlua_State@@H@Z ; CvLuaPlot::PushMethods
	add	esp, 56					; 00000038H
$LN7@Push@2:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET $SG223827
	push	esi
	mov	ebx, eax
	call	_lua_pushstring

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	mov	ebp, eax
	call	_lua_pushlightuserdata

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	SHORT $LN2@Push@2

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 97   : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET $SG223830
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET $SG223831
	push	esi
	call	_lua_pushstring

; 102  : 			lua_pushvalue(L, type_index);

	push	ebx
	push	esi
	call	_lua_pushvalue
	add	esp, 68					; 00000044H

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_pushvalue

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	push	ebp
	push	esi
	call	_lua_rawset
	add	esp, 40					; 00000028H
$LN2@Push@2:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	push	ebp
	push	esi
	call	_lua_remove

; 114  : 		lua_remove(L, type_index);

	push	ebx
	push	esi
	call	_lua_remove
	add	esp, 16					; 00000010H
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
$LN4@Push@2:

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else
; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushnil
	add	esp, 4
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ENDP ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
EXTRN	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z:PROC ; CvLuaPlot::HandleMissingInstance
EXTRN	_lua_touserdata:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance, COMDAT

; 127  : {

	push	ebx
	push	ebp
	push	esi

; 128  : 	const int stack_size = lua_gettop(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	mov	ebp, eax

; 129  : 	bool bFail = true;
; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;
; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	eax, DWORD PTR _idx$[esp+16]
	push	eax
	push	esi
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN3@GetInstanc

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	mov	ecx, DWORD PTR _idx$[esp+12]
	push	OFFSET $SG223846
	push	ecx
	push	esi
	call	_lua_getfield

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN3@GetInstanc

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8

; 138  : 			if(pkInstance)

	test	edi, edi
	je	SHORT $LN3@GetInstanc

; 139  : 			{
; 140  : 				bFail = false;

	xor	bl, bl
$LN3@GetInstanc:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	test	bl, bl
	je	SHORT $LN9@GetInstanc
	cmp	BYTE PTR _bErrorOnFail$[esp+12], 0
	je	SHORT $LN9@GetInstanc

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[esp+12], 1
	jne	SHORT $LN1@GetInstanc

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET $SG223852
	push	esi
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc:

; 151  : 		Derived::HandleMissingInstance(L);

	push	esi
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 4
$LN9@GetInstanc:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 154  : }

	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
EXTRN	?PushMethods@CvLuaUnit@@SAXPAUlua_State@@H@Z:PROC ; CvLuaUnit::PushMethods
EXTRN	?GetTypeName@CvLuaUnit@@SAPBDXZ:PROC		; CvLuaUnit::GetTypeName
; Function compile flags: /Ogtpy
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z PROC ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push, COMDAT

; 39   : {

	push	edi

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	mov	edi, DWORD PTR _pkType$[esp]
	test	edi, edi
	je	$LN4@Push@3
	push	ebx
	push	ebp
	push	esi

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaUnit@@SAPBDXZ		; CvLuaUnit::GetTypeName
	mov	esi, DWORD PTR _L$[esp+12]
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_getfield

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN7@Push@3

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 59   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET $SG223863
	push	esi
	call	_lua_pushstring

; 63   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET $SG223864
	push	esi
	call	_lua_pushstring

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET $SG223865
	push	esi
	call	_lua_pushstring
	add	esp, 68					; 00000044H

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	push	esi
	call	_lua_pushvalue

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaUnit@@SAPBDXZ		; CvLuaUnit::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_setfield

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	push	esi
	call	_lua_gettop
	push	eax
	push	esi
	call	?PushMethods@CvLuaUnit@@SAXPAUlua_State@@H@Z ; CvLuaUnit::PushMethods
	add	esp, 56					; 00000038H
$LN7@Push@3:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET $SG223867
	push	esi
	mov	ebx, eax
	call	_lua_pushstring

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	mov	ebp, eax
	call	_lua_pushlightuserdata

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	SHORT $LN2@Push@3

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 97   : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET $SG223870
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET $SG223871
	push	esi
	call	_lua_pushstring

; 102  : 			lua_pushvalue(L, type_index);

	push	ebx
	push	esi
	call	_lua_pushvalue
	add	esp, 68					; 00000044H

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_pushvalue

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	push	ebp
	push	esi
	call	_lua_rawset
	add	esp, 40					; 00000028H
$LN2@Push@3:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	push	ebp
	push	esi
	call	_lua_remove

; 114  : 		lua_remove(L, type_index);

	push	ebx
	push	esi
	call	_lua_remove
	add	esp, 16					; 00000010H
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
$LN4@Push@3:

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else
; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushnil
	add	esp, 4
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ENDP ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
EXTRN	?HandleMissingInstance@CvLuaUnit@@SAXPAUlua_State@@@Z:PROC ; CvLuaUnit::HandleMissingInstance
; Function compile flags: /Ogtpy
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance, COMDAT

; 127  : {

	push	ebx
	push	ebp
	push	esi

; 128  : 	const int stack_size = lua_gettop(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	mov	ebp, eax

; 129  : 	bool bFail = true;
; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;
; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	eax, DWORD PTR _idx$[esp+16]
	push	eax
	push	esi
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN3@GetInstanc@2

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	mov	ecx, DWORD PTR _idx$[esp+12]
	push	OFFSET $SG223886
	push	ecx
	push	esi
	call	_lua_getfield

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN3@GetInstanc@2

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8

; 138  : 			if(pkInstance)

	test	edi, edi
	je	SHORT $LN3@GetInstanc@2

; 139  : 			{
; 140  : 				bFail = false;

	xor	bl, bl
$LN3@GetInstanc@2:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	test	bl, bl
	je	SHORT $LN9@GetInstanc@2
	cmp	BYTE PTR _bErrorOnFail$[esp+12], 0
	je	SHORT $LN9@GetInstanc@2

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[esp+12], 1
	jne	SHORT $LN1@GetInstanc@2

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET $SG223892
	push	esi
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc@2:

; 151  : 		Derived::HandleMissingInstance(L);

	push	esi
	call	?HandleMissingInstance@CvLuaUnit@@SAXPAUlua_State@@@Z ; CvLuaUnit::HandleMissingInstance
	add	esp, 4
$LN9@GetInstanc@2:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 154  : }

	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum BuildingClassTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum BuildingClassTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum BuildingTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum BuildingTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum UnitTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum UnitTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum UnitClassTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum UnitClassTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4SpecialistTypes@@@CvLuaArgs@@YA?AW4SpecialistTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4SpecialistTypes@@@CvLuaArgs@@YA?AW4SpecialistTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum SpecialistTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4SpecialistTypes@@@CvLuaArgs@@YA?AW4SpecialistTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum SpecialistTypes>
_TEXT	ENDS
PUBLIC	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
;	COMDAT ?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ
_TEXT	SEGMENT
?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ PROC ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex, COMDAT

; 159  : 	return 2;

	mov	eax, 2

; 160  : }

	ret	0
?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SA?BHXZ ENDP ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetStartingArgIndex
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$toValue@PAVCvString@@@CvLuaArgs@@YAPAVCvString@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@PAVCvString@@@CvLuaArgs@@YAPAVCvString@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<CvString *>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@PAVCvString@@@CvLuaArgs@@YAPAVCvString@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<CvString *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4ResourceTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4ResourceTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4ResourceTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4ResourceTypes@@@Z PROC ; CvLuaArgs::pushValue<enum ResourceTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4ResourceTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4ResourceTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum ResourceTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4ResourceTypes@@@CvLuaArgs@@YA?AW4ResourceTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4ResourceTypes@@@CvLuaArgs@@YA?AW4ResourceTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum ResourceTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4ResourceTypes@@@CvLuaArgs@@YA?AW4ResourceTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum ResourceTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4UnitTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4UnitTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4UnitTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4UnitTypes@@@Z PROC ; CvLuaArgs::pushValue<enum UnitTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4UnitTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4UnitTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum UnitTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4ProcessTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4ProcessTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4ProcessTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4ProcessTypes@@@Z PROC ; CvLuaArgs::pushValue<enum ProcessTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4ProcessTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4ProcessTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum ProcessTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum ProjectTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum ProjectTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4UnitAITypes@@@CvLuaArgs@@YA?AW4UnitAITypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4UnitAITypes@@@CvLuaArgs@@YA?AW4UnitAITypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum UnitAITypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4UnitAITypes@@@CvLuaArgs@@YA?AW4UnitAITypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum UnitAITypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum HurryTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum HurryTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum YieldTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum YieldTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z PROC ; CvLuaArgs::pushValue<enum HandicapTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum HandicapTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4CivilizationTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CivilizationTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4CivilizationTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CivilizationTypes@@@Z PROC ; CvLuaArgs::pushValue<enum CivilizationTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4CivilizationTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CivilizationTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum CivilizationTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum TeamTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum TeamTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@J@CvLuaArgs@@YAXPAUlua_State@@J@Z
_TEXT	SEGMENT
??$pushValue@J@CvLuaArgs@@YAXPAUlua_State@@J@Z PROC	; CvLuaArgs::pushValue<long>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@J@CvLuaArgs@@YAXPAUlua_State@@J@Z ENDP	; CvLuaArgs::pushValue<long>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z PROC ; CvLuaArgs::pushValue<enum PlayerTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum PlayerTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z PROC ; CvLuaArgs::pushValue<enum TeamTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum TeamTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4DomainTypes@@@CvLuaArgs@@YA?AW4DomainTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4DomainTypes@@@CvLuaArgs@@YA?AW4DomainTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum DomainTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4DomainTypes@@@CvLuaArgs@@YA?AW4DomainTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum DomainTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum PlayerTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum PlayerTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4UnitCombatTypes@@@CvLuaArgs@@YA?AW4UnitCombatTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4UnitCombatTypes@@@CvLuaArgs@@YA?AW4UnitCombatTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum UnitCombatTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4UnitCombatTypes@@@CvLuaArgs@@YA?AW4UnitCombatTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum UnitCombatTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4PromotionTypes@@@CvLuaArgs@@YA?AW4PromotionTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4PromotionTypes@@@CvLuaArgs@@YA?AW4PromotionTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum PromotionTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4PromotionTypes@@@CvLuaArgs@@YA?AW4PromotionTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum PromotionTypes>
_TEXT	ENDS
PUBLIC	??0CvString@@QAE@XZ				; CvString::CvString
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredllutil\include\cvstring.h
;	COMDAT ??0CvString@@QAE@XZ
_TEXT	SEGMENT
??0CvString@@QAE@XZ PROC				; CvString::CvString, COMDAT
; _this$ = ecx

; 23   : 	CvString() {}

	push	esi
	mov	esi, ecx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, esi
	pop	esi
	ret	0
??0CvString@@QAE@XZ ENDP				; CvString::CvString
_TEXT	ENDS
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
; Function compile flags: /Ogtpy
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
_TEXT	ENDS
PUBLIC	??BCvString@@QBEPBDXZ				; CvString::operator char const *
; Function compile flags: /Ogtpy
;	COMDAT ??BCvString@@QBEPBDXZ
_TEXT	SEGMENT
??BCvString@@QBEPBDXZ PROC				; CvString::operator char const *, COMDAT
; _this$ = ecx

; 31   : 	operator const char*() const 	{ return c_str(); }												

	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
??BCvString@@QBEPBDXZ ENDP				; CvString::operator char const *
_TEXT	ENDS
PUBLIC	?IsEmpty@CvString@@QBE_NXZ			; CvString::IsEmpty
EXTRN	__imp_?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?IsEmpty@CvString@@QBE_NXZ
_TEXT	SEGMENT
?IsEmpty@CvString@@QBE_NXZ PROC				; CvString::IsEmpty, COMDAT
; _this$ = ecx

; 41   : 	bool IsEmpty() const { return (empty() || this[0] == '\0');}

	push	esi
	mov	esi, ecx
	call	DWORD PTR __imp_?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ
	test	al, al
	jne	SHORT $LN3@IsEmpty
	mov	ecx, esi
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	test	eax, eax
	je	SHORT $LN3@IsEmpty
	xor	eax, eax
	pop	esi
	ret	0
$LN3@IsEmpty:
	mov	eax, 1
	pop	esi
	ret	0
?IsEmpty@CvString@@QBE_NXZ ENDP				; CvString::IsEmpty
_TEXT	ENDS
PUBLIC	??0OrderData@@QAE@XZ				; OrderData::OrderData
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\cvstructs.h
;	COMDAT ??0OrderData@@QAE@XZ
_TEXT	SEGMENT
??0OrderData@@QAE@XZ PROC				; OrderData::OrderData, COMDAT
; _this$ = ecx

; 27   : 	{

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], -1
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	BYTE PTR [eax+12], cl
	mov	BYTE PTR [eax+13], cl

; 28   : 	}

	ret	0
??0OrderData@@QAE@XZ ENDP				; OrderData::OrderData
_TEXT	ENDS
PUBLIC	?getMap@CvGlobals@@QAEAAVCvMap@@XZ		; CvGlobals::getMap
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
;	COMDAT ?getMap@CvGlobals@@QAEAAVCvMap@@XZ
_TEXT	SEGMENT
?getMap@CvGlobals@@QAEAAVCvMap@@XZ PROC			; CvGlobals::getMap, COMDAT
; _this$ = ecx

; 175  : 		return *m_map;    // inlined for perf reasons, do not use outside of dll

	mov	eax, DWORD PTR [ecx+52]

; 176  : 	}

	ret	0
?getMap@CvGlobals@@QAEAAVCvMap@@XZ ENDP			; CvGlobals::getMap
_TEXT	ENDS
PUBLIC	?getGame@CvGlobals@@QAEAAVCvGame@@XZ		; CvGlobals::getGame
; Function compile flags: /Ogtpy
;	COMDAT ?getGame@CvGlobals@@QAEAAVCvGame@@XZ
_TEXT	SEGMENT
?getGame@CvGlobals@@QAEAAVCvGame@@XZ PROC		; CvGlobals::getGame, COMDAT
; _this$ = ecx

; 183  : 		return *m_game;    // inlined for perf reasons, do not use outside of dll

	mov	eax, DWORD PTR [ecx+48]

; 184  : 	}

	ret	0
?getGame@CvGlobals@@QAEAAVCvGame@@XZ ENDP		; CvGlobals::getGame
_TEXT	ENDS
PUBLIC	?getSPACE_RACE_TRIGGER_PROJECT@CvGlobals@@QAEHXZ ; CvGlobals::getSPACE_RACE_TRIGGER_PROJECT
; Function compile flags: /Ogtpy
;	COMDAT ?getSPACE_RACE_TRIGGER_PROJECT@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSPACE_RACE_TRIGGER_PROJECT@CvGlobals@@QAEHXZ PROC	; CvGlobals::getSPACE_RACE_TRIGGER_PROJECT, COMDAT
; _this$ = ecx

; 7207 : 		return m_iSPACE_RACE_TRIGGER_PROJECT;

	mov	eax, DWORD PTR [ecx+8424]

; 7208 : 	}

	ret	0
?getSPACE_RACE_TRIGGER_PROJECT@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getSPACE_RACE_TRIGGER_PROJECT
_TEXT	ENDS
PUBLIC	??4CvString@@QAEAAV0@ABV0@@Z			; CvString::operator=
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??4CvString@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4CvString@@QAEAAV0@ABV0@@Z PROC			; CvString::operator=, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	eax, esi
	pop	esi
	ret	4
??4CvString@@QAEAAV0@ABV0@@Z ENDP			; CvString::operator=
_TEXT	ENDS
PUBLIC	?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z	; CvPlayerAI::getPlayer
EXTRN	?m_aPlayers@CvPlayerAI@@1PAV1@A:DWORD		; CvPlayerAI::m_aPlayers
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\cvplayerai.h
;	COMDAT ?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_ePlayer$ = 8						; size = 4
?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z PROC	; CvPlayerAI::getPlayer, COMDAT

; 28   : 		CvAssertMsg(ePlayer != NO_PLAYER, "Player is not assigned a valid value");
; 29   : 		CvAssertMsg(ePlayer < MAX_PLAYERS, "Player is not assigned a valid value");
; 30   : 		return m_aPlayers[ePlayer];

	mov	eax, DWORD PTR _ePlayer$[esp-4]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 31   : 	}

	ret	0
?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z ENDP	; CvPlayerAI::getPlayer
_TEXT	ENDS
PUBLIC	?getX@CvPlot@@QBEHXZ				; CvPlot::getX
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\cvplot.h
;	COMDAT ?getX@CvPlot@@QBEHXZ
_TEXT	SEGMENT
?getX@CvPlot@@QBEHXZ PROC				; CvPlot::getX, COMDAT
; _this$ = ecx

; 307  : 		return m_iX;

	movsx	eax, WORD PTR [ecx]

; 308  : 	}

	ret	0
?getX@CvPlot@@QBEHXZ ENDP				; CvPlot::getX
_TEXT	ENDS
PUBLIC	?getY@CvPlot@@QBEHXZ				; CvPlot::getY
; Function compile flags: /Ogtpy
;	COMDAT ?getY@CvPlot@@QBEHXZ
_TEXT	SEGMENT
?getY@CvPlot@@QBEHXZ PROC				; CvPlot::getY, COMDAT
; _this$ = ecx

; 312  : 		return m_iY;

	movsx	eax, WORD PTR [ecx+2]

; 313  : 	}

	ret	0
?getY@CvPlot@@QBEHXZ ENDP				; CvPlot::getY
_TEXT	ENDS
PUBLIC	?numPlots@CvMap@@QBEHXZ				; CvMap::numPlots
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
;	COMDAT ?numPlots@CvMap@@QBEHXZ
_TEXT	SEGMENT
?numPlots@CvMap@@QBEHXZ PROC				; CvMap::numPlots, COMDAT
; _this$ = ecx

; 170  : 		return m_iGridSize;

	mov	eax, DWORD PTR [ecx+4028]

; 171  : 	}

	ret	0
?numPlots@CvMap@@QBEHXZ ENDP				; CvMap::numPlots
_TEXT	ENDS
PUBLIC	?plotByIndex@CvMap@@QBEPAVCvPlot@@H@Z		; CvMap::plotByIndex
; Function compile flags: /Ogtpy
;	COMDAT ?plotByIndex@CvMap@@QBEPAVCvPlot@@H@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?plotByIndex@CvMap@@QBEPAVCvPlot@@H@Z PROC		; CvMap::plotByIndex, COMDAT
; _this$ = ecx

; 263  : 		return (((iIndex >= 0) && (iIndex < (numPlots()))) ? &(m_pMapPlots[iIndex]) : NULL);

	mov	eax, DWORD PTR _iIndex$[esp-4]
	test	eax, eax
	jl	SHORT $LN3@plotByInde
	cmp	eax, DWORD PTR [ecx+4028]
	jge	SHORT $LN3@plotByInde
	imul	eax, 484				; 000001e4H
	add	eax, DWORD PTR [ecx+4068]

; 264  : 	}

	ret	4
$LN3@plotByInde:

; 263  : 		return (((iIndex >= 0) && (iIndex < (numPlots()))) ? &(m_pMapPlots[iIndex]) : NULL);

	xor	eax, eax

; 264  : 	}

	ret	4
?plotByIndex@CvMap@@QBEPAVCvPlot@@H@Z ENDP		; CvMap::plotByIndex
_TEXT	ENDS
PUBLIC	?GetCityRangeStrikeModifier@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetCityRangeStrikeModifier
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\cvbeliefclasses.h
;	COMDAT ?GetCityRangeStrikeModifier@CvReligionBeliefs@@QBEHXZ
_TEXT	SEGMENT
?GetCityRangeStrikeModifier@CvReligionBeliefs@@QBEHXZ PROC ; CvReligionBeliefs::GetCityRangeStrikeModifier, COMDAT
; _this$ = ecx

; 345  : 		return m_iCityRangeStrikeModifier;

	mov	eax, DWORD PTR [ecx+12]

; 346  : 	};

	ret	0
?GetCityRangeStrikeModifier@CvReligionBeliefs@@QBEHXZ ENDP ; CvReligionBeliefs::GetCityRangeStrikeModifier
_TEXT	ENDS
PUBLIC	?GetFaithBuildingTourism@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetFaithBuildingTourism
; Function compile flags: /Ogtpy
;	COMDAT ?GetFaithBuildingTourism@CvReligionBeliefs@@QBEHXZ
_TEXT	SEGMENT
?GetFaithBuildingTourism@CvReligionBeliefs@@QBEHXZ PROC	; CvReligionBeliefs::GetFaithBuildingTourism, COMDAT
; _this$ = ecx

; 467  : 		return m_iFaithBuildingTourism;

	mov	eax, DWORD PTR [ecx+120]

; 468  : 	}

	ret	0
?GetFaithBuildingTourism@CvReligionBeliefs@@QBEHXZ ENDP	; CvReligionBeliefs::GetFaithBuildingTourism
_TEXT	ENDS
PUBLIC	?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::size
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC	; std::vector<int,std::allocator<int> >::size, COMDAT
; _this$ = ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 727  : 		}

	ret	0
?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP	; std::vector<int,std::allocator<int> >::size
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@H@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<int> >::~_Container_base_aux_alloc_empty<std::allocator<int> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@H@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@H@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<int> >::~_Container_base_aux_alloc_empty<std::allocator<int> >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@H@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<int> >::~_Container_base_aux_alloc_empty<std::allocator<int> >
_TEXT	ENDS
PUBLIC	??0?$allocator@H@std@@QAE@XZ			; std::allocator<int>::allocator<int>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xmemory
;	COMDAT ??0?$allocator@H@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@H@std@@QAE@XZ PROC			; std::allocator<int>::allocator<int>, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@H@std@@QAE@XZ ENDP			; std::allocator<int>::allocator<int>
_TEXT	ENDS
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ ; std::vector<int,std::allocator<int> >::_Xlen
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File s:\msvs2008\vc\include\stdexcept
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T225257 = -80						; size = 28
$T225256 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ PROC	; std::vector<int,std::allocator<int> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	-1
	push	__ehhandler$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 68					; 00000044H

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T225257[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T225256[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T225257[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T225256[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T225256[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T225256[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T225256[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN13@Xlen:
$LN12@Xlen:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T225257[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T225256[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ:
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ ENDP	; std::vector<int,std::allocator<int> >::_Xlen
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	push	edi
	mov	edi, DWORD PTR ___that$[esp+20]
	mov	esi, ecx
	push	edi
	mov	DWORD PTR _this$[esp+28], esi
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	add	edi, 12					; 0000000cH
	push	edi
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR __$EHRec$[esp+36], 0
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
; Function compile flags: /Ogtpy
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC			; std::length_error::length_error, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0logic_error@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7length_error@std@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
_TEXT	ENDS
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@H@std@@@std@@IAE@V?$allocator@H@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<int> >::_Container_base_aux_alloc_empty<std::allocator<int> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@H@std@@@std@@IAE@V?$allocator@H@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@H@std@@@std@@IAE@V?$allocator@H@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<int> >::_Container_base_aux_alloc_empty<std::allocator<int> >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@H@std@@@std@@IAE@V?$allocator@H@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<int> >::_Container_base_aux_alloc_empty<std::allocator<int> >
_TEXT	ENDS
PUBLIC	??0?$allocator@H@std@@QAE@ABV01@@Z		; std::allocator<int>::allocator<int>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xmemory
;	COMDAT ??0?$allocator@H@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@H@std@@QAE@ABV01@@Z PROC			; std::allocator<int>::allocator<int>, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@H@std@@QAE@ABV01@@Z ENDP			; std::allocator<int>::allocator<int>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@H@std@@QAEXPAHI@Z	; std::allocator<int>::deallocate
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@H@std@@QAEXPAHI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@H@std@@QAEXPAHI@Z PROC		; std::allocator<int>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@H@std@@QAEXPAHI@Z ENDP		; std::allocator<int>::deallocate
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@H@std@@QBEIXZ		; std::allocator<int>::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$allocator@H@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@H@std@@QBEIXZ PROC		; std::allocator<int>::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 1073741823				; 3fffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@H@std@@QBEIXZ ENDP		; std::allocator<int>::max_size
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@W4PlayerTypes@@VCvCity@@@@QBEABW4PlayerTypes@@XZ ; FAutoVariable<enum PlayerTypes,CvCity>::operator enum PlayerTypes const &
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\fireplace\include\fireworks\fautovariable.h
;	COMDAT ??B?$FAutoVariable@W4PlayerTypes@@VCvCity@@@@QBEABW4PlayerTypes@@XZ
_TEXT	SEGMENT
??B?$FAutoVariable@W4PlayerTypes@@VCvCity@@@@QBEABW4PlayerTypes@@XZ PROC ; FAutoVariable<enum PlayerTypes,CvCity>::operator enum PlayerTypes const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@W4PlayerTypes@@VCvCity@@@@QBEABW4PlayerTypes@@XZ ENDP ; FAutoVariable<enum PlayerTypes,CvCity>::operator enum PlayerTypes const &
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@HVCvCity@@@@QBEABHXZ		; FAutoVariable<int,CvCity>::operator int const &
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FAutoVariable@HVCvCity@@@@QBEABHXZ
_TEXT	SEGMENT
??B?$FAutoVariable@HVCvCity@@@@QBEABHXZ PROC		; FAutoVariable<int,CvCity>::operator int const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@HVCvCity@@@@QBEABHXZ ENDP		; FAutoVariable<int,CvCity>::operator int const &
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@H@std@@YAPAHIPAH@Z			; std::_Allocate<int>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
; File s:\msvs2008\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@H@std@@YAPAHIPAH@Z
_TEXT	SEGMENT
$T225317 = -12						; size = 12
$T225321 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@H@std@@YAPAHIPAH@Z PROC			; std::_Allocate<int>, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx*4]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 4
	jae	SHORT $LN1@Allocate

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T225321[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T225317[esp+16]
	mov	DWORD PTR $T225321[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T225317[esp+16]
	push	ecx
	mov	DWORD PTR $T225317[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate:
$LN8@Allocate:
	int	3
??$_Allocate@H@std@@YAPAHIPAH@Z ENDP			; std::_Allocate<int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z ; std::_Vector_const_iterator<int,std::allocator<int> >::_Vector_const_iterator<int,std::allocator<int> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z PROC ; std::_Vector_const_iterator<int,std::allocator<int> >::_Vector_const_iterator<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z ENDP ; std::_Vector_const_iterator<int,std::allocator<int> >::_Vector_const_iterator<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<int,std::allocator<int> >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<int,std::allocator<int> >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<int,std::allocator<int> >::operator==
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAHPAH@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAH0@Z ; std::_Ptr_cat<int *,int *>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xutility
;	COMDAT ??$_Ptr_cat@PAHPAH@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAH0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAHPAH@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAH0@Z PROC ; std::_Ptr_cat<int *,int *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAHPAH@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAH0@Z ENDP ; std::_Ptr_cat<int *,int *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<int> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<int> >, COMDAT

; 242  : 	}

	ret	0
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<int> >
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAHPAH@std@@YA?AUrandom_access_iterator_tag@0@ABQAH0@Z ; std::_Iter_random<int *,int *>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xutility
;	COMDAT ??$_Iter_random@PAHPAH@std@@YA?AUrandom_access_iterator_tag@0@ABQAH0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAHPAH@std@@YA?AUrandom_access_iterator_tag@0@ABQAH0@Z PROC ; std::_Iter_random<int *,int *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAHPAH@std@@YA?AUrandom_access_iterator_tag@0@ABQAH0@Z ENDP ; std::_Iter_random<int *,int *>
_TEXT	ENDS
PUBLIC	??$_Copy_opt@PAHPAHUrandom_access_iterator_tag@std@@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<int *,int *,std::random_access_iterator_tag>
EXTRN	__imp__memmove_s:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_opt@PAHPAHUrandom_access_iterator_tag@std@@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAHPAHUrandom_access_iterator_tag@std@@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<int *,int *,std::random_access_iterator_tag>, COMDAT

; 2495 : 
; 2496 :  #if _HAS_ITERATOR_DEBUGGING
; 2497 : 	_DEBUG_RANGE(_First, _Last);
; 2498 : 	if (_First != _Last)
; 2499 : 		_DEBUG_POINTER(_Dest);
; 2500 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 2501 : 
; 2502 : 	ptrdiff_t _Off = _Last - _First;	// NB: non-overlapping move

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi

; 2503 : 	// if _OutIt is range checked, this will make sure there is enough space for the memmove
; 2504 : 	_OutIt _Result = _Dest + _Off;

	mov	edi, DWORD PTR __Dest$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]

; 2505 : 	if (_Off > 0)

	test	eax, eax
	jle	SHORT $LN4@Copy_opt

; 2506 : 		_CRT_SECURE_MEMMOVE(&*_Dest, _Off * sizeof (*_First), &*_First, _Off * sizeof (*_First));

	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN4@Copy_opt:
	pop	edi

; 2507 : 	return _Result;

	mov	eax, esi
	pop	esi

; 2508 : 	}

	ret	0
??$_Copy_opt@PAHPAHUrandom_access_iterator_tag@std@@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<int *,int *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::capacity
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC ; std::vector<int,std::allocator<int> >::capacity, COMDAT
; _this$ = ecx

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	edx, DWORD PTR [ecx+4]
	test	edx, edx
	jne	SHORT $LN3@capacity
	xor	eax, eax

; 636  : 		}

	ret	0
$LN3@capacity:

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	eax, DWORD PTR [ecx+12]
	sub	eax, edx
	sar	eax, 2

; 636  : 		}

	ret	0
?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP ; std::vector<int,std::allocator<int> >::capacity
_TEXT	ENDS
PUBLIC	??Y?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<int,std::allocator<int> >::operator+=
; Function compile flags: /Ogtpy
;	COMDAT ??Y?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<int,std::allocator<int> >::operator+=, COMDAT
; _this$ = ecx

; 159  : 		{	// increment by integer

	mov	eax, ecx

; 160  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 161  : 		_SCL_SECURE_VALIDATE_RANGE(
; 162  : 			_Myptr + _Off <= ((_Myvec *)(this->_Getmycont()))->_Mylast &&
; 163  : 			_Myptr + _Off >= ((_Myvec *)(this->_Getmycont()))->_Myfirst);
; 164  : 		_Myptr += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [ecx*4]
	add	DWORD PTR [eax], edx

; 165  : 		return (*this);
; 166  : 		}

	ret	4
??Y?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<int,std::allocator<int> >::operator+=
_TEXT	ENDS
PUBLIC	??$_Fill@PAHH@std@@YAXPAH0ABH@Z			; std::_Fill<int *,int>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xutility
;	COMDAT ??$_Fill@PAHH@std@@YAXPAH0ABH@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill@PAHH@std@@YAXPAH0ABH@Z PROC			; std::_Fill<int *,int>, COMDAT

; 3157 : 	_DEBUG_RANGE(_First, _Last);
; 3158 : 	for (; _First != _Last; ++_First)

	mov	eax, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN1@Fill
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL3@Fill:

; 3159 : 		*_First = _Val;

	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	add	eax, 4
	cmp	eax, ecx
	jne	SHORT $LL3@Fill
	pop	esi
$LN1@Fill:

; 3160 : 	}

	ret	0
??$_Fill@PAHH@std@@YAXPAH0ABH@Z ENDP			; std::_Fill<int *,int>
_TEXT	ENDS
PUBLIC	??$_Move_cat@PAH@std@@YA?AU_Undefined_move_tag@0@ABQAH@Z ; std::_Move_cat<int *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_cat@PAH@std@@YA?AU_Undefined_move_tag@0@ABQAH@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
??$_Move_cat@PAH@std@@YA?AU_Undefined_move_tag@0@ABQAH@Z PROC ; std::_Move_cat<int *>, COMDAT

; 1200 : 	{

	push	ecx

; 1201 : 		typename _Move_operation_category<typename iterator_traits<_Iter>::value_type>::_Move_cat _Cat;
; 1202 : 		return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1203 : 	}

	pop	ecx
	ret	0
??$_Move_cat@PAH@std@@YA?AU_Undefined_move_tag@0@ABQAH@Z ENDP ; std::_Move_cat<int *>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAHPAHUrandom_access_iterator_tag@std@@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<int *,int *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_backward_opt@PAHPAHUrandom_access_iterator_tag@std@@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_backward_opt@PAHPAHUrandom_access_iterator_tag@std@@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<int *,int *,std::random_access_iterator_tag>, COMDAT

; 2699 : 
; 2700 :  #if _HAS_ITERATOR_DEBUGGING
; 2701 : 	_DEBUG_RANGE(_First, _Last);
; 2702 : 	if (_First != _Last)
; 2703 : 		_DEBUG_POINTER(_Dest);
; 2704 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 2705 : 
; 2706 : 	ptrdiff_t _Off = _Last - _First;	// NB: non-overlapping move

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	sar	eax, 2
	push	esi

; 2707 : 	/* if _OutIt is range checked, this will make sure there is enough space for 
; 2708 : 	 * the memmove
; 2709 : 	 */
; 2710 : 	_OutIt _Result = _Dest - _Off;

	mov	esi, DWORD PTR __Dest$[esp]
	lea	ecx, DWORD PTR [eax*4]
	sub	esi, ecx

; 2711 : 	if (_Off > 0)

	test	eax, eax
	jle	SHORT $LN4@Copy_backw

; 2712 : 		_CRT_SECURE_MEMMOVE(&*_Result, _Off * sizeof (*_First), &*_First, _Off * sizeof (*_First));

	push	ecx
	push	edx
	push	ecx
	push	esi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN4@Copy_backw:

; 2713 : 	return _Result;

	mov	eax, esi
	pop	esi

; 2714 : 	}

	ret	0
??$_Copy_backward_opt@PAHPAHUrandom_access_iterator_tag@std@@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<int *,int *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Iter_cat@PAH@std@@YA?AUrandom_access_iterator_tag@0@ABQAH@Z ; std::_Iter_cat<int *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Iter_cat@PAH@std@@YA?AUrandom_access_iterator_tag@0@ABQAH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAH@std@@YA?AUrandom_access_iterator_tag@0@ABQAH@Z PROC ; std::_Iter_cat<int *>, COMDAT

; 953  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 954  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 955  : 	}

	ret	0
??$_Iter_cat@PAH@std@@YA?AUrandom_access_iterator_tag@0@ABQAH@Z ENDP ; std::_Iter_cat<int *>
_TEXT	ENDS
PUBLIC	??$_Fill_n@PAHIH@std@@YAXPAHIABHU_Range_checked_iterator_tag@0@@Z ; std::_Fill_n<int *,unsigned int,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Fill_n@PAHIH@std@@YAXPAHIABHU_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Fill_n@PAHIH@std@@YAXPAHIABHU_Range_checked_iterator_tag@0@@Z PROC ; std::_Fill_n<int *,unsigned int,int>, COMDAT

; 3197 : 	for (; 0 < _Count; --_Count, ++_First)

	mov	eax, DWORD PTR __Count$[esp-4]
	test	eax, eax
	jbe	SHORT $LN1@Fill_n
	mov	edx, DWORD PTR __Val$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	push	esi
$LL3@Fill_n:

; 3198 : 		*_First = _Val;

	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [ecx], esi
	dec	eax
	add	ecx, 4
	test	eax, eax
	ja	SHORT $LL3@Fill_n
	pop	esi
$LN1@Fill_n:

; 3199 : 	}

	ret	0
??$_Fill_n@PAHIH@std@@YAXPAHIABHU_Range_checked_iterator_tag@0@@Z ENDP ; std::_Fill_n<int *,unsigned int,int>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<int *,int *,std::allocator<int> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\memory
;	COMDAT ??$_Uninit_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<int *,int *,std::allocator<int> >, COMDAT

; 146  : 	_DEBUG_RANGE(_First, _Last);
; 147  : 	_DEBUG_POINTER(_Dest);
; 148  : 	size_t _Count = (size_t)(_Last - _First);

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi

; 149  : 	_FwdIt _Result = _Dest + _Count;

	mov	edi, DWORD PTR __Dest$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]

; 150  : 	if (_Count > 0)

	test	eax, eax
	jbe	SHORT $LN4@Uninit_cop

; 151  : 		_CRT_SECURE_MEMMOVE(&*_Dest, _Count * sizeof (*_First), &*_First, _Count * sizeof (*_First));	// NB: non-overlapping move

	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN4@Uninit_cop:
	pop	edi

; 152  : 	return (_Result);

	mov	eax, esi
	pop	esi

; 153  : 	}

	ret	0
??$_Uninit_copy@PAHPAHV?$allocator@H@std@@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<int *,int *,std::allocator<int> >
_TEXT	ENDS
PUBLIC	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
;	COMDAT ?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z PROC ; CvLuaCity::HandleMissingInstance, COMDAT

; 487  : 	DefaultHandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET $SG223812
	push	eax
	call	_luaL_error
	add	esp, 8

; 488  : }

	ret	0
?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ENDP ; CvLuaCity::HandleMissingInstance
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance, COMDAT

; 127  : {

	push	ebx
	push	ebp
	push	esi

; 128  : 	const int stack_size = lua_gettop(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	mov	ebp, eax

; 129  : 	bool bFail = true;
; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;
; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	eax, DWORD PTR _idx$[esp+16]
	push	eax
	push	esi
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN3@GetInstanc@3

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	mov	ecx, DWORD PTR _idx$[esp+12]
	push	OFFSET $SG223798
	push	ecx
	push	esi
	call	_lua_getfield

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN3@GetInstanc@3

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8

; 138  : 			if(pkInstance)

	test	edi, edi
	je	SHORT $LN3@GetInstanc@3

; 139  : 			{
; 140  : 				bFail = false;

	xor	bl, bl
$LN3@GetInstanc@3:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	test	bl, bl
	je	SHORT $LN13@GetInstanc@3
	cmp	BYTE PTR _bErrorOnFail$[esp+12], 0
	je	SHORT $LN13@GetInstanc@3

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[esp+12], 1
	jne	SHORT $LN1@GetInstanc@3

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc@3:

; 151  : 		Derived::HandleMissingInstance(L);

	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 8
$LN13@GetInstanc@3:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 154  : }

	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum UnitTypes>
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
;	COMDAT ??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4UnitTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4UnitTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum UnitTypes>, COMDAT

; 230  : {

	push	ebx
	push	ebp
	push	esi

; 231  : 	const int idx = Derived::GetStartingArgIndex();
; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe
	xor	bl, bl
$LN7@BasicLuaMe:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe:

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	pop	edi
	pop	esi
	pop	ebp

; 234  : 	return 0;

	xor	eax, eax
	pop	ebx

; 235  : }

	ret	0
??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4UnitTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum UnitTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>, COMDAT

; 230  : {

	push	ebx
	push	ebp
	push	esi

; 231  : 	const int idx = Derived::GetStartingArgIndex();
; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@2
	xor	bl, bl
$LN7@BasicLuaMe@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@2:

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	pop	edi
	pop	esi
	pop	ebp

; 234  : 	return 0;

	xor	eax, eax
	pop	ebx

; 235  : }

	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4BuildingTypes@@_NPAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4BuildingTypes@@_NPAVCvString@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum BuildingTypes,bool,CvString *>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4BuildingTypes@@_NPAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4BuildingTypes@@_NPAVCvString@@@Z@Z
_TEXT	SEGMENT
$T225498 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4BuildingTypes@@_NPAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4BuildingTypes@@_NPAVCvString@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum BuildingTypes,bool,CvString *>, COMDAT

; 98   : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 99   : 	const int idx = Derived::GetStartingArgIndex();
; 100  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@3
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@3
	xor	bl, bl
$LN7@BasicLuaMe@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@3
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@3:

; 101  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2)));

	push	4
	push	esi
	call	_lua_tointeger
	push	3
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	2
	push	esi
	mov	BYTE PTR $T225498[esp+44], al
	call	_lua_tointeger
	mov	ecx, DWORD PTR $T225498[esp+44]
	add	esp, 24					; 00000018H
	push	ebx
	push	ecx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+28]
	movzx	edx, al
	push	edx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 102  : 
; 103  : 	return 1;

	mov	eax, 1
	pop	ebx

; 104  : }

	pop	ecx
	ret	0
??$BasicLuaMethod@_NW4BuildingTypes@@_NPAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4BuildingTypes@@_NPAVCvString@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum BuildingTypes,bool,CvString *>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4ResourceTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4ResourceTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ResourceTypes,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4ResourceTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4ResourceTypes@@_N@Z@Z
_TEXT	SEGMENT
$T225539 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4ResourceTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4ResourceTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ResourceTypes,bool>, COMDAT

; 78   : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@4
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@4
	xor	bl, bl
$LN7@BasicLuaMe@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@4
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@4:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR $T225539[esp+20], al
	mov	ecx, DWORD PTR $T225539[esp+20]
	push	ecx
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	pop	ecx
	ret	0
??$BasicLuaMethod@W4ResourceTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4ResourceTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ResourceTypes,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4ResourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ResourceTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4ResourceTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4ResourceTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ResourceTypes>, COMDAT

; 230  : {

	push	ebx
	push	ebp
	push	esi

; 231  : 	const int idx = Derived::GetStartingArgIndex();
; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@5
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@5
	xor	bl, bl
$LN7@BasicLuaMe@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@5
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@5:

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	pop	edi
	pop	esi
	pop	ebp

; 234  : 	return 0;

	xor	eax, eax
	pop	ebx

; 235  : }

	ret	0
??$BasicLuaMethod@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4ResourceTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ResourceTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>, COMDAT

; 230  : {

	push	ebx
	push	ebp
	push	esi

; 231  : 	const int idx = Derived::GetStartingArgIndex();
; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@6
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@6
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@6
	xor	bl, bl
$LN7@BasicLuaMe@6:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@6
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@6:

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	push	2
	push	esi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	movzx	ecx, al
	push	ecx
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	pop	edi
	pop	esi
	pop	ebp

; 234  : 	return 0;

	xor	eax, eax
	pop	ebx

; 235  : }

	ret	0
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@7
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@7
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@7
	xor	bl, bl
$LN5@BasicLuaMe@7:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@7
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@7:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@8
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@8
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@8
	xor	bl, bl
$LN5@BasicLuaMe@8:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@8
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@8:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4UnitTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4UnitTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes>, COMDAT

; 130  : {

	push	ebx
	push	ebp
	push	esi

; 131  : 	const int idx = Derived::GetStartingArgIndex();
; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@9
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@9
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@9
	xor	bl, bl
$LN7@BasicLuaMe@9:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@9
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@9:

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 134  : 
; 135  : 	return 1;

	mov	eax, 1
	pop	ebx

; 136  : }

	ret	0
??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4UnitTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4UnitTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum UnitTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4UnitTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4UnitTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum UnitTypes>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@10
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@10
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@10
	xor	bl, bl
$LN5@BasicLuaMe@10:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@10
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@10:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4UnitTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum UnitTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4ProcessTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4ProcessTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ProcessTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4ProcessTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4ProcessTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4ProcessTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4ProcessTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ProcessTypes>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@11
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@11
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@11
	xor	bl, bl
$LN5@BasicLuaMe@11:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@11
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@11:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@W4ProcessTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4ProcessTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ProcessTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@12
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@12
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@12
	xor	bl, bl
$LN7@BasicLuaMe@12:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@12
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@12:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4ProjectTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4ProjectTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@13
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@13
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@13
	xor	bl, bl
$LN7@BasicLuaMe@13:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@13
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@13:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4ProjectTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4SpecialistTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4SpecialistTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum SpecialistTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4SpecialistTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4SpecialistTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4SpecialistTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4SpecialistTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum SpecialistTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@14
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@14
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@14
	xor	bl, bl
$LN7@BasicLuaMe@14:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@14
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@14:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4SpecialistTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4SpecialistTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum SpecialistTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4UnitAITypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitAITypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitAITypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4UnitAITypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitAITypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4UnitAITypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitAITypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitAITypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@15
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@15
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@15
	xor	bl, bl
$LN7@BasicLuaMe@15:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@15
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@15:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4UnitAITypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitAITypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitAITypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@16
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@16
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@16
	xor	bl, bl
$LN7@BasicLuaMe@16:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@16
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@16:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum UnitTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4UnitTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4UnitTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum UnitTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@17
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@17
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@17
	xor	bl, bl
$LN7@BasicLuaMe@17:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@17
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@17:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@_NW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4UnitTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum UnitTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4UnitTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4UnitTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4UnitTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes,int>, COMDAT

; 88   : {

	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@18
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@18
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@18
	xor	bl, bl
$LN7@BasicLuaMe@18:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@18
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@18:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	ret	0
??$BasicLuaMethod@HW4UnitTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4BuildingTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4BuildingTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4BuildingTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes,int>, COMDAT

; 88   : {

	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@19
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@19
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@19
	xor	bl, bl
$LN7@BasicLuaMe@19:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@19
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@19:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	ret	0
??$BasicLuaMethod@HW4BuildingTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4ProjectTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4ProjectTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4ProjectTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes,int>, COMDAT

; 88   : {

	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@20
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@20
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@20
	xor	bl, bl
$LN7@BasicLuaMe@20:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@20
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@20:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	ret	0
??$BasicLuaMethod@HW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4ProjectTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4SpecialistTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4SpecialistTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum SpecialistTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4SpecialistTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4SpecialistTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4SpecialistTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4SpecialistTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum SpecialistTypes,int>, COMDAT

; 88   : {

	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@21
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@21
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@21
	xor	bl, bl
$LN7@BasicLuaMe@21:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@21
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@21:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	ret	0
??$BasicLuaMethod@HW4SpecialistTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4SpecialistTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum SpecialistTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4UnitTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4UnitTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4UnitTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4UnitTypes@@_N@Z@Z
_TEXT	SEGMENT
$T226183 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4UnitTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4UnitTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes,bool>, COMDAT

; 140  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 141  : 	const int idx = Derived::GetStartingArgIndex();
; 142  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@22
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@22
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@22
	xor	bl, bl
$LN7@BasicLuaMe@22:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@22
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@22:

; 143  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	2
	push	esi
	mov	BYTE PTR $T226183[esp+36], al
	call	_lua_tointeger
	mov	ecx, DWORD PTR $T226183[esp+36]
	add	esp, 16					; 00000010H
	push	ecx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 144  : 
; 145  : 	return 1;

	mov	eax, 1
	pop	ebx

; 146  : }

	pop	ecx
	ret	0
??$BasicLuaMethod@HW4UnitTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4UnitTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4BuildingTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4BuildingTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes>, COMDAT

; 130  : {

	push	ebx
	push	ebp
	push	esi

; 131  : 	const int idx = Derived::GetStartingArgIndex();
; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@23
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@23
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@23
	xor	bl, bl
$LN7@BasicLuaMe@23:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@23
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@23:

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 134  : 
; 135  : 	return 1;

	mov	eax, 1
	pop	ebx

; 136  : }

	ret	0
??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4BuildingTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4ProjectTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4ProjectTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes>, COMDAT

; 130  : {

	push	ebx
	push	ebp
	push	esi

; 131  : 	const int idx = Derived::GetStartingArgIndex();
; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@24
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@24
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@24
	xor	bl, bl
$LN7@BasicLuaMe@24:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@24
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@24:

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 134  : 
; 135  : 	return 1;

	mov	eax, 1
	pop	ebx

; 136  : }

	ret	0
??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4ProjectTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N1@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N1@Z@Z
_TEXT	SEGMENT
$T226298 = -8						; size = 1
$T226302 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N1@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,bool>, COMDAT

; 88   : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@25
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@25
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@25
	xor	bl, bl
$LN7@BasicLuaMe@25:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@25
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@25:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	2
	push	esi
	mov	BYTE PTR $T226298[esp+40], al
	call	_lua_toboolean
	mov	edx, DWORD PTR $T226298[esp+40]
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	cl
	mov	BYTE PTR $T226302[esp+24], cl
	mov	eax, DWORD PTR $T226302[esp+24]
	push	edx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+28]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	add	esp, 8
	ret	0
??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N1@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHH@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,int>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@26
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@26
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@26
	xor	bl, bl
$LN7@BasicLuaMe@26:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@26
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@26:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4HurryTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4HurryTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum HurryTypes,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4HurryTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4HurryTypes@@_N@Z@Z
_TEXT	SEGMENT
$T226376 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4HurryTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4HurryTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum HurryTypes,bool>, COMDAT

; 88   : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@27
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@27
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@27
	xor	bl, bl
$LN7@BasicLuaMe@27:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@27
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@27:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	2
	push	esi
	mov	BYTE PTR $T226376[esp+36], al
	call	_lua_tointeger
	mov	ecx, DWORD PTR $T226376[esp+36]
	add	esp, 16					; 00000010H
	push	ecx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	movzx	edx, al
	push	edx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	pop	ecx
	ret	0
??$BasicLuaMethod@_NW4HurryTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4HurryTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum HurryTypes,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum HurryTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4HurryTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4HurryTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum HurryTypes>, COMDAT

; 230  : {

	push	ebx
	push	ebp
	push	esi

; 231  : 	const int idx = Derived::GetStartingArgIndex();
; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@28
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@28
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@28
	xor	bl, bl
$LN7@BasicLuaMe@28:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@28
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@28:

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	pop	edi
	pop	esi
	pop	ebp

; 234  : 	return 0;

	xor	eax, eax
	pop	ebx

; 235  : }

	ret	0
??$BasicLuaMethod@W4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4HurryTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum HurryTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4YieldTypes@@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@W4ResourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes,enum ResourceTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4YieldTypes@@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@W4ResourceTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4YieldTypes@@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@W4ResourceTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes,enum ResourceTypes>, COMDAT

; 88   : {

	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@29
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@29
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@29
	xor	bl, bl
$LN7@BasicLuaMe@29:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@29
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@29:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	ret	0
??$BasicLuaMethod@HW4YieldTypes@@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@W4ResourceTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes,enum ResourceTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4HandicapTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum HandicapTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4HandicapTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4HandicapTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum HandicapTypes>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@30
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@30
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@30
	xor	bl, bl
$LN5@BasicLuaMe@30:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@30
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@30:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4HandicapTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum HandicapTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4CivilizationTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum CivilizationTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4CivilizationTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4CivilizationTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum CivilizationTypes>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@31
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@31
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@31
	xor	bl, bl
$LN5@BasicLuaMe@31:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@31
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@31:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4CivilizationTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum CivilizationTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4TeamTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum TeamTypes,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4TeamTypes@@_N@Z@Z
_TEXT	SEGMENT
$T226550 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4TeamTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum TeamTypes,bool>, COMDAT

; 88   : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@32
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@32
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@32
	xor	bl, bl
$LN7@BasicLuaMe@32:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@32
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@32:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	2
	push	esi
	mov	BYTE PTR $T226550[esp+36], al
	call	_lua_tointeger
	mov	ecx, DWORD PTR $T226550[esp+36]
	add	esp, 16					; 00000010H
	push	ecx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	movzx	edx, al
	push	edx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	pop	ecx
	ret	0
??$BasicLuaMethod@_NW4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4TeamTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum TeamTypes,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NH@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,int>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@33
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@33
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@33
	xor	bl, bl
$LN7@BasicLuaMe@33:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@33
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@33:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@_NH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H_NH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_NH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@H_NH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_NH@Z@Z
_TEXT	SEGMENT
$T226632 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H_NH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_NH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,int>, COMDAT

; 88   : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@34
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@34
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@34
	xor	bl, bl
$LN7@BasicLuaMe@34:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@34
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@34:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	al
	mov	BYTE PTR $T226632[esp+20], al
	mov	ecx, DWORD PTR $T226632[esp+20]
	push	ebx
	push	ecx
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	pop	ecx
	ret	0
??$BasicLuaMethod@H_NH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_NH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N@Z@Z
_TEXT	SEGMENT
$T226669 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool>, COMDAT

; 78   : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@35
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@35
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@35
	xor	bl, bl
$LN7@BasicLuaMe@35:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@35
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@35:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR $T226669[esp+20], al
	mov	ecx, DWORD PTR $T226669[esp+20]
	push	ecx
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	pop	ecx
	ret	0
??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H_NPAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_NPAVCvString@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,CvString *>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@H_NPAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_NPAVCvString@@@Z@Z
_TEXT	SEGMENT
$T226710 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H_NPAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_NPAVCvString@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,CvString *>, COMDAT

; 88   : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@36
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@36
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@36
	xor	bl, bl
$LN7@BasicLuaMe@36:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@36
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@36:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	al
	mov	BYTE PTR $T226710[esp+20], al
	mov	ecx, DWORD PTR $T226710[esp+20]
	push	ebx
	push	ecx
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	pop	ecx
	ret	0
??$BasicLuaMethod@H_NPAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_NPAVCvString@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,CvString *>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4HurryTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum HurryTypes,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4HurryTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@_N@Z@Z
_TEXT	SEGMENT
$T226747 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4HurryTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum HurryTypes,bool>, COMDAT

; 88   : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@37
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@37
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@37
	xor	bl, bl
$LN7@BasicLuaMe@37:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@37
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@37:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	2
	push	esi
	mov	BYTE PTR $T226747[esp+36], al
	call	_lua_tointeger
	mov	ecx, DWORD PTR $T226747[esp+36]
	add	esp, 16					; 00000010H
	push	ecx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	pop	ecx
	ret	0
??$BasicLuaMethod@HW4HurryTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum HurryTypes,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum HurryTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum HurryTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@38
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@38
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@38
	xor	bl, bl
$LN7@BasicLuaMe@38:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@38
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@38:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum HurryTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@J@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEJXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<long>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@J@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEJXZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@J@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEJXZ@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<long>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@39
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@39
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@39
	xor	bl, bl
$LN5@BasicLuaMe@39:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@39
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@39:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@J@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEJXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<long>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4BuildingTypes@@PAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@PAVCvString@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes,CvString *>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4BuildingTypes@@PAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@PAVCvString@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4BuildingTypes@@PAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@PAVCvString@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes,CvString *>, COMDAT

; 88   : {

	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@40
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@40
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@40
	xor	bl, bl
$LN7@BasicLuaMe@40:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@40
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@40:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	ret	0
??$BasicLuaMethod@HW4BuildingTypes@@PAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@PAVCvString@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes,CvString *>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N1@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N1@Z@Z
_TEXT	SEGMENT
$T226896 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N1@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,bool>, COMDAT

; 239  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 240  : 	const int idx = Derived::GetStartingArgIndex();
; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@41
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@41
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@41
	xor	bl, bl
$LN7@BasicLuaMe@41:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@41
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@41:

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	push	3
	push	esi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR $T226896[esp+20], al
	mov	ecx, DWORD PTR $T226896[esp+20]
	push	ecx
	push	2
	push	esi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	movzx	eax, dl
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	pop	edi
	pop	esi
	pop	ebp

; 243  : 	return 0;

	xor	eax, eax
	pop	ebx

; 244  : }

	pop	ecx
	ret	0
??$BasicLuaMethod@_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N1@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum PlayerTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4PlayerTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4PlayerTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum PlayerTypes>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@42
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@42
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@42
	xor	bl, bl
$LN5@BasicLuaMe@42:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@42
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@42:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4PlayerTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum PlayerTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum TeamTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4TeamTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4TeamTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum TeamTypes>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@43
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@43
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@43
	xor	bl, bl
$LN5@BasicLuaMe@43:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@43
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@43:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4TeamTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum TeamTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@44
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@44
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@44
	xor	bl, bl
$LN7@BasicLuaMe@44:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@44
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@44:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4YieldTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum YieldTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4YieldTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4YieldTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum YieldTypes,int>, COMDAT

; 239  : {

	push	ebx
	push	ebp
	push	esi

; 240  : 	const int idx = Derived::GetStartingArgIndex();
; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@45
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@45
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@45
	xor	bl, bl
$LN7@BasicLuaMe@45:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@45
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@45:

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	push	3
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	pop	edi
	pop	esi
	pop	ebp

; 243  : 	return 0;

	xor	eax, eax
	pop	ebx

; 244  : }

	ret	0
??$BasicLuaMethod@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4YieldTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum YieldTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4YieldTypes@@W4SpecialistTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@W4SpecialistTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes,enum SpecialistTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4YieldTypes@@W4SpecialistTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@W4SpecialistTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4YieldTypes@@W4SpecialistTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@W4SpecialistTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes,enum SpecialistTypes>, COMDAT

; 88   : {

	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@46
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@46
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@46
	xor	bl, bl
$LN7@BasicLuaMe@46:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@46
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@46:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	ret	0
??$BasicLuaMethod@HW4YieldTypes@@W4SpecialistTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@W4SpecialistTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes,enum SpecialistTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4DomainTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4DomainTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum DomainTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4DomainTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4DomainTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4DomainTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4DomainTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum DomainTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@47
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@47
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@47
	xor	bl, bl
$LN7@BasicLuaMe@47:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@47
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@47:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4DomainTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4DomainTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum DomainTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum PlayerTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4PlayerTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4PlayerTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum PlayerTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@48
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@48
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@48
	xor	bl, bl
$LN7@BasicLuaMe@48:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@48
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@48:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@_NW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4PlayerTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum PlayerTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AE_NW4TeamTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum TeamTypes,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AE_NW4TeamTypes@@_N@Z@Z
_TEXT	SEGMENT
$T227180 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AE_NW4TeamTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum TeamTypes,bool>, COMDAT

; 140  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 141  : 	const int idx = Derived::GetStartingArgIndex();
; 142  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@49
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@49
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@49
	xor	bl, bl
$LN7@BasicLuaMe@49:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@49
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@49:

; 143  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	2
	push	esi
	mov	BYTE PTR $T227180[esp+36], al
	call	_lua_tointeger
	mov	ecx, DWORD PTR $T227180[esp+36]
	add	esp, 16					; 00000010H
	push	ecx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	movzx	edx, al
	push	edx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 144  : 
; 145  : 	return 1;

	mov	eax, 1
	pop	ebx

; 146  : }

	pop	ecx
	ret	0
??$BasicLuaMethod@_NW4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AE_NW4TeamTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum TeamTypes,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4UnitCombatTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitCombatTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitCombatTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4UnitCombatTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitCombatTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4UnitCombatTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitCombatTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitCombatTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@50
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@50
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@50
	xor	bl, bl
$LN7@BasicLuaMe@50:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@50
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@50:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4UnitCombatTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitCombatTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitCombatTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4PromotionTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4PromotionTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum PromotionTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4PromotionTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4PromotionTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4PromotionTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4PromotionTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum PromotionTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@51
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@51
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@51
	xor	bl, bl
$LN7@BasicLuaMe@51:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@51
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@51:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4PromotionTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4PromotionTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum PromotionTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4PromotionTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4PromotionTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum PromotionTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4PromotionTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4PromotionTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4PromotionTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4PromotionTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum PromotionTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@52
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@52
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@52
	xor	bl, bl
$LN7@BasicLuaMe@52:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@52
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@52:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@_NW4PromotionTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4PromotionTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum PromotionTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH_N@Z@Z
_TEXT	SEGMENT
$T227332 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool>, COMDAT

; 239  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 240  : 	const int idx = Derived::GetStartingArgIndex();
; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@53
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@53
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@53
	xor	bl, bl
$LN7@BasicLuaMe@53:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@53
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@53:

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	push	3
	push	esi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR $T227332[esp+20], al
	mov	ecx, DWORD PTR $T227332[esp+20]
	push	ecx
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	pop	edi
	pop	esi
	pop	ebp

; 243  : 	return 0;

	xor	eax, eax
	pop	ebx

; 244  : }

	pop	ecx
	ret	0
??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NHH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NHH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,int,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NHH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NHH@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NHH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NHH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,int,int>, COMDAT

; 88   : {

	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@54
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@54
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@54
	xor	bl, bl
$LN7@BasicLuaMe@54:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@54
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@54:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	ret	0
??$BasicLuaMethod@_NHH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NHH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,int,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHXZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHXZ@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>, COMDAT

; 121  : {

	push	ebx
	push	ebp
	push	esi

; 122  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@55
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@55
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@55
	xor	bl, bl
$LN5@BasicLuaMe@55:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@55
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@55:

; 123  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 124  : 
; 125  : 	return 1;

	mov	eax, 1
	pop	ebx

; 126  : }

	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
_TEXT	ENDS
PUBLIC	?GetID@CvCity@@QBEHXZ				; CvCity::GetID
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\cvcity.h
;	COMDAT ?GetID@CvCity@@QBEHXZ
_TEXT	SEGMENT
?GetID@CvCity@@QBEHXZ PROC				; CvCity::GetID, COMDAT
; _this$ = ecx

; 331  : 		return m_iID;

	mov	eax, DWORD PTR [ecx+120]

; 332  : 	}

	ret	0
?GetID@CvCity@@QBEHXZ ENDP				; CvCity::GetID
_TEXT	ENDS
PUBLIC	?getX@CvCity@@QBEHXZ				; CvCity::getX
; Function compile flags: /Ogtpy
;	COMDAT ?getX@CvCity@@QBEHXZ
_TEXT	SEGMENT
?getX@CvCity@@QBEHXZ PROC				; CvCity::getX, COMDAT
; _this$ = ecx

; 340  : 		return m_iX;

	mov	eax, DWORD PTR [ecx+96]

; 341  : 	}

	ret	0
?getX@CvCity@@QBEHXZ ENDP				; CvCity::getX
_TEXT	ENDS
PUBLIC	?getY@CvCity@@QBEHXZ				; CvCity::getY
; Function compile flags: /Ogtpy
;	COMDAT ?getY@CvCity@@QBEHXZ
_TEXT	SEGMENT
?getY@CvCity@@QBEHXZ PROC				; CvCity::getY, COMDAT
; _this$ = ecx

; 345  : 		return m_iY;

	mov	eax, DWORD PTR [ecx+108]

; 346  : 	}

	ret	0
?getY@CvCity@@QBEHXZ ENDP				; CvCity::getY
_TEXT	ENDS
PUBLIC	?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ	; CvCity::getOwner
; Function compile flags: /Ogtpy
;	COMDAT ?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ PROC		; CvCity::getOwner, COMDAT
; _this$ = ecx

; 604  : 		return m_eOwner;

	mov	eax, DWORD PTR [ecx+84]

; 605  : 	}

	ret	0
?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ ENDP		; CvCity::getOwner
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ ; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@HV?$allocator@H@std@@@std@@IAE@V?$allocator@H@1@@Z ; std::_Vector_val<int,std::allocator<int> >::_Vector_val<int,std::allocator<int> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ??0?$_Vector_val@HV?$allocator@H@std@@@std@@IAE@V?$allocator@H@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@HV?$allocator@H@std@@@std@@IAE@V?$allocator@H@1@@Z PROC ; std::_Vector_val<int,std::allocator<int> >::_Vector_val<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 425  : 		{	// construct allocator from _Al

	mov	eax, ecx

; 426  : 		}

	ret	4
??0?$_Vector_val@HV?$allocator@H@std@@@std@@IAE@V?$allocator@H@1@@Z ENDP ; std::_Vector_val<int,std::allocator<int> >::_Vector_val<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC ; std::vector<int,std::allocator<int> >::max_size, COMDAT
; _this$ = ecx

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 1073741823				; 3fffffffH

; 732  : 		}

	ret	0
?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP ; std::vector<int,std::allocator<int> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@H@std@@QAEPAHI@Z		; std::allocator<int>::allocate
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@H@std@@QAEPAHI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@H@std@@QAEPAHI@Z PROC		; std::allocator<int>::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@H@std@@YAPAHIPAH@Z		; std::_Allocate<int>
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@H@std@@QAEPAHI@Z ENDP		; std::allocator<int>::allocate
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z PROC ; std::_Destroy_range<std::allocator<int> >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z ENDP ; std::_Destroy_range<std::allocator<int> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z ; std::_Vector_iterator<int,std::allocator<int> >::_Vector_iterator<int,std::allocator<int> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z PROC ; std::_Vector_iterator<int,std::allocator<int> >::_Vector_iterator<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z ENDP ; std::_Vector_iterator<int,std::allocator<int> >::_Vector_iterator<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<int,std::allocator<int> >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<int,std::allocator<int> >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<int,std::allocator<int> >::operator!=
_TEXT	ENDS
PUBLIC	??$unchecked_copy@PAHPAH@stdext@@YAPAHPAH00@Z	; stdext::unchecked_copy<int *,int *>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xutility
;	COMDAT ??$unchecked_copy@PAHPAH@stdext@@YAPAHPAH00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAHPAH@stdext@@YAPAHPAH00@Z PROC	; stdext::unchecked_copy<int *,int *>, COMDAT

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]
	test	eax, eax
	jle	SHORT $LN10@unchecked_
	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN10@unchecked_:
	pop	edi
	mov	eax, esi
	pop	esi

; 3607 : 	}

	ret	0
??$unchecked_copy@PAHPAH@stdext@@YAPAHPAH00@Z ENDP	; stdext::unchecked_copy<int *,int *>
_TEXT	ENDS
PUBLIC	??Y?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<int,std::allocator<int> >::operator+=
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ??Y?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<int,std::allocator<int> >::operator+=, COMDAT
; _this$ = ecx

; 374  : 		{	// increment by integer

	mov	eax, ecx

; 375  : 		(*(_Mybase *)this) += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [ecx*4]
	add	DWORD PTR [eax], edx

; 376  : 		return (*this);
; 377  : 		}

	ret	4
??Y?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<int,std::allocator<int> >::operator+=
_TEXT	ENDS
PUBLIC	??$fill@PAHH@std@@YAXPAH0ABH@Z			; std::fill<int *,int>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xutility
;	COMDAT ??$fill@PAHH@std@@YAXPAH0ABH@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAHH@std@@YAXPAH0ABH@Z PROC			; std::fill<int *,int>, COMDAT

; 3187 : 	_Fill(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val);

	mov	eax, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN3@fill
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL5@fill:
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	add	eax, 4
	cmp	eax, ecx
	jne	SHORT $LL5@fill
	pop	esi
$LN3@fill:

; 3188 : 	}

	ret	0
??$fill@PAHH@std@@YAXPAH0ABH@Z ENDP			; std::fill<int *,int>
_TEXT	ENDS
PUBLIC	??$_Move_backward_opt@PAHPAHUrandom_access_iterator_tag@std@@U_Undefined_move_tag@2@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<int *,int *,std::random_access_iterator_tag,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_backward_opt@PAHPAHUrandom_access_iterator_tag@std@@U_Undefined_move_tag@2@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__First_dest_cat$ = 20					; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Move_backward_opt@PAHPAHUrandom_access_iterator_tag@std@@U_Undefined_move_tag@2@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<int *,int *,std::random_access_iterator_tag,std::_Undefined_move_tag>, COMDAT

; 2753 : 	return _Copy_backward_opt(_First, _Last, _Dest,
; 2754 : 		_First_dest_cat, _Ptr_cat(_First, _Dest), _Range_checked_iterator_tag());

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	sar	eax, 2
	push	esi
	mov	esi, DWORD PTR __Dest$[esp]
	lea	ecx, DWORD PTR [eax*4]
	sub	esi, ecx
	test	eax, eax
	jle	SHORT $LN8@Move_backw
	push	ecx
	push	edx
	push	ecx
	push	esi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN8@Move_backw:
	mov	eax, esi
	pop	esi

; 2755 : 	}

	ret	0
??$_Move_backward_opt@PAHPAHUrandom_access_iterator_tag@std@@U_Undefined_move_tag@2@@std@@YAPAHPAH00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<int *,int *,std::random_access_iterator_tag,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$_Fill_n@PAHIHUrandom_access_iterator_tag@std@@@std@@YAXPAHIABHUrandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Fill_n<int *,unsigned int,int,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Fill_n@PAHIHUrandom_access_iterator_tag@std@@@std@@YAXPAHIABHUrandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
??$_Fill_n@PAHIHUrandom_access_iterator_tag@std@@@std@@YAXPAHIABHUrandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Fill_n<int *,unsigned int,int,std::random_access_iterator_tag>, COMDAT

; 3242 : 		_Fill_n(_First, _Count, _Val, _Range_checked_iterator_tag());

	mov	eax, DWORD PTR __Count$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	test	eax, eax
	jbe	SHORT $LN3@Fill_n@2
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL5@Fill_n@2:
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [ecx], esi
	dec	eax
	add	ecx, 4
	test	eax, eax
	ja	SHORT $LL5@Fill_n@2
	pop	esi
$LN3@Fill_n@2:

; 3243 : 	}

	ret	0
??$_Fill_n@PAHIHUrandom_access_iterator_tag@std@@@std@@YAXPAHIABHUrandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Fill_n<int *,unsigned int,int,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_copy@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z ; stdext::unchecked_uninitialized_copy<int *,int *,std::allocator<int> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_copy@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z PROC ; stdext::unchecked_uninitialized_copy<int *,int *,std::allocator<int> >, COMDAT

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]
	test	eax, eax
	jbe	SHORT $LN8@unchecked_@2
	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN8@unchecked_@2:
	pop	edi
	mov	eax, esi
	pop	esi

; 823  : 	}

	ret	0
??$unchecked_uninitialized_copy@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z ENDP ; stdext::unchecked_uninitialized_copy<int *,int *,std::allocator<int> >
_TEXT	ENDS
PUBLIC	?lIsNone@CvLuaCity@@KAHPAUlua_State@@@Z		; CvLuaCity::lIsNone
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
;	COMDAT ?lIsNone@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsNone@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lIsNone, COMDAT

; 501  : {

	push	ebx
	push	ebp
	push	esi

; 502  : #ifdef AUI_WARNING_FIXES
; 503  : 	const bool bDoesNotExist = (GetInstance(L, 1, false) == NULL);
; 504  : #else
; 505  : 	const bool bDoesNotExist = (GetInstance(L, false) == NULL);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	xor	edi, edi
	push	edi
	push	esi
	mov	ebp, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsNone
	push	OFFSET $SG223798
	push	edi
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsNone
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsNone
	xor	bl, bl
$LN5@lIsNone:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsNone
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 8
$LN12@lIsNone:
	xor	eax, eax
	test	edi, edi
	sete	al

; 506  : #endif
; 507  : 	lua_pushboolean(L, bDoesNotExist);

	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 508  : 
; 509  : 	return 1;

	mov	eax, 1
	pop	ebx

; 510  : }

	ret	0
?lIsNone@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lIsNone
_TEXT	ENDS
PUBLIC	?lKill@CvLuaCity@@KAHPAUlua_State@@@Z		; CvLuaCity::lKill
EXTRN	?kill@CvCity@@QAEXXZ:PROC			; CvCity::kill
; Function compile flags: /Ogtpy
;	COMDAT ?lKill@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lKill@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lKill, COMDAT

; 514  : {

	push	ebx
	push	ebp
	push	esi

; 515  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lKill
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lKill
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lKill
	xor	bl, bl
$LN5@lKill:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lKill
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lKill:

; 516  : 	pkCity->kill();

	mov	ecx, edi
	call	?kill@CvCity@@QAEXXZ			; CvCity::kill
	pop	edi
	pop	esi
	pop	ebp

; 517  : 
; 518  : 	return 1;

	mov	eax, 1
	pop	ebx

; 519  : }

	ret	0
?lKill@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lKill
_TEXT	ENDS
PUBLIC	?lCreateGreatGeneral@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCreateGreatGeneral
EXTRN	?createGreatGeneral@CvCity@@QAEXW4UnitTypes@@@Z:PROC ; CvCity::createGreatGeneral
; Function compile flags: /Ogtpy
;	COMDAT ?lCreateGreatGeneral@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCreateGreatGeneral@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lCreateGreatGeneral, COMDAT

; 524  : 	return BasicLuaMethod(L, &CvCity::createGreatGeneral);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?createGreatGeneral@CvCity@@QAEXW4UnitTypes@@@Z ; CvCity::createGreatGeneral
	push	eax
	call	??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum UnitTypes>
	add	esp, 8

; 525  : }

	ret	0
?lCreateGreatGeneral@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lCreateGreatGeneral
_TEXT	ENDS
PUBLIC	?lCreateGreatAdmiral@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCreateGreatAdmiral
EXTRN	?createGreatAdmiral@CvCity@@QAEXW4UnitTypes@@@Z:PROC ; CvCity::createGreatAdmiral
; Function compile flags: /Ogtpy
;	COMDAT ?lCreateGreatAdmiral@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCreateGreatAdmiral@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lCreateGreatAdmiral, COMDAT

; 530  : 	return BasicLuaMethod(L, &CvCity::createGreatAdmiral);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?createGreatAdmiral@CvCity@@QAEXW4UnitTypes@@@Z ; CvCity::createGreatAdmiral
	push	eax
	call	??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum UnitTypes>
	add	esp, 8

; 531  : }

	ret	0
?lCreateGreatAdmiral@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lCreateGreatAdmiral
_TEXT	ENDS
PUBLIC	?lDoTask@CvLuaCity@@KAHPAUlua_State@@@Z		; CvLuaCity::lDoTask
EXTRN	?doTask@CvCity@@QAE?AW4CityTaskResult@@W4TaskTypes@@HH_N111@Z:PROC ; CvCity::doTask
EXTRN	_luaL_optinteger:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?lDoTask@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bOption$ = -8						; size = 1
_iData2$ = -4						; size = 4
_L$ = 8							; size = 4
?lDoTask@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lDoTask, COMDAT

; 535  : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 536  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN14@lDoTask
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN14@lDoTask
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN14@lDoTask
	xor	bl, bl
$LN14@lDoTask:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lDoTask
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lDoTask:

; 537  : 	const TaskTypes eTask = (TaskTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 538  : 	const int iData1 = luaL_optint(L, 3, -1);

	push	-1
	push	3
	push	esi
	mov	ebx, eax
	call	_luaL_optinteger

; 539  : 	const int iData2 = luaL_optint(L, 4, -1);

	push	-1
	push	4
	push	esi
	mov	ebp, eax
	call	_luaL_optinteger

; 540  : 	const bool bOption = luaL_optint(L, 5, 0);

	push	0
	push	5
	push	esi
	mov	DWORD PTR _iData2$[esp+68], eax
	call	_luaL_optinteger

; 541  : 	pkCity->doTask(eTask, iData1, iData2, bOption);

	mov	edx, DWORD PTR _iData2$[esp+68]
	add	esp, 44					; 0000002cH
	push	0
	test	eax, eax
	push	0
	setne	al
	push	0
	mov	BYTE PTR _bOption$[esp+36], al
	mov	ecx, DWORD PTR _bOption$[esp+36]
	push	ecx
	push	edx
	push	ebp
	push	ebx
	mov	ecx, edi
	call	?doTask@CvCity@@QAE?AW4CityTaskResult@@W4TaskTypes@@HH_N111@Z ; CvCity::doTask
	pop	edi
	pop	esi
	pop	ebp

; 542  : 
; 543  : 	return 1;

	mov	eax, 1
	pop	ebx

; 544  : }

	add	esp, 8
	ret	0
?lDoTask@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lDoTask
_TEXT	ENDS
PUBLIC	?lChooseProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChooseProduction
EXTRN	?chooseProduction@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@_N3@Z:PROC ; CvCity::chooseProduction
; Function compile flags: /Ogtpy
;	COMDAT ?lChooseProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChooseProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lChooseProduction, COMDAT

; 548  : {

	push	ebx
	push	ebp
	push	esi

; 549  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lChoosePro
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lChoosePro
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lChoosePro
	xor	bl, bl
$LN5@lChoosePro:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lChoosePro
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lChoosePro:

; 550  : 	pkCity->chooseProduction();

	push	0
	push	0
	push	-1
	push	-1
	push	-1
	mov	ecx, edi
	call	?chooseProduction@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@_N3@Z ; CvCity::chooseProduction
	pop	edi
	pop	esi
	pop	ebp

; 551  : 
; 552  : 	return 1;

	mov	eax, 1
	pop	ebx

; 553  : }

	ret	0
?lChooseProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lChooseProduction
_TEXT	ENDS
PUBLIC	?lGetCityPlotIndex@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCityPlotIndex
EXTRN	?GetCityIndexFromPlot@CvCityCitizens@@QBEHPBVCvPlot@@@Z:PROC ; CvCityCitizens::GetCityIndexFromPlot
EXTRN	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ:PROC ; CvCity::GetCityCitizens
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCityPlotIndex@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$227716 = -4					; size = 4
_L$ = 8							; size = 4
?lGetCityPlotIndex@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetCityPlotIndex, COMDAT

; 557  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 558  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$227716[esp+32], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCityPl
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCityPl
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$227716[esp+20], eax
	test	eax, eax
	je	SHORT $LN5@lGetCityPl
	xor	bl, bl
$LN5@lGetCityPl:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetCityPl
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetCityPl:

; 559  : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lGetCityPl
	push	OFFSET $SG223846
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lGetCityPl
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN16@lGetCityPl
	xor	bl, bl
$LN16@lGetCityPl:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lGetCityPl
	push	esi
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 4
$LN15@lGetCityPl:

; 560  : 	const int iResult = pkCity->GetCityCitizens()->GetCityIndexFromPlot(pkPlot);

	mov	ecx, DWORD PTR _pkInstance$227716[esp+20]
	push	edi
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?GetCityIndexFromPlot@CvCityCitizens@@QBEHPBVCvPlot@@@Z ; CvCityCitizens::GetCityIndexFromPlot

; 561  : 
; 562  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 563  : 	return 1;

	mov	eax, 1
	pop	ebx

; 564  : }

	pop	ecx
	ret	0
?lGetCityPlotIndex@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetCityPlotIndex
_TEXT	ENDS
PUBLIC	?lGetCityIndexPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCityIndexPlot
EXTRN	?GetCityPlotFromIndex@CvCityCitizens@@QBEPAVCvPlot@@H@Z:PROC ; CvCityCitizens::GetCityPlotFromIndex
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCityIndexPlot@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCityIndexPlot@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetCityIndexPlot, COMDAT

; 568  : {

	push	ebx
	push	ebp
	push	esi

; 569  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCityIn
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCityIn
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetCityIn
	xor	bl, bl
$LN5@lGetCityIn:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetCityIn
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetCityIn:

; 570  : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 571  : 
; 572  : 	CvPlot* pkPlot = pkCity->GetCityCitizens()->GetCityPlotFromIndex(iIndex);

	push	eax
	mov	ecx, edi
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?GetCityPlotFromIndex@CvCityCitizens@@QBEPAVCvPlot@@H@Z ; CvCityCitizens::GetCityPlotFromIndex

; 573  : 	CvLuaPlot::Push(L, pkPlot);

	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 574  : 	return 1;

	mov	eax, 1
	pop	ebx

; 575  : }

	ret	0
?lGetCityIndexPlot@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetCityIndexPlot
_TEXT	ENDS
PUBLIC	?lCanWork@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanWork
EXTRN	?IsCanWork@CvCityCitizens@@QBE_NPAVCvPlot@@@Z:PROC ; CvCityCitizens::IsCanWork
; Function compile flags: /Ogtpy
;	COMDAT ?lCanWork@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$227779 = -4					; size = 4
_L$ = 8							; size = 4
?lCanWork@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lCanWork, COMDAT

; 579  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 580  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$227779[esp+32], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanWork
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanWork
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$227779[esp+20], eax
	test	eax, eax
	je	SHORT $LN5@lCanWork
	xor	bl, bl
$LN5@lCanWork:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanWork
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanWork:

; 581  : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lCanWork
	push	OFFSET $SG223846
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lCanWork
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN16@lCanWork
	xor	bl, bl
$LN16@lCanWork:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lCanWork
	push	esi
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 4
$LN15@lCanWork:

; 582  : 	const bool bResult = pkCity->GetCityCitizens()->IsCanWork(pkPlot);

	mov	ecx, DWORD PTR _pkInstance$227779[esp+20]
	push	edi
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?IsCanWork@CvCityCitizens@@QBE_NPAVCvPlot@@@Z ; CvCityCitizens::IsCanWork

; 583  : 
; 584  : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 585  : 	return 1;

	mov	eax, 1
	pop	ebx

; 586  : }

	pop	ecx
	ret	0
?lCanWork@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lCanWork
_TEXT	ENDS
PUBLIC	?lIsPlotBlockaded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsPlotBlockaded
EXTRN	?IsPlotBlockaded@CvCityCitizens@@QBE_NPAVCvPlot@@@Z:PROC ; CvCityCitizens::IsPlotBlockaded
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlotBlockaded@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$227816 = -4					; size = 4
_L$ = 8							; size = 4
?lIsPlotBlockaded@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsPlotBlockaded, COMDAT

; 590  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 591  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$227816[esp+32], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlotBlo
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlotBlo
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$227816[esp+20], eax
	test	eax, eax
	je	SHORT $LN5@lIsPlotBlo
	xor	bl, bl
$LN5@lIsPlotBlo:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlotBlo
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlotBlo:

; 592  : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lIsPlotBlo
	push	OFFSET $SG223846
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lIsPlotBlo
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN16@lIsPlotBlo
	xor	bl, bl
$LN16@lIsPlotBlo:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lIsPlotBlo
	push	esi
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 4
$LN15@lIsPlotBlo:

; 593  : 	const bool bResult = pkCity->GetCityCitizens()->IsPlotBlockaded(pkPlot);

	mov	ecx, DWORD PTR _pkInstance$227816[esp+20]
	push	edi
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?IsPlotBlockaded@CvCityCitizens@@QBE_NPAVCvPlot@@@Z ; CvCityCitizens::IsPlotBlockaded

; 594  : 
; 595  : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 596  : 	return 1;

	mov	eax, 1
	pop	ebx

; 597  : }

	pop	ecx
	ret	0
?lIsPlotBlockaded@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsPlotBlockaded
_TEXT	ENDS
PUBLIC	?lClearWorkingOverride@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lClearWorkingOverride
EXTRN	?clearWorkingOverride@CvCity@@QAEXH@Z:PROC	; CvCity::clearWorkingOverride
; Function compile flags: /Ogtpy
;	COMDAT ?lClearWorkingOverride@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lClearWorkingOverride@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lClearWorkingOverride, COMDAT

; 602  : 	return BasicLuaMethod(L, &CvCity::clearWorkingOverride);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?clearWorkingOverride@CvCity@@QAEXH@Z ; CvCity::clearWorkingOverride
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 603  : }

	ret	0
?lClearWorkingOverride@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lClearWorkingOverride
_TEXT	ENDS
PUBLIC	?lCountNumImprovedPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCountNumImprovedPlots
EXTRN	?countNumImprovedPlots@CvCity@@QBEHW4ImprovementTypes@@_N@Z:PROC ; CvCity::countNumImprovedPlots
; Function compile flags: /Ogtpy
;	COMDAT ?lCountNumImprovedPlots@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountNumImprovedPlots@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lCountNumImprovedPlots, COMDAT

; 607  : {

	push	ebx
	push	ebp
	push	esi

; 608  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCountNumI
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCountNumI
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCountNumI
	xor	bl, bl
$LN5@lCountNumI:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCountNumI
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCountNumI:

; 609  : 	const int iResult = pkCity->countNumImprovedPlots();

	push	0
	push	-1
	mov	ecx, edi
	call	?countNumImprovedPlots@CvCity@@QBEHW4ImprovementTypes@@_N@Z ; CvCity::countNumImprovedPlots

; 610  : 
; 611  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 612  : 	return 1;

	mov	eax, 1
	pop	ebx

; 613  : }

	ret	0
?lCountNumImprovedPlots@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lCountNumImprovedPlots
_TEXT	ENDS
PUBLIC	?lCountNumWaterPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCountNumWaterPlots
EXTRN	?countNumWaterPlots@CvCity@@QBEHXZ:PROC		; CvCity::countNumWaterPlots
; Function compile flags: /Ogtpy
;	COMDAT ?lCountNumWaterPlots@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountNumWaterPlots@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lCountNumWaterPlots, COMDAT

; 617  : {

	push	ebx
	push	ebp
	push	esi

; 618  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCountNumW
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCountNumW
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCountNumW
	xor	bl, bl
$LN5@lCountNumW:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCountNumW
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCountNumW:

; 619  : 	const int iResult = pkCity->countNumWaterPlots();

	mov	ecx, edi
	call	?countNumWaterPlots@CvCity@@QBEHXZ	; CvCity::countNumWaterPlots

; 620  : 
; 621  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 622  : 	return 1;

	mov	eax, 1
	pop	ebx

; 623  : }

	ret	0
?lCountNumWaterPlots@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lCountNumWaterPlots
_TEXT	ENDS
PUBLIC	?lCountNumRiverPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCountNumRiverPlots
EXTRN	?countNumRiverPlots@CvCity@@QBEHXZ:PROC		; CvCity::countNumRiverPlots
; Function compile flags: /Ogtpy
;	COMDAT ?lCountNumRiverPlots@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountNumRiverPlots@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lCountNumRiverPlots, COMDAT

; 627  : {

	push	ebx
	push	ebp
	push	esi

; 628  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCountNumR
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCountNumR
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCountNumR
	xor	bl, bl
$LN5@lCountNumR:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCountNumR
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCountNumR:

; 629  : 	const int iResult = pkCity->countNumRiverPlots();

	mov	ecx, edi
	call	?countNumRiverPlots@CvCity@@QBEHXZ	; CvCity::countNumRiverPlots

; 630  : 
; 631  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 632  : 	return 1;

	mov	eax, 1
	pop	ebx

; 633  : }

	ret	0
?lCountNumRiverPlots@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lCountNumRiverPlots
_TEXT	ENDS
PUBLIC	?lFindPopulationRank@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lFindPopulationRank
EXTRN	?findPopulationRank@CvCity@@QAEHXZ:PROC		; CvCity::findPopulationRank
; Function compile flags: /Ogtpy
;	COMDAT ?lFindPopulationRank@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lFindPopulationRank@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lFindPopulationRank, COMDAT

; 637  : {

	push	ebx
	push	ebp
	push	esi

; 638  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lFindPopul
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lFindPopul
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lFindPopul
	xor	bl, bl
$LN5@lFindPopul:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lFindPopul
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lFindPopul:

; 639  : 	const int iResult = pkCity->findPopulationRank();

	mov	ecx, edi
	call	?findPopulationRank@CvCity@@QAEHXZ	; CvCity::findPopulationRank

; 640  : 
; 641  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 642  : 	return 1;

	mov	eax, 1
	pop	ebx

; 643  : }

	ret	0
?lFindPopulationRank@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lFindPopulationRank
_TEXT	ENDS
PUBLIC	?lFindBaseYieldRateRank@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lFindBaseYieldRateRank
EXTRN	?findBaseYieldRateRank@CvCity@@QAEHW4YieldTypes@@@Z:PROC ; CvCity::findBaseYieldRateRank
; Function compile flags: /Ogtpy
;	COMDAT ?lFindBaseYieldRateRank@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lFindBaseYieldRateRank@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lFindBaseYieldRateRank, COMDAT

; 647  : {

	push	ebx
	push	ebp
	push	esi

; 648  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lFindBaseY
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lFindBaseY
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lFindBaseY
	xor	bl, bl
$LN5@lFindBaseY:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lFindBaseY
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lFindBaseY:

; 649  : 	const YieldTypes eYield = (YieldTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 650  : 	const int iResult = pkCity->findBaseYieldRateRank(eYield);

	push	eax
	mov	ecx, edi
	call	?findBaseYieldRateRank@CvCity@@QAEHW4YieldTypes@@@Z ; CvCity::findBaseYieldRateRank

; 651  : 
; 652  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 653  : 	return 1;

	mov	eax, 1
	pop	ebx

; 654  : }

	ret	0
?lFindBaseYieldRateRank@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lFindBaseYieldRateRank
_TEXT	ENDS
PUBLIC	?lFindYieldRateRank@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lFindYieldRateRank
EXTRN	?findYieldRateRank@CvCity@@QAEHW4YieldTypes@@@Z:PROC ; CvCity::findYieldRateRank
; Function compile flags: /Ogtpy
;	COMDAT ?lFindYieldRateRank@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lFindYieldRateRank@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lFindYieldRateRank, COMDAT

; 658  : {

	push	ebx
	push	ebp
	push	esi

; 659  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lFindYield
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lFindYield
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lFindYield
	xor	bl, bl
$LN5@lFindYield:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lFindYield
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lFindYield:

; 660  : 	const YieldTypes eYield = (YieldTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 661  : 	const int iResult = pkCity->findYieldRateRank(eYield);

	push	eax
	mov	ecx, edi
	call	?findYieldRateRank@CvCity@@QAEHW4YieldTypes@@@Z ; CvCity::findYieldRateRank

; 662  : 
; 663  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 664  : 	return 1;

	mov	eax, 1
	pop	ebx

; 665  : }

	ret	0
?lFindYieldRateRank@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lFindYieldRateRank
_TEXT	ENDS
PUBLIC	?lAllUpgradesAvailable@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lAllUpgradesAvailable
EXTRN	?allUpgradesAvailable@CvCity@@QBE?AW4UnitTypes@@W42@H@Z:PROC ; CvCity::allUpgradesAvailable
; Function compile flags: /Ogtpy
;	COMDAT ?lAllUpgradesAvailable@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAllUpgradesAvailable@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lAllUpgradesAvailable, COMDAT

; 669  : {

	push	ebx
	push	ebp
	push	esi

; 670  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lAllUpgrad
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lAllUpgrad
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lAllUpgrad
	xor	bl, bl
$LN5@lAllUpgrad:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lAllUpgrad
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lAllUpgrad:

; 671  : 	const UnitTypes eUnit = (UnitTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 672  : 	const int iUpgradeCount = luaL_optint(L, 3, 0);

	push	0
	push	3
	push	esi
	mov	ebx, eax
	call	_luaL_optinteger
	add	esp, 20					; 00000014H

; 673  : 
; 674  : 	const UnitTypes eResult = pkCity->allUpgradesAvailable(eUnit, iUpgradeCount);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?allUpgradesAvailable@CvCity@@QBE?AW4UnitTypes@@W42@H@Z ; CvCity::allUpgradesAvailable

; 675  : 	lua_pushinteger(L, eResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 676  : 	return 1;

	mov	eax, 1
	pop	ebx

; 677  : }

	ret	0
?lAllUpgradesAvailable@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lAllUpgradesAvailable
_TEXT	ENDS
PUBLIC	?lIsWorldWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsWorldWondersMaxed
EXTRN	?isWorldWondersMaxed@CvCity@@QBE_NXZ:PROC	; CvCity::isWorldWondersMaxed
; Function compile flags: /Ogtpy
;	COMDAT ?lIsWorldWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsWorldWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsWorldWondersMaxed, COMDAT

; 681  : {

	push	ebx
	push	ebp
	push	esi

; 682  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsWorldWo
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsWorldWo
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsWorldWo
	xor	bl, bl
$LN5@lIsWorldWo:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsWorldWo
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsWorldWo:

; 683  : 	const bool bResult = pkCity->isWorldWondersMaxed();

	mov	ecx, edi
	call	?isWorldWondersMaxed@CvCity@@QBE_NXZ	; CvCity::isWorldWondersMaxed

; 684  : 
; 685  : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 686  : 	return 1;

	mov	eax, 1
	pop	ebx

; 687  : }

	ret	0
?lIsWorldWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsWorldWondersMaxed
_TEXT	ENDS
PUBLIC	?lIsTeamWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsTeamWondersMaxed
EXTRN	?isTeamWondersMaxed@CvCity@@QBE_NXZ:PROC	; CvCity::isTeamWondersMaxed
; Function compile flags: /Ogtpy
;	COMDAT ?lIsTeamWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsTeamWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsTeamWondersMaxed, COMDAT

; 691  : {

	push	ebx
	push	ebp
	push	esi

; 692  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsTeamWon
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsTeamWon
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsTeamWon
	xor	bl, bl
$LN5@lIsTeamWon:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsTeamWon
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsTeamWon:

; 693  : 	const bool bResult = pkCity->isTeamWondersMaxed();

	mov	ecx, edi
	call	?isTeamWondersMaxed@CvCity@@QBE_NXZ	; CvCity::isTeamWondersMaxed

; 694  : 
; 695  : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 696  : 	return 1;

	mov	eax, 1
	pop	ebx

; 697  : }

	ret	0
?lIsTeamWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsTeamWondersMaxed
_TEXT	ENDS
PUBLIC	?lIsNationalWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsNationalWondersMaxed
EXTRN	?isNationalWondersMaxed@CvCity@@QBE_NXZ:PROC	; CvCity::isNationalWondersMaxed
; Function compile flags: /Ogtpy
;	COMDAT ?lIsNationalWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsNationalWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsNationalWondersMaxed, COMDAT

; 701  : {

	push	ebx
	push	ebp
	push	esi

; 702  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsNationa
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsNationa
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsNationa
	xor	bl, bl
$LN5@lIsNationa:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsNationa
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsNationa:

; 703  : 	const bool bResult = pkCity->isNationalWondersMaxed();

	mov	ecx, edi
	call	?isNationalWondersMaxed@CvCity@@QBE_NXZ	; CvCity::isNationalWondersMaxed

; 704  : 
; 705  : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 706  : 	return 1;

	mov	eax, 1
	pop	ebx

; 707  : }

	ret	0
?lIsNationalWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsNationalWondersMaxed
_TEXT	ENDS
PUBLIC	?lIsBuildingsMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsBuildingsMaxed
EXTRN	?isBuildingsMaxed@CvCity@@QBE_NXZ:PROC		; CvCity::isBuildingsMaxed
; Function compile flags: /Ogtpy
;	COMDAT ?lIsBuildingsMaxed@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBuildingsMaxed@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsBuildingsMaxed, COMDAT

; 711  : {

	push	ebx
	push	ebp
	push	esi

; 712  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsBuildin
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsBuildin
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsBuildin
	xor	bl, bl
$LN5@lIsBuildin:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsBuildin
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsBuildin:

; 713  : 	const bool bResult = pkCity->isBuildingsMaxed();

	mov	ecx, edi
	call	?isBuildingsMaxed@CvCity@@QBE_NXZ	; CvCity::isBuildingsMaxed

; 714  : 
; 715  : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 716  : 	return 1;

	mov	eax, 1
	pop	ebx

; 717  : }

	ret	0
?lIsBuildingsMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsBuildingsMaxed
_TEXT	ENDS
PUBLIC	?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanTrainTooltip
EXTRN	?canTrain@CvCity@@QBE_NW4UnitTypes@@_N111PAVCvString@@@Z:PROC ; CvCity::canTrain
;	COMDAT xdata$x
; File s:\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_toolTip$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanTrainTooltip, COMDAT

; 720  : {

	push	-1
	push	__ehhandler$?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi
	push	edi

; 721  : 	CvString toolTip;

	lea	ecx, DWORD PTR _toolTip$[esp+56]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 722  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+52]
	xor	edi, edi
	push	esi
	mov	DWORD PTR __$EHRec$[esp+68], edi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN9@lCanTrainT
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN9@lCanTrainT
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN9@lCanTrainT
	xor	bl, bl
$LN9@lCanTrainT:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN16@lCanTrainT
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN16@lCanTrainT:

; 723  : 	const UnitTypes eUnit = (UnitTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 724  : 
; 725  : 	// City Production Modifier
; 726  : 	pkCity->canTrain(eUnit, false, false, false, false, &toolTip);

	lea	ecx, DWORD PTR _toolTip$[esp+56]
	push	ecx
	push	0
	push	0
	push	0
	push	0
	push	eax
	mov	ecx, edi
	call	?canTrain@CvCity@@QBE_NW4UnitTypes@@_N111PAVCvString@@@Z ; CvCity::canTrain

; 727  : 
; 728  : 	lua_pushstring(L, toolTip.c_str());

	lea	ecx, DWORD PTR _toolTip$[esp+56]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 729  : 	return 1;

	lea	ecx, DWORD PTR _toolTip$[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 730  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _toolTip$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanTrainTooltip
PUBLIC	?lCanTrain@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanTrain
; Function compile flags: /Ogtpy
;	COMDAT ?lCanTrain@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bWillPurchase$ = -16					; size = 1
_bIgnoreCost$ = -12					; size = 1
_bTestVisible$ = -8					; size = 1
_bContinue$ = -4					; size = 1
_L$ = 8							; size = 4
?lCanTrain@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lCanTrain, COMDAT

; 734  : {

	sub	esp, 16					; 00000010H
	push	ebx
	push	ebp
	push	esi

; 735  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+24]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanTrain
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanTrain
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanTrain
	xor	bl, bl
$LN5@lCanTrain:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanTrain
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanTrain:

; 736  : 	const int iUnit = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 737  : 	const bool bContinue = luaL_optint(L, 3, 0);

	push	0
	push	3
	push	esi
	mov	ebx, eax
	call	_luaL_optinteger

; 738  : 	const bool bTestVisible = luaL_optint(L, 4, 0);

	push	0
	test	eax, eax
	setne	al
	push	4
	push	esi
	mov	BYTE PTR _bContinue$[esp+64], al
	call	_luaL_optinteger

; 739  : 	const bool bIgnoreCost = luaL_optint(L, 5, 0);

	push	0
	test	eax, eax
	setne	cl
	push	5
	push	esi
	mov	BYTE PTR _bTestVisible$[esp+76], cl
	call	_luaL_optinteger

; 740  : 	const bool bWillPurchase = luaL_optint(L, 6, 0);

	push	0
	test	eax, eax
	setne	dl
	push	6
	push	esi
	mov	BYTE PTR _bIgnoreCost$[esp+88], dl
	call	_luaL_optinteger

; 741  : 	const bool bResult = pkCity->canTrain((UnitTypes)iUnit, bContinue, bTestVisible, bIgnoreCost, bWillPurchase);

	mov	edx, DWORD PTR _bIgnoreCost$[esp+88]
	add	esp, 56					; 00000038H
	test	eax, eax
	setne	al
	push	0
	mov	BYTE PTR _bWillPurchase$[esp+36], al
	mov	ecx, DWORD PTR _bWillPurchase$[esp+36]
	mov	eax, DWORD PTR _bTestVisible$[esp+36]
	push	ecx
	mov	ecx, DWORD PTR _bContinue$[esp+40]
	push	edx
	push	eax
	push	ecx
	push	ebx
	mov	ecx, edi
	call	?canTrain@CvCity@@QBE_NW4UnitTypes@@_N111PAVCvString@@@Z ; CvCity::canTrain

; 742  : 
; 743  : 	lua_pushboolean(L, bResult);

	movzx	edx, al
	push	edx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 744  : 	return 1;

	mov	eax, 1
	pop	ebx

; 745  : }

	add	esp, 16					; 00000010H
	ret	0
?lCanTrain@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lCanTrain
_TEXT	ENDS
PUBLIC	?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanConstructTooltip
EXTRN	?canConstruct@CvCity@@QBE_NW4BuildingTypes@@_N11PAVCvString@@@Z:PROC ; CvCity::canConstruct
;	COMDAT xdata$x
; File s:\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_toolTip$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lCanConstructTooltip, COMDAT

; 748  : {

	push	-1
	push	__ehhandler$?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi
	push	edi

; 749  : 	CvString toolTip;

	lea	ecx, DWORD PTR _toolTip$[esp+56]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 750  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+52]
	xor	edi, edi
	push	esi
	mov	DWORD PTR __$EHRec$[esp+68], edi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN9@lCanConstr
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN9@lCanConstr
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN9@lCanConstr
	xor	bl, bl
$LN9@lCanConstr:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN16@lCanConstr
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN16@lCanConstr:

; 751  : 	const BuildingTypes eBuilding = (BuildingTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 752  : 
; 753  : 	// City Production Modifier
; 754  : 	pkCity->canConstruct(eBuilding, false, false, false, &toolTip);

	lea	ecx, DWORD PTR _toolTip$[esp+56]
	push	ecx
	push	0
	push	0
	push	0
	push	eax
	mov	ecx, edi
	call	?canConstruct@CvCity@@QBE_NW4BuildingTypes@@_N11PAVCvString@@@Z ; CvCity::canConstruct

; 755  : 
; 756  : 	lua_pushstring(L, toolTip.c_str());

	lea	ecx, DWORD PTR _toolTip$[esp+56]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 757  : 	return 1;

	lea	ecx, DWORD PTR _toolTip$[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 758  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _toolTip$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lCanConstructTooltip
PUBLIC	?lCanConstruct@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanConstruct
; Function compile flags: /Ogtpy
;	COMDAT ?lCanConstruct@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bIgnoreCost$ = -12					; size = 1
_bTestVisible$ = -8					; size = 1
_bContinue$ = -4					; size = 1
_L$ = 8							; size = 4
?lCanConstruct@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanConstruct, COMDAT

; 762  : {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi

; 763  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+20]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanConstr@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanConstr@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanConstr@2
	xor	bl, bl
$LN5@lCanConstr@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanConstr@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanConstr@2:

; 764  : 	const int iBuilding = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 765  : 	const bool bContinue = luaL_optint(L, 3, 0);

	push	0
	push	3
	push	esi
	mov	ebx, eax
	call	_luaL_optinteger

; 766  : 	const bool bTestVisible = luaL_optint(L, 4, 0);

	push	0
	test	eax, eax
	setne	al
	push	4
	push	esi
	mov	BYTE PTR _bContinue$[esp+60], al
	call	_luaL_optinteger

; 767  : 	const bool bIgnoreCost = luaL_optint(L, 5, 0);

	push	0
	test	eax, eax
	setne	cl
	push	5
	push	esi
	mov	BYTE PTR _bTestVisible$[esp+72], cl
	call	_luaL_optinteger

; 768  : 	const bool bResult = pkCity->canConstruct((BuildingTypes)iBuilding, bContinue, bTestVisible, bIgnoreCost);

	mov	ecx, DWORD PTR _bTestVisible$[esp+72]
	add	esp, 44					; 0000002cH
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bIgnoreCost$[esp+28], dl
	mov	eax, DWORD PTR _bIgnoreCost$[esp+28]
	mov	edx, DWORD PTR _bContinue$[esp+28]
	push	0
	push	eax
	push	ecx
	push	edx
	push	ebx
	mov	ecx, edi
	call	?canConstruct@CvCity@@QBE_NW4BuildingTypes@@_N11PAVCvString@@@Z ; CvCity::canConstruct

; 769  : 
; 770  : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 771  : 	return 1;

	mov	eax, 1
	pop	ebx

; 772  : }

	add	esp, 12					; 0000000cH
	ret	0
?lCanConstruct@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanConstruct
_TEXT	ENDS
PUBLIC	?lCanCreate@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanCreate
EXTRN	?canCreate@CvCity@@QBE_NW4ProjectTypes@@_N1@Z:PROC ; CvCity::canCreate
; Function compile flags: /Ogtpy
;	COMDAT ?lCanCreate@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bTestVisible$ = -8					; size = 1
_bContinue$ = -4					; size = 1
_L$ = 8							; size = 4
?lCanCreate@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lCanCreate, COMDAT

; 776  : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 777  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanCreate
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanCreate
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanCreate
	xor	bl, bl
$LN5@lCanCreate:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanCreate
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanCreate:

; 778  : 	const int iProject = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 779  : 	const bool bContinue = luaL_optint(L, 3, 0);

	push	0
	push	3
	push	esi
	mov	ebx, eax
	call	_luaL_optinteger

; 780  : 	const bool bTestVisible = luaL_optint(L, 4, 0);

	push	0
	test	eax, eax
	setne	al
	push	4
	push	esi
	mov	BYTE PTR _bContinue$[esp+56], al
	call	_luaL_optinteger
	add	esp, 32					; 00000020H
	test	eax, eax

; 781  : 	const bool bResult = pkCity->canCreate((ProjectTypes)iProject, bContinue, bTestVisible);

	mov	eax, DWORD PTR _bContinue$[esp+24]
	setne	cl
	mov	BYTE PTR _bTestVisible$[esp+24], cl
	mov	edx, DWORD PTR _bTestVisible$[esp+24]
	push	edx
	push	eax
	push	ebx
	mov	ecx, edi
	call	?canCreate@CvCity@@QBE_NW4ProjectTypes@@_N1@Z ; CvCity::canCreate

; 782  : 
; 783  : 	lua_pushboolean(L, bResult);

	movzx	ecx, al
	push	ecx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 784  : 	return 1;

	mov	eax, 1
	pop	ebx

; 785  : }

	add	esp, 8
	ret	0
?lCanCreate@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lCanCreate
_TEXT	ENDS
PUBLIC	?lCanPrepare@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanPrepare
EXTRN	?canPrepare@CvCity@@QBE_NW4SpecialistTypes@@_N@Z:PROC ; CvCity::canPrepare
; Function compile flags: /Ogtpy
;	COMDAT ?lCanPrepare@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bContinue$ = -4					; size = 1
_L$ = 8							; size = 4
?lCanPrepare@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanPrepare, COMDAT

; 789  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 790  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanPrepar
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanPrepar
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanPrepar
	xor	bl, bl
$LN5@lCanPrepar:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanPrepar
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanPrepar:

; 791  : 	const int iSpecialist = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 792  : 	const bool bContinue = luaL_optint(L, 3, 0);

	push	0
	push	3
	push	esi
	mov	ebx, eax
	call	_luaL_optinteger
	add	esp, 20					; 00000014H
	test	eax, eax
	setne	al
	mov	BYTE PTR _bContinue$[esp+20], al

; 793  : 	const bool bResult = pkCity->canPrepare((SpecialistTypes)iSpecialist, bContinue);

	mov	ecx, DWORD PTR _bContinue$[esp+20]
	push	ecx
	push	ebx
	mov	ecx, edi
	call	?canPrepare@CvCity@@QBE_NW4SpecialistTypes@@_N@Z ; CvCity::canPrepare

; 794  : 
; 795  : 	lua_pushboolean(L, bResult);

	movzx	edx, al
	push	edx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 796  : 	return 1;

	mov	eax, 1
	pop	ebx

; 797  : }

	pop	ecx
	ret	0
?lCanPrepare@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanPrepare
_TEXT	ENDS
PUBLIC	?lCanMaintain@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanMaintain
EXTRN	?canMaintain@CvCity@@QBE_NW4ProcessTypes@@_N@Z:PROC ; CvCity::canMaintain
; Function compile flags: /Ogtpy
;	COMDAT ?lCanMaintain@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bContinue$ = -4					; size = 1
_L$ = 8							; size = 4
?lCanMaintain@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanMaintain, COMDAT

; 801  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 802  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanMainta
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanMainta
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanMainta
	xor	bl, bl
$LN5@lCanMainta:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanMainta
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanMainta:

; 803  : 	const int iProcess = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 804  : 	const bool bContinue = luaL_optint(L, 3, 0);

	push	0
	push	3
	push	esi
	mov	ebx, eax
	call	_luaL_optinteger
	add	esp, 20					; 00000014H
	test	eax, eax
	setne	al
	mov	BYTE PTR _bContinue$[esp+20], al

; 805  : 	const bool bResult = pkCity->canMaintain((ProcessTypes)iProcess, bContinue);

	mov	ecx, DWORD PTR _bContinue$[esp+20]
	push	ecx
	push	ebx
	mov	ecx, edi
	call	?canMaintain@CvCity@@QBE_NW4ProcessTypes@@_N@Z ; CvCity::canMaintain

; 806  : 
; 807  : 	lua_pushboolean(L, bResult);

	movzx	edx, al
	push	edx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 808  : 	return 1;

	mov	eax, 1
	pop	ebx

; 809  : }

	pop	ecx
	ret	0
?lCanMaintain@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanMaintain
_TEXT	ENDS
PUBLIC	?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetPurchaseUnitTooltip
EXTRN	?GetPurchaseCost@CvCity@@QAEHW4UnitTypes@@@Z:PROC ; CvCity::GetPurchaseCost
EXTRN	?GetGold@CvTreasury@@QBEHXZ:PROC		; CvTreasury::GetGold
EXTRN	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ:PROC ; CvPlayer::GetTreasury
EXTRN	__imp_??1String@Localization@@UAE@XZ:PROC
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:PROC
EXTRN	__imp_?toUTF8@String@Localization@@QAEPBDXZ:PROC
EXTRN	__imp_?Lookup@Localization@@YA?AVString@1@PBD@Z:PROC
EXTRN	?CanPlaceUnitHere@CvCity@@QAE_NW4UnitTypes@@@Z:PROC ; CvCity::CanPlaceUnitHere
;	COMDAT xdata$x
; File s:\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$2
__ehfuncinfo$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_toolTip$ = -120					; size = 28
_localizedText$220678 = -92				; size = 80
_localizedText$220670 = -92				; size = 80
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetPurchaseUnitTooltip, COMDAT

; 812  : {

	push	-1
	push	__ehhandler$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 108				; 0000006cH
	push	ebx
	push	ebp
	push	esi
	push	edi

; 813  : 	CvString toolTip;

	lea	ecx, DWORD PTR _toolTip$[esp+136]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 814  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+132]
	xor	edi, edi
	push	esi
	mov	DWORD PTR __$EHRec$[esp+148], edi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN49@lGetPurcha
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN49@lGetPurcha
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN49@lGetPurcha
	xor	bl, bl
$LN49@lGetPurcha:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN24@lGetPurcha
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN24@lGetPurcha:

; 815  : 	const UnitTypes eUnit = (UnitTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	mov	ebp, eax

; 816  : 
; 817  : 	// City Production Modifier
; 818  : 	pkCity->canTrain(eUnit, false, false, false, false, &toolTip);

	lea	eax, DWORD PTR _toolTip$[esp+136]
	push	eax
	push	0
	push	0
	push	0
	push	0
	push	ebp
	mov	ecx, edi
	call	?canTrain@CvCity@@QBE_NW4UnitTypes@@_N111PAVCvString@@@Z ; CvCity::canTrain

; 819  : 
; 820  : 	// Already a unit here
; 821  : 	if(!pkCity->CanPlaceUnitHere(eUnit))

	push	ebp
	mov	ecx, edi
	call	?CanPlaceUnitHere@CvCity@@QAE_NW4UnitTypes@@@Z ; CvCity::CanPlaceUnitHere
	test	al, al
	jne	SHORT $LN50@lGetPurcha

; 822  : 	{
; 823  : 		Localization::String localizedText = Localization::Lookup("TXT_KEY_CANNOT_PURCHASE_UNIT_HERE");

	lea	ecx, DWORD PTR _localizedText$220670[esp+136]
	push	OFFSET $SG220672
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8

; 824  : 
; 825  : 		const char* const localized = localizedText.toUTF8();

	lea	ecx, DWORD PTR _localizedText$220670[esp+136]
	mov	BYTE PTR __$EHRec$[esp+144], 1
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	ebx, eax

; 826  : 		if(localized)

	test	ebx, ebx
	je	SHORT $LN5@lGetPurcha

; 827  : 		{
; 828  : 			if(!toolTip.IsEmpty())

	lea	ecx, DWORD PTR _toolTip$[esp+136]
	call	DWORD PTR __imp_?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ
	test	al, al
	jne	SHORT $LN4@lGetPurcha
	lea	ecx, DWORD PTR _toolTip$[esp+136]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	test	eax, eax
	je	SHORT $LN4@lGetPurcha

; 829  : 				toolTip += "[NEWLINE]";

	push	OFFSET $SG220676
	lea	ecx, DWORD PTR _toolTip$[esp+140]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN4@lGetPurcha:

; 830  : 
; 831  : 			toolTip += localized;

	push	ebx
	lea	ecx, DWORD PTR _toolTip$[esp+140]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN5@lGetPurcha:

; 832  : 		}
; 833  : 	}

	lea	ecx, DWORD PTR _localizedText$220670[esp+136]
	mov	BYTE PTR __$EHRec$[esp+144], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN50@lGetPurcha:

; 834  : 
; 835  : 	// Not enough cash money
; 836  : 	if(pkCity->GetPurchaseCost(eUnit) > GET_PLAYER(pkCity->getOwner()).GetTreasury()->GetGold())

	mov	eax, DWORD PTR [edi+84]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, eax
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGold@CvTreasury@@QBEHXZ		; CvTreasury::GetGold
	push	ebp
	mov	ecx, edi
	mov	ebx, eax
	call	?GetPurchaseCost@CvCity@@QAEHW4UnitTypes@@@Z ; CvCity::GetPurchaseCost
	cmp	eax, ebx
	jle	SHORT $LN3@lGetPurcha

; 837  : 	{
; 838  : 		Localization::String localizedText = Localization::Lookup("TXT_KEY_CANNOT_PURCHASE_NO_GOLD");

	lea	edx, DWORD PTR _localizedText$220678[esp+136]
	push	OFFSET $SG220680
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8

; 839  : 
; 840  : 		const char* const localized = localizedText.toUTF8();

	lea	ecx, DWORD PTR _localizedText$220678[esp+136]
	mov	BYTE PTR __$EHRec$[esp+144], 2
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	edi, eax

; 841  : 		if(localized)

	test	edi, edi
	je	SHORT $LN2@lGetPurcha

; 842  : 		{
; 843  : 			if(!toolTip.IsEmpty())

	lea	ecx, DWORD PTR _toolTip$[esp+136]
	call	DWORD PTR __imp_?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ
	test	al, al
	jne	SHORT $LN1@lGetPurcha
	lea	ecx, DWORD PTR _toolTip$[esp+136]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	test	eax, eax
	je	SHORT $LN1@lGetPurcha

; 844  : 				toolTip += "[NEWLINE]";

	push	OFFSET $SG220684
	lea	ecx, DWORD PTR _toolTip$[esp+140]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN1@lGetPurcha:

; 845  : 
; 846  : 			toolTip += localized;

	push	edi
	lea	ecx, DWORD PTR _toolTip$[esp+140]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN2@lGetPurcha:

; 847  : 		}
; 848  : 	}

	lea	ecx, DWORD PTR _localizedText$220678[esp+136]
	mov	BYTE PTR __$EHRec$[esp+144], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN3@lGetPurcha:

; 849  : 
; 850  : 	lua_pushstring(L, toolTip.c_str());

	lea	ecx, DWORD PTR _toolTip$[esp+136]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 851  : 	return 1;

	lea	ecx, DWORD PTR _toolTip$[esp+136]
	mov	DWORD PTR __$EHRec$[esp+144], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 852  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+136]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 120				; 00000078H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _toolTip$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _localizedText$220670[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$2:
	lea	ecx, DWORD PTR _localizedText$220678[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetPurchaseUnitTooltip
PUBLIC	?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPurchaseUnitTooltip
EXTRN	?GetFaith@CvPlayer@@QBEHXZ:PROC			; CvPlayer::GetFaith
EXTRN	?GetFaithPurchaseCost@CvCity@@QAEHW4UnitTypes@@_N@Z:PROC ; CvCity::GetFaithPurchaseCost
;	COMDAT xdata$x
; File s:\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$2
__ehfuncinfo$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_toolTip$ = -120					; size = 28
_localizedText$220702 = -92				; size = 80
_localizedText$220694 = -92				; size = 80
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFaithPurchaseUnitTooltip, COMDAT

; 855  : {

	push	-1
	push	__ehhandler$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 108				; 0000006cH
	push	ebx
	push	ebp
	push	esi
	push	edi

; 856  : 	CvString toolTip;

	lea	ecx, DWORD PTR _toolTip$[esp+136]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 857  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+132]
	xor	edi, edi
	push	esi
	mov	DWORD PTR __$EHRec$[esp+148], edi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN49@lGetFaithP
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN49@lGetFaithP
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN49@lGetFaithP
	xor	bl, bl
$LN49@lGetFaithP:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN24@lGetFaithP
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN24@lGetFaithP:

; 858  : 	const UnitTypes eUnit = (UnitTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	mov	ebp, eax

; 859  : 
; 860  : 	// Already a unit here
; 861  : 	if(!pkCity->CanPlaceUnitHere(eUnit))

	push	ebp
	mov	ecx, edi
	call	?CanPlaceUnitHere@CvCity@@QAE_NW4UnitTypes@@@Z ; CvCity::CanPlaceUnitHere
	test	al, al
	jne	SHORT $LN50@lGetFaithP

; 862  : 	{
; 863  : 		Localization::String localizedText = Localization::Lookup("TXT_KEY_CANNOT_PURCHASE_UNIT_HERE");

	lea	eax, DWORD PTR _localizedText$220694[esp+136]
	push	OFFSET $SG220696
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8

; 864  : 
; 865  : 		const char* const localized = localizedText.toUTF8();

	lea	ecx, DWORD PTR _localizedText$220694[esp+136]
	mov	BYTE PTR __$EHRec$[esp+144], 1
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	ebx, eax

; 866  : 		if(localized)

	test	ebx, ebx
	je	SHORT $LN5@lGetFaithP

; 867  : 		{
; 868  : 			if(!toolTip.IsEmpty())

	lea	ecx, DWORD PTR _toolTip$[esp+136]
	call	DWORD PTR __imp_?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ
	test	al, al
	jne	SHORT $LN4@lGetFaithP
	lea	ecx, DWORD PTR _toolTip$[esp+136]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	test	eax, eax
	je	SHORT $LN4@lGetFaithP

; 869  : 				toolTip += "[NEWLINE]";

	push	OFFSET $SG220700
	lea	ecx, DWORD PTR _toolTip$[esp+140]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN4@lGetFaithP:

; 870  : 
; 871  : 			toolTip += localized;

	push	ebx
	lea	ecx, DWORD PTR _toolTip$[esp+140]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN5@lGetFaithP:

; 872  : 		}
; 873  : 	}

	lea	ecx, DWORD PTR _localizedText$220694[esp+136]
	mov	BYTE PTR __$EHRec$[esp+144], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN50@lGetFaithP:

; 874  : 
; 875  : 	// Not enough faith
; 876  : 	if(pkCity->GetFaithPurchaseCost(eUnit, true) > GET_PLAYER(pkCity->getOwner()).GetFaith())

	mov	eax, DWORD PTR [edi+84]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	1
	push	ebp
	mov	ecx, edi
	mov	ebx, eax
	call	?GetFaithPurchaseCost@CvCity@@QAEHW4UnitTypes@@_N@Z ; CvCity::GetFaithPurchaseCost
	mov	ecx, ebx
	mov	edi, eax
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith
	cmp	edi, eax
	jle	SHORT $LN3@lGetFaithP

; 877  : 	{
; 878  : 		Localization::String localizedText = Localization::Lookup("TXT_KEY_CANNOT_PURCHASE_NO_FAITH");

	lea	ecx, DWORD PTR _localizedText$220702[esp+136]
	push	OFFSET $SG220704
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8

; 879  : 
; 880  : 		const char* const localized = localizedText.toUTF8();

	lea	ecx, DWORD PTR _localizedText$220702[esp+136]
	mov	BYTE PTR __$EHRec$[esp+144], 2
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	edi, eax

; 881  : 		if(localized)

	test	edi, edi
	je	SHORT $LN2@lGetFaithP

; 882  : 		{
; 883  : 			if(!toolTip.IsEmpty())

	lea	ecx, DWORD PTR _toolTip$[esp+136]
	call	DWORD PTR __imp_?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ
	test	al, al
	jne	SHORT $LN1@lGetFaithP
	lea	ecx, DWORD PTR _toolTip$[esp+136]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	test	eax, eax
	je	SHORT $LN1@lGetFaithP

; 884  : 				toolTip += "[NEWLINE]";

	push	OFFSET $SG220708
	lea	ecx, DWORD PTR _toolTip$[esp+140]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN1@lGetFaithP:

; 885  : 
; 886  : 			toolTip += localized;

	push	edi
	lea	ecx, DWORD PTR _toolTip$[esp+140]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN2@lGetFaithP:

; 887  : 		}
; 888  : 	}

	lea	ecx, DWORD PTR _localizedText$220702[esp+136]
	mov	BYTE PTR __$EHRec$[esp+144], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN3@lGetFaithP:

; 889  : 
; 890  : 	lua_pushstring(L, toolTip.c_str());

	lea	ecx, DWORD PTR _toolTip$[esp+136]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 891  : 	return 1;

	lea	ecx, DWORD PTR _toolTip$[esp+136]
	mov	DWORD PTR __$EHRec$[esp+144], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 892  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+136]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 120				; 00000078H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _toolTip$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _localizedText$220694[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$2:
	lea	ecx, DWORD PTR _localizedText$220702[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFaithPurchaseUnitTooltip
PUBLIC	?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetPurchaseBuildingTooltip
EXTRN	?GetPurchaseCost@CvCity@@QAEHW4BuildingTypes@@@Z:PROC ; CvCity::GetPurchaseCost
;	COMDAT xdata$x
; File s:\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_toolTip$ = -120					; size = 28
_localizedText$220718 = -92				; size = 80
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetPurchaseBuildingTooltip, COMDAT

; 895  : {

	push	-1
	push	__ehhandler$?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 108				; 0000006cH
	push	ebx
	push	ebp
	push	esi
	push	edi

; 896  : 	CvString toolTip;

	lea	ecx, DWORD PTR _toolTip$[esp+136]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 897  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+132]
	xor	edi, edi
	push	esi
	mov	DWORD PTR __$EHRec$[esp+148], edi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN13@lGetPurcha@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN13@lGetPurcha@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN13@lGetPurcha@2
	xor	bl, bl
$LN13@lGetPurcha@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN20@lGetPurcha@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN20@lGetPurcha@2:

; 898  : 	const BuildingTypes eBuilding = (BuildingTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	mov	ebp, eax

; 899  : 
; 900  : 	// City Production Modifier
; 901  : 	pkCity->canConstruct(eBuilding, false, false, false, &toolTip);

	lea	eax, DWORD PTR _toolTip$[esp+136]
	push	eax
	push	0
	push	0
	push	0
	push	ebp
	mov	ecx, edi
	call	?canConstruct@CvCity@@QBE_NW4BuildingTypes@@_N11PAVCvString@@@Z ; CvCity::canConstruct

; 902  : 
; 903  : 	// Not enough cash money
; 904  : 	if(pkCity->GetPurchaseCost(eBuilding) > GET_PLAYER(pkCity->getOwner()).GetTreasury()->GetGold())

	mov	eax, DWORD PTR [edi+84]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, eax
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGold@CvTreasury@@QBEHXZ		; CvTreasury::GetGold
	push	ebp
	mov	ecx, edi
	mov	ebx, eax
	call	?GetPurchaseCost@CvCity@@QAEHW4BuildingTypes@@@Z ; CvCity::GetPurchaseCost
	cmp	eax, ebx
	jle	SHORT $LN3@lGetPurcha@2

; 905  : 	{
; 906  : 		Localization::String localizedText = Localization::Lookup("TXT_KEY_CANNOT_PURCHASE_NO_GOLD");

	lea	ecx, DWORD PTR _localizedText$220718[esp+136]
	push	OFFSET $SG220720
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8

; 907  : 
; 908  : 		const char* const localized = localizedText.toUTF8();

	lea	ecx, DWORD PTR _localizedText$220718[esp+136]
	mov	BYTE PTR __$EHRec$[esp+144], 1
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	edi, eax

; 909  : 		if(localized)

	test	edi, edi
	je	SHORT $LN2@lGetPurcha@2

; 910  : 		{
; 911  : 			if(!toolTip.IsEmpty())

	lea	ecx, DWORD PTR _toolTip$[esp+136]
	call	DWORD PTR __imp_?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ
	test	al, al
	jne	SHORT $LN1@lGetPurcha@2
	lea	ecx, DWORD PTR _toolTip$[esp+136]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	test	eax, eax
	je	SHORT $LN1@lGetPurcha@2

; 912  : 				toolTip += "[NEWLINE]";

	push	OFFSET $SG220724
	lea	ecx, DWORD PTR _toolTip$[esp+140]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN1@lGetPurcha@2:

; 913  : 
; 914  : 			toolTip += localized;

	push	edi
	lea	ecx, DWORD PTR _toolTip$[esp+140]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN2@lGetPurcha@2:

; 915  : 		}
; 916  : 	}

	lea	ecx, DWORD PTR _localizedText$220718[esp+136]
	mov	BYTE PTR __$EHRec$[esp+144], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN3@lGetPurcha@2:

; 917  : 
; 918  : 	lua_pushstring(L, toolTip.c_str());

	lea	ecx, DWORD PTR _toolTip$[esp+136]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 919  : 	return 1;

	lea	ecx, DWORD PTR _toolTip$[esp+136]
	mov	DWORD PTR __$EHRec$[esp+144], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 920  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+136]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 120				; 00000078H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _toolTip$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _localizedText$220718[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetPurchaseBuildingTooltip
PUBLIC	?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPurchaseBuildingTooltip
EXTRN	?GetFaithPurchaseCost@CvCity@@QAEHW4BuildingTypes@@@Z:PROC ; CvCity::GetFaithPurchaseCost
;	COMDAT xdata$x
; File s:\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_toolTip$ = -120					; size = 28
_localizedText$220734 = -92				; size = 80
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFaithPurchaseBuildingTooltip, COMDAT

; 923  : {

	push	-1
	push	__ehhandler$?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 108				; 0000006cH
	push	ebx
	push	ebp
	push	esi
	push	edi

; 924  : 	CvString toolTip;

	lea	ecx, DWORD PTR _toolTip$[esp+136]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 925  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+132]
	xor	edi, edi
	push	esi
	mov	DWORD PTR __$EHRec$[esp+148], edi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN13@lGetFaithP@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN13@lGetFaithP@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN13@lGetFaithP@2
	xor	bl, bl
$LN13@lGetFaithP@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN20@lGetFaithP@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN20@lGetFaithP@2:

; 926  : 	const BuildingTypes eBuilding = (BuildingTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	mov	ebp, eax

; 927  : 
; 928  : 	// City Production Modifier
; 929  : 	pkCity->canConstruct(eBuilding, false, false, false, &toolTip);

	lea	eax, DWORD PTR _toolTip$[esp+136]
	push	eax
	push	0
	push	0
	push	0
	push	ebp
	mov	ecx, edi
	call	?canConstruct@CvCity@@QBE_NW4BuildingTypes@@_N11PAVCvString@@@Z ; CvCity::canConstruct

; 930  : 
; 931  : 	// Not enough faith
; 932  : 	if(pkCity->GetFaithPurchaseCost(eBuilding) > GET_PLAYER(pkCity->getOwner()).GetFaith())

	mov	eax, DWORD PTR [edi+84]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	ebp
	mov	ecx, edi
	mov	ebx, eax
	call	?GetFaithPurchaseCost@CvCity@@QAEHW4BuildingTypes@@@Z ; CvCity::GetFaithPurchaseCost
	mov	ecx, ebx
	mov	edi, eax
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith
	cmp	edi, eax
	jle	SHORT $LN3@lGetFaithP@2

; 933  : 	{
; 934  : 		Localization::String localizedText = Localization::Lookup("TXT_KEY_CANNOT_PURCHASE_NO_FAITH");

	lea	ecx, DWORD PTR _localizedText$220734[esp+136]
	push	OFFSET $SG220736
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8

; 935  : 
; 936  : 		const char* const localized = localizedText.toUTF8();

	lea	ecx, DWORD PTR _localizedText$220734[esp+136]
	mov	BYTE PTR __$EHRec$[esp+144], 1
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	edi, eax

; 937  : 		if(localized)

	test	edi, edi
	je	SHORT $LN2@lGetFaithP@2

; 938  : 		{
; 939  : 			if(!toolTip.IsEmpty())

	lea	ecx, DWORD PTR _toolTip$[esp+136]
	call	DWORD PTR __imp_?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ
	test	al, al
	jne	SHORT $LN1@lGetFaithP@2
	lea	ecx, DWORD PTR _toolTip$[esp+136]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	test	eax, eax
	je	SHORT $LN1@lGetFaithP@2

; 940  : 				toolTip += "[NEWLINE]";

	push	OFFSET $SG220740
	lea	ecx, DWORD PTR _toolTip$[esp+140]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN1@lGetFaithP@2:

; 941  : 
; 942  : 			toolTip += localized;

	push	edi
	lea	ecx, DWORD PTR _toolTip$[esp+140]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN2@lGetFaithP@2:

; 943  : 		}
; 944  : 	}

	lea	ecx, DWORD PTR _localizedText$220734[esp+136]
	mov	BYTE PTR __$EHRec$[esp+144], 0
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN3@lGetFaithP@2:

; 945  : 
; 946  : 	lua_pushstring(L, toolTip.c_str());

	lea	ecx, DWORD PTR _toolTip$[esp+136]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 947  : 	return 1;

	lea	ecx, DWORD PTR _toolTip$[esp+136]
	mov	DWORD PTR __$EHRec$[esp+144], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 948  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+136]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 120				; 00000078H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _toolTip$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _localizedText$220734[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFaithPurchaseBuildingTooltip
PUBLIC	?lCanJoin@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanJoin
EXTRN	?canJoin@CvCity@@QBE_NXZ:PROC			; CvCity::canJoin
; Function compile flags: /Ogtpy
;	COMDAT ?lCanJoin@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanJoin@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lCanJoin, COMDAT

; 952  : {

	push	ebx
	push	ebp
	push	esi

; 953  : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanJoin
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanJoin
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanJoin
	xor	bl, bl
$LN5@lCanJoin:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanJoin
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanJoin:

; 954  : 	const bool bResult = pkCity->canJoin();

	mov	ecx, edi
	call	?canJoin@CvCity@@QBE_NXZ		; CvCity::canJoin

; 955  : 
; 956  : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 957  : 	return 1;

	mov	eax, 1
	pop	ebx

; 958  : }

	ret	0
?lCanJoin@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lCanJoin
_TEXT	ENDS
PUBLIC	?lIsBuildingLocalResourceValid@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsBuildingLocalResourceValid
EXTRN	?IsBuildingLocalResourceValid@CvCity@@QBE_NW4BuildingTypes@@_NPAVCvString@@@Z:PROC ; CvCity::IsBuildingLocalResourceValid
; Function compile flags: /Ogtpy
;	COMDAT ?lIsBuildingLocalResourceValid@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBuildingLocalResourceValid@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsBuildingLocalResourceValid, COMDAT

; 963  : 	return BasicLuaMethod(L, &CvCity::IsBuildingLocalResourceValid);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsBuildingLocalResourceValid@CvCity@@QBE_NW4BuildingTypes@@_NPAVCvString@@@Z ; CvCity::IsBuildingLocalResourceValid
	push	eax
	call	??$BasicLuaMethod@_NW4BuildingTypes@@_NPAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4BuildingTypes@@_NPAVCvString@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum BuildingTypes,bool,CvString *>
	add	esp, 8

; 964  : }

	ret	0
?lIsBuildingLocalResourceValid@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsBuildingLocalResourceValid
_TEXT	ENDS
PUBLIC	?lGetResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetResourceDemanded
EXTRN	?GetResourceDemanded@CvCity@@QBE?AW4ResourceTypes@@_N@Z:PROC ; CvCity::GetResourceDemanded
; Function compile flags: /Ogtpy
;	COMDAT ?lGetResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetResourceDemanded, COMDAT

; 969  : 	return BasicLuaMethod(L, &CvCity::GetResourceDemanded);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetResourceDemanded@CvCity@@QBE?AW4ResourceTypes@@_N@Z ; CvCity::GetResourceDemanded
	push	eax
	call	??$BasicLuaMethod@W4ResourceTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4ResourceTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ResourceTypes,bool>
	add	esp, 8

; 970  : }

	ret	0
?lGetResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetResourceDemanded
_TEXT	ENDS
PUBLIC	?lSetResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetResourceDemanded
EXTRN	?SetResourceDemanded@CvCity@@QAEXW4ResourceTypes@@@Z:PROC ; CvCity::SetResourceDemanded
; Function compile flags: /Ogtpy
;	COMDAT ?lSetResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetResourceDemanded, COMDAT

; 975  : 	return BasicLuaMethod(L, &CvCity::SetResourceDemanded);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetResourceDemanded@CvCity@@QAEXW4ResourceTypes@@@Z ; CvCity::SetResourceDemanded
	push	eax
	call	??$BasicLuaMethod@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4ResourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ResourceTypes>
	add	esp, 8

; 976  : }

	ret	0
?lSetResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetResourceDemanded
_TEXT	ENDS
PUBLIC	?lDoPickResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lDoPickResourceDemanded
EXTRN	?DoPickResourceDemanded@CvCity@@QAEX_N@Z:PROC	; CvCity::DoPickResourceDemanded
; Function compile flags: /Ogtpy
;	COMDAT ?lDoPickResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoPickResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lDoPickResourceDemanded, COMDAT

; 981  : 	return BasicLuaMethod(L, &CvCity::DoPickResourceDemanded);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?DoPickResourceDemanded@CvCity@@QAEX_N@Z ; CvCity::DoPickResourceDemanded
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 982  : }

	ret	0
?lDoPickResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lDoPickResourceDemanded
_TEXT	ENDS
PUBLIC	?lGetFoodTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFoodTurnsLeft
EXTRN	?getFoodTurnsLeft@CvCity@@QBEHXZ:PROC		; CvCity::getFoodTurnsLeft
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFoodTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFoodTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetFoodTurnsLeft, COMDAT

; 988  : 	return BasicLuaMethod(L, &CvCity::getFoodTurnsLeft);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getFoodTurnsLeft@CvCity@@QBEHXZ	; CvCity::getFoodTurnsLeft
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 989  : 
; 990  : }

	ret	0
?lGetFoodTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetFoodTurnsLeft
_TEXT	ENDS
PUBLIC	?lIsProduction@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsProduction
EXTRN	?isProduction@CvCity@@QBE_NXZ:PROC		; CvCity::isProduction
; Function compile flags: /Ogtpy
;	COMDAT ?lIsProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsProduction, COMDAT

; 995  : 	return BasicLuaMethod(L, &CvCity::isProduction);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isProduction@CvCity@@QBE_NXZ	; CvCity::isProduction
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 996  : }

	ret	0
?lIsProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsProduction
_TEXT	ENDS
PUBLIC	?lIsProductionLimited@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionLimited
EXTRN	?isProductionLimited@CvCity@@QBE_NXZ:PROC	; CvCity::isProductionLimited
; Function compile flags: /Ogtpy
;	COMDAT ?lIsProductionLimited@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProductionLimited@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsProductionLimited, COMDAT

; 1001 : 	return BasicLuaMethod(L, &CvCity::isProductionLimited);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isProductionLimited@CvCity@@QBE_NXZ ; CvCity::isProductionLimited
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1002 : }

	ret	0
?lIsProductionLimited@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsProductionLimited
_TEXT	ENDS
PUBLIC	?lIsProductionUnit@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionUnit
EXTRN	?isProductionUnit@CvCity@@QBE_NXZ:PROC		; CvCity::isProductionUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lIsProductionUnit@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProductionUnit@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsProductionUnit, COMDAT

; 1007 : 	return BasicLuaMethod(L, &CvCity::isProductionUnit);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isProductionUnit@CvCity@@QBE_NXZ ; CvCity::isProductionUnit
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1008 : }

	ret	0
?lIsProductionUnit@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsProductionUnit
_TEXT	ENDS
PUBLIC	?lIsProductionBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionBuilding
EXTRN	?isProductionBuilding@CvCity@@QBE_NXZ:PROC	; CvCity::isProductionBuilding
; Function compile flags: /Ogtpy
;	COMDAT ?lIsProductionBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProductionBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsProductionBuilding, COMDAT

; 1013 : 	return BasicLuaMethod(L, &CvCity::isProductionBuilding);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isProductionBuilding@CvCity@@QBE_NXZ ; CvCity::isProductionBuilding
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1014 : }

	ret	0
?lIsProductionBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsProductionBuilding
_TEXT	ENDS
PUBLIC	?lIsProductionProject@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionProject
EXTRN	?isProductionProject@CvCity@@QBE_NXZ:PROC	; CvCity::isProductionProject
; Function compile flags: /Ogtpy
;	COMDAT ?lIsProductionProject@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProductionProject@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsProductionProject, COMDAT

; 1019 : 	return BasicLuaMethod(L, &CvCity::isProductionProject);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isProductionProject@CvCity@@QBE_NXZ ; CvCity::isProductionProject
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1020 : }

	ret	0
?lIsProductionProject@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsProductionProject
_TEXT	ENDS
PUBLIC	?lIsProductionSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionSpecialist
EXTRN	?isProductionSpecialist@CvCity@@QBE_NXZ:PROC	; CvCity::isProductionSpecialist
; Function compile flags: /Ogtpy
;	COMDAT ?lIsProductionSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProductionSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsProductionSpecialist, COMDAT

; 1025 : 	return BasicLuaMethod(L, &CvCity::isProductionSpecialist);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isProductionSpecialist@CvCity@@QBE_NXZ ; CvCity::isProductionSpecialist
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1026 : }

	ret	0
?lIsProductionSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsProductionSpecialist
_TEXT	ENDS
PUBLIC	?lIsProductionProcess@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionProcess
EXTRN	?isProductionProcess@CvCity@@QBE_NXZ:PROC	; CvCity::isProductionProcess
; Function compile flags: /Ogtpy
;	COMDAT ?lIsProductionProcess@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProductionProcess@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsProductionProcess, COMDAT

; 1031 : 	return BasicLuaMethod(L, &CvCity::isProductionProcess);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isProductionProcess@CvCity@@QBE_NXZ ; CvCity::isProductionProcess
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1032 : }

	ret	0
?lIsProductionProcess@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsProductionProcess
_TEXT	ENDS
PUBLIC	?lCanContinueProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanContinueProduction
EXTRN	?canContinueProduction@CvCity@@QAE_NUOrderData@@@Z:PROC ; CvCity::canContinueProduction
; Function compile flags: /Ogtpy
;	COMDAT ?lCanContinueProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$228726 = -20				; size = 4
_order$ = -16						; size = 16
_L$ = 8							; size = 4
?lCanContinueProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lCanContinueProduction, COMDAT

; 1036 : {

	sub	esp, 20					; 00000014H
	push	ebx
	push	ebp
	push	esi

; 1037 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+28]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$228726[esp+48], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanContin
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanContin
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$228726[esp+36], eax
	test	eax, eax
	je	SHORT $LN5@lCanContin
	xor	bl, bl
$LN5@lCanContin:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanContin
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanContin:

; 1038 : 	OrderData order;
; 1039 : 	order.eOrderType = (OrderTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	mov	BYTE PTR _order$[esp+57], 0
	call	_lua_tointeger

; 1040 : 	order.iData1 = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	edi, eax
	call	_lua_tointeger

; 1041 : 	order.iData2 = lua_tointeger(L, 4);

	push	4
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 1042 : 	order.bSave = lua_toboolean(L, 5);

	push	5
	push	esi
	mov	ebp, eax
	call	_lua_toboolean
	test	eax, eax
	setne	al
	mov	BYTE PTR _order$[esp+80], al

; 1043 : 
; 1044 : 	const bool bResult = pkCity->canContinueProduction(order);

	mov	ecx, DWORD PTR _order$[esp+80]
	add	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax+8], ebp
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR _pkInstance$228726[esp+52]
	call	?canContinueProduction@CvCity@@QAE_NUOrderData@@@Z ; CvCity::canContinueProduction

; 1045 : 
; 1046 : 	lua_pushboolean(L, bResult);

	movzx	edx, al
	push	edx
	push	esi
	call	_lua_pushboolean
	add	esp, 8

; 1047 : 	return 1;
; 1048 : }

	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	add	esp, 20					; 00000014H
	ret	0
?lCanContinueProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lCanContinueProduction
_TEXT	ENDS
PUBLIC	?lGetProductionExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionExperience
EXTRN	?getProductionExperience@CvCity@@QAEHW4UnitTypes@@@Z:PROC ; CvCity::getProductionExperience
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProductionExperience@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProductionExperience@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProductionExperience, COMDAT

; 1053 : 	return BasicLuaMethod(L, &CvCity::getProductionExperience);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getProductionExperience@CvCity@@QAEHW4UnitTypes@@@Z ; CvCity::getProductionExperience
	push	eax
	call	??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes>
	add	esp, 8

; 1054 : }

	ret	0
?lGetProductionExperience@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProductionExperience
_TEXT	ENDS
PUBLIC	?lAddProductionExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lAddProductionExperience
EXTRN	?addProductionExperience@CvCity@@QAEXPAVCvUnit@@_N@Z:PROC ; CvCity::addProductionExperience
; Function compile flags: /Ogtpy
;	COMDAT ?lAddProductionExperience@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$228758 = -8					; size = 4
_bConscript$ = -4					; size = 1
_L$ = 8							; size = 4
?lAddProductionExperience@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lAddProductionExperience, COMDAT

; 1058 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 1059 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$228758[esp+36], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lAddProduc
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lAddProduc
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$228758[esp+24], eax
	test	eax, eax
	je	SHORT $LN5@lAddProduc
	xor	bl, bl
$LN5@lAddProduc:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lAddProduc
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lAddProduc:

; 1060 : 	CvUnit* pkUnit = CvLuaUnit::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lAddProduc
	push	OFFSET $SG223886
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lAddProduc
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN16@lAddProduc
	xor	bl, bl
$LN16@lAddProduc:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lAddProduc
	push	esi
	call	?HandleMissingInstance@CvLuaUnit@@SAXPAUlua_State@@@Z ; CvLuaUnit::HandleMissingInstance
	add	esp, 4
$LN15@lAddProduc:

; 1061 : 	const bool bConscript = luaL_optint(L, 3, 0);

	push	0
	push	3
	push	esi
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	test	eax, eax
	setne	al
	mov	BYTE PTR _bConscript$[esp+24], al

; 1062 : 	pkCity->addProductionExperience(pkUnit, bConscript);

	mov	ecx, DWORD PTR _bConscript$[esp+24]
	push	ecx
	mov	ecx, DWORD PTR _pkInstance$228758[esp+28]
	push	edi
	call	?addProductionExperience@CvCity@@QAEXPAVCvUnit@@_N@Z ; CvCity::addProductionExperience
	pop	edi
	pop	esi
	pop	ebp

; 1063 : 
; 1064 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1065 : }

	add	esp, 8
	ret	0
?lAddProductionExperience@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lAddProductionExperience
_TEXT	ENDS
PUBLIC	?lGetProductionUnit@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionUnit
EXTRN	?getProductionUnit@CvCity@@QBE?AW4UnitTypes@@XZ:PROC ; CvCity::getProductionUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProductionUnit@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProductionUnit@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetProductionUnit, COMDAT

; 1070 : 	return BasicLuaMethod(L, &CvCity::getProductionUnit);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getProductionUnit@CvCity@@QBE?AW4UnitTypes@@XZ ; CvCity::getProductionUnit
	push	eax
	call	??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4UnitTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum UnitTypes>
	add	esp, 8

; 1071 : }

	ret	0
?lGetProductionUnit@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetProductionUnit
_TEXT	ENDS
PUBLIC	?lGetProductionUnitAI@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionUnitAI
EXTRN	?getProductionUnitAI@CvCity@@QBE?AW4UnitAITypes@@XZ:PROC ; CvCity::getProductionUnitAI
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProductionUnitAI@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProductionUnitAI@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProductionUnitAI, COMDAT

; 1075 : {

	push	ebx
	push	ebp
	push	esi

; 1076 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetProduc
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetProduc
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetProduc
	xor	bl, bl
$LN5@lGetProduc:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetProduc
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetProduc:

; 1077 : 	const UnitAITypes eValue = pkCity->getProductionUnitAI();

	mov	ecx, edi
	call	?getProductionUnitAI@CvCity@@QBE?AW4UnitAITypes@@XZ ; CvCity::getProductionUnitAI

; 1078 : 
; 1079 : 	lua_pushinteger(L, eValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1080 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1081 : }

	ret	0
?lGetProductionUnitAI@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProductionUnitAI
_TEXT	ENDS
PUBLIC	?lGetProductionBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionBuilding
EXTRN	?getProductionBuilding@CvCity@@QBE?AW4BuildingTypes@@XZ:PROC ; CvCity::getProductionBuilding
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProductionBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProductionBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProductionBuilding, COMDAT

; 1085 : {

	push	ebx
	push	ebp
	push	esi

; 1086 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetProduc@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetProduc@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetProduc@2
	xor	bl, bl
$LN5@lGetProduc@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetProduc@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetProduc@2:

; 1087 : 	const BuildingTypes eValue = pkCity->getProductionBuilding();

	mov	ecx, edi
	call	?getProductionBuilding@CvCity@@QBE?AW4BuildingTypes@@XZ ; CvCity::getProductionBuilding

; 1088 : 
; 1089 : 	lua_pushinteger(L, eValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1090 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1091 : }

	ret	0
?lGetProductionBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProductionBuilding
_TEXT	ENDS
PUBLIC	?lGetProductionProject@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionProject
EXTRN	?getProductionProject@CvCity@@QBE?AW4ProjectTypes@@XZ:PROC ; CvCity::getProductionProject
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProductionProject@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProductionProject@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProductionProject, COMDAT

; 1095 : {

	push	ebx
	push	ebp
	push	esi

; 1096 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetProduc@3
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetProduc@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetProduc@3
	xor	bl, bl
$LN5@lGetProduc@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetProduc@3
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetProduc@3:

; 1097 : 	const ProjectTypes eValue = pkCity->getProductionProject();

	mov	ecx, edi
	call	?getProductionProject@CvCity@@QBE?AW4ProjectTypes@@XZ ; CvCity::getProductionProject

; 1098 : 
; 1099 : 	lua_pushinteger(L, eValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1100 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1101 : }

	ret	0
?lGetProductionProject@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProductionProject
_TEXT	ENDS
PUBLIC	?lGetProductionSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionSpecialist
EXTRN	?getProductionSpecialist@CvCity@@QBE?AW4SpecialistTypes@@XZ:PROC ; CvCity::getProductionSpecialist
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProductionSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProductionSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProductionSpecialist, COMDAT

; 1105 : {

	push	ebx
	push	ebp
	push	esi

; 1106 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetProduc@4
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetProduc@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetProduc@4
	xor	bl, bl
$LN5@lGetProduc@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetProduc@4
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetProduc@4:

; 1107 : 	const SpecialistTypes eValue = pkCity->getProductionSpecialist();

	mov	ecx, edi
	call	?getProductionSpecialist@CvCity@@QBE?AW4SpecialistTypes@@XZ ; CvCity::getProductionSpecialist

; 1108 : 
; 1109 : 	lua_pushinteger(L, eValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1110 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1111 : }

	ret	0
?lGetProductionSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProductionSpecialist
_TEXT	ENDS
PUBLIC	?lGetProductionProcess@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionProcess
EXTRN	?getProductionProcess@CvCity@@QBE?AW4ProcessTypes@@XZ:PROC ; CvCity::getProductionProcess
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProductionProcess@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProductionProcess@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProductionProcess, COMDAT

; 1116 : 	return BasicLuaMethod(L, &CvCity::getProductionProcess);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getProductionProcess@CvCity@@QBE?AW4ProcessTypes@@XZ ; CvCity::getProductionProcess
	push	eax
	call	??$BasicLuaMethod@W4ProcessTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4ProcessTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum ProcessTypes>
	add	esp, 8

; 1117 : }

	ret	0
?lGetProductionProcess@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProductionProcess
_TEXT	ENDS
PUBLIC	?lGetProductionNameKey@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionNameKey
EXTRN	?getProductionNameKey@CvCity@@QBEPBDXZ:PROC	; CvCity::getProductionNameKey
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProductionNameKey@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProductionNameKey@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProductionNameKey, COMDAT

; 1123 : {

	push	ebx
	push	ebp
	push	esi

; 1124 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetProduc@5
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetProduc@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetProduc@5
	xor	bl, bl
$LN5@lGetProduc@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetProduc@5
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetProduc@5:

; 1125 : 	lua_pushstring(L, pkCity->getProductionNameKey());

	mov	ecx, edi
	call	?getProductionNameKey@CvCity@@QBEPBDXZ	; CvCity::getProductionNameKey
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1126 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1127 : }

	ret	0
?lGetProductionNameKey@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProductionNameKey
_TEXT	ENDS
PUBLIC	?lGetGeneralProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGeneralProductionTurnsLeft
EXTRN	?getGeneralProductionTurnsLeft@CvCity@@QBEHXZ:PROC ; CvCity::getGeneralProductionTurnsLeft
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGeneralProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGeneralProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetGeneralProductionTurnsLeft, COMDAT

; 1132 : 	return BasicLuaMethod(L, &CvCity::getGeneralProductionTurnsLeft);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGeneralProductionTurnsLeft@CvCity@@QBEHXZ ; CvCity::getGeneralProductionTurnsLeft
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1133 : }

	ret	0
?lGetGeneralProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetGeneralProductionTurnsLeft
_TEXT	ENDS
PUBLIC	?lIsFoodProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsFoodProduction
EXTRN	?isFoodProduction@CvCity@@QBE_NXZ:PROC		; CvCity::isFoodProduction
; Function compile flags: /Ogtpy
;	COMDAT ?lIsFoodProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsFoodProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsFoodProduction, COMDAT

; 1137 : {

	push	ebx
	push	ebp
	push	esi

; 1138 : 	//return BasicLuaMethod<bool, UnitTypes>(L, &CvCity::isFoodProduction);
; 1139 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsFoodPro
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsFoodPro
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsFoodPro
	xor	bl, bl
$LN5@lIsFoodPro:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsFoodPro
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsFoodPro:

; 1140 : 	const int iResult = pkCity->isFoodProduction();

	mov	ecx, edi
	call	?isFoodProduction@CvCity@@QBE_NXZ	; CvCity::isFoodProduction
	movzx	eax, al

; 1141 : 
; 1142 : 	lua_pushboolean(L, iResult);

	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1143 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1144 : }

	ret	0
?lIsFoodProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsFoodProduction
_TEXT	ENDS
PUBLIC	?lGetFirstUnitOrder@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFirstUnitOrder
EXTRN	?getFirstUnitOrder@CvCity@@QBEHW4UnitTypes@@@Z:PROC ; CvCity::getFirstUnitOrder
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFirstUnitOrder@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFirstUnitOrder@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetFirstUnitOrder, COMDAT

; 1149 : 	return BasicLuaMethod(L, &CvCity::getFirstUnitOrder);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getFirstUnitOrder@CvCity@@QBEHW4UnitTypes@@@Z ; CvCity::getFirstUnitOrder
	push	eax
	call	??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes>
	add	esp, 8

; 1150 : }

	ret	0
?lGetFirstUnitOrder@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetFirstUnitOrder
_TEXT	ENDS
PUBLIC	?lGetFirstProjectOrder@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFirstProjectOrder
EXTRN	?getFirstProjectOrder@CvCity@@QBEHW4ProjectTypes@@@Z:PROC ; CvCity::getFirstProjectOrder
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFirstProjectOrder@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFirstProjectOrder@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFirstProjectOrder, COMDAT

; 1155 : 	return BasicLuaMethod(L, &CvCity::getFirstProjectOrder);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getFirstProjectOrder@CvCity@@QBEHW4ProjectTypes@@@Z ; CvCity::getFirstProjectOrder
	push	eax
	call	??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes>
	add	esp, 8

; 1156 : }

	ret	0
?lGetFirstProjectOrder@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFirstProjectOrder
_TEXT	ENDS
PUBLIC	?lGetFirstSpecialistOrder@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFirstSpecialistOrder
EXTRN	?getFirstSpecialistOrder@CvCity@@QBEHW4SpecialistTypes@@@Z:PROC ; CvCity::getFirstSpecialistOrder
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFirstSpecialistOrder@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFirstSpecialistOrder@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFirstSpecialistOrder, COMDAT

; 1161 : 	return BasicLuaMethod(L, &CvCity::getFirstSpecialistOrder);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getFirstSpecialistOrder@CvCity@@QBEHW4SpecialistTypes@@@Z ; CvCity::getFirstSpecialistOrder
	push	eax
	call	??$BasicLuaMethod@HW4SpecialistTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4SpecialistTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum SpecialistTypes>
	add	esp, 8

; 1162 : }

	ret	0
?lGetFirstSpecialistOrder@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFirstSpecialistOrder
_TEXT	ENDS
PUBLIC	?lGetNumTrainUnitAI@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumTrainUnitAI
EXTRN	?getNumTrainUnitAI@CvCity@@QBEHW4UnitAITypes@@@Z:PROC ; CvCity::getNumTrainUnitAI
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumTrainUnitAI@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumTrainUnitAI@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetNumTrainUnitAI, COMDAT

; 1167 : 	return BasicLuaMethod(L, &CvCity::getNumTrainUnitAI);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getNumTrainUnitAI@CvCity@@QBEHW4UnitAITypes@@@Z ; CvCity::getNumTrainUnitAI
	push	eax
	call	??$BasicLuaMethod@HW4UnitAITypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitAITypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitAITypes>
	add	esp, 8

; 1168 : }

	ret	0
?lGetNumTrainUnitAI@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetNumTrainUnitAI
_TEXT	ENDS
PUBLIC	?lGetFirstBuildingOrder@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFirstBuildingOrder
EXTRN	?getFirstBuildingOrder@CvCity@@QBEHW4BuildingTypes@@@Z:PROC ; CvCity::getFirstBuildingOrder
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFirstBuildingOrder@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFirstBuildingOrder@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFirstBuildingOrder, COMDAT

; 1173 : 	return BasicLuaMethod(L, &CvCity::getFirstBuildingOrder);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getFirstBuildingOrder@CvCity@@QBEHW4BuildingTypes@@@Z ; CvCity::getFirstBuildingOrder
	push	eax
	call	??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes>
	add	esp, 8

; 1174 : }

	ret	0
?lGetFirstBuildingOrder@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFirstBuildingOrder
_TEXT	ENDS
PUBLIC	?lIsUnitFoodProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsUnitFoodProduction
EXTRN	?isFoodProduction@CvCity@@QBE_NW4UnitTypes@@@Z:PROC ; CvCity::isFoodProduction
; Function compile flags: /Ogtpy
;	COMDAT ?lIsUnitFoodProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsUnitFoodProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsUnitFoodProduction, COMDAT

; 1179 : 	return BasicLuaMethod<bool, UnitTypes>(L, &CvCity::isFoodProduction);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isFoodProduction@CvCity@@QBE_NW4UnitTypes@@@Z ; CvCity::isFoodProduction
	push	eax
	call	??$BasicLuaMethod@_NW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum UnitTypes>
	add	esp, 8

; 1180 : }

	ret	0
?lIsUnitFoodProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsUnitFoodProduction
_TEXT	ENDS
PUBLIC	?lGetProduction@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetProduction
EXTRN	?getProduction@CvCity@@QBEHXZ:PROC		; CvCity::getProduction
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetProduction, COMDAT

; 1185 : 	return BasicLuaMethod(L, &CvCity::getProduction);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getProduction@CvCity@@QBEHXZ	; CvCity::getProduction
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1186 : }

	ret	0
?lGetProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetProduction
_TEXT	ENDS
PUBLIC	?lGetProductionTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionTimes100
EXTRN	?getProductionTimes100@CvCity@@QBEHXZ:PROC	; CvCity::getProductionTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProductionTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProductionTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProductionTimes100, COMDAT

; 1191 : 	return BasicLuaMethod(L, &CvCity::getProductionTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getProductionTimes100@CvCity@@QBEHXZ ; CvCity::getProductionTimes100
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1192 : }

	ret	0
?lGetProductionTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProductionTimes100
_TEXT	ENDS
PUBLIC	?lGetProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionNeeded
EXTRN	?getProductionNeeded@CvCity@@QBEHXZ:PROC	; CvCity::getProductionNeeded
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProductionNeeded, COMDAT

; 1197 : 	return BasicLuaMethod(L, &CvCity::getProductionNeeded);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getProductionNeeded@CvCity@@QBEHXZ ; CvCity::getProductionNeeded
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1198 : }

	ret	0
?lGetProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProductionNeeded
_TEXT	ENDS
PUBLIC	?lGetUnitProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitProductionNeeded
EXTRN	?getProductionNeeded@CvCity@@QBEHW4UnitTypes@@@Z:PROC ; CvCity::getProductionNeeded
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnitProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetUnitProductionNeeded, COMDAT

; 1202 : {

	push	ebx
	push	ebp
	push	esi

; 1203 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetUnitPr
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetUnitPr
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetUnitPr
	xor	bl, bl
$LN5@lGetUnitPr:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetUnitPr
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetUnitPr:

; 1204 : 	const UnitTypes eUnitType = (UnitTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 1205 : 
; 1206 : 	const int iResult = pkCity->getProductionNeeded(eUnitType);

	push	eax
	mov	ecx, edi
	call	?getProductionNeeded@CvCity@@QBEHW4UnitTypes@@@Z ; CvCity::getProductionNeeded

; 1207 : 
; 1208 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1209 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1210 : }

	ret	0
?lGetUnitProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetUnitProductionNeeded
_TEXT	ENDS
PUBLIC	?lGetBuildingProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingProductionNeeded
EXTRN	?getProductionNeeded@CvCity@@QBEHW4BuildingTypes@@@Z:PROC ; CvCity::getProductionNeeded
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingProductionNeeded, COMDAT

; 1214 : {

	push	ebx
	push	ebp
	push	esi

; 1215 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetBuildi@3
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetBuildi@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetBuildi@3
	xor	bl, bl
$LN5@lGetBuildi@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetBuildi@3
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetBuildi@3:

; 1216 : 	const BuildingTypes eBuildingType = (BuildingTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 1217 : 
; 1218 : 	const int iResult = pkCity->getProductionNeeded(eBuildingType);

	push	eax
	mov	ecx, edi
	call	?getProductionNeeded@CvCity@@QBEHW4BuildingTypes@@@Z ; CvCity::getProductionNeeded

; 1219 : 
; 1220 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1221 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1222 : }

	ret	0
?lGetBuildingProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingProductionNeeded
_TEXT	ENDS
PUBLIC	?lGetProjectProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProjectProductionNeeded
EXTRN	?getProductionNeeded@CvCity@@QBEHW4ProjectTypes@@@Z:PROC ; CvCity::getProductionNeeded
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProjectProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProjectProductionNeeded, COMDAT

; 1226 : {

	push	ebx
	push	ebp
	push	esi

; 1227 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetProjec
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetProjec
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetProjec
	xor	bl, bl
$LN5@lGetProjec:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetProjec
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetProjec:

; 1228 : 	const ProjectTypes eProjectType = (ProjectTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 1229 : 
; 1230 : 	const int iResult = pkCity->getProductionNeeded(eProjectType);

	push	eax
	mov	ecx, edi
	call	?getProductionNeeded@CvCity@@QBEHW4ProjectTypes@@@Z ; CvCity::getProductionNeeded

; 1231 : 
; 1232 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1233 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1234 : }

	ret	0
?lGetProjectProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProjectProductionNeeded
_TEXT	ENDS
PUBLIC	?lGetProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionTurnsLeft
EXTRN	?getProductionTurnsLeft@CvCity@@QBEHXZ:PROC	; CvCity::getProductionTurnsLeft
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProductionTurnsLeft, COMDAT

; 1238 : {

	push	ebx
	push	ebp
	push	esi

; 1239 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetProduc@6
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetProduc@6
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetProduc@6
	xor	bl, bl
$LN5@lGetProduc@6:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetProduc@6
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetProduc@6:

; 1240 : 	const int iResult = pkCity->getProductionTurnsLeft();

	mov	ecx, edi
	call	?getProductionTurnsLeft@CvCity@@QBEHXZ	; CvCity::getProductionTurnsLeft

; 1241 : 
; 1242 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1243 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1244 : }

	ret	0
?lGetProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProductionTurnsLeft
_TEXT	ENDS
PUBLIC	?lGetUnitProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitProductionTurnsLeft
EXTRN	?getProductionTurnsLeft@CvCity@@QBEHW4UnitTypes@@H@Z:PROC ; CvCity::getProductionTurnsLeft
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnitProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetUnitProductionTurnsLeft, COMDAT

; 1249 : 	return BasicLuaMethod<int, UnitTypes>(L, &CvCity::getProductionTurnsLeft);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getProductionTurnsLeft@CvCity@@QBEHW4UnitTypes@@H@Z ; CvCity::getProductionTurnsLeft
	push	eax
	call	??$BasicLuaMethod@HW4UnitTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes,int>
	add	esp, 8

; 1250 : }

	ret	0
?lGetUnitProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetUnitProductionTurnsLeft
_TEXT	ENDS
PUBLIC	?lGetBuildingProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingProductionTurnsLeft
EXTRN	?getProductionTurnsLeft@CvCity@@QBEHW4BuildingTypes@@H@Z:PROC ; CvCity::getProductionTurnsLeft
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingProductionTurnsLeft, COMDAT

; 1255 : 	return BasicLuaMethod<int, BuildingTypes>(L, &CvCity::getProductionTurnsLeft);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getProductionTurnsLeft@CvCity@@QBEHW4BuildingTypes@@H@Z ; CvCity::getProductionTurnsLeft
	push	eax
	call	??$BasicLuaMethod@HW4BuildingTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes,int>
	add	esp, 8

; 1256 : }

	ret	0
?lGetBuildingProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingProductionTurnsLeft
_TEXT	ENDS
PUBLIC	?lGetProjectProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProjectProductionTurnsLeft
EXTRN	?getProductionTurnsLeft@CvCity@@QBEHW4ProjectTypes@@H@Z:PROC ; CvCity::getProductionTurnsLeft
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProjectProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProjectProductionTurnsLeft, COMDAT

; 1261 : 	return BasicLuaMethod<int, ProjectTypes>(L, &CvCity::getProductionTurnsLeft);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getProductionTurnsLeft@CvCity@@QBEHW4ProjectTypes@@H@Z ; CvCity::getProductionTurnsLeft
	push	eax
	call	??$BasicLuaMethod@HW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4ProjectTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes,int>
	add	esp, 8

; 1262 : }

	ret	0
?lGetProjectProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProjectProductionTurnsLeft
_TEXT	ENDS
PUBLIC	?lGetSpecialistProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistProductionTurnsLeft
EXTRN	?getProductionTurnsLeft@CvCity@@QBEHW4SpecialistTypes@@H@Z:PROC ; CvCity::getProductionTurnsLeft
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSpecialistProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSpecialistProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSpecialistProductionTurnsLeft, COMDAT

; 1267 : 	return BasicLuaMethod<int, SpecialistTypes>(L, &CvCity::getProductionTurnsLeft);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getProductionTurnsLeft@CvCity@@QBEHW4SpecialistTypes@@H@Z ; CvCity::getProductionTurnsLeft
	push	eax
	call	??$BasicLuaMethod@HW4SpecialistTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4SpecialistTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum SpecialistTypes,int>
	add	esp, 8

; 1268 : }

	ret	0
?lGetSpecialistProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSpecialistProductionTurnsLeft
_TEXT	ENDS
PUBLIC	?lIsCanPurchase@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsCanPurchase
EXTRN	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z:PROC ; CvCity::IsCanPurchase
; Function compile flags: /Ogtpy
;	COMDAT ?lIsCanPurchase@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eProjectType$ = -12					; size = 4
_bTestTrainable$ = -8					; size = 1
_bTestPurchaseCost$ = -4				; size = 1
_L$ = 8							; size = 4
?lIsCanPurchase@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsCanPurchase, COMDAT

; 1272 : {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi

; 1273 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+20]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsCanPurc
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsCanPurc
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsCanPurc
	xor	bl, bl
$LN5@lIsCanPurc:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsCanPurc
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsCanPurc:

; 1274 : 	const bool bTestPurchaseCost = lua_toboolean(L, 2);

	push	2
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al

; 1275 : 	const bool bTestTrainable = lua_toboolean(L, 3);

	push	3
	push	esi
	mov	BYTE PTR _bTestPurchaseCost$[esp+44], al
	call	_lua_toboolean
	test	eax, eax
	setne	cl

; 1276 : 	const UnitTypes eUnitType = (UnitTypes) lua_tointeger(L, 4);

	push	4
	push	esi
	mov	BYTE PTR _bTestTrainable$[esp+52], cl
	call	_lua_tointeger

; 1277 : 	const BuildingTypes eBuildingType = (BuildingTypes) lua_tointeger(L, 5);

	push	5
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 1278 : 	const ProjectTypes eProjectType = (ProjectTypes) lua_tointeger(L, 6);

	push	6
	push	esi
	mov	ebp, eax
	call	_lua_tointeger

; 1279 : 	const YieldTypes ePurchaseYield = (YieldTypes) lua_tointeger(L, 7);

	push	7
	push	esi
	mov	DWORD PTR _eProjectType$[esp+76], eax
	call	_lua_tointeger

; 1280 : 
; 1281 : 	const bool bResult = pkCity->IsCanPurchase(bTestPurchaseCost, bTestTrainable, eUnitType, eBuildingType, eProjectType, ePurchaseYield);

	mov	edx, DWORD PTR _eProjectType$[esp+76]
	mov	ecx, DWORD PTR _bTestPurchaseCost$[esp+76]
	add	esp, 48					; 00000030H
	push	eax
	mov	eax, DWORD PTR _bTestTrainable$[esp+32]
	push	edx
	push	ebp
	push	ebx
	push	eax
	push	ecx
	mov	ecx, edi
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase

; 1282 : 
; 1283 : 	lua_pushboolean(L, bResult);

	movzx	edx, al
	push	edx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1284 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1285 : }

	add	esp, 12					; 0000000cH
	ret	0
?lIsCanPurchase@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsCanPurchase
_TEXT	ENDS
PUBLIC	?lGetUnitPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitPurchaseCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnitPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetUnitPurchaseCost, COMDAT

; 1290 : 	return BasicLuaMethod<int, UnitTypes>(L, &CvCity::GetPurchaseCost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetPurchaseCost@CvCity@@QAEHW4UnitTypes@@@Z ; CvCity::GetPurchaseCost
	push	eax
	call	??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes>
	add	esp, 8

; 1291 : }

	ret	0
?lGetUnitPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetUnitPurchaseCost
_TEXT	ENDS
PUBLIC	?lGetUnitFaithPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitFaithPurchaseCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnitFaithPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitFaithPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetUnitFaithPurchaseCost, COMDAT

; 1296 : 	return BasicLuaMethod<int, UnitTypes>(L, &CvCity::GetFaithPurchaseCost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetFaithPurchaseCost@CvCity@@QAEHW4UnitTypes@@_N@Z ; CvCity::GetFaithPurchaseCost
	push	eax
	call	??$BasicLuaMethod@HW4UnitTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4UnitTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitTypes,bool>
	add	esp, 8

; 1297 : }

	ret	0
?lGetUnitFaithPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetUnitFaithPurchaseCost
_TEXT	ENDS
PUBLIC	?lGetBuildingPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingPurchaseCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingPurchaseCost, COMDAT

; 1302 : 	return BasicLuaMethod<int, BuildingTypes>(L, &CvCity::GetPurchaseCost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetPurchaseCost@CvCity@@QAEHW4BuildingTypes@@@Z ; CvCity::GetPurchaseCost
	push	eax
	call	??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes>
	add	esp, 8

; 1303 : }

	ret	0
?lGetBuildingPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingPurchaseCost
_TEXT	ENDS
PUBLIC	?lGetBuildingFaithPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingFaithPurchaseCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingFaithPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingFaithPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingFaithPurchaseCost, COMDAT

; 1308 : 	return BasicLuaMethod<int, BuildingTypes>(L, &CvCity::GetFaithPurchaseCost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetFaithPurchaseCost@CvCity@@QAEHW4BuildingTypes@@@Z ; CvCity::GetFaithPurchaseCost
	push	eax
	call	??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes>
	add	esp, 8

; 1309 : }

	ret	0
?lGetBuildingFaithPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingFaithPurchaseCost
_TEXT	ENDS
PUBLIC	?lGetProjectPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProjectPurchaseCost
EXTRN	?GetPurchaseCost@CvCity@@QAEHW4ProjectTypes@@@Z:PROC ; CvCity::GetPurchaseCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProjectPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProjectPurchaseCost, COMDAT

; 1314 : 	return BasicLuaMethod<int, ProjectTypes>(L, &CvCity::GetPurchaseCost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetPurchaseCost@CvCity@@QAEHW4ProjectTypes@@@Z ; CvCity::GetPurchaseCost
	push	eax
	call	??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum ProjectTypes>
	add	esp, 8

; 1315 : }

	ret	0
?lGetProjectPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProjectPurchaseCost
_TEXT	ENDS
PUBLIC	?lSetProduction@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lSetProduction
EXTRN	?setProduction@CvCity@@QAEXH@Z:PROC		; CvCity::setProduction
; Function compile flags: /Ogtpy
;	COMDAT ?lSetProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lSetProduction, COMDAT

; 1320 : 	return BasicLuaMethod(L, &CvCity::setProduction);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setProduction@CvCity@@QAEXH@Z	; CvCity::setProduction
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1321 : }

	ret	0
?lSetProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lSetProduction
_TEXT	ENDS
PUBLIC	?lChangeProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeProduction
EXTRN	?changeProduction@CvCity@@QAEXH@Z:PROC		; CvCity::changeProduction
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lChangeProduction, COMDAT

; 1326 : 	return BasicLuaMethod(L, &CvCity::changeProduction);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeProduction@CvCity@@QAEXH@Z ; CvCity::changeProduction
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1327 : }

	ret	0
?lChangeProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lChangeProduction
_TEXT	ENDS
PUBLIC	?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetYieldModifierTooltip
EXTRN	?GetTradeYieldModifier@CvCity@@QBEHW4YieldTypes@@PAVCvString@@@Z:PROC ; CvCity::GetTradeYieldModifier
EXTRN	?getBaseYieldRateModifier@CvCity@@QBEHW4YieldTypes@@HPAVCvString@@@Z:PROC ; CvCity::getBaseYieldRateModifier
EXTRN	?getProductionModifier@CvCity@@QBEHPAVCvString@@@Z:PROC ; CvCity::getProductionModifier
EXTRN	?foodDifferenceTimes100@CvCity@@QBEH_NPAVCvString@@@Z:PROC ; CvCity::foodDifferenceTimes100
;	COMDAT xdata$x
; File s:\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_toolTip$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetYieldModifierTooltip, COMDAT

; 1330 : {

	push	-1
	push	__ehhandler$?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi
	push	edi

; 1331 : 	CvString toolTip;

	lea	ecx, DWORD PTR _toolTip$[esp+56]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1332 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+52]
	xor	ebp, ebp
	push	esi
	mov	DWORD PTR __$EHRec$[esp+68], ebp
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN12@lGetYieldM
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN12@lGetYieldM
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN12@lGetYieldM
	xor	bl, bl
$LN12@lGetYieldM:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN19@lGetYieldM
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN19@lGetYieldM:

; 1333 : 	const YieldTypes eYield = (YieldTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	mov	edi, eax
	add	esp, 8

; 1334 : 
; 1335 : 	// City Food Modifier
; 1336 : 	if(eYield == YIELD_FOOD)

	test	edi, edi
	jne	SHORT $LN3@lGetYieldM

; 1337 : 	{	
; 1338 : 		pkCity->foodDifferenceTimes100(true, &toolTip);

	lea	eax, DWORD PTR _toolTip$[esp+56]
	push	eax
	push	1
	mov	ecx, ebp
	call	?foodDifferenceTimes100@CvCity@@QBEH_NPAVCvString@@@Z ; CvCity::foodDifferenceTimes100

; 1339 : 	}
; 1340 : 
; 1341 : 	// City Production Modifier
; 1342 : 	if(eYield == YIELD_PRODUCTION)

	jmp	SHORT $LN24@lGetYieldM
$LN3@lGetYieldM:
	cmp	edi, 1
	jne	SHORT $LN24@lGetYieldM

; 1343 : 	{
; 1344 : 		pkCity->getProductionModifier(&toolTip);

	lea	ecx, DWORD PTR _toolTip$[esp+56]
	push	ecx
	mov	ecx, ebp
	call	?getProductionModifier@CvCity@@QBEHPAVCvString@@@Z ; CvCity::getProductionModifier
$LN24@lGetYieldM:

; 1345 : 	}
; 1346 : 
; 1347 : 	// City Yield Rate Modifier
; 1348 : 	pkCity->getBaseYieldRateModifier(eYield, 0, &toolTip);

	lea	edx, DWORD PTR _toolTip$[esp+56]
	push	edx
	push	0
	push	edi
	mov	ecx, ebp
	call	?getBaseYieldRateModifier@CvCity@@QBEHW4YieldTypes@@HPAVCvString@@@Z ; CvCity::getBaseYieldRateModifier

; 1349 : 
; 1350 : 	if (eYield != YIELD_FOOD)

	test	edi, edi
	je	SHORT $LN1@lGetYieldM

; 1351 : 	{
; 1352 : 		// Trade Yield Modifier
; 1353 : 		pkCity->GetTradeYieldModifier(eYield, &toolTip);

	lea	eax, DWORD PTR _toolTip$[esp+56]
	push	eax
	push	edi
	mov	ecx, ebp
	call	?GetTradeYieldModifier@CvCity@@QBEHW4YieldTypes@@PAVCvString@@@Z ; CvCity::GetTradeYieldModifier
$LN1@lGetYieldM:

; 1354 : 	}
; 1355 : 
; 1356 : 	lua_pushstring(L, toolTip.c_str());

	lea	ecx, DWORD PTR _toolTip$[esp+56]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 1357 : 	return 1;

	lea	ecx, DWORD PTR _toolTip$[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1358 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _toolTip$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetYieldModifierTooltip
PUBLIC	?lGetProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProductionModifier, COMDAT

; 1362 : {

	push	ebx
	push	ebp
	push	esi

; 1363 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetProduc@7
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetProduc@7
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetProduc@7
	xor	bl, bl
$LN5@lGetProduc@7:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetProduc@7
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetProduc@7:

; 1364 : 	const int iResult = pkCity->getProductionModifier();

	push	0
	mov	ecx, edi
	call	?getProductionModifier@CvCity@@QBEHPAVCvString@@@Z ; CvCity::getProductionModifier

; 1365 : 
; 1366 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1367 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1368 : }

	ret	0
?lGetProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProductionModifier
_TEXT	ENDS
PUBLIC	?lGetCurrentProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCurrentProductionDifference
EXTRN	?getCurrentProductionDifference@CvCity@@QBEH_N0@Z:PROC ; CvCity::getCurrentProductionDifference
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCurrentProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCurrentProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetCurrentProductionDifference, COMDAT

; 1373 : 	return BasicLuaMethod(L, &CvCity::getCurrentProductionDifference);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getCurrentProductionDifference@CvCity@@QBEH_N0@Z ; CvCity::getCurrentProductionDifference
	push	eax
	call	??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N1@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,bool>
	add	esp, 8

; 1374 : }

	ret	0
?lGetCurrentProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetCurrentProductionDifference
_TEXT	ENDS
PUBLIC	?lGetRawProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetRawProductionDifference
EXTRN	?getRawProductionDifference@CvCity@@QBEH_N0@Z:PROC ; CvCity::getRawProductionDifference
; Function compile flags: /Ogtpy
;	COMDAT ?lGetRawProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRawProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetRawProductionDifference, COMDAT

; 1379 : 	return BasicLuaMethod(L, &CvCity::getRawProductionDifference);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getRawProductionDifference@CvCity@@QBEH_N0@Z ; CvCity::getRawProductionDifference
	push	eax
	call	??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N1@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,bool>
	add	esp, 8

; 1380 : }

	ret	0
?lGetRawProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetRawProductionDifference
_TEXT	ENDS
PUBLIC	?lGetCurrentProductionDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCurrentProductionDifferenceTimes100
EXTRN	?getCurrentProductionDifferenceTimes100@CvCity@@QBEH_N0@Z:PROC ; CvCity::getCurrentProductionDifferenceTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCurrentProductionDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCurrentProductionDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetCurrentProductionDifferenceTimes100, COMDAT

; 1385 : 	return BasicLuaMethod(L, &CvCity::getCurrentProductionDifferenceTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getCurrentProductionDifferenceTimes100@CvCity@@QBEH_N0@Z ; CvCity::getCurrentProductionDifferenceTimes100
	push	eax
	call	??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N1@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,bool>
	add	esp, 8

; 1386 : }

	ret	0
?lGetCurrentProductionDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetCurrentProductionDifferenceTimes100
_TEXT	ENDS
PUBLIC	?lGetRawProductionDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetRawProductionDifferenceTimes100
EXTRN	?getRawProductionDifferenceTimes100@CvCity@@QBEH_N0@Z:PROC ; CvCity::getRawProductionDifferenceTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetRawProductionDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRawProductionDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetRawProductionDifferenceTimes100, COMDAT

; 1391 : 	return BasicLuaMethod(L, &CvCity::getRawProductionDifferenceTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getRawProductionDifferenceTimes100@CvCity@@QBEH_N0@Z ; CvCity::getRawProductionDifferenceTimes100
	push	eax
	call	??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N1@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,bool>
	add	esp, 8

; 1392 : }

	ret	0
?lGetRawProductionDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetRawProductionDifferenceTimes100
_TEXT	ENDS
PUBLIC	?lGetUnitProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitProductionModifier
EXTRN	?getProductionModifier@CvCity@@QBEHW4UnitTypes@@PAVCvString@@@Z:PROC ; CvCity::getProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnitProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetUnitProductionModifier, COMDAT

; 1396 : {

	push	ebx
	push	ebp
	push	esi

; 1397 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetUnitPr@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetUnitPr@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetUnitPr@2
	xor	bl, bl
$LN5@lGetUnitPr@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetUnitPr@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetUnitPr@2:

; 1398 : 	const UnitTypes iUnit = (UnitTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 1399 : 	const int iResult = pkCity->getProductionModifier(iUnit);

	push	0
	push	eax
	mov	ecx, edi
	call	?getProductionModifier@CvCity@@QBEHW4UnitTypes@@PAVCvString@@@Z ; CvCity::getProductionModifier

; 1400 : 
; 1401 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1402 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1403 : }

	ret	0
?lGetUnitProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetUnitProductionModifier
_TEXT	ENDS
PUBLIC	?lGetBuildingProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingProductionModifier
EXTRN	?getProductionModifier@CvCity@@QBEHW4BuildingTypes@@PAVCvString@@@Z:PROC ; CvCity::getProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingProductionModifier, COMDAT

; 1407 : {

	push	ebx
	push	ebp
	push	esi

; 1408 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetBuildi@4
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetBuildi@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetBuildi@4
	xor	bl, bl
$LN7@lGetBuildi@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetBuildi@4
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetBuildi@4:

; 1409 : 	const BuildingTypes iBuilding = (BuildingTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 1410 : 	if(iBuilding != NO_BUILDING)
; 1411 : 	{
; 1412 : 		const int iResult = pkCity->getProductionModifier(iBuilding);

	push	0
	cmp	eax, -1
	je	SHORT $LN2@lGetBuildi@4
	push	eax
	mov	ecx, edi
	call	?getProductionModifier@CvCity@@QBEHW4BuildingTypes@@PAVCvString@@@Z ; CvCity::getProductionModifier

; 1413 : 		lua_pushinteger(L, iResult);

	push	eax
$LN2@lGetBuildi@4:

; 1414 : 	}
; 1415 : 	else
; 1416 : 	{
; 1417 : 		lua_pushinteger(L, 0);

	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1418 : 	}
; 1419 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1420 : }

	ret	0
?lGetBuildingProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingProductionModifier
_TEXT	ENDS
PUBLIC	?lGetProjectProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProjectProductionModifier
EXTRN	?getProductionModifier@CvCity@@QBEHW4ProjectTypes@@PAVCvString@@@Z:PROC ; CvCity::getProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProjectProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetProjectProductionModifier, COMDAT

; 1424 : {

	push	ebx
	push	ebp
	push	esi

; 1425 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetProjec@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetProjec@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetProjec@2
	xor	bl, bl
$LN5@lGetProjec@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetProjec@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetProjec@2:

; 1426 : 	const ProjectTypes eProject = (ProjectTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 1427 : 	const int iResult = pkCity->getProductionModifier(eProject);

	push	0
	push	eax
	mov	ecx, edi
	call	?getProductionModifier@CvCity@@QBEHW4ProjectTypes@@PAVCvString@@@Z ; CvCity::getProductionModifier

; 1428 : 
; 1429 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1430 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1431 : }

	ret	0
?lGetProjectProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetProjectProductionModifier
_TEXT	ENDS
PUBLIC	?lGetSpecialistProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistProductionModifier
EXTRN	?getProductionModifier@CvCity@@QBEHW4SpecialistTypes@@PAVCvString@@@Z:PROC ; CvCity::getProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSpecialistProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSpecialistProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSpecialistProductionModifier, COMDAT

; 1435 : {

	push	ebx
	push	ebp
	push	esi

; 1436 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetSpecia
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetSpecia
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetSpecia
	xor	bl, bl
$LN5@lGetSpecia:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetSpecia
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetSpecia:

; 1437 : 	const SpecialistTypes eSpecialist = (SpecialistTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 1438 : 	const int iResult = pkCity->getProductionModifier(eSpecialist);

	push	0
	push	eax
	mov	ecx, edi
	call	?getProductionModifier@CvCity@@QBEHW4SpecialistTypes@@PAVCvString@@@Z ; CvCity::getProductionModifier

; 1439 : 
; 1440 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1441 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1442 : }

	ret	0
?lGetSpecialistProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSpecialistProductionModifier
_TEXT	ENDS
PUBLIC	?lGetExtraProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetExtraProductionDifference
EXTRN	?getExtraProductionDifference@CvCity@@QBEHH@Z:PROC ; CvCity::getExtraProductionDifference
; Function compile flags: /Ogtpy
;	COMDAT ?lGetExtraProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetExtraProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetExtraProductionDifference, COMDAT

; 1447 : 	return BasicLuaMethod(L, &CvCity::getExtraProductionDifference);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getExtraProductionDifference@CvCity@@QBEHH@Z ; CvCity::getExtraProductionDifference
	push	eax
	call	??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,int>
	add	esp, 8

; 1448 : }

	ret	0
?lGetExtraProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetExtraProductionDifference
_TEXT	ENDS
PUBLIC	?lCanHurry@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanHurry
EXTRN	?canHurry@CvCity@@QBE_NW4HurryTypes@@_N@Z:PROC	; CvCity::canHurry
; Function compile flags: /Ogtpy
;	COMDAT ?lCanHurry@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanHurry@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lCanHurry, COMDAT

; 1453 : 	return BasicLuaMethod(L, &CvCity::canHurry);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?canHurry@CvCity@@QBE_NW4HurryTypes@@_N@Z ; CvCity::canHurry
	push	eax
	call	??$BasicLuaMethod@_NW4HurryTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4HurryTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum HurryTypes,bool>
	add	esp, 8

; 1454 : }

	ret	0
?lCanHurry@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lCanHurry
_TEXT	ENDS
PUBLIC	?lHurry@CvLuaCity@@KAHPAUlua_State@@@Z		; CvLuaCity::lHurry
EXTRN	?hurry@CvCity@@QAEXW4HurryTypes@@@Z:PROC	; CvCity::hurry
; Function compile flags: /Ogtpy
;	COMDAT ?lHurry@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHurry@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lHurry, COMDAT

; 1459 : 	return BasicLuaMethod(L, &CvCity::hurry);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?hurry@CvCity@@QAEXW4HurryTypes@@@Z ; CvCity::hurry
	push	eax
	call	??$BasicLuaMethod@W4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum HurryTypes>
	add	esp, 8

; 1460 : }

	ret	0
?lHurry@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lHurry
_TEXT	ENDS
PUBLIC	?lGetConscriptUnit@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetConscriptUnit
EXTRN	?getConscriptUnit@CvCity@@QBE?AW4UnitTypes@@XZ:PROC ; CvCity::getConscriptUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lGetConscriptUnit@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetConscriptUnit@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetConscriptUnit, COMDAT

; 1465 : 	return BasicLuaMethod(L, &CvCity::getConscriptUnit);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getConscriptUnit@CvCity@@QBE?AW4UnitTypes@@XZ ; CvCity::getConscriptUnit
	push	eax
	call	??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4UnitTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum UnitTypes>
	add	esp, 8

; 1466 : }

	ret	0
?lGetConscriptUnit@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetConscriptUnit
_TEXT	ENDS
PUBLIC	?lGetConscriptPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetConscriptPopulation
EXTRN	?getConscriptPopulation@CvCity@@QBEHXZ:PROC	; CvCity::getConscriptPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lGetConscriptPopulation@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetConscriptPopulation@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetConscriptPopulation, COMDAT

; 1471 : 	return BasicLuaMethod(L, &CvCity::getConscriptPopulation);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getConscriptPopulation@CvCity@@QBEHXZ ; CvCity::getConscriptPopulation
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1472 : }

	ret	0
?lGetConscriptPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetConscriptPopulation
_TEXT	ENDS
PUBLIC	?lConscriptMinCityPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lConscriptMinCityPopulation
EXTRN	?conscriptMinCityPopulation@CvCity@@QBEHXZ:PROC	; CvCity::conscriptMinCityPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lConscriptMinCityPopulation@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lConscriptMinCityPopulation@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lConscriptMinCityPopulation, COMDAT

; 1477 : 	return BasicLuaMethod(L, &CvCity::conscriptMinCityPopulation);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?conscriptMinCityPopulation@CvCity@@QBEHXZ ; CvCity::conscriptMinCityPopulation
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1478 : }

	ret	0
?lConscriptMinCityPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lConscriptMinCityPopulation
_TEXT	ENDS
PUBLIC	?lCanConscript@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanConscript
EXTRN	?canConscript@CvCity@@QBE_NXZ:PROC		; CvCity::canConscript
; Function compile flags: /Ogtpy
;	COMDAT ?lCanConscript@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanConscript@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanConscript, COMDAT

; 1483 : 	return BasicLuaMethod(L, &CvCity::canConscript);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?canConscript@CvCity@@QBE_NXZ	; CvCity::canConscript
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1484 : }

	ret	0
?lCanConscript@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanConscript
_TEXT	ENDS
PUBLIC	?lConscript@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lConscript
EXTRN	?conscript@CvCity@@QAEXXZ:PROC			; CvCity::conscript
; Function compile flags: /Ogtpy
;	COMDAT ?lConscript@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lConscript@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lConscript, COMDAT

; 1488 : {

	push	ebx
	push	ebp
	push	esi

; 1489 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lConscript
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lConscript
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lConscript
	xor	bl, bl
$LN5@lConscript:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lConscript
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lConscript:

; 1490 : 	pkCity->conscript();

	mov	ecx, edi
	call	?conscript@CvCity@@QAEXXZ		; CvCity::conscript
	pop	edi
	pop	esi
	pop	ebp

; 1491 : 
; 1492 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1493 : }

	ret	0
?lConscript@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lConscript
_TEXT	ENDS
PUBLIC	?lGetResourceYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetResourceYieldRateModifier
EXTRN	?getResourceYieldRateModifier@CvCity@@QBEHW4YieldTypes@@W4ResourceTypes@@@Z:PROC ; CvCity::getResourceYieldRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetResourceYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResourceYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetResourceYieldRateModifier, COMDAT

; 1498 : 	return BasicLuaMethod<int, YieldTypes, ResourceTypes>(L, &CvCity::getResourceYieldRateModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getResourceYieldRateModifier@CvCity@@QBEHW4YieldTypes@@W4ResourceTypes@@@Z ; CvCity::getResourceYieldRateModifier
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@W4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@W4ResourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes,enum ResourceTypes>
	add	esp, 8

; 1499 : }

	ret	0
?lGetResourceYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetResourceYieldRateModifier
_TEXT	ENDS
PUBLIC	?lGetHandicapType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetHandicapType
EXTRN	?getHandicapType@CvCity@@QBE?AW4HandicapTypes@@XZ:PROC ; CvCity::getHandicapType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHandicapType@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHandicapType@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetHandicapType, COMDAT

; 1504 : 	return BasicLuaMethod(L, &CvCity::getHandicapType);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getHandicapType@CvCity@@QBE?AW4HandicapTypes@@XZ ; CvCity::getHandicapType
	push	eax
	call	??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4HandicapTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum HandicapTypes>
	add	esp, 8

; 1505 : }

	ret	0
?lGetHandicapType@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetHandicapType
_TEXT	ENDS
PUBLIC	?lGetCivilizationType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCivilizationType
EXTRN	?getCivilizationType@CvCity@@QBE?AW4CivilizationTypes@@XZ:PROC ; CvCity::getCivilizationType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCivilizationType@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCivilizationType@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetCivilizationType, COMDAT

; 1510 : 	return BasicLuaMethod(L, &CvCity::getCivilizationType);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getCivilizationType@CvCity@@QBE?AW4CivilizationTypes@@XZ ; CvCity::getCivilizationType
	push	eax
	call	??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4CivilizationTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum CivilizationTypes>
	add	esp, 8

; 1511 : }

	ret	0
?lGetCivilizationType@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetCivilizationType
_TEXT	ENDS
PUBLIC	?lGetPersonalityType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetPersonalityType
EXTRN	?getPersonalityType@CvCity@@QBE?AW4LeaderHeadTypes@@XZ:PROC ; CvCity::getPersonalityType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPersonalityType@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPersonalityType@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetPersonalityType, COMDAT

; 1515 : {

	push	ebx
	push	ebp
	push	esi

; 1516 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetPerson
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetPerson
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetPerson
	xor	bl, bl
$LN5@lGetPerson:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetPerson
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetPerson:

; 1517 : 	const LeaderHeadTypes eValue = pkCity->getPersonalityType();

	mov	ecx, edi
	call	?getPersonalityType@CvCity@@QBE?AW4LeaderHeadTypes@@XZ ; CvCity::getPersonalityType

; 1518 : 
; 1519 : 	lua_pushinteger(L, eValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1520 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1521 : }

	ret	0
?lGetPersonalityType@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetPersonalityType
_TEXT	ENDS
PUBLIC	?lGetArtStyleType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetArtStyleType
EXTRN	?getArtStyleType@CvCity@@QBE?AW4ArtStyleTypes@@XZ:PROC ; CvCity::getArtStyleType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetArtStyleType@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetArtStyleType@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetArtStyleType, COMDAT

; 1525 : {

	push	ebx
	push	ebp
	push	esi

; 1526 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetArtSty
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetArtSty
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetArtSty
	xor	bl, bl
$LN5@lGetArtSty:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetArtSty
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetArtSty:

; 1527 : 	const ArtStyleTypes eValue = pkCity->getArtStyleType();

	mov	ecx, edi
	call	?getArtStyleType@CvCity@@QBE?AW4ArtStyleTypes@@XZ ; CvCity::getArtStyleType

; 1528 : 
; 1529 : 	lua_pushinteger(L, eValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1530 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1531 : }

	ret	0
?lGetArtStyleType@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetArtStyleType
_TEXT	ENDS
PUBLIC	?lGetCitySizeType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCitySizeType
EXTRN	?getCitySizeType@CvCity@@QBE?AW4CitySizeTypes@@XZ:PROC ; CvCity::getCitySizeType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCitySizeType@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCitySizeType@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetCitySizeType, COMDAT

; 1535 : {

	push	ebx
	push	ebp
	push	esi

; 1536 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCitySi
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCitySi
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetCitySi
	xor	bl, bl
$LN5@lGetCitySi:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetCitySi
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetCitySi:

; 1537 : 	const CitySizeTypes eValue = pkCity->getCitySizeType();

	mov	ecx, edi
	call	?getCitySizeType@CvCity@@QBE?AW4CitySizeTypes@@XZ ; CvCity::getCitySizeType

; 1538 : 
; 1539 : 	lua_pushinteger(L, eValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1540 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1541 : }

	ret	0
?lGetCitySizeType@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetCitySizeType
_TEXT	ENDS
PUBLIC	?lIsBarbarian@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsBarbarian
EXTRN	?isBarbarian@CvCity@@QBE_NXZ:PROC		; CvCity::isBarbarian
; Function compile flags: /Ogtpy
;	COMDAT ?lIsBarbarian@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBarbarian@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsBarbarian, COMDAT

; 1546 : 	return BasicLuaMethod(L, &CvCity::isBarbarian);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isBarbarian@CvCity@@QBE_NXZ	; CvCity::isBarbarian
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1547 : }

	ret	0
?lIsBarbarian@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsBarbarian
_TEXT	ENDS
PUBLIC	?lIsHuman@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsHuman
EXTRN	?isHuman@CvCity@@QBE_NXZ:PROC			; CvCity::isHuman
; Function compile flags: /Ogtpy
;	COMDAT ?lIsHuman@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHuman@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lIsHuman, COMDAT

; 1552 : 	return BasicLuaMethod(L, &CvCity::isHuman);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isHuman@CvCity@@QBE_NXZ		; CvCity::isHuman
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1553 : }

	ret	0
?lIsHuman@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lIsHuman
_TEXT	ENDS
PUBLIC	?lIsVisible@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsVisible
EXTRN	?isVisible@CvCity@@QBE_NW4TeamTypes@@_N@Z:PROC	; CvCity::isVisible
; Function compile flags: /Ogtpy
;	COMDAT ?lIsVisible@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsVisible@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lIsVisible, COMDAT

; 1558 : 	return BasicLuaMethod(L, &CvCity::isVisible);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isVisible@CvCity@@QBE_NW4TeamTypes@@_N@Z ; CvCity::isVisible
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4TeamTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum TeamTypes,bool>
	add	esp, 8

; 1559 : }

	ret	0
?lIsVisible@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lIsVisible
_TEXT	ENDS
PUBLIC	?lIsCapital@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsCapital
EXTRN	?isCapital@CvCity@@QBE_NXZ:PROC			; CvCity::isCapital
; Function compile flags: /Ogtpy
;	COMDAT ?lIsCapital@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsCapital@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lIsCapital, COMDAT

; 1564 : 	return BasicLuaMethod(L, &CvCity::isCapital);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isCapital@CvCity@@QBE_NXZ	; CvCity::isCapital
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1565 : }

	ret	0
?lIsCapital@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lIsCapital
_TEXT	ENDS
PUBLIC	?lIsOriginalCapital@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsOriginalCapital
EXTRN	?IsOriginalCapital@CvCity@@QBE_NXZ:PROC		; CvCity::IsOriginalCapital
; Function compile flags: /Ogtpy
;	COMDAT ?lIsOriginalCapital@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsOriginalCapital@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsOriginalCapital, COMDAT

; 1570 : 	return BasicLuaMethod(L, &CvCity::IsOriginalCapital);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsOriginalCapital@CvCity@@QBE_NXZ ; CvCity::IsOriginalCapital
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1571 : }

	ret	0
?lIsOriginalCapital@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsOriginalCapital
_TEXT	ENDS
PUBLIC	?lIsOriginalMajorCapital@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsOriginalMajorCapital
EXTRN	?IsOriginalMajorCapital@CvCity@@QBE_NXZ:PROC	; CvCity::IsOriginalMajorCapital
; Function compile flags: /Ogtpy
;	COMDAT ?lIsOriginalMajorCapital@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsOriginalMajorCapital@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsOriginalMajorCapital, COMDAT

; 1576 : 	return BasicLuaMethod(L, &CvCity::IsOriginalMajorCapital);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsOriginalMajorCapital@CvCity@@QBE_NXZ ; CvCity::IsOriginalMajorCapital
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 1577 : }

	ret	0
?lIsOriginalMajorCapital@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsOriginalMajorCapital
_TEXT	ENDS
PUBLIC	?lIsCoastal@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsCoastal
EXTRN	?isCoastal@CvCity@@QBE_NH@Z:PROC		; CvCity::isCoastal
; Function compile flags: /Ogtpy
;	COMDAT ?lIsCoastal@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsCoastal@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lIsCoastal, COMDAT

; 1582 : 	return BasicLuaMethod(L, &CvCity::isCoastal);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isCoastal@CvCity@@QBE_NH@Z	; CvCity::isCoastal
	push	eax
	call	??$BasicLuaMethod@_NH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,int>
	add	esp, 8

; 1583 : }

	ret	0
?lIsCoastal@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lIsCoastal
_TEXT	ENDS
PUBLIC	?lFoodConsumption@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lFoodConsumption
EXTRN	?foodConsumption@CvCity@@QBEH_NH@Z:PROC		; CvCity::foodConsumption
; Function compile flags: /Ogtpy
;	COMDAT ?lFoodConsumption@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lFoodConsumption@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lFoodConsumption, COMDAT

; 1588 : 	return BasicLuaMethod(L, &CvCity::foodConsumption);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?foodConsumption@CvCity@@QBEH_NH@Z ; CvCity::foodConsumption
	push	eax
	call	??$BasicLuaMethod@H_NH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_NH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,int>
	add	esp, 8

; 1589 : }

	ret	0
?lFoodConsumption@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lFoodConsumption
_TEXT	ENDS
PUBLIC	?lFoodDifference@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lFoodDifference
EXTRN	?foodDifference@CvCity@@QBEH_N@Z:PROC		; CvCity::foodDifference
; Function compile flags: /Ogtpy
;	COMDAT ?lFoodDifference@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lFoodDifference@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lFoodDifference, COMDAT

; 1594 : 	return BasicLuaMethod(L, &CvCity::foodDifference);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?foodDifference@CvCity@@QBEH_N@Z	; CvCity::foodDifference
	push	eax
	call	??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool>
	add	esp, 8

; 1595 : }

	ret	0
?lFoodDifference@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lFoodDifference
_TEXT	ENDS
PUBLIC	?lFoodDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lFoodDifferenceTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lFoodDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lFoodDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lFoodDifferenceTimes100, COMDAT

; 1600 : 	return BasicLuaMethod(L, &CvCity::foodDifferenceTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?foodDifferenceTimes100@CvCity@@QBEH_NPAVCvString@@@Z ; CvCity::foodDifferenceTimes100
	push	eax
	call	??$BasicLuaMethod@H_NPAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEH_NPAVCvString@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool,CvString *>
	add	esp, 8

; 1601 : }

	ret	0
?lFoodDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lFoodDifferenceTimes100
_TEXT	ENDS
PUBLIC	?lGrowthThreshold@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGrowthThreshold
EXTRN	?growthThreshold@CvCity@@QBEHXZ:PROC		; CvCity::growthThreshold
; Function compile flags: /Ogtpy
;	COMDAT ?lGrowthThreshold@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGrowthThreshold@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGrowthThreshold, COMDAT

; 1606 : 	return BasicLuaMethod(L, &CvCity::growthThreshold);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?growthThreshold@CvCity@@QBEHXZ	; CvCity::growthThreshold
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1607 : }

	ret	0
?lGrowthThreshold@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGrowthThreshold
_TEXT	ENDS
PUBLIC	?lProductionLeft@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lProductionLeft
EXTRN	?productionLeft@CvCity@@QBEHXZ:PROC		; CvCity::productionLeft
; Function compile flags: /Ogtpy
;	COMDAT ?lProductionLeft@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lProductionLeft@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lProductionLeft, COMDAT

; 1612 : 	return BasicLuaMethod(L, &CvCity::productionLeft);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?productionLeft@CvCity@@QBEHXZ	; CvCity::productionLeft
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1613 : }

	ret	0
?lProductionLeft@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lProductionLeft
_TEXT	ENDS
PUBLIC	?lHurryCost@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lHurryCost
EXTRN	?hurryCost@CvCity@@QBEHW4HurryTypes@@_N@Z:PROC	; CvCity::hurryCost
; Function compile flags: /Ogtpy
;	COMDAT ?lHurryCost@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHurryCost@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lHurryCost, COMDAT

; 1618 : 	return BasicLuaMethod(L, &CvCity::hurryCost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?hurryCost@CvCity@@QBEHW4HurryTypes@@_N@Z ; CvCity::hurryCost
	push	eax
	call	??$BasicLuaMethod@HW4HurryTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum HurryTypes,bool>
	add	esp, 8

; 1619 : }

	ret	0
?lHurryCost@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lHurryCost
_TEXT	ENDS
PUBLIC	?lHurryGold@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lHurryGold
EXTRN	?hurryGold@CvCity@@QBEHW4HurryTypes@@@Z:PROC	; CvCity::hurryGold
; Function compile flags: /Ogtpy
;	COMDAT ?lHurryGold@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHurryGold@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lHurryGold, COMDAT

; 1624 : 	return BasicLuaMethod(L, &CvCity::hurryGold);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?hurryGold@CvCity@@QBEHW4HurryTypes@@@Z ; CvCity::hurryGold
	push	eax
	call	??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum HurryTypes>
	add	esp, 8

; 1625 : }

	ret	0
?lHurryGold@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lHurryGold
_TEXT	ENDS
PUBLIC	?lHurryPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lHurryPopulation
EXTRN	?hurryPopulation@CvCity@@QBEHW4HurryTypes@@@Z:PROC ; CvCity::hurryPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lHurryPopulation@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHurryPopulation@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lHurryPopulation, COMDAT

; 1630 : 	return BasicLuaMethod(L, &CvCity::hurryPopulation);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?hurryPopulation@CvCity@@QBEHW4HurryTypes@@@Z ; CvCity::hurryPopulation
	push	eax
	call	??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum HurryTypes>
	add	esp, 8

; 1631 : }

	ret	0
?lHurryPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lHurryPopulation
_TEXT	ENDS
PUBLIC	?lHurryProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lHurryProduction
EXTRN	?hurryProduction@CvCity@@QBEHW4HurryTypes@@@Z:PROC ; CvCity::hurryProduction
; Function compile flags: /Ogtpy
;	COMDAT ?lHurryProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHurryProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lHurryProduction, COMDAT

; 1636 : 	return BasicLuaMethod(L, &CvCity::hurryProduction);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?hurryProduction@CvCity@@QBEHW4HurryTypes@@@Z ; CvCity::hurryProduction
	push	eax
	call	??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum HurryTypes>
	add	esp, 8

; 1637 : }

	ret	0
?lHurryProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lHurryProduction
_TEXT	ENDS
PUBLIC	?lMaxHurryPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lMaxHurryPopulation
EXTRN	?maxHurryPopulation@CvCity@@QBEHXZ:PROC		; CvCity::maxHurryPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lMaxHurryPopulation@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lMaxHurryPopulation@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lMaxHurryPopulation, COMDAT

; 1642 : 	return BasicLuaMethod(L, &CvCity::maxHurryPopulation);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?maxHurryPopulation@CvCity@@QBEHXZ ; CvCity::maxHurryPopulation
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1643 : }

	ret	0
?lMaxHurryPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lMaxHurryPopulation
_TEXT	ENDS
PUBLIC	?lGetNumBuilding@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetNumBuilding
EXTRN	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetNumBuilding
EXTRN	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ:PROC ; CvCity::GetCityBuildings
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetNumBuilding, COMDAT

; 1647 : {

	push	ebx
	push	ebp
	push	esi

; 1648 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetNumBui
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetNumBui
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetNumBui
	xor	bl, bl
$LN7@lGetNumBui:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetNumBui
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetNumBui:

; 1649 : 	const BuildingTypes eBuildingType = (BuildingTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 1650 : 	if(eBuildingType != NO_BUILDING)

	cmp	eax, -1
	je	SHORT $LN2@lGetNumBui

; 1651 : 	{
; 1652 : 		const int iResult = pkCity->GetCityBuildings()->GetNumBuilding(eBuildingType);

	push	eax
	mov	ecx, edi
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding

; 1653 : 		lua_pushinteger(L, iResult);

	push	eax

; 1654 : 	}
; 1655 : 	else
; 1656 : 	{
; 1657 : 		lua_pushinteger(L, 0);

	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1658 : 	}
; 1659 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1660 : }

	ret	0
$LN2@lGetNumBui:

; 1654 : 	}
; 1655 : 	else
; 1656 : 	{
; 1657 : 		lua_pushinteger(L, 0);

	push	0
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1658 : 	}
; 1659 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1660 : }

	ret	0
?lGetNumBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetNumBuilding
_TEXT	ENDS
PUBLIC	?lIsHasBuilding@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsHasBuilding
; Function compile flags: /Ogtpy
;	COMDAT ?lIsHasBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHasBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsHasBuilding, COMDAT

; 1665 : {

	push	ebx
	push	ebp
	push	esi

; 1666 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lIsHasBuil
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lIsHasBuil
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lIsHasBuil
	xor	bl, bl
$LN7@lIsHasBuil:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lIsHasBuil
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lIsHasBuil:

; 1667 : 	const BuildingTypes eBuildingType = (BuildingTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 1668 : 	if(eBuildingType != NO_BUILDING)

	cmp	eax, -1
	je	SHORT $LN2@lIsHasBuil

; 1669 : 	{
; 1670 : #ifdef AUI_WARNING_FIXES
; 1671 : 		const int bResult = MIN(pkCity->GetCityBuildings()->GetNumBuilding(eBuildingType), 1);
; 1672 : #else
; 1673 : 		const bool bResult = pkCity->GetCityBuildings()->GetNumBuilding(eBuildingType);

	push	eax
	mov	ecx, edi
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	setne	al

; 1674 : #endif
; 1675 : 		lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax

; 1676 : 	}
; 1677 : 	else
; 1678 : 	{
; 1679 : #ifdef AUI_WARNING_FIXES
; 1680 : 		lua_pushboolean(L, 0);
; 1681 : #else
; 1682 : 		lua_pushboolean(L, false);

	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1683 : #endif
; 1684 : 	}
; 1685 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1686 : }

	ret	0
$LN2@lIsHasBuil:

; 1676 : 	}
; 1677 : 	else
; 1678 : 	{
; 1679 : #ifdef AUI_WARNING_FIXES
; 1680 : 		lua_pushboolean(L, 0);
; 1681 : #else
; 1682 : 		lua_pushboolean(L, false);

	push	0
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1683 : #endif
; 1684 : 	}
; 1685 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1686 : }

	ret	0
?lIsHasBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsHasBuilding
_TEXT	ENDS
PUBLIC	?lGetNumActiveBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumActiveBuilding
EXTRN	?GetNumActiveBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetNumActiveBuilding
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumActiveBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumActiveBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumActiveBuilding, COMDAT

; 1690 : {

	push	ebx
	push	ebp
	push	esi

; 1691 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetNumAct
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetNumAct
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetNumAct
	xor	bl, bl
$LN7@lGetNumAct:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetNumAct
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetNumAct:

; 1692 : 	const BuildingTypes eBuildingType = (BuildingTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 1693 : 	if(eBuildingType != NO_BUILDING)

	cmp	eax, -1
	je	SHORT $LN2@lGetNumAct

; 1694 : 	{
; 1695 : 		const int iResult = pkCity->GetCityBuildings()->GetNumActiveBuilding(eBuildingType);

	push	eax
	mov	ecx, edi
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumActiveBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumActiveBuilding

; 1696 : 		lua_pushinteger(L, iResult);

	push	eax

; 1697 : 	}
; 1698 : 	else
; 1699 : 	{
; 1700 : 		lua_pushinteger(L, 0);

	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1701 : 	}
; 1702 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1703 : }

	ret	0
$LN2@lGetNumAct:

; 1697 : 	}
; 1698 : 	else
; 1699 : 	{
; 1700 : 		lua_pushinteger(L, 0);

	push	0
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1701 : 	}
; 1702 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1703 : }

	ret	0
?lGetNumActiveBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumActiveBuilding
_TEXT	ENDS
PUBLIC	?lGetID@CvLuaCity@@KAHPAUlua_State@@@Z		; CvLuaCity::lGetID
; Function compile flags: /Ogtpy
;	COMDAT ?lGetID@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetID@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lGetID, COMDAT

; 1707 : {

	push	ebx
	push	ebp
	push	esi

; 1708 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetID
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetID
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetID
	xor	bl, bl
$LN5@lGetID:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetID
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetID:

; 1709 : 	const int iResult = pkCity->GetID();
; 1710 : 
; 1711 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR [edi+120]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1712 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1713 : }

	ret	0
?lGetID@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lGetID
_TEXT	ENDS
PUBLIC	?lGetX@CvLuaCity@@KAHPAUlua_State@@@Z		; CvLuaCity::lGetX
; Function compile flags: /Ogtpy
;	COMDAT ?lGetX@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetX@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lGetX, COMDAT

; 1717 : {

	push	ebx
	push	ebp
	push	esi

; 1718 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetX
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetX
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetX
	xor	bl, bl
$LN5@lGetX:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetX
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetX:

; 1719 : 	const int iResult = pkCity->getX();
; 1720 : 
; 1721 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR [edi+96]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1722 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1723 : }

	ret	0
?lGetX@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lGetX
_TEXT	ENDS
PUBLIC	?lGetY@CvLuaCity@@KAHPAUlua_State@@@Z		; CvLuaCity::lGetY
; Function compile flags: /Ogtpy
;	COMDAT ?lGetY@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetY@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lGetY, COMDAT

; 1727 : {

	push	ebx
	push	ebp
	push	esi

; 1728 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetY
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetY
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetY
	xor	bl, bl
$LN5@lGetY:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetY
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetY:

; 1729 : 	const int iResult = pkCity->getY();
; 1730 : 
; 1731 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR [edi+108]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1732 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1733 : }

	ret	0
?lGetY@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lGetY
_TEXT	ENDS
PUBLIC	?lAt@CvLuaCity@@KAHPAUlua_State@@@Z		; CvLuaCity::lAt
EXTRN	?at@CvCity@@QBE_NHH@Z:PROC			; CvCity::at
; Function compile flags: /Ogtpy
;	COMDAT ?lAt@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAt@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lAt, COMDAT

; 1737 : {

	push	ebx
	push	ebp
	push	esi

; 1738 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lAt
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lAt
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lAt
	xor	bl, bl
$LN5@lAt:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lAt
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lAt:

; 1739 : 	const int x = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 1740 : 	const int y = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 1741 : 	const bool bResult = pkCity->at(x, y);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?at@CvCity@@QBE_NHH@Z			; CvCity::at

; 1742 : 
; 1743 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1744 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1745 : }

	ret	0
?lAt@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lAt
_TEXT	ENDS
PUBLIC	?lAtPlot@CvLuaCity@@KAHPAUlua_State@@@Z		; CvLuaCity::lAtPlot
EXTRN	?at@CvCity@@QBE_NPAVCvPlot@@@Z:PROC		; CvCity::at
; Function compile flags: /Ogtpy
;	COMDAT ?lAtPlot@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$229729 = -4					; size = 4
_L$ = 8							; size = 4
?lAtPlot@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lAtPlot, COMDAT

; 1749 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 1750 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$229729[esp+32], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lAtPlot
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lAtPlot
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$229729[esp+20], eax
	test	eax, eax
	je	SHORT $LN5@lAtPlot
	xor	bl, bl
$LN5@lAtPlot:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lAtPlot
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lAtPlot:

; 1751 : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lAtPlot
	push	OFFSET $SG223846
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lAtPlot
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN16@lAtPlot
	xor	bl, bl
$LN16@lAtPlot:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lAtPlot
	push	esi
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 4
$LN15@lAtPlot:

; 1752 : 	const bool bResult = pkCity->at(pkPlot);

	mov	ecx, DWORD PTR _pkInstance$229729[esp+20]
	push	edi
	call	?at@CvCity@@QBE_NPAVCvPlot@@@Z		; CvCity::at

; 1753 : 
; 1754 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1755 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1756 : }

	pop	ecx
	ret	0
?lAtPlot@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lAtPlot
_TEXT	ENDS
PUBLIC	?lPlot@CvLuaCity@@KAHPAUlua_State@@@Z		; CvLuaCity::lPlot
EXTRN	?plot@CvCity@@QBEPAVCvPlot@@XZ:PROC		; CvCity::plot
; Function compile flags: /Ogtpy
;	COMDAT ?lPlot@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lPlot@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lPlot, COMDAT

; 1760 : {

	push	ebx
	push	ebp
	push	esi

; 1761 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lPlot
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lPlot
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lPlot
	xor	bl, bl
$LN5@lPlot:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lPlot
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lPlot:

; 1762 : 	CvPlot* pkPlot = pkCity->plot();

	mov	ecx, edi
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot

; 1763 : 	CvLuaPlot::Push(L, pkPlot);

	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1764 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1765 : }

	ret	0
?lPlot@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lPlot
_TEXT	ENDS
PUBLIC	?lArea@CvLuaCity@@KAHPAUlua_State@@@Z		; CvLuaCity::lArea
EXTRN	?area@CvCity@@QBEPAVCvArea@@XZ:PROC		; CvCity::area
; Function compile flags: /Ogtpy
;	COMDAT ?lArea@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lArea@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lArea, COMDAT

; 1769 : {

	push	ebx
	push	ebp
	push	esi

; 1770 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lArea
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lArea
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lArea
	xor	bl, bl
$LN5@lArea:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lArea
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lArea:

; 1771 : 	CvArea* pkArea = pkCity->area();

	mov	ecx, edi
	call	?area@CvCity@@QBEPAVCvArea@@XZ		; CvCity::area

; 1772 : 	CvLuaArea::Push(L, pkArea);

	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaArea@@VCvArea@@@@SAXPAUlua_State@@PAVCvArea@@@Z ; CvLuaScopedInstance<CvLuaArea,CvArea>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1773 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1774 : }

	ret	0
?lArea@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lArea
_TEXT	ENDS
PUBLIC	?lWaterArea@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lWaterArea
EXTRN	?waterArea@CvCity@@QBEPAVCvArea@@XZ:PROC	; CvCity::waterArea
; Function compile flags: /Ogtpy
;	COMDAT ?lWaterArea@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lWaterArea@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lWaterArea, COMDAT

; 1778 : {

	push	ebx
	push	ebp
	push	esi

; 1779 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lWaterArea
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lWaterArea
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lWaterArea
	xor	bl, bl
$LN5@lWaterArea:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lWaterArea
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lWaterArea:

; 1780 : 	CvArea* pkArea = pkCity->waterArea();

	mov	ecx, edi
	call	?waterArea@CvCity@@QBEPAVCvArea@@XZ	; CvCity::waterArea

; 1781 : 	CvLuaArea::Push(L, pkArea);

	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaArea@@VCvArea@@@@SAXPAUlua_State@@PAVCvArea@@@Z ; CvLuaScopedInstance<CvLuaArea,CvArea>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1782 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1783 : }

	ret	0
?lWaterArea@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lWaterArea
_TEXT	ENDS
PUBLIC	?lGetRallyPlot@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetRallyPlot
EXTRN	?getRallyPlot@CvCity@@QBEPAVCvPlot@@XZ:PROC	; CvCity::getRallyPlot
; Function compile flags: /Ogtpy
;	COMDAT ?lGetRallyPlot@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRallyPlot@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetRallyPlot, COMDAT

; 1787 : {

	push	ebx
	push	ebp
	push	esi

; 1788 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetRallyP
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetRallyP
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetRallyP
	xor	bl, bl
$LN5@lGetRallyP:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetRallyP
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetRallyP:

; 1789 : 	CvPlot* pkPlot = pkCity->getRallyPlot();

	mov	ecx, edi
	call	?getRallyPlot@CvCity@@QBEPAVCvPlot@@XZ	; CvCity::getRallyPlot

; 1790 : 	CvLuaPlot::Push(L, pkPlot);

	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1791 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1792 : }

	ret	0
?lGetRallyPlot@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetRallyPlot
_TEXT	ENDS
PUBLIC	?lCanBuyPlot@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanBuyPlot
EXTRN	?CanBuyPlot@CvCity@@QAE_NHH_N@Z:PROC		; CvCity::CanBuyPlot
EXTRN	?GetNextBuyablePlot@CvCity@@QAEPAVCvPlot@@XZ:PROC ; CvCity::GetNextBuyablePlot
; Function compile flags: /Ogtpy
;	COMDAT ?lCanBuyPlot@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanBuyPlot@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanBuyPlot, COMDAT

; 1797 : {

	push	ebx
	push	ebp
	push	esi

; 1798 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanBuyPlo
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanBuyPlo
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanBuyPlo
	xor	bl, bl
$LN5@lCanBuyPlo:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanBuyPlo
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanBuyPlo:

; 1799 : 	CvPlot* pPlot = pkCity->GetNextBuyablePlot();

	mov	ecx, edi
	call	?GetNextBuyablePlot@CvCity@@QAEPAVCvPlot@@XZ ; CvCity::GetNextBuyablePlot

; 1800 : 	lua_pushboolean(L, pkCity->CanBuyPlot(pPlot->getX(), pPlot->getY()));

	movsx	ecx, WORD PTR [eax+2]
	movsx	eax, WORD PTR [eax]
	push	0
	push	ecx
	push	eax
	mov	ecx, edi
	call	?CanBuyPlot@CvCity@@QAE_NHH_N@Z		; CvCity::CanBuyPlot
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1801 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1802 : }

	ret	0
?lCanBuyPlot@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanBuyPlot
_TEXT	ENDS
PUBLIC	?lCanBuyPlotAt@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanBuyPlotAt
; Function compile flags: /Ogtpy
;	COMDAT ?lCanBuyPlotAt@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bIgnoreCost$ = -4					; size = 1
_L$ = 8							; size = 4
?lCanBuyPlotAt@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanBuyPlotAt, COMDAT

; 1807 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 1808 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanBuyPlo@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanBuyPlo@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanBuyPlo@2
	xor	bl, bl
$LN5@lCanBuyPlo@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanBuyPlo@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanBuyPlo@2:

; 1809 : 	const int iX = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 1810 : 	const int iY = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 1811 : 	const bool bIgnoreCost = lua_toboolean(L, 4);

	push	4
	push	esi
	mov	ebp, eax
	call	_lua_toboolean
	add	esp, 24					; 00000018H
	test	eax, eax
	setne	al
	mov	BYTE PTR _bIgnoreCost$[esp+20], al

; 1812 : 	lua_pushboolean(L, pkCity->CanBuyPlot(iX, iY, bIgnoreCost));

	mov	ecx, DWORD PTR _bIgnoreCost$[esp+20]
	push	ecx
	push	ebp
	push	ebx
	mov	ecx, edi
	call	?CanBuyPlot@CvCity@@QAE_NHH_N@Z		; CvCity::CanBuyPlot
	movzx	edx, al
	push	edx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1813 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1814 : }

	pop	ecx
	ret	0
?lCanBuyPlotAt@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanBuyPlotAt
_TEXT	ENDS
PUBLIC	?lCanBuyAnyPlot@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanBuyAnyPlot
EXTRN	?CanBuyAnyPlot@CvCity@@QAE_NXZ:PROC		; CvCity::CanBuyAnyPlot
; Function compile flags: /Ogtpy
;	COMDAT ?lCanBuyAnyPlot@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanBuyAnyPlot@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanBuyAnyPlot, COMDAT

; 1818 : {

	push	ebx
	push	ebp
	push	esi

; 1819 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanBuyAny
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanBuyAny
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanBuyAny
	xor	bl, bl
$LN5@lCanBuyAny:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanBuyAny
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanBuyAny:

; 1820 : 	lua_pushboolean(L, pkCity->CanBuyAnyPlot());

	mov	ecx, edi
	call	?CanBuyAnyPlot@CvCity@@QAE_NXZ		; CvCity::CanBuyAnyPlot
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1821 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1822 : }

	ret	0
?lCanBuyAnyPlot@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanBuyAnyPlot
_TEXT	ENDS
PUBLIC	?lGetNextBuyablePlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNextBuyablePlot
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNextBuyablePlot@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNextBuyablePlot@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNextBuyablePlot, COMDAT

; 1826 : {

	push	ebx
	push	ebp
	push	esi

; 1827 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNextBu
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNextBu
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNextBu
	xor	bl, bl
$LN5@lGetNextBu:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNextBu
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNextBu:

; 1828 : 	CvPlot* pkPlot = pkCity->GetNextBuyablePlot();

	mov	ecx, edi
	call	?GetNextBuyablePlot@CvCity@@QAEPAVCvPlot@@XZ ; CvCity::GetNextBuyablePlot

; 1829 : 	CvLuaPlot::Push(L, pkPlot);

	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1830 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1831 : }

	ret	0
?lGetNextBuyablePlot@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNextBuyablePlot
_TEXT	ENDS
PUBLIC	?lGetBuyPlotCost@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetBuyPlotCost
EXTRN	?GetBuyPlotCost@CvCity@@QBEHHH@Z:PROC		; CvCity::GetBuyPlotCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuyPlotCost@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuyPlotCost@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetBuyPlotCost, COMDAT

; 1877 : {

	push	ebx
	push	ebp
	push	esi

; 1878 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetBuyPlo
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetBuyPlo
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetBuyPlo
	xor	bl, bl
$LN5@lGetBuyPlo:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetBuyPlo
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetBuyPlo:

; 1879 : 	const int iX = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 1880 : 	const int iY = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 1881 : 	lua_pushinteger(L, pkCity->GetBuyPlotCost(iX, iY));

	push	eax
	push	ebx
	mov	ecx, edi
	call	?GetBuyPlotCost@CvCity@@QBEHHH@Z	; CvCity::GetBuyPlotCost
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1882 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1883 : }

	ret	0
?lGetBuyPlotCost@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetBuyPlotCost
_TEXT	ENDS
PUBLIC	?lGetGarrisonedUnit@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGarrisonedUnit
EXTRN	?GetGarrisonedUnit@CvCity@@QBEPAVCvUnit@@XZ:PROC ; CvCity::GetGarrisonedUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGarrisonedUnit@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGarrisonedUnit@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetGarrisonedUnit, COMDAT

; 1888 : {

	push	ebx
	push	ebp
	push	esi

; 1889 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetGarris
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetGarris
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetGarris
	xor	bl, bl
$LN5@lGetGarris:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetGarris
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetGarris:

; 1890 : 	CvUnit* pkUnit = pkCity->GetGarrisonedUnit();

	mov	ecx, edi
	call	?GetGarrisonedUnit@CvCity@@QBEPAVCvUnit@@XZ ; CvCity::GetGarrisonedUnit

; 1891 : 	CvLuaUnit::Push(L, pkUnit);

	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1892 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1893 : }

	ret	0
?lGetGarrisonedUnit@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetGarrisonedUnit
_TEXT	ENDS
PUBLIC	?lGetGameTurnFounded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGameTurnFounded
EXTRN	?getGameTurnFounded@CvCity@@QBEHXZ:PROC		; CvCity::getGameTurnFounded
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGameTurnFounded@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGameTurnFounded@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetGameTurnFounded, COMDAT

; 1899 : 	return BasicLuaMethod(L, &CvCity::getGameTurnFounded);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGameTurnFounded@CvCity@@QBEHXZ ; CvCity::getGameTurnFounded
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1900 : }

	ret	0
?lGetGameTurnFounded@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetGameTurnFounded
_TEXT	ENDS
PUBLIC	?lGetGameTurnAcquired@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGameTurnAcquired
EXTRN	?getGameTurnAcquired@CvCity@@QBEHXZ:PROC	; CvCity::getGameTurnAcquired
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGameTurnAcquired@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGameTurnAcquired@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetGameTurnAcquired, COMDAT

; 1905 : 	return BasicLuaMethod(L, &CvCity::getGameTurnAcquired);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGameTurnAcquired@CvCity@@QBEHXZ ; CvCity::getGameTurnAcquired
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1906 : }

	ret	0
?lGetGameTurnAcquired@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetGameTurnAcquired
_TEXT	ENDS
PUBLIC	?lGetGameTurnLastExpanded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGameTurnLastExpanded
EXTRN	?getGameTurnLastExpanded@CvCity@@QBEHXZ:PROC	; CvCity::getGameTurnLastExpanded
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGameTurnLastExpanded@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGameTurnLastExpanded@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetGameTurnLastExpanded, COMDAT

; 1911 : 	return BasicLuaMethod(L, &CvCity::getGameTurnLastExpanded);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGameTurnLastExpanded@CvCity@@QBEHXZ ; CvCity::getGameTurnLastExpanded
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1912 : }

	ret	0
?lGetGameTurnLastExpanded@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetGameTurnLastExpanded
_TEXT	ENDS
PUBLIC	?lGetPopulation@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetPopulation
EXTRN	?getPopulation@CvCity@@QBEHXZ:PROC		; CvCity::getPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPopulation@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPopulation@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetPopulation, COMDAT

; 1917 : 	return BasicLuaMethod(L, &CvCity::getPopulation);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getPopulation@CvCity@@QBEHXZ	; CvCity::getPopulation
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1918 : }

	ret	0
?lGetPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetPopulation
_TEXT	ENDS
PUBLIC	?lSetPopulation@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lSetPopulation
EXTRN	?setPopulation@CvCity@@QAEXH_N@Z:PROC		; CvCity::setPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lSetPopulation@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetPopulation@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lSetPopulation, COMDAT

; 1922 : {

	push	ebx
	push	ebp
	push	esi

; 1923 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lSetPopula
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lSetPopula
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lSetPopula
	xor	bl, bl
$LN5@lSetPopula:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lSetPopula
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lSetPopula:

; 1924 : 	int iValue = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 1925 : 	int bReassignPop = lua_toboolean(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 16					; 00000010H

; 1926 : 	CvAssertMsg(bReassignPop != 0, "It is super dangerous to set this to false.  Ken would love to see why you are doing this.");
; 1927 : 	pkCity->setPopulation(iValue, bReassignPop);

	test	eax, eax
	setne	al
	movzx	ecx, al
	push	ecx
	push	ebx
	mov	ecx, edi
	call	?setPopulation@CvCity@@QAEXH_N@Z	; CvCity::setPopulation
	pop	edi
	pop	esi
	pop	ebp

; 1928 : 
; 1929 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1930 : //	return BasicLuaMethod(L, &CvCity::setPopulation);
; 1931 : }

	ret	0
?lSetPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lSetPopulation
_TEXT	ENDS
PUBLIC	?lChangePopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangePopulation
EXTRN	?changePopulation@CvCity@@QAEXH_N@Z:PROC	; CvCity::changePopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lChangePopulation@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangePopulation@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lChangePopulation, COMDAT

; 1935 : {

	push	ebx
	push	ebp
	push	esi

; 1936 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lChangePop
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lChangePop
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lChangePop
	xor	bl, bl
$LN5@lChangePop:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lChangePop
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lChangePop:

; 1937 : 	int iChange = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 1938 : 	int bReassignPop = lua_toboolean(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 16					; 00000010H

; 1939 : 	CvAssertMsg(bReassignPop != 0, "It is super dangerous to set this to false.  Ken would love to see why you are doing this.");
; 1940 : 	pkCity->changePopulation(iChange, bReassignPop);

	test	eax, eax
	setne	al
	movzx	ecx, al
	push	ecx
	push	ebx
	mov	ecx, edi
	call	?changePopulation@CvCity@@QAEXH_N@Z	; CvCity::changePopulation
	pop	edi
	pop	esi
	pop	ebp

; 1941 : 
; 1942 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1943 : //	return BasicLuaMethod(L, &CvCity::changePopulation);
; 1944 : }

	ret	0
?lChangePopulation@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lChangePopulation
_TEXT	ENDS
PUBLIC	?lGetRealPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetRealPopulation
EXTRN	?getRealPopulation@CvCity@@QBEJXZ:PROC		; CvCity::getRealPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lGetRealPopulation@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRealPopulation@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetRealPopulation, COMDAT

; 1949 : 	return BasicLuaMethod(L, &CvCity::getRealPopulation);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getRealPopulation@CvCity@@QBEJXZ ; CvCity::getRealPopulation
	push	eax
	call	??$BasicLuaMethod@J@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEJXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<long>
	add	esp, 8

; 1950 : }

	ret	0
?lGetRealPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetRealPopulation
_TEXT	ENDS
PUBLIC	?lGetHighestPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetHighestPopulation
EXTRN	?getHighestPopulation@CvCity@@QBEHXZ:PROC	; CvCity::getHighestPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHighestPopulation@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHighestPopulation@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetHighestPopulation, COMDAT

; 1955 : 	return BasicLuaMethod(L, &CvCity::getHighestPopulation);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getHighestPopulation@CvCity@@QBEHXZ ; CvCity::getHighestPopulation
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1956 : }

	ret	0
?lGetHighestPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetHighestPopulation
_TEXT	ENDS
PUBLIC	?lSetHighestPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetHighestPopulation
EXTRN	?setHighestPopulation@CvCity@@QAEXH@Z:PROC	; CvCity::setHighestPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lSetHighestPopulation@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetHighestPopulation@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetHighestPopulation, COMDAT

; 1961 : 	return BasicLuaMethod(L, &CvCity::setHighestPopulation);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setHighestPopulation@CvCity@@QAEXH@Z ; CvCity::setHighestPopulation
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1962 : }

	ret	0
?lSetHighestPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetHighestPopulation
_TEXT	ENDS
PUBLIC	?lGetNumGreatPeople@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumGreatPeople
EXTRN	?getNumGreatPeople@CvCity@@QBEHXZ:PROC		; CvCity::getNumGreatPeople
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumGreatPeople@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumGreatPeople@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetNumGreatPeople, COMDAT

; 1979 : 	return BasicLuaMethod(L, &CvCity::getNumGreatPeople);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getNumGreatPeople@CvCity@@QBEHXZ ; CvCity::getNumGreatPeople
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1980 : }

	ret	0
?lGetNumGreatPeople@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetNumGreatPeople
_TEXT	ENDS
PUBLIC	?lGetBaseGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseGreatPeopleRate
EXTRN	?getBaseGreatPeopleRate@CvCity@@QBEHXZ:PROC	; CvCity::getBaseGreatPeopleRate
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBaseGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBaseGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBaseGreatPeopleRate, COMDAT

; 1985 : 	return BasicLuaMethod(L, &CvCity::getBaseGreatPeopleRate);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getBaseGreatPeopleRate@CvCity@@QBEHXZ ; CvCity::getBaseGreatPeopleRate
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1986 : }

	ret	0
?lGetBaseGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBaseGreatPeopleRate
_TEXT	ENDS
PUBLIC	?lGetGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGreatPeopleRate
EXTRN	?getGreatPeopleRate@CvCity@@QBEHXZ:PROC		; CvCity::getGreatPeopleRate
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetGreatPeopleRate, COMDAT

; 1991 : 	return BasicLuaMethod(L, &CvCity::getGreatPeopleRate);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGreatPeopleRate@CvCity@@QBEHXZ ; CvCity::getGreatPeopleRate
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1992 : }

	ret	0
?lGetGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetGreatPeopleRate
_TEXT	ENDS
PUBLIC	?lGetTotalGreatPeopleRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetTotalGreatPeopleRateModifier
EXTRN	?getTotalGreatPeopleRateModifier@CvCity@@QBEHXZ:PROC ; CvCity::getTotalGreatPeopleRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTotalGreatPeopleRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalGreatPeopleRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetTotalGreatPeopleRateModifier, COMDAT

; 1997 : 	return BasicLuaMethod(L, &CvCity::getTotalGreatPeopleRateModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getTotalGreatPeopleRateModifier@CvCity@@QBEHXZ ; CvCity::getTotalGreatPeopleRateModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 1998 : }

	ret	0
?lGetTotalGreatPeopleRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetTotalGreatPeopleRateModifier
_TEXT	ENDS
PUBLIC	?lChangeBaseGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseGreatPeopleRate
EXTRN	?changeBaseGreatPeopleRate@CvCity@@QAEXH@Z:PROC	; CvCity::changeBaseGreatPeopleRate
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeBaseGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeBaseGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeBaseGreatPeopleRate, COMDAT

; 2003 : 	return BasicLuaMethod(L, &CvCity::changeBaseGreatPeopleRate);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeBaseGreatPeopleRate@CvCity@@QAEXH@Z ; CvCity::changeBaseGreatPeopleRate
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2004 : }

	ret	0
?lChangeBaseGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeBaseGreatPeopleRate
_TEXT	ENDS
PUBLIC	?lGetGreatPeopleRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGreatPeopleRateModifier
EXTRN	?getGreatPeopleRateModifier@CvCity@@QBEHXZ:PROC	; CvCity::getGreatPeopleRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGreatPeopleRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatPeopleRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetGreatPeopleRateModifier, COMDAT

; 2009 : 	return BasicLuaMethod(L, &CvCity::getGreatPeopleRateModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGreatPeopleRateModifier@CvCity@@QBEHXZ ; CvCity::getGreatPeopleRateModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2010 : }

	ret	0
?lGetGreatPeopleRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetGreatPeopleRateModifier
_TEXT	ENDS
PUBLIC	?lGetJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCultureStored
EXTRN	?GetJONSCultureStored@CvCity@@QBEHXZ:PROC	; CvCity::GetJONSCultureStored
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCultureStored, COMDAT

; 2015 : 	return BasicLuaMethod(L, &CvCity::GetJONSCultureStored);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetJONSCultureStored@CvCity@@QBEHXZ ; CvCity::GetJONSCultureStored
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2016 : }

	ret	0
?lGetJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCultureStored
_TEXT	ENDS
PUBLIC	?lSetJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetJONSCultureStored
EXTRN	?SetJONSCultureStored@CvCity@@QAEXH@Z:PROC	; CvCity::SetJONSCultureStored
; Function compile flags: /Ogtpy
;	COMDAT ?lSetJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetJONSCultureStored, COMDAT

; 2021 : 	return BasicLuaMethod(L, &CvCity::SetJONSCultureStored);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetJONSCultureStored@CvCity@@QAEXH@Z ; CvCity::SetJONSCultureStored
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2022 : }

	ret	0
?lSetJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetJONSCultureStored
_TEXT	ENDS
PUBLIC	?lChangeJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCultureStored
EXTRN	?ChangeJONSCultureStored@CvCity@@QAEXH@Z:PROC	; CvCity::ChangeJONSCultureStored
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeJONSCultureStored, COMDAT

; 2027 : 	return BasicLuaMethod(L, &CvCity::ChangeJONSCultureStored);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeJONSCultureStored@CvCity@@QAEXH@Z ; CvCity::ChangeJONSCultureStored
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2028 : }

	ret	0
?lChangeJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeJONSCultureStored
_TEXT	ENDS
PUBLIC	?lGetJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCultureStoredTimes100
EXTRN	?GetJONSCultureStoredTimes100@CvCity@@QBEHXZ:PROC ; CvCity::GetJONSCultureStoredTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCultureStoredTimes100, COMDAT

; 2032 : 	return BasicLuaMethod(L, &CvCity::GetJONSCultureStoredTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetJONSCultureStoredTimes100@CvCity@@QBEHXZ ; CvCity::GetJONSCultureStoredTimes100
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2033 : }

	ret	0
?lGetJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCultureStoredTimes100
_TEXT	ENDS
PUBLIC	?lSetJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetJONSCultureStoredTimes100
EXTRN	?SetJONSCultureStoredTimes100@CvCity@@QAEXH@Z:PROC ; CvCity::SetJONSCultureStoredTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lSetJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetJONSCultureStoredTimes100, COMDAT

; 2036 : 	return BasicLuaMethod(L, &CvCity::SetJONSCultureStoredTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetJONSCultureStoredTimes100@CvCity@@QAEXH@Z ; CvCity::SetJONSCultureStoredTimes100
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2037 : }

	ret	0
?lSetJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetJONSCultureStoredTimes100
_TEXT	ENDS
PUBLIC	?lChangeJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCultureStoredTimes100
EXTRN	?ChangeJONSCultureStoredTimes100@CvCity@@QAEXH@Z:PROC ; CvCity::ChangeJONSCultureStoredTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeJONSCultureStoredTimes100, COMDAT

; 2040 : 	return BasicLuaMethod(L, &CvCity::ChangeJONSCultureStoredTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeJONSCultureStoredTimes100@CvCity@@QAEXH@Z ; CvCity::ChangeJONSCultureStoredTimes100
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2041 : }

	ret	0
?lChangeJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeJONSCultureStoredTimes100
_TEXT	ENDS
PUBLIC	?lGetJONSCulturePerTurnTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnTimes100
EXTRN	?getJONSCulturePerTurnTimes100@CvCity@@QBEHXZ:PROC ; CvCity::getJONSCulturePerTurnTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCulturePerTurnTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCulturePerTurnTimes100, COMDAT

; 2044 : 	return BasicLuaMethod(L, &CvCity::getJONSCulturePerTurnTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getJONSCulturePerTurnTimes100@CvCity@@QBEHXZ ; CvCity::getJONSCulturePerTurnTimes100
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2045 : }

	ret	0
?lGetJONSCulturePerTurnTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCulturePerTurnTimes100
_TEXT	ENDS
PUBLIC	?lGetJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCultureLevel
EXTRN	?GetJONSCultureLevel@CvCity@@QBEHXZ:PROC	; CvCity::GetJONSCultureLevel
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCultureLevel, COMDAT

; 2051 : 	return BasicLuaMethod(L, &CvCity::GetJONSCultureLevel);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetJONSCultureLevel@CvCity@@QBEHXZ ; CvCity::GetJONSCultureLevel
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2052 : }

	ret	0
?lGetJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCultureLevel
_TEXT	ENDS
PUBLIC	?lSetJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetJONSCultureLevel
EXTRN	?SetJONSCultureLevel@CvCity@@QAEXH@Z:PROC	; CvCity::SetJONSCultureLevel
; Function compile flags: /Ogtpy
;	COMDAT ?lSetJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetJONSCultureLevel, COMDAT

; 2057 : 	return BasicLuaMethod(L, &CvCity::SetJONSCultureLevel);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetJONSCultureLevel@CvCity@@QAEXH@Z ; CvCity::SetJONSCultureLevel
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2058 : }

	ret	0
?lSetJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetJONSCultureLevel
_TEXT	ENDS
PUBLIC	?lChangeJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCultureLevel
EXTRN	?ChangeJONSCultureLevel@CvCity@@QAEXH@Z:PROC	; CvCity::ChangeJONSCultureLevel
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeJONSCultureLevel, COMDAT

; 2063 : 	return BasicLuaMethod(L, &CvCity::ChangeJONSCultureLevel);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeJONSCultureLevel@CvCity@@QAEXH@Z ; CvCity::ChangeJONSCultureLevel
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2064 : }

	ret	0
?lChangeJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeJONSCultureLevel
_TEXT	ENDS
PUBLIC	?lGetJONSCultureThreshold@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCultureThreshold
EXTRN	?GetJONSCultureThreshold@CvCity@@QBEHXZ:PROC	; CvCity::GetJONSCultureThreshold
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCultureThreshold@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCultureThreshold@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCultureThreshold, COMDAT

; 2075 : 	return BasicLuaMethod(L, &CvCity::GetJONSCultureThreshold);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetJONSCultureThreshold@CvCity@@QBEHXZ ; CvCity::GetJONSCultureThreshold
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2076 : }

	ret	0
?lGetJONSCultureThreshold@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCultureThreshold
_TEXT	ENDS
PUBLIC	?lGetJONSCulturePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurn
EXTRN	?getJONSCulturePerTurn@CvCity@@QBEHXZ:PROC	; CvCity::getJONSCulturePerTurn
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCulturePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCulturePerTurn, COMDAT

; 2082 : 	return BasicLuaMethod(L, &CvCity::getJONSCulturePerTurn);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getJONSCulturePerTurn@CvCity@@QBEHXZ ; CvCity::getJONSCulturePerTurn
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2083 : }

	ret	0
?lGetJONSCulturePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCulturePerTurn
_TEXT	ENDS
PUBLIC	?lGetBaseJONSCulturePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseJONSCulturePerTurn
EXTRN	?GetBaseJONSCulturePerTurn@CvCity@@QBEHXZ:PROC	; CvCity::GetBaseJONSCulturePerTurn
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBaseJONSCulturePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBaseJONSCulturePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBaseJONSCulturePerTurn, COMDAT

; 2088 : 	return BasicLuaMethod(L, &CvCity::GetBaseJONSCulturePerTurn);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetBaseJONSCulturePerTurn@CvCity@@QBEHXZ ; CvCity::GetBaseJONSCulturePerTurn
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2089 : }

	ret	0
?lGetBaseJONSCulturePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBaseJONSCulturePerTurn
_TEXT	ENDS
PUBLIC	?lGetJONSCulturePerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromBuildings
EXTRN	?GetJONSCulturePerTurnFromBuildings@CvCity@@QBEHXZ:PROC ; CvCity::GetJONSCulturePerTurnFromBuildings
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCulturePerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCulturePerTurnFromBuildings, COMDAT

; 2094 : 	return BasicLuaMethod(L, &CvCity::GetJONSCulturePerTurnFromBuildings);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetJONSCulturePerTurnFromBuildings@CvCity@@QBEHXZ ; CvCity::GetJONSCulturePerTurnFromBuildings
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2095 : }

	ret	0
?lGetJONSCulturePerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCulturePerTurnFromBuildings
_TEXT	ENDS
PUBLIC	?lChangeJONSCulturePerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCulturePerTurnFromBuildings
EXTRN	?ChangeJONSCulturePerTurnFromBuildings@CvCity@@QAEXH@Z:PROC ; CvCity::ChangeJONSCulturePerTurnFromBuildings
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeJONSCulturePerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeJONSCulturePerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeJONSCulturePerTurnFromBuildings, COMDAT

; 2100 : 	return BasicLuaMethod(L, &CvCity::ChangeJONSCulturePerTurnFromBuildings);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeJONSCulturePerTurnFromBuildings@CvCity@@QAEXH@Z ; CvCity::ChangeJONSCulturePerTurnFromBuildings
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2101 : }

	ret	0
?lChangeJONSCulturePerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeJONSCulturePerTurnFromBuildings
_TEXT	ENDS
PUBLIC	?lGetJONSCulturePerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromPolicies
EXTRN	?GetJONSCulturePerTurnFromPolicies@CvCity@@QBEHXZ:PROC ; CvCity::GetJONSCulturePerTurnFromPolicies
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCulturePerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCulturePerTurnFromPolicies, COMDAT

; 2106 : 	return BasicLuaMethod(L, &CvCity::GetJONSCulturePerTurnFromPolicies);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetJONSCulturePerTurnFromPolicies@CvCity@@QBEHXZ ; CvCity::GetJONSCulturePerTurnFromPolicies
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2107 : }

	ret	0
?lGetJONSCulturePerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCulturePerTurnFromPolicies
_TEXT	ENDS
PUBLIC	?lChangeJONSCulturePerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCulturePerTurnFromPolicies
EXTRN	?ChangeJONSCulturePerTurnFromPolicies@CvCity@@QAEXH@Z:PROC ; CvCity::ChangeJONSCulturePerTurnFromPolicies
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeJONSCulturePerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeJONSCulturePerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeJONSCulturePerTurnFromPolicies, COMDAT

; 2112 : 	return BasicLuaMethod(L, &CvCity::ChangeJONSCulturePerTurnFromPolicies);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeJONSCulturePerTurnFromPolicies@CvCity@@QAEXH@Z ; CvCity::ChangeJONSCulturePerTurnFromPolicies
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2113 : }

	ret	0
?lChangeJONSCulturePerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeJONSCulturePerTurnFromPolicies
_TEXT	ENDS
PUBLIC	?lGetJONSCulturePerTurnFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromSpecialists
EXTRN	?GetJONSCulturePerTurnFromSpecialists@CvCity@@QBEHXZ:PROC ; CvCity::GetJONSCulturePerTurnFromSpecialists
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCulturePerTurnFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCulturePerTurnFromSpecialists, COMDAT

; 2118 : 	return BasicLuaMethod(L, &CvCity::GetJONSCulturePerTurnFromSpecialists);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetJONSCulturePerTurnFromSpecialists@CvCity@@QBEHXZ ; CvCity::GetJONSCulturePerTurnFromSpecialists
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2119 : }

	ret	0
?lGetJONSCulturePerTurnFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCulturePerTurnFromSpecialists
_TEXT	ENDS
PUBLIC	?lChangeJONSCulturePerTurnFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCulturePerTurnFromSpecialists
EXTRN	?ChangeJONSCulturePerTurnFromSpecialists@CvCity@@QAEXH@Z:PROC ; CvCity::ChangeJONSCulturePerTurnFromSpecialists
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeJONSCulturePerTurnFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeJONSCulturePerTurnFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeJONSCulturePerTurnFromSpecialists, COMDAT

; 2124 : 	return BasicLuaMethod(L, &CvCity::ChangeJONSCulturePerTurnFromSpecialists);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeJONSCulturePerTurnFromSpecialists@CvCity@@QAEXH@Z ; CvCity::ChangeJONSCulturePerTurnFromSpecialists
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2125 : }

	ret	0
?lChangeJONSCulturePerTurnFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeJONSCulturePerTurnFromSpecialists
_TEXT	ENDS
PUBLIC	?lGetJONSCulturePerTurnFromGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromGreatWorks
EXTRN	?GetJONSCulturePerTurnFromGreatWorks@CvCity@@QBEHXZ:PROC ; CvCity::GetJONSCulturePerTurnFromGreatWorks
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCulturePerTurnFromGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCulturePerTurnFromGreatWorks, COMDAT

; 2130 : 	return BasicLuaMethod(L, &CvCity::GetJONSCulturePerTurnFromGreatWorks);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetJONSCulturePerTurnFromGreatWorks@CvCity@@QBEHXZ ; CvCity::GetJONSCulturePerTurnFromGreatWorks
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2131 : }

	ret	0
?lGetJONSCulturePerTurnFromGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCulturePerTurnFromGreatWorks
_TEXT	ENDS
PUBLIC	?lGetJONSCulturePerTurnFromTraits@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromTraits
EXTRN	?GetJONSCulturePerTurnFromTraits@CvCity@@QBEHXZ:PROC ; CvCity::GetJONSCulturePerTurnFromTraits
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCulturePerTurnFromTraits@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromTraits@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCulturePerTurnFromTraits, COMDAT

; 2136 : 	return BasicLuaMethod(L, &CvCity::GetJONSCulturePerTurnFromTraits);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetJONSCulturePerTurnFromTraits@CvCity@@QBEHXZ ; CvCity::GetJONSCulturePerTurnFromTraits
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2137 : }

	ret	0
?lGetJONSCulturePerTurnFromTraits@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCulturePerTurnFromTraits
_TEXT	ENDS
PUBLIC	?lGetJONSCulturePerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromReligion
EXTRN	?GetJONSCulturePerTurnFromReligion@CvCity@@QBEHXZ:PROC ; CvCity::GetJONSCulturePerTurnFromReligion
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCulturePerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCulturePerTurnFromReligion, COMDAT

; 2142 : 	return BasicLuaMethod(L, &CvCity::GetJONSCulturePerTurnFromReligion);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetJONSCulturePerTurnFromReligion@CvCity@@QBEHXZ ; CvCity::GetJONSCulturePerTurnFromReligion
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2143 : }

	ret	0
?lGetJONSCulturePerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCulturePerTurnFromReligion
_TEXT	ENDS
PUBLIC	?lChangeJONSCulturePerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCulturePerTurnFromReligion
EXTRN	?ChangeJONSCulturePerTurnFromReligion@CvCity@@QAEXH@Z:PROC ; CvCity::ChangeJONSCulturePerTurnFromReligion
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeJONSCulturePerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeJONSCulturePerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeJONSCulturePerTurnFromReligion, COMDAT

; 2148 : 	return BasicLuaMethod(L, &CvCity::ChangeJONSCulturePerTurnFromReligion);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeJONSCulturePerTurnFromReligion@CvCity@@QAEXH@Z ; CvCity::ChangeJONSCulturePerTurnFromReligion
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2149 : }

	ret	0
?lChangeJONSCulturePerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeJONSCulturePerTurnFromReligion
_TEXT	ENDS
PUBLIC	?lGetJONSCulturePerTurnFromLeagues@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromLeagues
EXTRN	?GetJONSCulturePerTurnFromLeagues@CvCity@@QBEHXZ:PROC ; CvCity::GetJONSCulturePerTurnFromLeagues
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCulturePerTurnFromLeagues@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromLeagues@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetJONSCulturePerTurnFromLeagues, COMDAT

; 2154 : 	return BasicLuaMethod(L, &CvCity::GetJONSCulturePerTurnFromLeagues);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetJONSCulturePerTurnFromLeagues@CvCity@@QBEHXZ ; CvCity::GetJONSCulturePerTurnFromLeagues
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2155 : }

	ret	0
?lGetJONSCulturePerTurnFromLeagues@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetJONSCulturePerTurnFromLeagues
_TEXT	ENDS
PUBLIC	?lGetCultureRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCultureRateModifier
EXTRN	?getCultureRateModifier@CvCity@@QBEHXZ:PROC	; CvCity::getCultureRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCultureRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCultureRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetCultureRateModifier, COMDAT

; 2160 : 	return BasicLuaMethod(L, &CvCity::getCultureRateModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getCultureRateModifier@CvCity@@QBEHXZ ; CvCity::getCultureRateModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2161 : }

	ret	0
?lGetCultureRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetCultureRateModifier
_TEXT	ENDS
PUBLIC	?lChangeCultureRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeCultureRateModifier
EXTRN	?changeCultureRateModifier@CvCity@@QAEXH@Z:PROC	; CvCity::changeCultureRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeCultureRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeCultureRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeCultureRateModifier, COMDAT

; 2166 : 	return BasicLuaMethod(L, &CvCity::changeCultureRateModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeCultureRateModifier@CvCity@@QAEXH@Z ; CvCity::changeCultureRateModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2167 : }

	ret	0
?lChangeCultureRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeCultureRateModifier
_TEXT	ENDS
PUBLIC	?lGetNumGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumGreatWorks
EXTRN	?GetNumGreatWorks@CvCityCulture@@QBEHXZ:PROC	; CvCityCulture::GetNumGreatWorks
EXTRN	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ:PROC ; CvCity::GetCityCulture
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetNumGreatWorks, COMDAT

; 2171 : {

	push	ebx
	push	ebp
	push	esi

; 2172 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumGre
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumGre
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumGre
	xor	bl, bl
$LN5@lGetNumGre:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumGre
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumGre:

; 2173 : 	lua_pushinteger(L, pkCity->GetCityCulture()->GetNumGreatWorks());

	mov	ecx, edi
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetNumGreatWorks@CvCityCulture@@QBEHXZ	; CvCityCulture::GetNumGreatWorks
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2174 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2175 : }

	ret	0
?lGetNumGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetNumGreatWorks
_TEXT	ENDS
PUBLIC	?lGetNumGreatWorkSlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumGreatWorkSlots
EXTRN	?GetNumGreatWorkSlots@CvCityCulture@@QBEHXZ:PROC ; CvCityCulture::GetNumGreatWorkSlots
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumGreatWorkSlots@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumGreatWorkSlots@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumGreatWorkSlots, COMDAT

; 2179 : {

	push	ebx
	push	ebp
	push	esi

; 2180 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumGre@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumGre@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumGre@2
	xor	bl, bl
$LN5@lGetNumGre@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumGre@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumGre@2:

; 2181 : 	lua_pushinteger(L, pkCity->GetCityCulture()->GetNumGreatWorkSlots());

	mov	ecx, edi
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetNumGreatWorkSlots@CvCityCulture@@QBEHXZ ; CvCityCulture::GetNumGreatWorkSlots
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2182 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2183 : }

	ret	0
?lGetNumGreatWorkSlots@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumGreatWorkSlots
_TEXT	ENDS
PUBLIC	?lGetBaseTourism@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetBaseTourism
EXTRN	?GetBaseTourism@CvCityCulture@@QAEHXZ:PROC	; CvCityCulture::GetBaseTourism
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBaseTourism@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBaseTourism@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetBaseTourism, COMDAT

; 2187 : {

	push	ebx
	push	ebp
	push	esi

; 2188 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetBaseTo
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetBaseTo
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetBaseTo
	xor	bl, bl
$LN5@lGetBaseTo:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetBaseTo
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetBaseTo:

; 2189 : 	lua_pushinteger(L, pkCity->GetCityCulture()->GetBaseTourism());

	mov	ecx, edi
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetBaseTourism@CvCityCulture@@QAEHXZ	; CvCityCulture::GetBaseTourism
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2190 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2191 : }

	ret	0
?lGetBaseTourism@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetBaseTourism
_TEXT	ENDS
PUBLIC	?lGetTourismMultiplier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetTourismMultiplier
EXTRN	?GetTourismMultiplier@CvCityCulture@@QBEHW4PlayerTypes@@_N1111@Z:PROC ; CvCityCulture::GetTourismMultiplier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTourismMultiplier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTourismMultiplier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetTourismMultiplier, COMDAT

; 2195 : {

	push	ebx
	push	ebp
	push	esi

; 2196 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetTouris
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetTouris
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetTouris
	xor	bl, bl
$LN5@lGetTouris:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetTouris
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetTouris:

; 2197 : 	const PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2198 : 	lua_pushinteger(L, pkCity->GetCityCulture()->GetTourismMultiplier(ePlayer, false, false, false, false, false));

	push	0
	push	0
	push	0
	push	0
	push	0
	push	eax
	mov	ecx, edi
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetTourismMultiplier@CvCityCulture@@QBEHW4PlayerTypes@@_N1111@Z ; CvCityCulture::GetTourismMultiplier
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2199 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2200 : }

	ret	0
?lGetTourismMultiplier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetTourismMultiplier
_TEXT	ENDS
PUBLIC	?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetTourismTooltip
EXTRN	?GetTourismTooltip@CvCityCulture@@QAE?AVCvString@@XZ:PROC ; CvCityCulture::GetTourismTooltip
;	COMDAT xdata$x
; File s:\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_toolTip$ = -68						; size = 28
$T230290 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetTourismTooltip, COMDAT

; 2204 : {

	push	-1
	push	__ehhandler$?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 56					; 00000038H
	push	ebx
	push	ebp
	push	esi
	push	edi

; 2205 : 	CvString toolTip;

	lea	ecx, DWORD PTR _toolTip$[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2206 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+80]
	xor	edi, edi
	push	esi
	mov	DWORD PTR __$EHRec$[esp+96], edi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN10@lGetTouris@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN10@lGetTouris@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN10@lGetTouris@2
	xor	bl, bl
$LN10@lGetTouris@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN17@lGetTouris@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN17@lGetTouris@2:

; 2207 : 	toolTip = pkCity->GetCityCulture()->GetTourismTooltip();

	lea	eax, DWORD PTR $T230290[esp+84]
	push	eax
	mov	ecx, edi
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetTourismTooltip@CvCityCulture@@QAE?AVCvString@@XZ ; CvCityCulture::GetTourismTooltip
	push	eax
	lea	ecx, DWORD PTR _toolTip$[esp+88]
	mov	BYTE PTR __$EHRec$[esp+96], 1
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T230290[esp+84]
	mov	BYTE PTR __$EHRec$[esp+92], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2208 : 	lua_pushstring(L, toolTip.c_str());

	lea	ecx, DWORD PTR _toolTip$[esp+84]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 2209 : 	return 1;

	lea	ecx, DWORD PTR _toolTip$[esp+84]
	mov	DWORD PTR __$EHRec$[esp+92], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2210 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+84]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 68					; 00000044H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _toolTip$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR $T230290[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetTourismTooltip
PUBLIC	?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFilledSlotsTooltip
EXTRN	?GetFilledSlotsTooltip@CvCityCulture@@QAE?AVCvString@@XZ:PROC ; CvCityCulture::GetFilledSlotsTooltip
;	COMDAT xdata$x
; File s:\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_toolTip$ = -68						; size = 28
$T230342 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFilledSlotsTooltip, COMDAT

; 2214 : {

	push	-1
	push	__ehhandler$?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 56					; 00000038H
	push	ebx
	push	ebp
	push	esi
	push	edi

; 2215 : 	CvString toolTip;

	lea	ecx, DWORD PTR _toolTip$[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2216 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+80]
	xor	edi, edi
	push	esi
	mov	DWORD PTR __$EHRec$[esp+96], edi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN10@lGetFilled
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN10@lGetFilled
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN10@lGetFilled
	xor	bl, bl
$LN10@lGetFilled:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN17@lGetFilled
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN17@lGetFilled:

; 2217 : 	toolTip = pkCity->GetCityCulture()->GetFilledSlotsTooltip();

	lea	eax, DWORD PTR $T230342[esp+84]
	push	eax
	mov	ecx, edi
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetFilledSlotsTooltip@CvCityCulture@@QAE?AVCvString@@XZ ; CvCityCulture::GetFilledSlotsTooltip
	push	eax
	lea	ecx, DWORD PTR _toolTip$[esp+88]
	mov	BYTE PTR __$EHRec$[esp+96], 1
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T230342[esp+84]
	mov	BYTE PTR __$EHRec$[esp+92], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2218 : 	lua_pushstring(L, toolTip.c_str());

	lea	ecx, DWORD PTR _toolTip$[esp+84]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 2219 : 	return 1;

	lea	ecx, DWORD PTR _toolTip$[esp+84]
	mov	DWORD PTR __$EHRec$[esp+92], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2220 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+84]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 68					; 00000044H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _toolTip$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR $T230342[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFilledSlotsTooltip
PUBLIC	?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetTotalSlotsTooltip
EXTRN	?GetTotalSlotsTooltip@CvCityCulture@@QAE?AVCvString@@XZ:PROC ; CvCityCulture::GetTotalSlotsTooltip
;	COMDAT xdata$x
; File s:\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_toolTip$ = -68						; size = 28
$T230394 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetTotalSlotsTooltip, COMDAT

; 2224 : {

	push	-1
	push	__ehhandler$?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 56					; 00000038H
	push	ebx
	push	ebp
	push	esi
	push	edi

; 2225 : 	CvString toolTip;

	lea	ecx, DWORD PTR _toolTip$[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2226 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+80]
	xor	edi, edi
	push	esi
	mov	DWORD PTR __$EHRec$[esp+96], edi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN10@lGetTotalS
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN10@lGetTotalS
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN10@lGetTotalS
	xor	bl, bl
$LN10@lGetTotalS:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN17@lGetTotalS
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN17@lGetTotalS:

; 2227 : 	toolTip = pkCity->GetCityCulture()->GetTotalSlotsTooltip();

	lea	eax, DWORD PTR $T230394[esp+84]
	push	eax
	mov	ecx, edi
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetTotalSlotsTooltip@CvCityCulture@@QAE?AVCvString@@XZ ; CvCityCulture::GetTotalSlotsTooltip
	push	eax
	lea	ecx, DWORD PTR _toolTip$[esp+88]
	mov	BYTE PTR __$EHRec$[esp+96], 1
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T230394[esp+84]
	mov	BYTE PTR __$EHRec$[esp+92], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2228 : 	lua_pushstring(L, toolTip.c_str());

	lea	ecx, DWORD PTR _toolTip$[esp+84]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 2229 : 	return 1;

	lea	ecx, DWORD PTR _toolTip$[esp+84]
	mov	DWORD PTR __$EHRec$[esp+92], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2230 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+84]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 68					; 00000044H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _toolTip$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR $T230394[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetTotalSlotsTooltip
PUBLIC	?lClearGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lClearGreatWorks
EXTRN	?ClearGreatWorks@CvCityCulture@@QAEXXZ:PROC	; CvCityCulture::ClearGreatWorks
; Function compile flags: /Ogtpy
;	COMDAT ?lClearGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lClearGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lClearGreatWorks, COMDAT

; 2234 : {

	push	ebx
	push	ebp
	push	esi

; 2235 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lClearGrea
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lClearGrea
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lClearGrea
	xor	bl, bl
$LN5@lClearGrea:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lClearGrea
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lClearGrea:

; 2236 : 	pkCity->GetCityCulture()->ClearGreatWorks();

	mov	ecx, edi
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?ClearGreatWorks@CvCityCulture@@QAEXXZ	; CvCityCulture::ClearGreatWorks
	pop	edi
	pop	esi
	pop	ebp

; 2237 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2238 : }

	ret	0
?lClearGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lClearGreatWorks
_TEXT	ENDS
PUBLIC	?lGetFaithBuildingTourism@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithBuildingTourism
EXTRN	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z:PROC ; CvGameReligions::GetReligion
EXTRN	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ:PROC ; CvGame::GetGameReligions
EXTRN	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ:PROC ; CvCityReligions::GetReligiousMajority
EXTRN	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ:PROC ; CvCity::GetCityReligions
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFaithBuildingTourism@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iRtnValue$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetFaithBuildingTourism@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFaithBuildingTourism, COMDAT

; 2242 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 2243 : 	int iRtnValue = 0;
; 2244 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	xor	edi, edi
	push	esi
	mov	DWORD PTR _iRtnValue$[esp+24], edi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetFaithB
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetFaithB
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetFaithB
	xor	bl, bl
$LN6@lGetFaithB:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetFaithB
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetFaithB:

; 2245 : 	ReligionTypes eMajority = pkCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, edi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority

; 2246 : 	const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eMajority, pkCity->getOwner());

	mov	edi, DWORD PTR [edi+84]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 2247 : 	if(pReligion)

	test	eax, eax
	je	SHORT $LN23@lGetFaithB

; 2248 : 	{
; 2249 : 		iRtnValue = pReligion->m_Beliefs.GetFaithBuildingTourism();

	mov	eax, DWORD PTR [eax+272]
	jmp	SHORT $LN21@lGetFaithB
$LN23@lGetFaithB:
	mov	eax, DWORD PTR _iRtnValue$[esp+20]
$LN21@lGetFaithB:

; 2250 : 	}
; 2251 : 	lua_pushinteger(L, iRtnValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2252 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2253 : }

	pop	ecx
	ret	0
?lGetFaithBuildingTourism@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFaithBuildingTourism
_TEXT	ENDS
PUBLIC	?lIsThemingBonusPossible@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsThemingBonusPossible
EXTRN	?IsThemingBonusPossible@CvCityCulture@@QBE_NW4BuildingClassTypes@@@Z:PROC ; CvCityCulture::IsThemingBonusPossible
; Function compile flags: /Ogtpy
;	COMDAT ?lIsThemingBonusPossible@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsThemingBonusPossible@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsThemingBonusPossible, COMDAT

; 2257 : {

	push	ebx
	push	ebp
	push	esi

; 2258 : 	bool bPossible;
; 2259 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsTheming
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsTheming
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsTheming
	xor	bl, bl
$LN5@lIsTheming:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsTheming
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsTheming:

; 2260 : 	const BuildingClassTypes iIndex = toValue<BuildingClassTypes>(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2261 : 	bPossible = pkCity->GetCityCulture()->IsThemingBonusPossible(iIndex);

	push	eax
	mov	ecx, edi
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?IsThemingBonusPossible@CvCityCulture@@QBE_NW4BuildingClassTypes@@@Z ; CvCityCulture::IsThemingBonusPossible

; 2262 : 	lua_pushboolean(L, bPossible);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2263 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2264 : }

	ret	0
?lIsThemingBonusPossible@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsThemingBonusPossible
_TEXT	ENDS
PUBLIC	?lGetThemingBonus@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetThemingBonus
EXTRN	?GetThemingBonus@CvCityCulture@@QBEHW4BuildingClassTypes@@@Z:PROC ; CvCityCulture::GetThemingBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lGetThemingBonus@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetThemingBonus@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetThemingBonus, COMDAT

; 2268 : {

	push	ebx
	push	ebp
	push	esi

; 2269 : 	int iBonus;
; 2270 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetThemin
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetThemin
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetThemin
	xor	bl, bl
$LN5@lGetThemin:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetThemin
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetThemin:

; 2271 : 	const BuildingClassTypes iIndex = toValue<BuildingClassTypes>(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2272 : 	iBonus = pkCity->GetCityCulture()->GetThemingBonus(iIndex);

	push	eax
	mov	ecx, edi
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetThemingBonus@CvCityCulture@@QBEHW4BuildingClassTypes@@@Z ; CvCityCulture::GetThemingBonus

; 2273 : 	lua_pushinteger(L, iBonus);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2274 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2275 : }

	ret	0
?lGetThemingBonus@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetThemingBonus
_TEXT	ENDS
PUBLIC	?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetThemingTooltip
EXTRN	?GetThemingTooltip@CvCityCulture@@QBE?AVCvString@@W4BuildingClassTypes@@@Z:PROC ; CvCityCulture::GetThemingTooltip
;	COMDAT xdata$x
; File s:\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_toolTip$ = -68						; size = 28
$T230573 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetThemingTooltip, COMDAT

; 2279 : {

	push	-1
	push	__ehhandler$?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 56					; 00000038H
	push	ebx
	push	ebp
	push	esi
	push	edi

; 2280 : 	CvString toolTip;

	lea	ecx, DWORD PTR _toolTip$[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2281 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+80]
	xor	edi, edi
	push	esi
	mov	DWORD PTR __$EHRec$[esp+96], edi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN10@lGetThemin@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN10@lGetThemin@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN10@lGetThemin@2
	xor	bl, bl
$LN10@lGetThemin@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN17@lGetThemin@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN17@lGetThemin@2:

; 2282 : 	const BuildingClassTypes iIndex = toValue<BuildingClassTypes>(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2283 : 	toolTip = pkCity->GetCityCulture()->GetThemingTooltip(iIndex);

	push	eax
	lea	eax, DWORD PTR $T230573[esp+88]
	push	eax
	mov	ecx, edi
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetThemingTooltip@CvCityCulture@@QBE?AVCvString@@W4BuildingClassTypes@@@Z ; CvCityCulture::GetThemingTooltip
	push	eax
	lea	ecx, DWORD PTR _toolTip$[esp+88]
	mov	BYTE PTR __$EHRec$[esp+96], 1
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T230573[esp+84]
	mov	BYTE PTR __$EHRec$[esp+92], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2284 : 	lua_pushstring(L, toolTip.c_str());

	lea	ecx, DWORD PTR _toolTip$[esp+84]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 2285 : 	return 1;

	lea	ecx, DWORD PTR _toolTip$[esp+84]
	mov	DWORD PTR __$EHRec$[esp+92], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2286 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+84]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 68					; 00000044H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _toolTip$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR $T230573[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetThemingTooltip
PUBLIC	?lGetFaithPerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPerTurn
EXTRN	?GetFaithPerTurn@CvCity@@QBEHXZ:PROC		; CvCity::GetFaithPerTurn
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFaithPerTurn@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFaithPerTurn@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetFaithPerTurn, COMDAT

; 2291 : 	return BasicLuaMethod(L, &CvCity::GetFaithPerTurn);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetFaithPerTurn@CvCity@@QBEHXZ	; CvCity::GetFaithPerTurn
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2292 : }

	ret	0
?lGetFaithPerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetFaithPerTurn
_TEXT	ENDS
PUBLIC	?lGetFaithPerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPerTurnFromBuildings
EXTRN	?GetFaithPerTurnFromBuildings@CvCity@@QBEHXZ:PROC ; CvCity::GetFaithPerTurnFromBuildings
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFaithPerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFaithPerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFaithPerTurnFromBuildings, COMDAT

; 2297 : 	return BasicLuaMethod(L, &CvCity::GetFaithPerTurnFromBuildings);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetFaithPerTurnFromBuildings@CvCity@@QBEHXZ ; CvCity::GetFaithPerTurnFromBuildings
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2298 : }

	ret	0
?lGetFaithPerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFaithPerTurnFromBuildings
_TEXT	ENDS
PUBLIC	?lGetFaithPerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPerTurnFromPolicies
EXTRN	?GetFaithPerTurnFromPolicies@CvCity@@QBEHXZ:PROC ; CvCity::GetFaithPerTurnFromPolicies
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFaithPerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFaithPerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFaithPerTurnFromPolicies, COMDAT

; 2303 : 	return BasicLuaMethod(L, &CvCity::GetFaithPerTurnFromPolicies);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetFaithPerTurnFromPolicies@CvCity@@QBEHXZ ; CvCity::GetFaithPerTurnFromPolicies
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2304 : }

	ret	0
?lGetFaithPerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFaithPerTurnFromPolicies
_TEXT	ENDS
PUBLIC	?lGetFaithPerTurnFromTraits@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPerTurnFromTraits
EXTRN	?GetFaithPerTurnFromTraits@CvCity@@QBEHXZ:PROC	; CvCity::GetFaithPerTurnFromTraits
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFaithPerTurnFromTraits@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFaithPerTurnFromTraits@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFaithPerTurnFromTraits, COMDAT

; 2309 : 	return BasicLuaMethod(L, &CvCity::GetFaithPerTurnFromTraits);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetFaithPerTurnFromTraits@CvCity@@QBEHXZ ; CvCity::GetFaithPerTurnFromTraits
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2310 : }

	ret	0
?lGetFaithPerTurnFromTraits@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFaithPerTurnFromTraits
_TEXT	ENDS
PUBLIC	?lGetFaithPerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPerTurnFromReligion
EXTRN	?GetFaithPerTurnFromReligion@CvCity@@QBEHXZ:PROC ; CvCity::GetFaithPerTurnFromReligion
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFaithPerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFaithPerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFaithPerTurnFromReligion, COMDAT

; 2315 : 	return BasicLuaMethod(L, &CvCity::GetFaithPerTurnFromReligion);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetFaithPerTurnFromReligion@CvCity@@QBEHXZ ; CvCity::GetFaithPerTurnFromReligion
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2316 : }

	ret	0
?lGetFaithPerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFaithPerTurnFromReligion
_TEXT	ENDS
PUBLIC	?lChangeFaithPerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeFaithPerTurnFromReligion
EXTRN	?ChangeFaithPerTurnFromReligion@CvCity@@QAEXH@Z:PROC ; CvCity::ChangeFaithPerTurnFromReligion
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeFaithPerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeFaithPerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeFaithPerTurnFromReligion, COMDAT

; 2321 : 	return BasicLuaMethod(L, &CvCity::ChangeFaithPerTurnFromReligion);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeFaithPerTurnFromReligion@CvCity@@QAEXH@Z ; CvCity::ChangeFaithPerTurnFromReligion
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2322 : }

	ret	0
?lChangeFaithPerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeFaithPerTurnFromReligion
_TEXT	ENDS
PUBLIC	?lIsReligionInCity@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsReligionInCity
EXTRN	?IsReligionInCity@CvCityReligions@@QAE_NXZ:PROC	; CvCityReligions::IsReligionInCity
; Function compile flags: /Ogtpy
;	COMDAT ?lIsReligionInCity@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsReligionInCity@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsReligionInCity, COMDAT

; 2326 : {

	push	ebx
	push	ebp
	push	esi

; 2327 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsReligio@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsReligio@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsReligio@2
	xor	bl, bl
$LN5@lIsReligio@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsReligio@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsReligio@2:

; 2328 : 	const bool bResult = pkCity->GetCityReligions()->IsReligionInCity();

	mov	ecx, edi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?IsReligionInCity@CvCityReligions@@QAE_NXZ ; CvCityReligions::IsReligionInCity

; 2329 : 
; 2330 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2331 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2332 : }

	ret	0
?lIsReligionInCity@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsReligionInCity
_TEXT	ENDS
PUBLIC	?lIsHolyCityForReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsHolyCityForReligion
EXTRN	?IsHolyCityForReligion@CvCityReligions@@QAE_NW4ReligionTypes@@@Z:PROC ; CvCityReligions::IsHolyCityForReligion
; Function compile flags: /Ogtpy
;	COMDAT ?lIsHolyCityForReligion@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHolyCityForReligion@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsHolyCityForReligion, COMDAT

; 2336 : {

	push	ebx
	push	ebp
	push	esi

; 2337 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsHolyCit
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsHolyCit
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsHolyCit
	xor	bl, bl
$LN5@lIsHolyCit:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsHolyCit
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsHolyCit:

; 2338 : 	ReligionTypes eReligion = (ReligionTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2339 : 	const bool bResult = pkCity->GetCityReligions()->IsHolyCityForReligion(eReligion);

	push	eax
	mov	ecx, edi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?IsHolyCityForReligion@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ; CvCityReligions::IsHolyCityForReligion

; 2340 : 
; 2341 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2342 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2343 : }

	ret	0
?lIsHolyCityForReligion@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsHolyCityForReligion
_TEXT	ENDS
PUBLIC	?lIsHolyCityAnyReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsHolyCityAnyReligion
EXTRN	?IsHolyCityAnyReligion@CvCityReligions@@QAE_NXZ:PROC ; CvCityReligions::IsHolyCityAnyReligion
; Function compile flags: /Ogtpy
;	COMDAT ?lIsHolyCityAnyReligion@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHolyCityAnyReligion@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsHolyCityAnyReligion, COMDAT

; 2347 : {

	push	ebx
	push	ebp
	push	esi

; 2348 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsHolyCit@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsHolyCit@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsHolyCit@2
	xor	bl, bl
$LN5@lIsHolyCit@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsHolyCit@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsHolyCit@2:

; 2349 : 	const bool bResult = pkCity->GetCityReligions()->IsHolyCityAnyReligion();

	mov	ecx, edi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?IsHolyCityAnyReligion@CvCityReligions@@QAE_NXZ ; CvCityReligions::IsHolyCityAnyReligion

; 2350 : 
; 2351 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2352 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2353 : }

	ret	0
?lIsHolyCityAnyReligion@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsHolyCityAnyReligion
_TEXT	ENDS
PUBLIC	?lGetNumFollowers@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumFollowers
EXTRN	?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z:PROC ; CvCityReligions::GetNumFollowers
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumFollowers@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumFollowers@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetNumFollowers, COMDAT

; 2357 : {

	push	ebx
	push	ebp
	push	esi

; 2358 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumFol
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumFol
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumFol
	xor	bl, bl
$LN5@lGetNumFol:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumFol
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumFol:

; 2359 : 	ReligionTypes eReligion = (ReligionTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2360 : 	const int iResult = pkCity->GetCityReligions()->GetNumFollowers(eReligion);

	push	eax
	mov	ecx, edi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumFollowers

; 2361 : 
; 2362 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2363 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2364 : }

	ret	0
?lGetNumFollowers@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetNumFollowers
_TEXT	ENDS
PUBLIC	?lGetReligiousMajority@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetReligiousMajority
; Function compile flags: /Ogtpy
;	COMDAT ?lGetReligiousMajority@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetReligiousMajority@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetReligiousMajority, COMDAT

; 2368 : {

	push	ebx
	push	ebp
	push	esi

; 2369 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetReligi
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetReligi
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetReligi
	xor	bl, bl
$LN5@lGetReligi:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetReligi
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetReligi:

; 2370 : 	const int iResult = (int)pkCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, edi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority

; 2371 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2372 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2373 : }

	ret	0
?lGetReligiousMajority@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetReligiousMajority
_TEXT	ENDS
PUBLIC	?lGetSecondaryReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSecondaryReligion
EXTRN	?GetSecondaryReligion@CvCityReligions@@QAE?AW4ReligionTypes@@XZ:PROC ; CvCityReligions::GetSecondaryReligion
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSecondaryReligion@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSecondaryReligion@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSecondaryReligion, COMDAT

; 2377 : {

	push	ebx
	push	ebp
	push	esi

; 2378 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetSecond
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetSecond
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetSecond
	xor	bl, bl
$LN5@lGetSecond:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetSecond
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetSecond:

; 2379 : 	const int iResult = (int)pkCity->GetCityReligions()->GetSecondaryReligion();

	mov	ecx, edi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetSecondaryReligion@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetSecondaryReligion

; 2380 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2381 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2382 : }

	ret	0
?lGetSecondaryReligion@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSecondaryReligion
_TEXT	ENDS
PUBLIC	?lGetSecondaryReligionPantheonBelief@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSecondaryReligionPantheonBelief
EXTRN	?GetSecondaryReligionPantheonBelief@CvCityReligions@@QAE?AW4BeliefTypes@@XZ:PROC ; CvCityReligions::GetSecondaryReligionPantheonBelief
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSecondaryReligionPantheonBelief@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSecondaryReligionPantheonBelief@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSecondaryReligionPantheonBelief, COMDAT

; 2386 : {

	push	ebx
	push	ebp
	push	esi

; 2387 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetSecond@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetSecond@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetSecond@2
	xor	bl, bl
$LN5@lGetSecond@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetSecond@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetSecond@2:

; 2388 : 	const int iResult = (int)pkCity->GetCityReligions()->GetSecondaryReligionPantheonBelief();

	mov	ecx, edi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetSecondaryReligionPantheonBelief@CvCityReligions@@QAE?AW4BeliefTypes@@XZ ; CvCityReligions::GetSecondaryReligionPantheonBelief

; 2389 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2390 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2391 : }

	ret	0
?lGetSecondaryReligionPantheonBelief@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSecondaryReligionPantheonBelief
_TEXT	ENDS
PUBLIC	?lGetPressurePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetPressurePerTurn
EXTRN	?GetPressurePerTurn@CvCityReligions@@QAEHW4ReligionTypes@@AAH@Z:PROC ; CvCityReligions::GetPressurePerTurn
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPressurePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iNumTradeRoutes$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetPressurePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetPressurePerTurn, COMDAT

; 2395 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 2396 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetPressu
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetPressu
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetPressu
	xor	bl, bl
$LN5@lGetPressu:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetPressu
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetPressu:

; 2397 : 	ReligionTypes eReligion = (ReligionTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2398 : 	int iNumTradeRoutes;
; 2399 : 	const int iResult = (int)pkCity->GetCityReligions()->GetPressurePerTurn(eReligion, iNumTradeRoutes);

	lea	ecx, DWORD PTR _iNumTradeRoutes$[esp+20]
	push	ecx
	push	eax
	mov	ecx, edi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetPressurePerTurn@CvCityReligions@@QAEHW4ReligionTypes@@AAH@Z ; CvCityReligions::GetPressurePerTurn

; 2400 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger

; 2401 : 	lua_pushinteger(L, iNumTradeRoutes);

	mov	edx, DWORD PTR _iNumTradeRoutes$[esp+28]
	push	edx
	push	esi
	call	_lua_pushinteger
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi
	pop	ebp

; 2402 : 	return 2;

	mov	eax, 2
	pop	ebx

; 2403 : }

	pop	ecx
	ret	0
?lGetPressurePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetPressurePerTurn
_TEXT	ENDS
PUBLIC	?lConvertPercentFollowers@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lConvertPercentFollowers
EXTRN	?ConvertPercentFollowers@CvCityReligions@@QAEXW4ReligionTypes@@0H@Z:PROC ; CvCityReligions::ConvertPercentFollowers
; Function compile flags: /Ogtpy
;	COMDAT ?lConvertPercentFollowers@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lConvertPercentFollowers@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lConvertPercentFollowers, COMDAT

; 2407 : {

	push	ebx
	push	ebp
	push	esi

; 2408 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lConvertPe
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lConvertPe
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lConvertPe
	xor	bl, bl
$LN5@lConvertPe:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lConvertPe
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lConvertPe:

; 2409 : 	ReligionTypes eToReligion = (ReligionTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 2410 : 	ReligionTypes eFromReligion = (ReligionTypes)lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 2411 : 	int iPercent = lua_tointeger(L, 4);

	push	4
	push	esi
	mov	ebp, eax
	call	_lua_tointeger
	add	esp, 24					; 00000018H

; 2412 : 	pkCity->GetCityReligions()->ConvertPercentFollowers(eToReligion, eFromReligion, iPercent);

	push	eax
	push	ebp
	push	ebx
	mov	ecx, edi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?ConvertPercentFollowers@CvCityReligions@@QAEXW4ReligionTypes@@0H@Z ; CvCityReligions::ConvertPercentFollowers
	pop	edi
	pop	esi
	pop	ebp

; 2413 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2414 : }

	ret	0
?lConvertPercentFollowers@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lConvertPercentFollowers
_TEXT	ENDS
PUBLIC	?lAdoptReligionFully@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lAdoptReligionFully
EXTRN	?AdoptReligionFully@CvCityReligions@@QAEXW4ReligionTypes@@@Z:PROC ; CvCityReligions::AdoptReligionFully
; Function compile flags: /Ogtpy
;	COMDAT ?lAdoptReligionFully@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAdoptReligionFully@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lAdoptReligionFully, COMDAT

; 2418 : {

	push	ebx
	push	ebp
	push	esi

; 2419 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lAdoptReli
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lAdoptReli
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lAdoptReli
	xor	bl, bl
$LN5@lAdoptReli:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lAdoptReli
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lAdoptReli:

; 2420 : 	ReligionTypes eReligion = (ReligionTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2421 : 	pkCity->GetCityReligions()->AdoptReligionFully(eReligion);

	push	eax
	mov	ecx, edi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?AdoptReligionFully@CvCityReligions@@QAEXW4ReligionTypes@@@Z ; CvCityReligions::AdoptReligionFully
	pop	edi
	pop	esi
	pop	ebp

; 2422 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2423 : }

	ret	0
?lAdoptReligionFully@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lAdoptReligionFully
_TEXT	ENDS
PUBLIC	?lGetReligionBuildingClassHappiness@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetReligionBuildingClassHappiness
EXTRN	?GetBuildingClassHappiness@CvReligionBeliefs@@QBEHW4BuildingClassTypes@@H@Z:PROC ; CvReligionBeliefs::GetBuildingClassHappiness
; Function compile flags: /Ogtpy
;	COMDAT ?lGetReligionBuildingClassHappiness@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iHappinessFromBuilding$ = -8				; size = 4
_eBuildingClass$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetReligionBuildingClassHappiness@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetReligionBuildingClassHappiness, COMDAT

; 2427 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 2428 : 	int iHappinessFromBuilding = 0;
; 2429 : 
; 2430 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	xor	edi, edi
	push	esi
	mov	DWORD PTR _iHappinessFromBuilding$[esp+28], edi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetReligi@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetReligi@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetReligi@2
	xor	bl, bl
$LN7@lGetReligi@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetReligi@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetReligi@2:

; 2431 : 	BuildingClassTypes eBuildingClass = (BuildingClassTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2432 : 
; 2433 : 	ReligionTypes eMajority = pkCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, edi
	mov	DWORD PTR _eBuildingClass$[esp+24], eax
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	ebx, eax

; 2434 : 	if(eMajority != NO_RELIGION)

	cmp	ebx, -1
	je	SHORT $LN22@lGetReligi@2

; 2435 : 	{
; 2436 : 		const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eMajority, pkCity->getOwner());

	mov	eax, DWORD PTR [edi+84]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	eax
	push	ebx
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	ebp, eax

; 2437 : 		if(pReligion)

	test	ebp, ebp
	je	SHORT $LN22@lGetReligi@2

; 2438 : 		{	
; 2439 : 			int iFollowers = pkCity->GetCityReligions()->GetNumFollowers(eMajority);

	push	ebx
	mov	ecx, edi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumFollowers

; 2440 : 			iHappinessFromBuilding += pReligion->m_Beliefs.GetBuildingClassHappiness(eBuildingClass, iFollowers);

	push	eax
	mov	eax, DWORD PTR _eBuildingClass$[esp+28]
	push	eax
	lea	ecx, DWORD PTR [ebp+152]
	call	?GetBuildingClassHappiness@CvReligionBeliefs@@QBEHW4BuildingClassTypes@@H@Z ; CvReligionBeliefs::GetBuildingClassHappiness
	mov	DWORD PTR _iHappinessFromBuilding$[esp+24], eax
$LN22@lGetReligi@2:

; 2441 : 		}
; 2442 : 	}
; 2443 : 	lua_pushinteger(L, iHappinessFromBuilding);

	mov	ecx, DWORD PTR _iHappinessFromBuilding$[esp+24]
	push	ecx
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2444 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2445 : }

	add	esp, 8
	ret	0
?lGetReligionBuildingClassHappiness@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetReligionBuildingClassHappiness
_TEXT	ENDS
PUBLIC	?lGetReligionBuildingClassYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetReligionBuildingClassYieldChange
EXTRN	?GetBuildingClassYieldChange@CvBeliefEntry@@QBEHHH@Z:PROC ; CvBeliefEntry::GetBuildingClassYieldChange
EXTRN	?GetMinFollowers@CvBeliefEntry@@QBEHXZ:PROC	; CvBeliefEntry::GetMinFollowers
EXTRN	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z:PROC ; CvBeliefXMLEntries::GetEntry
EXTRN	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ:PROC ; CvGlobals::GetGameBeliefs
EXTRN	?GetBuildingClassYieldChange@CvReligionBeliefs@@QBEHW4BuildingClassTypes@@W4YieldTypes@@H@Z:PROC ; CvReligionBeliefs::GetBuildingClassYieldChange
; Function compile flags: /Ogtpy
;	COMDAT ?lGetReligionBuildingClassYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iYieldFromBuilding$ = -12				; size = 4
_eYieldType$ = -8					; size = 4
_eBuildingClass$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetReligionBuildingClassYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetReligionBuildingClassYieldChange, COMDAT

; 2449 : {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi
	push	edi

; 2450 : 	int iYieldFromBuilding = 0;
; 2451 : 
; 2452 : 	CvCity* pkCity = GetInstance(L);

	mov	edi, DWORD PTR _L$[esp+24]
	xor	esi, esi
	push	edi
	mov	DWORD PTR _iYieldFromBuilding$[esp+32], esi
	call	_lua_gettop
	push	1
	push	edi
	mov	ebp, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN24@lGetReligi@3
	push	OFFSET $SG223798
	push	1
	push	edi
	call	_lua_getfield
	push	-1
	push	edi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN24@lGetReligi@3
	push	-1
	push	edi
	call	_lua_touserdata
	mov	esi, eax
	add	esp, 8
	test	esi, esi
	je	SHORT $LN24@lGetReligi@3
	xor	bl, bl
$LN24@lGetReligi@3:
	push	ebp
	push	edi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN16@lGetReligi@3
	push	OFFSET $SG223804
	push	edi
	call	_luaL_error
	push	OFFSET $SG223812
	push	edi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN16@lGetReligi@3:

; 2453 : 	BuildingClassTypes eBuildingClass = (BuildingClassTypes)lua_tointeger(L, 2);

	push	2
	push	edi
	call	_lua_tointeger

; 2454 : 	YieldTypes eYieldType = (YieldTypes)lua_tointeger(L, 3);

	push	3
	push	edi
	mov	DWORD PTR _eBuildingClass$[esp+44], eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 2455 : 
; 2456 : #ifdef AUI_WARNING_FIXES
; 2457 : 	const CvCityReligions* pCityReligions = pkCity->GetCityReligions();
; 2458 : 	ReligionTypes eMajority = pCityReligions->GetReligiousMajority();
; 2459 : 	if (eMajority != NO_RELIGION)
; 2460 : 	{
; 2461 : 		const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eMajority, pkCity->getOwner());
; 2462 : 		if (pReligion)
; 2463 : 		{
; 2464 : 			int iFollowers = pCityReligions->GetNumFollowers(eMajority);
; 2465 : 			iYieldFromBuilding += pReligion->m_Beliefs.GetBuildingClassYieldChange(eBuildingClass, eYieldType, iFollowers);
; 2466 : 			BeliefTypes eSecondaryPantheon = pCityReligions->GetSecondaryReligionPantheonBelief();
; 2467 : 			if (eSecondaryPantheon != NO_BELIEF)
; 2468 : 			{
; 2469 : 				iFollowers = pCityReligions->GetNumFollowers(pCityReligions->GetSecondaryReligion());
; 2470 : #else
; 2471 : 	ReligionTypes eMajority = pkCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, esi
	mov	DWORD PTR _eYieldType$[esp+28], eax
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	ebx, eax

; 2472 : 	if(eMajority != NO_RELIGION)

	cmp	ebx, -1
	je	$LN25@lGetReligi@3

; 2473 : 	{
; 2474 : 		const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eMajority, pkCity->getOwner());

	mov	eax, DWORD PTR [esi+84]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	eax
	push	ebx
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	ebp, eax

; 2475 : 		if(pReligion)

	test	ebp, ebp
	je	$LN25@lGetReligi@3

; 2476 : 		{	
; 2477 : 			int iFollowers = pkCity->GetCityReligions()->GetNumFollowers(eMajority);

	push	ebx
	mov	ecx, esi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumFollowers

; 2478 : 			iYieldFromBuilding += pReligion->m_Beliefs.GetBuildingClassYieldChange(eBuildingClass, eYieldType, iFollowers);

	mov	ecx, DWORD PTR _eBuildingClass$[esp+28]
	push	eax
	mov	eax, DWORD PTR _eYieldType$[esp+32]
	push	eax
	push	ecx
	lea	ecx, DWORD PTR [ebp+152]
	call	?GetBuildingClassYieldChange@CvReligionBeliefs@@QBEHW4BuildingClassTypes@@W4YieldTypes@@H@Z ; CvReligionBeliefs::GetBuildingClassYieldChange

; 2479 : 			BeliefTypes eSecondaryPantheon = pkCity->GetCityReligions()->GetSecondaryReligionPantheonBelief();

	mov	ecx, esi
	mov	DWORD PTR _iYieldFromBuilding$[esp+28], eax
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetSecondaryReligionPantheonBelief@CvCityReligions@@QAE?AW4BeliefTypes@@XZ ; CvCityReligions::GetSecondaryReligionPantheonBelief
	mov	ebx, eax

; 2480 : 			if (eSecondaryPantheon != NO_BELIEF)

	cmp	ebx, -1
	je	SHORT $LN25@lGetReligi@3

; 2481 : 			{
; 2482 : 				iFollowers =  pkCity->GetCityReligions()->GetNumFollowers(pkCity->GetCityReligions()->GetSecondaryReligion());

	mov	ecx, esi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetSecondaryReligion@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetSecondaryReligion
	push	eax
	mov	ecx, esi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumFollowers

; 2483 : #endif
; 2484 : 				if (iFollowers >= GC.GetGameBeliefs()->GetEntry(eSecondaryPantheon)->GetMinFollowers())

	push	ebx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	esi, eax
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	ecx, eax
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetMinFollowers@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetMinFollowers
	cmp	esi, eax
	jl	SHORT $LN25@lGetReligi@3

; 2485 : 				{
; 2486 : 					iYieldFromBuilding += GC.GetGameBeliefs()->GetEntry(eSecondaryPantheon)->GetBuildingClassYieldChange(eBuildingClass, eYieldType);

	mov	edx, DWORD PTR _eYieldType$[esp+28]
	mov	eax, DWORD PTR _eBuildingClass$[esp+28]
	push	edx
	push	eax
	push	ebx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	ecx, eax
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetBuildingClassYieldChange@CvBeliefEntry@@QBEHHH@Z ; CvBeliefEntry::GetBuildingClassYieldChange
	add	DWORD PTR _iYieldFromBuilding$[esp+28], eax
$LN25@lGetReligi@3:

; 2487 : 				}
; 2488 : 			}
; 2489 : 		}
; 2490 : 	}
; 2491 : 	lua_pushinteger(L, iYieldFromBuilding);

	mov	ecx, DWORD PTR _iYieldFromBuilding$[esp+28]
	push	ecx
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2492 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2493 : }

	add	esp, 12					; 0000000cH
	ret	0
?lGetReligionBuildingClassYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetReligionBuildingClassYieldChange
_TEXT	ENDS
PUBLIC	?lGetLeagueBuildingClassYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetLeagueBuildingClassYieldChange
EXTRN	?GetWorldWonderYieldChange@CvGameLeagues@@QAEHW4PlayerTypes@@W4YieldTypes@@@Z:PROC ; CvGameLeagues::GetWorldWonderYieldChange
EXTRN	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ:PROC ; CvGame::GetGameLeagues
EXTRN	?getMaxGlobalInstances@CvBuildingClassInfo@@QBEHXZ:PROC ; CvBuildingClassInfo::getMaxGlobalInstances
EXTRN	?getBuildingClassInfo@CvGlobals@@QAEPAVCvBuildingClassInfo@@W4BuildingClassTypes@@@Z:PROC ; CvGlobals::getBuildingClassInfo
; Function compile flags: /Ogtpy
;	COMDAT ?lGetLeagueBuildingClassYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iYieldFromBuilding$ = -4				; size = 4
_L$ = 8							; size = 4
?lGetLeagueBuildingClassYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetLeagueBuildingClassYieldChange, COMDAT

; 2497 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 2498 : 	int iYieldFromBuilding = 0;
; 2499 : 
; 2500 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	xor	edi, edi
	push	esi
	mov	DWORD PTR _iYieldFromBuilding$[esp+24], edi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetLeague
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetLeague
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetLeague
	xor	bl, bl
$LN7@lGetLeague:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetLeague
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetLeague:

; 2501 : 	BuildingClassTypes eBuildingClass = (BuildingClassTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 2502 : 	YieldTypes eYieldType = (YieldTypes)lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 2503 : 
; 2504 : 	CvBuildingClassInfo* pInfo = GC.getBuildingClassInfo(eBuildingClass);

	push	ebx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	ebp, eax
	call	?getBuildingClassInfo@CvGlobals@@QAEPAVCvBuildingClassInfo@@W4BuildingClassTypes@@@Z ; CvGlobals::getBuildingClassInfo

; 2505 : 	if (pInfo && pInfo->getMaxGlobalInstances() != -1)

	test	eax, eax
	je	SHORT $LN22@lGetLeague
	mov	ecx, eax
	call	?getMaxGlobalInstances@CvBuildingClassInfo@@QBEHXZ ; CvBuildingClassInfo::getMaxGlobalInstances
	cmp	eax, -1
	je	SHORT $LN22@lGetLeague

; 2506 : 	{
; 2507 : 		int iYieldChange = GC.getGame().GetGameLeagues()->GetWorldWonderYieldChange(pkCity->getOwner(), eYieldType);

	mov	edi, DWORD PTR [edi+84]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	ebp
	push	edi
	call	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ ; CvGame::GetGameLeagues
	mov	ecx, eax
	call	?GetWorldWonderYieldChange@CvGameLeagues@@QAEHW4PlayerTypes@@W4YieldTypes@@@Z ; CvGameLeagues::GetWorldWonderYieldChange

; 2508 : 		if (iYieldChange != 0)

	test	eax, eax

; 2509 : 		{
; 2510 : 			iYieldFromBuilding += iYieldChange;

	jne	SHORT $LN1@lGetLeague
$LN22@lGetLeague:
	mov	eax, DWORD PTR _iYieldFromBuilding$[esp+20]
$LN1@lGetLeague:

; 2511 : 		}
; 2512 : 	}
; 2513 : 
; 2514 : 	lua_pushinteger(L, iYieldFromBuilding);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2515 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2516 : }

	pop	ecx
	ret	0
?lGetLeagueBuildingClassYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetLeagueBuildingClassYieldChange
_TEXT	ENDS
PUBLIC	?lGetNumTradeRoutesAddingPressure@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumTradeRoutesAddingPressure
EXTRN	?GetNumTradeRouteConnections@CvCityReligions@@QAEHW4ReligionTypes@@@Z:PROC ; CvCityReligions::GetNumTradeRouteConnections
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumTradeRoutesAddingPressure@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumTradeRoutesAddingPressure@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumTradeRoutesAddingPressure, COMDAT

; 2519 : {

	push	ebx
	push	ebp
	push	esi

; 2520 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumTra
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumTra
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumTra
	xor	bl, bl
$LN5@lGetNumTra:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumTra
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumTra:

; 2521 : 	ReligionTypes eReligion = (ReligionTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2522 : 	
; 2523 : 	int iNumTradeRoutes = pkCity->GetCityReligions()->GetNumTradeRouteConnections(eReligion);

	push	eax
	mov	ecx, edi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetNumTradeRouteConnections@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumTradeRouteConnections

; 2524 : 	lua_pushinteger(L, iNumTradeRoutes);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2525 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2526 : 
; 2527 : }

	ret	0
?lGetNumTradeRoutesAddingPressure@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumTradeRoutesAddingPressure
_TEXT	ENDS
PUBLIC	?lGetNumWorldWonders@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumWorldWonders
EXTRN	?getNumWorldWonders@CvCity@@QBEHXZ:PROC		; CvCity::getNumWorldWonders
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumWorldWonders@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumWorldWonders@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumWorldWonders, COMDAT

; 2532 : 	return BasicLuaMethod(L, &CvCity::getNumWorldWonders);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getNumWorldWonders@CvCity@@QBEHXZ ; CvCity::getNumWorldWonders
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2533 : }

	ret	0
?lGetNumWorldWonders@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumWorldWonders
_TEXT	ENDS
PUBLIC	?lGetNumTeamWonders@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumTeamWonders
EXTRN	?getNumTeamWonders@CvCity@@QBEHXZ:PROC		; CvCity::getNumTeamWonders
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumTeamWonders@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumTeamWonders@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetNumTeamWonders, COMDAT

; 2538 : 	return BasicLuaMethod(L, &CvCity::getNumTeamWonders);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getNumTeamWonders@CvCity@@QBEHXZ ; CvCity::getNumTeamWonders
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2539 : }

	ret	0
?lGetNumTeamWonders@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetNumTeamWonders
_TEXT	ENDS
PUBLIC	?lGetNumNationalWonders@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumNationalWonders
EXTRN	?getNumNationalWonders@CvCity@@QBEHXZ:PROC	; CvCity::getNumNationalWonders
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumNationalWonders@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumNationalWonders@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumNationalWonders, COMDAT

; 2544 : 	return BasicLuaMethod(L, &CvCity::getNumNationalWonders);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getNumNationalWonders@CvCity@@QBEHXZ ; CvCity::getNumNationalWonders
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2545 : }

	ret	0
?lGetNumNationalWonders@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumNationalWonders
_TEXT	ENDS
PUBLIC	?lGetNumBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumBuildings
EXTRN	?GetNumBuildings@CvCityBuildings@@QBEHXZ:PROC	; CvCityBuildings::GetNumBuildings
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumBuildings@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumBuildings@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetNumBuildings, COMDAT

; 2549 : {

	push	ebx
	push	ebp
	push	esi

; 2550 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumBui@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumBui@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumBui@2
	xor	bl, bl
$LN5@lGetNumBui@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumBui@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumBui@2:

; 2551 : 	const int iResult = pkCity->GetCityBuildings()->GetNumBuildings();

	mov	ecx, edi
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuildings@CvCityBuildings@@QBEHXZ ; CvCityBuildings::GetNumBuildings

; 2552 : 
; 2553 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2554 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2555 : }

	ret	0
?lGetNumBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetNumBuildings
_TEXT	ENDS
PUBLIC	?lGetWonderProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetWonderProductionModifier
EXTRN	?GetWonderProductionModifier@CvCity@@QBEHXZ:PROC ; CvCity::GetWonderProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetWonderProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetWonderProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetWonderProductionModifier, COMDAT

; 2561 : 	return BasicLuaMethod(L, &CvCity::GetWonderProductionModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetWonderProductionModifier@CvCity@@QBEHXZ ; CvCity::GetWonderProductionModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2562 : }

	ret	0
?lGetWonderProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetWonderProductionModifier
_TEXT	ENDS
PUBLIC	?lChangeWonderProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeWonderProductionModifier
EXTRN	?ChangeWonderProductionModifier@CvCity@@QAEXH@Z:PROC ; CvCity::ChangeWonderProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeWonderProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeWonderProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeWonderProductionModifier, COMDAT

; 2567 : 	return BasicLuaMethod(L, &CvCity::ChangeWonderProductionModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeWonderProductionModifier@CvCity@@QAEXH@Z ; CvCity::ChangeWonderProductionModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2568 : }

	ret	0
?lChangeWonderProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeWonderProductionModifier
_TEXT	ENDS
PUBLIC	?lGetLocalResourceWonderProductionMod@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetLocalResourceWonderProductionMod
EXTRN	?GetLocalResourceWonderProductionMod@CvCity@@QBEHW4BuildingTypes@@PAVCvString@@@Z:PROC ; CvCity::GetLocalResourceWonderProductionMod
; Function compile flags: /Ogtpy
;	COMDAT ?lGetLocalResourceWonderProductionMod@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLocalResourceWonderProductionMod@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetLocalResourceWonderProductionMod, COMDAT

; 2573 : 	return BasicLuaMethod(L, &CvCity::GetLocalResourceWonderProductionMod);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetLocalResourceWonderProductionMod@CvCity@@QBEHW4BuildingTypes@@PAVCvString@@@Z ; CvCity::GetLocalResourceWonderProductionMod
	push	eax
	call	??$BasicLuaMethod@HW4BuildingTypes@@PAVCvString@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4BuildingTypes@@PAVCvString@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum BuildingTypes,CvString *>
	add	esp, 8

; 2574 : }

	ret	0
?lGetLocalResourceWonderProductionMod@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetLocalResourceWonderProductionMod
_TEXT	ENDS
PUBLIC	?lChangeHealRate@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lChangeHealRate
EXTRN	?changeHealRate@CvCity@@QAEXH@Z:PROC		; CvCity::changeHealRate
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeHealRate@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeHealRate@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lChangeHealRate, COMDAT

; 2580 : 	return BasicLuaMethod(L, &CvCity::changeHealRate);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeHealRate@CvCity@@QAEXH@Z	; CvCity::changeHealRate
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2581 : }

	ret	0
?lChangeHealRate@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lChangeHealRate
_TEXT	ENDS
PUBLIC	?lIsNoOccupiedUnhappiness@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsNoOccupiedUnhappiness
EXTRN	?IsNoOccupiedUnhappiness@CvCity@@QBE_NXZ:PROC	; CvCity::IsNoOccupiedUnhappiness
; Function compile flags: /Ogtpy
;	COMDAT ?lIsNoOccupiedUnhappiness@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsNoOccupiedUnhappiness@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsNoOccupiedUnhappiness, COMDAT

; 2587 : 	return BasicLuaMethod(L, &CvCity::IsNoOccupiedUnhappiness);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsNoOccupiedUnhappiness@CvCity@@QBE_NXZ ; CvCity::IsNoOccupiedUnhappiness
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2588 : }

	ret	0
?lIsNoOccupiedUnhappiness@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsNoOccupiedUnhappiness
_TEXT	ENDS
PUBLIC	?lGetFood@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetFood
EXTRN	?getFood@CvCity@@QBEHXZ:PROC			; CvCity::getFood
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFood@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFood@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lGetFood, COMDAT

; 2593 : 	return BasicLuaMethod(L, &CvCity::getFood);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getFood@CvCity@@QBEHXZ		; CvCity::getFood
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2594 : }

	ret	0
?lGetFood@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lGetFood
_TEXT	ENDS
PUBLIC	?lGetFoodTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFoodTimes100
EXTRN	?getFoodTimes100@CvCity@@QBEHXZ:PROC		; CvCity::getFoodTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFoodTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFoodTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetFoodTimes100, COMDAT

; 2599 : 	return BasicLuaMethod(L, &CvCity::getFoodTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getFoodTimes100@CvCity@@QBEHXZ	; CvCity::getFoodTimes100
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2600 : }

	ret	0
?lGetFoodTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetFoodTimes100
_TEXT	ENDS
PUBLIC	?lSetFood@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lSetFood
EXTRN	?setFood@CvCity@@QAEXH@Z:PROC			; CvCity::setFood
; Function compile flags: /Ogtpy
;	COMDAT ?lSetFood@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetFood@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lSetFood, COMDAT

; 2605 : 	return BasicLuaMethod(L, &CvCity::setFood);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setFood@CvCity@@QAEXH@Z		; CvCity::setFood
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2606 : }

	ret	0
?lSetFood@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lSetFood
_TEXT	ENDS
PUBLIC	?lChangeFood@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lChangeFood
EXTRN	?changeFood@CvCity@@QAEXH@Z:PROC		; CvCity::changeFood
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeFood@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeFood@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lChangeFood, COMDAT

; 2611 : 	return BasicLuaMethod(L, &CvCity::changeFood);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeFood@CvCity@@QAEXH@Z	; CvCity::changeFood
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2612 : }

	ret	0
?lChangeFood@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lChangeFood
_TEXT	ENDS
PUBLIC	?lGetFoodKept@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetFoodKept
EXTRN	?getFoodKept@CvCity@@QBEHXZ:PROC		; CvCity::getFoodKept
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFoodKept@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFoodKept@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetFoodKept, COMDAT

; 2617 : 	return BasicLuaMethod(L, &CvCity::getFoodKept);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getFoodKept@CvCity@@QBEHXZ	; CvCity::getFoodKept
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2618 : }

	ret	0
?lGetFoodKept@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetFoodKept
_TEXT	ENDS
PUBLIC	?lGetMaxFoodKeptPercent@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetMaxFoodKeptPercent
EXTRN	?getMaxFoodKeptPercent@CvCity@@QBEHXZ:PROC	; CvCity::getMaxFoodKeptPercent
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMaxFoodKeptPercent@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMaxFoodKeptPercent@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetMaxFoodKeptPercent, COMDAT

; 2623 : 	return BasicLuaMethod(L, &CvCity::getMaxFoodKeptPercent);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getMaxFoodKeptPercent@CvCity@@QBEHXZ ; CvCity::getMaxFoodKeptPercent
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2624 : }

	ret	0
?lGetMaxFoodKeptPercent@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetMaxFoodKeptPercent
_TEXT	ENDS
PUBLIC	?lGetOverflowProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetOverflowProduction
EXTRN	?getOverflowProduction@CvCity@@QBEHXZ:PROC	; CvCity::getOverflowProduction
; Function compile flags: /Ogtpy
;	COMDAT ?lGetOverflowProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetOverflowProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetOverflowProduction, COMDAT

; 2629 : 	return BasicLuaMethod(L, &CvCity::getOverflowProduction);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getOverflowProduction@CvCity@@QBEHXZ ; CvCity::getOverflowProduction
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2630 : }

	ret	0
?lGetOverflowProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetOverflowProduction
_TEXT	ENDS
PUBLIC	?lSetOverflowProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetOverflowProduction
EXTRN	?setOverflowProduction@CvCity@@QAEXH@Z:PROC	; CvCity::setOverflowProduction
; Function compile flags: /Ogtpy
;	COMDAT ?lSetOverflowProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetOverflowProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetOverflowProduction, COMDAT

; 2635 : 	return BasicLuaMethod(L, &CvCity::setOverflowProduction);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setOverflowProduction@CvCity@@QAEXH@Z ; CvCity::setOverflowProduction
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2636 : }

	ret	0
?lSetOverflowProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetOverflowProduction
_TEXT	ENDS
PUBLIC	?lGetFeatureProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFeatureProduction
EXTRN	?getFeatureProduction@CvCity@@QBEHXZ:PROC	; CvCity::getFeatureProduction
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFeatureProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFeatureProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFeatureProduction, COMDAT

; 2641 : 	return BasicLuaMethod(L, &CvCity::getFeatureProduction);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getFeatureProduction@CvCity@@QBEHXZ ; CvCity::getFeatureProduction
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2642 : }

	ret	0
?lGetFeatureProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFeatureProduction
_TEXT	ENDS
PUBLIC	?lSetFeatureProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetFeatureProduction
EXTRN	?setFeatureProduction@CvCity@@QAEXH@Z:PROC	; CvCity::setFeatureProduction
; Function compile flags: /Ogtpy
;	COMDAT ?lSetFeatureProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetFeatureProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetFeatureProduction, COMDAT

; 2647 : 	return BasicLuaMethod(L, &CvCity::setFeatureProduction);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setFeatureProduction@CvCity@@QAEXH@Z ; CvCity::setFeatureProduction
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2648 : }

	ret	0
?lSetFeatureProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetFeatureProduction
_TEXT	ENDS
PUBLIC	?lGetMilitaryProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetMilitaryProductionModifier
EXTRN	?getMilitaryProductionModifier@CvCity@@QBEHXZ:PROC ; CvCity::getMilitaryProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMilitaryProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMilitaryProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetMilitaryProductionModifier, COMDAT

; 2652 : {

	push	ebx
	push	ebp
	push	esi

; 2653 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMilita
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMilita
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMilita
	xor	bl, bl
$LN5@lGetMilita:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMilita
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMilita:

; 2654 : 	const int iResult = pkCity->getMilitaryProductionModifier();

	mov	ecx, edi
	call	?getMilitaryProductionModifier@CvCity@@QBEHXZ ; CvCity::getMilitaryProductionModifier

; 2655 : 
; 2656 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2657 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2658 : }

	ret	0
?lGetMilitaryProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetMilitaryProductionModifier
_TEXT	ENDS
PUBLIC	?lGetSpaceProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpaceProductionModifier
EXTRN	?getSpaceProductionModifier@CvCity@@QBEHXZ:PROC	; CvCity::getSpaceProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSpaceProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSpaceProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSpaceProductionModifier, COMDAT

; 2662 : {

	push	ebx
	push	ebp
	push	esi

; 2663 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetSpaceP
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetSpaceP
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetSpaceP
	xor	bl, bl
$LN5@lGetSpaceP:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetSpaceP
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetSpaceP:

; 2664 : 	const int iResult = pkCity->getSpaceProductionModifier();

	mov	ecx, edi
	call	?getSpaceProductionModifier@CvCity@@QBEHXZ ; CvCity::getSpaceProductionModifier

; 2665 : 
; 2666 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2667 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2668 : }

	ret	0
?lGetSpaceProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSpaceProductionModifier
_TEXT	ENDS
PUBLIC	?lCreateApolloProgram@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCreateApolloProgram
EXTRN	?CreateProject@CvCity@@QAE_NW4ProjectTypes@@@Z:PROC ; CvCity::CreateProject
; Function compile flags: /Ogtpy
;	COMDAT ?lCreateApolloProgram@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCreateApolloProgram@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lCreateApolloProgram, COMDAT

; 2672 : {

	push	ebx
	push	ebp
	push	esi

; 2673 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lCreateApo
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lCreateApo
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lCreateApo
	xor	bl, bl
$LN6@lCreateApo:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lCreateApo
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lCreateApo:

; 2674 : 	if(pkCity != NULL)

	test	edi, edi
	je	SHORT $LN17@lCreateApo

; 2675 : 	{
; 2676 : 		ProjectTypes eApolloProgram = (ProjectTypes)GC.getSPACE_RACE_TRIGGER_PROJECT();
; 2677 : 		pkCity->CreateProject(eApolloProgram);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8424
	push	eax
	mov	ecx, edi
	call	?CreateProject@CvCity@@QAE_NW4ProjectTypes@@@Z ; CvCity::CreateProject
$LN17@lCreateApo:
	pop	edi
	pop	esi
	pop	ebp

; 2678 : 	}
; 2679 : 
; 2680 : 	return 0;

	xor	eax, eax
	pop	ebx

; 2681 : }

	ret	0
?lCreateApolloProgram@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lCreateApolloProgram
_TEXT	ENDS
PUBLIC	?lGetBuildingDefense@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingDefense
EXTRN	?GetBuildingDefense@CvCityBuildings@@QBEHXZ:PROC ; CvCityBuildings::GetBuildingDefense
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingDefense@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingDefense@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingDefense, COMDAT

; 2685 : {

	push	ebx
	push	ebp
	push	esi

; 2686 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetBuildi@5
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetBuildi@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetBuildi@5
	xor	bl, bl
$LN5@lGetBuildi@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetBuildi@5
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetBuildi@5:

; 2687 : 	const int iResult = pkCity->GetCityBuildings()->GetBuildingDefense();

	mov	ecx, edi
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetBuildingDefense@CvCityBuildings@@QBEHXZ ; CvCityBuildings::GetBuildingDefense

; 2688 : 
; 2689 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2690 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2691 : }

	ret	0
?lGetBuildingDefense@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingDefense
_TEXT	ENDS
PUBLIC	?lGetFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFreeExperience
EXTRN	?getFreeExperience@CvCity@@QBEHXZ:PROC		; CvCity::getFreeExperience
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetFreeExperience, COMDAT

; 2695 : {

	push	ebx
	push	ebp
	push	esi

; 2696 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetFreeEx
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetFreeEx
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetFreeEx
	xor	bl, bl
$LN5@lGetFreeEx:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetFreeEx
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetFreeEx:

; 2697 : 	const int iResult = pkCity->getFreeExperience();

	mov	ecx, edi
	call	?getFreeExperience@CvCity@@QBEHXZ	; CvCity::getFreeExperience

; 2698 : 
; 2699 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2700 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2701 : }

	ret	0
?lGetFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetFreeExperience
_TEXT	ENDS
PUBLIC	?lGetNukeModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNukeModifier
EXTRN	?getNukeModifier@CvCity@@QBEHXZ:PROC		; CvCity::getNukeModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNukeModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNukeModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetNukeModifier, COMDAT

; 2705 : {

	push	ebx
	push	ebp
	push	esi

; 2706 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNukeMo
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNukeMo
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNukeMo
	xor	bl, bl
$LN5@lGetNukeMo:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNukeMo
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNukeMo:

; 2707 : 	const int iResult = pkCity->getNukeModifier();

	mov	ecx, edi
	call	?getNukeModifier@CvCity@@QBEHXZ		; CvCity::getNukeModifier

; 2708 : 
; 2709 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2710 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2711 : }

	ret	0
?lGetNukeModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetNukeModifier
_TEXT	ENDS
PUBLIC	?lIsResistance@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsResistance
EXTRN	?IsResistance@CvCity@@QBE_NXZ:PROC		; CvCity::IsResistance
; Function compile flags: /Ogtpy
;	COMDAT ?lIsResistance@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsResistance@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsResistance, COMDAT

; 2729 : 	return BasicLuaMethod(L, &CvCity::IsResistance);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsResistance@CvCity@@QBE_NXZ	; CvCity::IsResistance
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2730 : }

	ret	0
?lIsResistance@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsResistance
_TEXT	ENDS
PUBLIC	?lGetResistanceTurns@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetResistanceTurns
EXTRN	?GetResistanceTurns@CvCity@@QBEHXZ:PROC		; CvCity::GetResistanceTurns
; Function compile flags: /Ogtpy
;	COMDAT ?lGetResistanceTurns@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResistanceTurns@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetResistanceTurns, COMDAT

; 2734 : 	return BasicLuaMethod(L, &CvCity::GetResistanceTurns);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetResistanceTurns@CvCity@@QBEHXZ ; CvCity::GetResistanceTurns
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2735 : }

	ret	0
?lGetResistanceTurns@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetResistanceTurns
_TEXT	ENDS
PUBLIC	?lChangeResistanceTurns@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeResistanceTurns
EXTRN	?ChangeResistanceTurns@CvCity@@QAEXH@Z:PROC	; CvCity::ChangeResistanceTurns
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeResistanceTurns@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeResistanceTurns@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeResistanceTurns, COMDAT

; 2739 : 	return BasicLuaMethod(L, &CvCity::ChangeResistanceTurns);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeResistanceTurns@CvCity@@QAEXH@Z ; CvCity::ChangeResistanceTurns
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2740 : }

	ret	0
?lChangeResistanceTurns@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeResistanceTurns
_TEXT	ENDS
PUBLIC	?lIsRazing@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsRazing
EXTRN	?IsRazing@CvCity@@QBE_NXZ:PROC			; CvCity::IsRazing
; Function compile flags: /Ogtpy
;	COMDAT ?lIsRazing@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsRazing@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lIsRazing, COMDAT

; 2745 : 	return BasicLuaMethod(L, &CvCity::IsRazing);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsRazing@CvCity@@QBE_NXZ	; CvCity::IsRazing
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2746 : }

	ret	0
?lIsRazing@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lIsRazing
_TEXT	ENDS
PUBLIC	?lGetRazingTurns@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetRazingTurns
EXTRN	?GetRazingTurns@CvCity@@QBEHXZ:PROC		; CvCity::GetRazingTurns
; Function compile flags: /Ogtpy
;	COMDAT ?lGetRazingTurns@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRazingTurns@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetRazingTurns, COMDAT

; 2750 : 	return BasicLuaMethod(L, &CvCity::GetRazingTurns);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetRazingTurns@CvCity@@QBEHXZ	; CvCity::GetRazingTurns
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2751 : }

	ret	0
?lGetRazingTurns@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetRazingTurns
_TEXT	ENDS
PUBLIC	?lChangeRazingTurns@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeRazingTurns
EXTRN	?ChangeRazingTurns@CvCity@@QAEXH@Z:PROC		; CvCity::ChangeRazingTurns
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeRazingTurns@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeRazingTurns@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lChangeRazingTurns, COMDAT

; 2755 : 	return BasicLuaMethod(L, &CvCity::ChangeRazingTurns);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeRazingTurns@CvCity@@QAEXH@Z ; CvCity::ChangeRazingTurns
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2756 : }

	ret	0
?lChangeRazingTurns@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lChangeRazingTurns
_TEXT	ENDS
PUBLIC	?lIsOccupied@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsOccupied
EXTRN	?IsOccupied@CvCity@@QBE_NXZ:PROC		; CvCity::IsOccupied
; Function compile flags: /Ogtpy
;	COMDAT ?lIsOccupied@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsOccupied@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsOccupied, COMDAT

; 2761 : 	return BasicLuaMethod(L, &CvCity::IsOccupied);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsOccupied@CvCity@@QBE_NXZ	; CvCity::IsOccupied
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2762 : }

	ret	0
?lIsOccupied@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsOccupied
_TEXT	ENDS
PUBLIC	?lSetOccupied@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lSetOccupied
EXTRN	?SetOccupied@CvCity@@QAEX_N@Z:PROC		; CvCity::SetOccupied
; Function compile flags: /Ogtpy
;	COMDAT ?lSetOccupied@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetOccupied@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lSetOccupied, COMDAT

; 2767 : 	return BasicLuaMethod(L, &CvCity::SetOccupied);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetOccupied@CvCity@@QAEX_N@Z	; CvCity::SetOccupied
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2768 : }

	ret	0
?lSetOccupied@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lSetOccupied
_TEXT	ENDS
PUBLIC	?lIsPuppet@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsPuppet
EXTRN	?IsPuppet@CvCity@@QBE_NXZ:PROC			; CvCity::IsPuppet
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPuppet@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPuppet@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lIsPuppet, COMDAT

; 2773 : 	return BasicLuaMethod(L, &CvCity::IsPuppet);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsPuppet@CvCity@@QBE_NXZ	; CvCity::IsPuppet
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2774 : }

	ret	0
?lIsPuppet@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lIsPuppet
_TEXT	ENDS
PUBLIC	?lSetPuppet@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lSetPuppet
EXTRN	?SetPuppet@CvCity@@QAEX_N@Z:PROC		; CvCity::SetPuppet
; Function compile flags: /Ogtpy
;	COMDAT ?lSetPuppet@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetPuppet@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lSetPuppet, COMDAT

; 2779 : 	return BasicLuaMethod(L, &CvCity::SetPuppet);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetPuppet@CvCity@@QAEX_N@Z	; CvCity::SetPuppet
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2780 : }

	ret	0
?lSetPuppet@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lSetPuppet
_TEXT	ENDS
PUBLIC	?lGetHappinessFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetHappinessFromBuildings
EXTRN	?GetHappinessFromBuildings@CvCity@@QBEHXZ:PROC	; CvCity::GetHappinessFromBuildings
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHappinessFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetHappinessFromBuildings, COMDAT

; 2784 : 	return BasicLuaMethod(L, &CvCity::GetHappinessFromBuildings);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetHappinessFromBuildings@CvCity@@QBEHXZ ; CvCity::GetHappinessFromBuildings
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2785 : }

	ret	0
?lGetHappinessFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetHappinessFromBuildings
_TEXT	ENDS
PUBLIC	?lGetLocalHappiness@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetLocalHappiness
EXTRN	?GetLocalHappiness@CvCity@@QBEHXZ:PROC		; CvCity::GetLocalHappiness
; Function compile flags: /Ogtpy
;	COMDAT ?lGetLocalHappiness@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLocalHappiness@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetLocalHappiness, COMDAT

; 2789 : 	return BasicLuaMethod(L, &CvCity::GetLocalHappiness);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetLocalHappiness@CvCity@@QBEHXZ ; CvCity::GetLocalHappiness
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2790 : }

	ret	0
?lGetLocalHappiness@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetLocalHappiness
_TEXT	ENDS
PUBLIC	?lGetHappiness@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetHappiness
EXTRN	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ:PROC ; CvPlayer::GetPlayerPolicies
EXTRN	?getNumBuildingInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumBuildingInfos
EXTRN	?getNumPolicyInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumPolicyInfos
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHappiness@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappiness@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetHappiness, COMDAT

; 2793 : {

	push	ebx
	push	ebp
	push	esi
	push	edi

; 2794 : 	CvCity* pkCity = GetInstance(L);

	mov	edi, DWORD PTR _L$[esp+12]
	push	edi
	call	_lua_gettop
	push	1
	push	edi
	mov	esi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetHappin
	push	OFFSET $SG223798
	push	1
	push	edi
	call	_lua_getfield
	push	-1
	push	edi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetHappin
	push	-1
	push	edi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN5@lGetHappin
	xor	bl, bl
$LN5@lGetHappin:
	push	esi
	push	edi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetHappin
	push	OFFSET $SG223804
	push	edi
	call	_luaL_error
	push	OFFSET $SG223812
	push	edi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetHappin:

; 2795 : 
; 2796 : #ifndef AUI_WARNING_FIXES
; 2797 : 	CvPlayerAI& kPlayer = GET_PLAYER(pkCity->getOwner());

	mov	esi, DWORD PTR [ebp+84]
	imul	esi, 63236				; 0000f704H
	add	esi, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 2798 : 
; 2799 : 	const int numPolicyInfos = GC.getNumPolicyInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumPolicyInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumPolicyInfos

; 2800 : 	const int numBuildingInfos = GC.getNumBuildingInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos

; 2801 : 
; 2802 : 	CvPlayerPolicies* pkPlayerPolicies = kPlayer.GetPlayerPolicies();

	mov	ecx, esi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies

; 2803 : 	CvCityBuildings* pkCityBuildings = pkCity->GetCityBuildings();

	mov	ecx, ebp
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings

; 2804 : #endif
; 2805 : 
; 2806 : 	int iHappiness = pkCity->GetHappinessFromBuildings();

	mov	ecx, ebp
	call	?GetHappinessFromBuildings@CvCity@@QBEHXZ ; CvCity::GetHappinessFromBuildings

; 2807 : 
; 2808 : 	lua_pushinteger(L, iHappiness);

	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2809 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2810 : }

	ret	0
?lGetHappiness@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetHappiness
_TEXT	ENDS
PUBLIC	?lIsNeverLost@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsNeverLost
EXTRN	?isNeverLost@CvCity@@QBE_NXZ:PROC		; CvCity::isNeverLost
; Function compile flags: /Ogtpy
;	COMDAT ?lIsNeverLost@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsNeverLost@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsNeverLost, COMDAT

; 2815 : 	return BasicLuaMethod(L, &CvCity::isNeverLost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isNeverLost@CvCity@@QBE_NXZ	; CvCity::isNeverLost
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2816 : }

	ret	0
?lIsNeverLost@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsNeverLost
_TEXT	ENDS
PUBLIC	?lSetNeverLost@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lSetNeverLost
EXTRN	?setNeverLost@CvCity@@QAEX_N@Z:PROC		; CvCity::setNeverLost
; Function compile flags: /Ogtpy
;	COMDAT ?lSetNeverLost@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetNeverLost@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lSetNeverLost, COMDAT

; 2821 : 	return BasicLuaMethod(L, &CvCity::setNeverLost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setNeverLost@CvCity@@QAEX_N@Z	; CvCity::setNeverLost
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2822 : }

	ret	0
?lSetNeverLost@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lSetNeverLost
_TEXT	ENDS
PUBLIC	?lIsDrafted@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsDrafted
EXTRN	?isDrafted@CvCity@@QBE_NXZ:PROC			; CvCity::isDrafted
; Function compile flags: /Ogtpy
;	COMDAT ?lIsDrafted@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsDrafted@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lIsDrafted, COMDAT

; 2827 : 	return BasicLuaMethod(L, &CvCity::isDrafted);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isDrafted@CvCity@@QBE_NXZ	; CvCity::isDrafted
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2828 : }

	ret	0
?lIsDrafted@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lIsDrafted
_TEXT	ENDS
PUBLIC	?lSetDrafted@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lSetDrafted
EXTRN	?setDrafted@CvCity@@QAEX_N@Z:PROC		; CvCity::setDrafted
; Function compile flags: /Ogtpy
;	COMDAT ?lSetDrafted@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetDrafted@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lSetDrafted, COMDAT

; 2833 : 	return BasicLuaMethod(L, &CvCity::setDrafted);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setDrafted@CvCity@@QAEX_N@Z	; CvCity::setDrafted
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2834 : }

	ret	0
?lSetDrafted@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lSetDrafted
_TEXT	ENDS
PUBLIC	?lIsBlockaded@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsBlockaded
EXTRN	?IsBlockaded@CvCity@@QBE_NXZ:PROC		; CvCity::IsBlockaded
; Function compile flags: /Ogtpy
;	COMDAT ?lIsBlockaded@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBlockaded@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsBlockaded, COMDAT

; 2839 : 	return BasicLuaMethod(L, &CvCity::IsBlockaded);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsBlockaded@CvCity@@QBE_NXZ	; CvCity::IsBlockaded
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2840 : }

	ret	0
?lIsBlockaded@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsBlockaded
_TEXT	ENDS
PUBLIC	?lGetWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetWeLoveTheKingDayCounter
EXTRN	?GetWeLoveTheKingDayCounter@CvCity@@QBEHXZ:PROC	; CvCity::GetWeLoveTheKingDayCounter
; Function compile flags: /Ogtpy
;	COMDAT ?lGetWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetWeLoveTheKingDayCounter, COMDAT

; 2846 : 	return BasicLuaMethod(L, &CvCity::GetWeLoveTheKingDayCounter);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetWeLoveTheKingDayCounter@CvCity@@QBEHXZ ; CvCity::GetWeLoveTheKingDayCounter
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2847 : }

	ret	0
?lGetWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetWeLoveTheKingDayCounter
_TEXT	ENDS
PUBLIC	?lSetWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetWeLoveTheKingDayCounter
EXTRN	?SetWeLoveTheKingDayCounter@CvCity@@QAEXH@Z:PROC ; CvCity::SetWeLoveTheKingDayCounter
; Function compile flags: /Ogtpy
;	COMDAT ?lSetWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetWeLoveTheKingDayCounter, COMDAT

; 2852 : 	return BasicLuaMethod(L, &CvCity::SetWeLoveTheKingDayCounter);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetWeLoveTheKingDayCounter@CvCity@@QAEXH@Z ; CvCity::SetWeLoveTheKingDayCounter
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2853 : }

	ret	0
?lSetWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetWeLoveTheKingDayCounter
_TEXT	ENDS
PUBLIC	?lChangeWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeWeLoveTheKingDayCounter
EXTRN	?ChangeWeLoveTheKingDayCounter@CvCity@@QAEXH@Z:PROC ; CvCity::ChangeWeLoveTheKingDayCounter
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeWeLoveTheKingDayCounter, COMDAT

; 2858 : 	return BasicLuaMethod(L, &CvCity::ChangeWeLoveTheKingDayCounter);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeWeLoveTheKingDayCounter@CvCity@@QAEXH@Z ; CvCity::ChangeWeLoveTheKingDayCounter
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2859 : }

	ret	0
?lChangeWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeWeLoveTheKingDayCounter
_TEXT	ENDS
PUBLIC	?lGetNumThingsProduced@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumThingsProduced
EXTRN	?GetNumThingsProduced@CvCity@@QBEHXZ:PROC	; CvCity::GetNumThingsProduced
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumThingsProduced@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumThingsProduced@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumThingsProduced, COMDAT

; 2864 : 	return BasicLuaMethod(L, &CvCity::GetNumThingsProduced);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetNumThingsProduced@CvCity@@QBEHXZ ; CvCity::GetNumThingsProduced
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2865 : }

	ret	0
?lGetNumThingsProduced@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumThingsProduced
_TEXT	ENDS
PUBLIC	?lIsProductionAutomated@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionAutomated
EXTRN	?isProductionAutomated@CvCity@@QBE_NXZ:PROC	; CvCity::isProductionAutomated
; Function compile flags: /Ogtpy
;	COMDAT ?lIsProductionAutomated@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProductionAutomated@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsProductionAutomated, COMDAT

; 2883 : 	return BasicLuaMethod(L, &CvCity::isProductionAutomated);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isProductionAutomated@CvCity@@QBE_NXZ ; CvCity::isProductionAutomated
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 2884 : }

	ret	0
?lIsProductionAutomated@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsProductionAutomated
_TEXT	ENDS
PUBLIC	?lSetProductionAutomated@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetProductionAutomated
EXTRN	?setProductionAutomated@CvCity@@QAEX_N0@Z:PROC	; CvCity::setProductionAutomated
; Function compile flags: /Ogtpy
;	COMDAT ?lSetProductionAutomated@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetProductionAutomated@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetProductionAutomated, COMDAT

; 2889 : 	return BasicLuaMethod(L, &CvCity::setProductionAutomated);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setProductionAutomated@CvCity@@QAEX_N0@Z ; CvCity::setProductionAutomated
	push	eax
	call	??$BasicLuaMethod@_N_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEX_N1@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,bool>
	add	esp, 8

; 2890 : }

	ret	0
?lSetProductionAutomated@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetProductionAutomated
_TEXT	ENDS
PUBLIC	?lSetCitySizeBoost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetCitySizeBoost
EXTRN	?setCitySizeBoost@CvCity@@QAEXH@Z:PROC		; CvCity::setCitySizeBoost
; Function compile flags: /Ogtpy
;	COMDAT ?lSetCitySizeBoost@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetCitySizeBoost@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lSetCitySizeBoost, COMDAT

; 2895 : 	return BasicLuaMethod(L, &CvCity::setCitySizeBoost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setCitySizeBoost@CvCity@@QAEXH@Z ; CvCity::setCitySizeBoost
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 2896 : }

	ret	0
?lSetCitySizeBoost@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lSetCitySizeBoost
_TEXT	ENDS
PUBLIC	?lGetOwner@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetOwner
; Function compile flags: /Ogtpy
;	COMDAT ?lGetOwner@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetOwner@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lGetOwner, COMDAT

; 2901 : 	return BasicLuaMethod(L, &CvCity::getOwner);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ ; CvCity::getOwner
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 2902 : }

	ret	0
?lGetOwner@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lGetOwner
_TEXT	ENDS
PUBLIC	?lGetTeam@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetTeam
EXTRN	?getTeam@CvCity@@QBE?AW4TeamTypes@@XZ:PROC	; CvCity::getTeam
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTeam@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTeam@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lGetTeam, COMDAT

; 2907 : 	return BasicLuaMethod(L, &CvCity::getTeam);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getTeam@CvCity@@QBE?AW4TeamTypes@@XZ ; CvCity::getTeam
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum TeamTypes>
	add	esp, 8

; 2908 : }

	ret	0
?lGetTeam@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lGetTeam
_TEXT	ENDS
PUBLIC	?lGetPreviousOwner@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetPreviousOwner
EXTRN	?getPreviousOwner@CvCity@@QBE?AW4PlayerTypes@@XZ:PROC ; CvCity::getPreviousOwner
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPreviousOwner@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPreviousOwner@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetPreviousOwner, COMDAT

; 2913 : 	return BasicLuaMethod(L, &CvCity::getPreviousOwner);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getPreviousOwner@CvCity@@QBE?AW4PlayerTypes@@XZ ; CvCity::getPreviousOwner
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 2914 : }

	ret	0
?lGetPreviousOwner@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetPreviousOwner
_TEXT	ENDS
PUBLIC	?lGetOriginalOwner@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetOriginalOwner
EXTRN	?getOriginalOwner@CvCity@@QBE?AW4PlayerTypes@@XZ:PROC ; CvCity::getOriginalOwner
; Function compile flags: /Ogtpy
;	COMDAT ?lGetOriginalOwner@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetOriginalOwner@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetOriginalOwner, COMDAT

; 2919 : 	return BasicLuaMethod(L, &CvCity::getOriginalOwner);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getOriginalOwner@CvCity@@QBE?AW4PlayerTypes@@XZ ; CvCity::getOriginalOwner
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 2920 : }

	ret	0
?lGetOriginalOwner@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetOriginalOwner
_TEXT	ENDS
PUBLIC	?lGetSeaPlotYield@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSeaPlotYield
EXTRN	?getSeaPlotYield@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::getSeaPlotYield
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSeaPlotYield@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSeaPlotYield@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetSeaPlotYield, COMDAT

; 2924 : {

	push	ebx
	push	ebp
	push	esi

; 2925 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetSeaPlo
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetSeaPlo
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetSeaPlo
	xor	bl, bl
$LN5@lGetSeaPlo:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetSeaPlo
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetSeaPlo:

; 2926 : 	const YieldTypes eIndex = (YieldTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2927 : 	const int iResult = pkCity->getSeaPlotYield(eIndex);

	push	eax
	mov	ecx, edi
	call	?getSeaPlotYield@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::getSeaPlotYield

; 2928 : 
; 2929 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2930 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2931 : }

	ret	0
?lGetSeaPlotYield@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetSeaPlotYield
_TEXT	ENDS
PUBLIC	?lGetRiverPlotYield@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetRiverPlotYield
EXTRN	?getRiverPlotYield@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::getRiverPlotYield
; Function compile flags: /Ogtpy
;	COMDAT ?lGetRiverPlotYield@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRiverPlotYield@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetRiverPlotYield, COMDAT

; 2935 : {

	push	ebx
	push	ebp
	push	esi

; 2936 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetRiverP
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetRiverP
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetRiverP
	xor	bl, bl
$LN5@lGetRiverP:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetRiverP
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetRiverP:

; 2937 : 	const YieldTypes eIndex = (YieldTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2938 : 	const int iResult = pkCity->getRiverPlotYield(eIndex);

	push	eax
	mov	ecx, edi
	call	?getRiverPlotYield@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::getRiverPlotYield

; 2939 : 
; 2940 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2941 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2942 : }

	ret	0
?lGetRiverPlotYield@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetRiverPlotYield
_TEXT	ENDS
PUBLIC	?lGetLakePlotYield@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetLakePlotYield
EXTRN	?getLakePlotYield@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::getLakePlotYield
; Function compile flags: /Ogtpy
;	COMDAT ?lGetLakePlotYield@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLakePlotYield@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetLakePlotYield, COMDAT

; 2946 : {

	push	ebx
	push	ebp
	push	esi

; 2947 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetLakePl
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetLakePl
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetLakePl
	xor	bl, bl
$LN5@lGetLakePl:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetLakePl
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetLakePl:

; 2948 : 	const YieldTypes eIndex = (YieldTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2949 : 	const int iResult = pkCity->getLakePlotYield(eIndex);

	push	eax
	mov	ecx, edi
	call	?getLakePlotYield@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::getLakePlotYield

; 2950 : 
; 2951 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2952 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2953 : }

	ret	0
?lGetLakePlotYield@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetLakePlotYield
_TEXT	ENDS
PUBLIC	?lGetBaseYieldRate@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRate
EXTRN	?getBaseYieldRate@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::getBaseYieldRate
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBaseYieldRate@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBaseYieldRate@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetBaseYieldRate, COMDAT

; 2957 : {

	push	ebx
	push	ebp
	push	esi

; 2958 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetBaseYi
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetBaseYi
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetBaseYi
	xor	bl, bl
$LN5@lGetBaseYi:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetBaseYi
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetBaseYi:

; 2959 : 	const YieldTypes eIndex = (YieldTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2960 : 	const int iResult = pkCity->getBaseYieldRate(eIndex);

	push	eax
	mov	ecx, edi
	call	?getBaseYieldRate@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::getBaseYieldRate

; 2961 : 
; 2962 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2963 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2964 : }

	ret	0
?lGetBaseYieldRate@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetBaseYieldRate
_TEXT	ENDS
PUBLIC	?lGetBaseYieldRateFromGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromGreatWorks
EXTRN	?GetBaseYieldRateFromGreatWorks@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::GetBaseYieldRateFromGreatWorks
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBaseYieldRateFromGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBaseYieldRateFromGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBaseYieldRateFromGreatWorks, COMDAT

; 2970 : 	return BasicLuaMethod(L, &CvCity::GetBaseYieldRateFromGreatWorks);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetBaseYieldRateFromGreatWorks@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::GetBaseYieldRateFromGreatWorks
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 2971 : }

	ret	0
?lGetBaseYieldRateFromGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBaseYieldRateFromGreatWorks
_TEXT	ENDS
PUBLIC	?lGetBaseYieldRateFromTerrain@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromTerrain
EXTRN	?GetBaseYieldRateFromTerrain@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::GetBaseYieldRateFromTerrain
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBaseYieldRateFromTerrain@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBaseYieldRateFromTerrain@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBaseYieldRateFromTerrain, COMDAT

; 2976 : 	return BasicLuaMethod(L, &CvCity::GetBaseYieldRateFromTerrain);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetBaseYieldRateFromTerrain@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::GetBaseYieldRateFromTerrain
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 2977 : }

	ret	0
?lGetBaseYieldRateFromTerrain@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBaseYieldRateFromTerrain
_TEXT	ENDS
PUBLIC	?lChangeBaseYieldRateFromTerrain@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseYieldRateFromTerrain
EXTRN	?ChangeBaseYieldRateFromTerrain@CvCity@@QAEXW4YieldTypes@@H@Z:PROC ; CvCity::ChangeBaseYieldRateFromTerrain
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeBaseYieldRateFromTerrain@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeBaseYieldRateFromTerrain@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeBaseYieldRateFromTerrain, COMDAT

; 2981 : 	return BasicLuaMethod(L, &CvCity::ChangeBaseYieldRateFromTerrain);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeBaseYieldRateFromTerrain@CvCity@@QAEXW4YieldTypes@@H@Z ; CvCity::ChangeBaseYieldRateFromTerrain
	push	eax
	call	??$BasicLuaMethod@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4YieldTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum YieldTypes,int>
	add	esp, 8

; 2982 : }

	ret	0
?lChangeBaseYieldRateFromTerrain@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeBaseYieldRateFromTerrain
_TEXT	ENDS
PUBLIC	?lGetBaseYieldRateFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromBuildings
EXTRN	?GetBaseYieldRateFromBuildings@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::GetBaseYieldRateFromBuildings
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBaseYieldRateFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBaseYieldRateFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBaseYieldRateFromBuildings, COMDAT

; 2986 : 	return BasicLuaMethod(L, &CvCity::GetBaseYieldRateFromBuildings);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetBaseYieldRateFromBuildings@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::GetBaseYieldRateFromBuildings
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 2987 : }

	ret	0
?lGetBaseYieldRateFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBaseYieldRateFromBuildings
_TEXT	ENDS
PUBLIC	?lChangeBaseYieldRateFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseYieldRateFromBuildings
EXTRN	?ChangeBaseYieldRateFromBuildings@CvCity@@QAEXW4YieldTypes@@H@Z:PROC ; CvCity::ChangeBaseYieldRateFromBuildings
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeBaseYieldRateFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeBaseYieldRateFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeBaseYieldRateFromBuildings, COMDAT

; 2991 : 	return BasicLuaMethod(L, &CvCity::ChangeBaseYieldRateFromBuildings);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeBaseYieldRateFromBuildings@CvCity@@QAEXW4YieldTypes@@H@Z ; CvCity::ChangeBaseYieldRateFromBuildings
	push	eax
	call	??$BasicLuaMethod@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4YieldTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum YieldTypes,int>
	add	esp, 8

; 2992 : }

	ret	0
?lChangeBaseYieldRateFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeBaseYieldRateFromBuildings
_TEXT	ENDS
PUBLIC	?lGetBaseYieldRateFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromSpecialists
EXTRN	?GetBaseYieldRateFromSpecialists@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::GetBaseYieldRateFromSpecialists
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBaseYieldRateFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBaseYieldRateFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBaseYieldRateFromSpecialists, COMDAT

; 2996 : 	return BasicLuaMethod(L, &CvCity::GetBaseYieldRateFromSpecialists);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetBaseYieldRateFromSpecialists@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::GetBaseYieldRateFromSpecialists
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 2997 : }

	ret	0
?lGetBaseYieldRateFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBaseYieldRateFromSpecialists
_TEXT	ENDS
PUBLIC	?lChangeBaseYieldRateFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseYieldRateFromSpecialists
EXTRN	?ChangeBaseYieldRateFromSpecialists@CvCity@@QAEXW4YieldTypes@@H@Z:PROC ; CvCity::ChangeBaseYieldRateFromSpecialists
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeBaseYieldRateFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeBaseYieldRateFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeBaseYieldRateFromSpecialists, COMDAT

; 3001 : 	return BasicLuaMethod(L, &CvCity::ChangeBaseYieldRateFromSpecialists);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeBaseYieldRateFromSpecialists@CvCity@@QAEXW4YieldTypes@@H@Z ; CvCity::ChangeBaseYieldRateFromSpecialists
	push	eax
	call	??$BasicLuaMethod@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4YieldTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum YieldTypes,int>
	add	esp, 8

; 3002 : }

	ret	0
?lChangeBaseYieldRateFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeBaseYieldRateFromSpecialists
_TEXT	ENDS
PUBLIC	?lGetBaseYieldRateFromMisc@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromMisc
EXTRN	?GetBaseYieldRateFromMisc@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::GetBaseYieldRateFromMisc
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBaseYieldRateFromMisc@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBaseYieldRateFromMisc@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBaseYieldRateFromMisc, COMDAT

; 3006 : 	return BasicLuaMethod(L, &CvCity::GetBaseYieldRateFromMisc);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetBaseYieldRateFromMisc@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::GetBaseYieldRateFromMisc
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 3007 : }

	ret	0
?lGetBaseYieldRateFromMisc@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBaseYieldRateFromMisc
_TEXT	ENDS
PUBLIC	?lChangeBaseYieldRateFromMisc@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseYieldRateFromMisc
EXTRN	?ChangeBaseYieldRateFromMisc@CvCity@@QAEXW4YieldTypes@@H@Z:PROC ; CvCity::ChangeBaseYieldRateFromMisc
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeBaseYieldRateFromMisc@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeBaseYieldRateFromMisc@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeBaseYieldRateFromMisc, COMDAT

; 3011 : 	return BasicLuaMethod(L, &CvCity::ChangeBaseYieldRateFromMisc);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeBaseYieldRateFromMisc@CvCity@@QAEXW4YieldTypes@@H@Z ; CvCity::ChangeBaseYieldRateFromMisc
	push	eax
	call	??$BasicLuaMethod@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4YieldTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum YieldTypes,int>
	add	esp, 8

; 3012 : }

	ret	0
?lChangeBaseYieldRateFromMisc@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeBaseYieldRateFromMisc
_TEXT	ENDS
PUBLIC	?lGetBaseYieldRateFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromReligion
EXTRN	?GetBaseYieldRateFromReligion@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::GetBaseYieldRateFromReligion
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBaseYieldRateFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBaseYieldRateFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBaseYieldRateFromReligion, COMDAT

; 3016 : 	return BasicLuaMethod(L, &CvCity::GetBaseYieldRateFromReligion);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetBaseYieldRateFromReligion@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::GetBaseYieldRateFromReligion
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 3017 : }

	ret	0
?lGetBaseYieldRateFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBaseYieldRateFromReligion
_TEXT	ENDS
PUBLIC	?lChangeBaseYieldRateFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseYieldRateFromReligion
EXTRN	?ChangeBaseYieldRateFromReligion@CvCity@@QAEXW4YieldTypes@@H@Z:PROC ; CvCity::ChangeBaseYieldRateFromReligion
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeBaseYieldRateFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeBaseYieldRateFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeBaseYieldRateFromReligion, COMDAT

; 3022 : 	return BasicLuaMethod(L, &CvCity::ChangeBaseYieldRateFromReligion);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeBaseYieldRateFromReligion@CvCity@@QAEXW4YieldTypes@@H@Z ; CvCity::ChangeBaseYieldRateFromReligion
	push	eax
	call	??$BasicLuaMethod@W4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXW4YieldTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<enum YieldTypes,int>
	add	esp, 8

; 3023 : }

	ret	0
?lChangeBaseYieldRateFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeBaseYieldRateFromReligion
_TEXT	ENDS
PUBLIC	?lGetYieldPerPopTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetYieldPerPopTimes100
EXTRN	?GetYieldPerPopTimes100@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::GetYieldPerPopTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetYieldPerPopTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetYieldPerPopTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetYieldPerPopTimes100, COMDAT

; 3027 : 	return BasicLuaMethod(L, &CvCity::GetYieldPerPopTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetYieldPerPopTimes100@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::GetYieldPerPopTimes100
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 3028 : }

	ret	0
?lGetYieldPerPopTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetYieldPerPopTimes100
_TEXT	ENDS
PUBLIC	?lGetBaseYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBaseYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBaseYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBaseYieldRateModifier, COMDAT

; 3033 : {

	push	ebx
	push	ebp
	push	esi

; 3034 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetBaseYi@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetBaseYi@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetBaseYi@2
	xor	bl, bl
$LN5@lGetBaseYi@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetBaseYi@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetBaseYi@2:

; 3035 : 	const YieldTypes eIndex = (YieldTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 3036 : 	const int iExtra = luaL_optint(L, 3, 0);

	push	0
	push	3
	push	esi
	mov	ebx, eax
	call	_luaL_optinteger
	add	esp, 20					; 00000014H

; 3037 : 	const int iResult = pkCity->getBaseYieldRateModifier(eIndex, iExtra);

	push	0
	push	eax
	push	ebx
	mov	ecx, edi
	call	?getBaseYieldRateModifier@CvCity@@QBEHW4YieldTypes@@HPAVCvString@@@Z ; CvCity::getBaseYieldRateModifier

; 3038 : 
; 3039 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3040 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3041 : }

	ret	0
?lGetBaseYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBaseYieldRateModifier
_TEXT	ENDS
PUBLIC	?lGetYieldRate@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetYieldRate
EXTRN	?getYieldRate@CvCity@@QBEHW4YieldTypes@@_N@Z:PROC ; CvCity::getYieldRate
EXTRN	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z:PROC	; luaL_optbool
; Function compile flags: /Ogtpy
;	COMDAT ?lGetYieldRate@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bIgnoreTrade$ = -4					; size = 1
_L$ = 8							; size = 4
?lGetYieldRate@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetYieldRate, COMDAT

; 3045 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 3046 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetYieldR
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetYieldR
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetYieldR
	xor	bl, bl
$LN5@lGetYieldR:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetYieldR
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetYieldR:

; 3047 : 	const YieldTypes eIndex = (YieldTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 3048 : 	const bool bIgnoreTrade = luaL_optbool(L, 3, false);

	push	0
	push	3
	push	esi
	mov	ebx, eax
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	mov	BYTE PTR _bIgnoreTrade$[esp+40], al

; 3049 : 	const int iResult = pkCity->getYieldRate(eIndex, bIgnoreTrade);

	mov	eax, DWORD PTR _bIgnoreTrade$[esp+40]
	add	esp, 20					; 00000014H
	push	eax
	push	ebx
	mov	ecx, edi
	call	?getYieldRate@CvCity@@QBEHW4YieldTypes@@_N@Z ; CvCity::getYieldRate

; 3050 : 
; 3051 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3052 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3053 : }

	pop	ecx
	ret	0
?lGetYieldRate@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetYieldRate
_TEXT	ENDS
PUBLIC	?lGetYieldRateTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetYieldRateTimes100
EXTRN	?getYieldRateTimes100@CvCity@@QBEHW4YieldTypes@@_N@Z:PROC ; CvCity::getYieldRateTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetYieldRateTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bIgnoreTrade$ = -4					; size = 1
_L$ = 8							; size = 4
?lGetYieldRateTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetYieldRateTimes100, COMDAT

; 3057 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 3058 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetYieldR@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetYieldR@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetYieldR@2
	xor	bl, bl
$LN5@lGetYieldR@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetYieldR@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetYieldR@2:

; 3059 : 	const YieldTypes eIndex = (YieldTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 3060 : 	const bool bIgnoreTrade = luaL_optbool(L, 3, false);

	push	0
	push	3
	push	esi
	mov	ebx, eax
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	mov	BYTE PTR _bIgnoreTrade$[esp+40], al

; 3061 : 	const int iResult = pkCity->getYieldRateTimes100(eIndex, bIgnoreTrade);

	mov	eax, DWORD PTR _bIgnoreTrade$[esp+40]
	add	esp, 20					; 00000014H
	push	eax
	push	ebx
	mov	ecx, edi
	call	?getYieldRateTimes100@CvCity@@QBEHW4YieldTypes@@_N@Z ; CvCity::getYieldRateTimes100

; 3062 : 
; 3063 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3064 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3065 : }

	pop	ecx
	ret	0
?lGetYieldRateTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetYieldRateTimes100
_TEXT	ENDS
PUBLIC	?lGetYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetYieldRateModifier
EXTRN	?getYieldRateModifier@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::getYieldRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetYieldRateModifier, COMDAT

; 3069 : {

	push	ebx
	push	ebp
	push	esi

; 3070 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetYieldR@3
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetYieldR@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetYieldR@3
	xor	bl, bl
$LN5@lGetYieldR@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetYieldR@3
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetYieldR@3:

; 3071 : 	const YieldTypes eIndex = (YieldTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 3072 : 	const int iResult = pkCity->getYieldRateModifier(eIndex);

	push	eax
	mov	ecx, edi
	call	?getYieldRateModifier@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::getYieldRateModifier

; 3073 : 
; 3074 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3075 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3076 : }

	ret	0
?lGetYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetYieldRateModifier
_TEXT	ENDS
PUBLIC	?lGetExtraSpecialistYield@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetExtraSpecialistYield
EXTRN	?getExtraSpecialistYield@CvCity@@QBEHW4YieldTypes@@@Z:PROC ; CvCity::getExtraSpecialistYield
; Function compile flags: /Ogtpy
;	COMDAT ?lGetExtraSpecialistYield@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetExtraSpecialistYield@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetExtraSpecialistYield, COMDAT

; 3081 : {

	push	ebx
	push	ebp
	push	esi

; 3082 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetExtraS
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetExtraS
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetExtraS
	xor	bl, bl
$LN5@lGetExtraS:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetExtraS
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetExtraS:

; 3083 : 	const YieldTypes eIndex = (YieldTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 3084 : 	const int iResult = pkCity->getExtraSpecialistYield(eIndex);

	push	eax
	mov	ecx, edi
	call	?getExtraSpecialistYield@CvCity@@QBEHW4YieldTypes@@@Z ; CvCity::getExtraSpecialistYield

; 3085 : 
; 3086 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3087 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3088 : }

	ret	0
?lGetExtraSpecialistYield@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetExtraSpecialistYield
_TEXT	ENDS
PUBLIC	?lGetExtraSpecialistYieldOfType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetExtraSpecialistYieldOfType
EXTRN	?getExtraSpecialistYield@CvCity@@QBEHW4YieldTypes@@W4SpecialistTypes@@@Z:PROC ; CvCity::getExtraSpecialistYield
; Function compile flags: /Ogtpy
;	COMDAT ?lGetExtraSpecialistYieldOfType@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetExtraSpecialistYieldOfType@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetExtraSpecialistYieldOfType, COMDAT

; 3093 : 	return BasicLuaMethod<int, YieldTypes, SpecialistTypes>(L, &CvCity::getExtraSpecialistYield);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getExtraSpecialistYield@CvCity@@QBEHW4YieldTypes@@W4SpecialistTypes@@@Z ; CvCity::getExtraSpecialistYield
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@W4SpecialistTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4YieldTypes@@W4SpecialistTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum YieldTypes,enum SpecialistTypes>
	add	esp, 8

; 3094 : }

	ret	0
?lGetExtraSpecialistYieldOfType@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetExtraSpecialistYieldOfType
_TEXT	ENDS
PUBLIC	?lGetDomainFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetDomainFreeExperience
EXTRN	?getDomainFreeExperience@CvCity@@QBEHW4DomainTypes@@@Z:PROC ; CvCity::getDomainFreeExperience
; Function compile flags: /Ogtpy
;	COMDAT ?lGetDomainFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetDomainFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetDomainFreeExperience, COMDAT

; 3100 : 	return BasicLuaMethod(L, &CvCity::getDomainFreeExperience);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getDomainFreeExperience@CvCity@@QBEHW4DomainTypes@@@Z ; CvCity::getDomainFreeExperience
	push	eax
	call	??$BasicLuaMethod@HW4DomainTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4DomainTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum DomainTypes>
	add	esp, 8

; 3101 : }

	ret	0
?lGetDomainFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetDomainFreeExperience
_TEXT	ENDS
PUBLIC	?lGetDomainProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetDomainProductionModifier
EXTRN	?getDomainProductionModifier@CvCity@@QBEHW4DomainTypes@@@Z:PROC ; CvCity::getDomainProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetDomainProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetDomainProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetDomainProductionModifier, COMDAT

; 3106 : 	return BasicLuaMethod(L, &CvCity::getDomainProductionModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getDomainProductionModifier@CvCity@@QBEHW4DomainTypes@@@Z ; CvCity::getDomainProductionModifier
	push	eax
	call	??$BasicLuaMethod@HW4DomainTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4DomainTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum DomainTypes>
	add	esp, 8

; 3107 : }

	ret	0
?lGetDomainProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetDomainProductionModifier
_TEXT	ENDS
PUBLIC	?lIsEverOwned@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsEverOwned
EXTRN	?isEverOwned@CvCity@@QBE_NW4PlayerTypes@@@Z:PROC ; CvCity::isEverOwned
; Function compile flags: /Ogtpy
;	COMDAT ?lIsEverOwned@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsEverOwned@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsEverOwned, COMDAT

; 3112 : 	return BasicLuaMethod(L, &CvCity::isEverOwned);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isEverOwned@CvCity@@QBE_NW4PlayerTypes@@@Z ; CvCity::isEverOwned
	push	eax
	call	??$BasicLuaMethod@_NW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum PlayerTypes>
	add	esp, 8

; 3113 : }

	ret	0
?lIsEverOwned@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsEverOwned
_TEXT	ENDS
PUBLIC	?lIsRevealed@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsRevealed
EXTRN	?isRevealed@CvCity@@QBE_NW4TeamTypes@@_N@Z:PROC	; CvCity::isRevealed
; Function compile flags: /Ogtpy
;	COMDAT ?lIsRevealed@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsRevealed@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsRevealed, COMDAT

; 3118 : 	return BasicLuaMethod(L, &CvCity::isRevealed);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isRevealed@CvCity@@QBE_NW4TeamTypes@@_N@Z ; CvCity::isRevealed
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4TeamTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum TeamTypes,bool>
	add	esp, 8

; 3119 : }

	ret	0
?lIsRevealed@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsRevealed
_TEXT	ENDS
PUBLIC	?lSetRevealed@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lSetRevealed
EXTRN	?setRevealed@CvCity@@QAE_NW4TeamTypes@@_N@Z:PROC ; CvCity::setRevealed
; Function compile flags: /Ogtpy
;	COMDAT ?lSetRevealed@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetRevealed@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lSetRevealed, COMDAT

; 3124 : 	return BasicLuaMethod(L, &CvCity::setRevealed);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setRevealed@CvCity@@QAE_NW4TeamTypes@@_N@Z ; CvCity::setRevealed
	push	eax
	call	??$BasicLuaMethod@_NW4TeamTypes@@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AE_NW4TeamTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum TeamTypes,bool>
	add	esp, 8

; 3125 : }

	ret	0
?lSetRevealed@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lSetRevealed
_TEXT	ENDS
PUBLIC	?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetName
EXTRN	?getName@CvCity@@QBE?BVCvString@@XZ:PROC	; CvCity::getName
;	COMDAT xdata$x
; File s:\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T231703 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lGetName, COMDAT

; 3129 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 3130 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetName
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetName
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetName
	xor	bl, bl
$LN6@lGetName:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetName
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetName:

; 3131 : 	lua_pushstring(L, pkCity->getName());

	lea	eax, DWORD PTR $T231703[esp+56]
	push	eax
	mov	ecx, edi
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	lea	ecx, DWORD PTR $T231703[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 3132 : 	return 1;
; 3133 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T231703[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lGetName
PUBLIC	?lGetNameKey@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetNameKey
EXTRN	?getNameKey@CvCity@@QBEPBDXZ:PROC		; CvCity::getNameKey
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNameKey@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNameKey@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetNameKey, COMDAT

; 3140 : {

	push	ebx
	push	ebp
	push	esi

; 3141 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNameKe
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNameKe
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNameKe
	xor	bl, bl
$LN5@lGetNameKe:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNameKe
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNameKe:

; 3142 : 	lua_pushstring(L, pkCity->getNameKey());

	mov	ecx, edi
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3143 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3144 : }

	ret	0
?lGetNameKey@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetNameKey
_TEXT	ENDS
PUBLIC	?lSetName@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lSetName
EXTRN	?setName@CvCity@@QAEXPBD_N@Z:PROC		; CvCity::setName
EXTRN	_lua_tolstring:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?lSetName@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bFound$ = -4						; size = 1
_L$ = 8							; size = 4
?lSetName@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lSetName, COMDAT

; 3148 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 3149 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lSetName
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lSetName
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lSetName
	xor	bl, bl
$LN5@lSetName:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lSetName
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lSetName:

; 3150 : 
; 3151 : 	const char* cityName = lua_tostring(L, 2);

	push	0
	push	2
	push	esi
	call	_lua_tolstring

; 3152 : 	const bool bFound = luaL_optbool(L, 3, false);

	push	0
	push	3
	push	esi
	mov	ebx, eax
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	mov	BYTE PTR _bFound$[esp+44], al

; 3153 : 
; 3154 : 	pkCity->setName(cityName, bFound);

	mov	eax, DWORD PTR _bFound$[esp+44]
	add	esp, 24					; 00000018H
	push	eax
	push	ebx
	mov	ecx, edi
	call	?setName@CvCity@@QAEXPBD_N@Z		; CvCity::setName
	pop	edi
	pop	esi
	pop	ebp

; 3155 : 	return 0;

	xor	eax, eax
	pop	ebx

; 3156 : }

	pop	ecx
	ret	0
?lSetName@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lSetName
_TEXT	ENDS
PUBLIC	?lIsHasResourceLocal@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsHasResourceLocal
EXTRN	?IsHasResourceLocal@CvCity@@QBE_NW4ResourceTypes@@_N@Z:PROC ; CvCity::IsHasResourceLocal
; Function compile flags: /Ogtpy
;	COMDAT ?lIsHasResourceLocal@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bTestVisible$ = -4					; size = 1
_L$ = 8							; size = 4
?lIsHasResourceLocal@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsHasResourceLocal, COMDAT

; 3160 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 3161 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsHasReso
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsHasReso
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsHasReso
	xor	bl, bl
$LN5@lIsHasReso:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsHasReso
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsHasReso:

; 3162 : 	const int iResource = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 3163 : 	const bool bTestVisible = lua_toboolean(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	al
	mov	BYTE PTR _bTestVisible$[esp+20], al

; 3164 : 	const bool bResult = pkCity->IsHasResourceLocal((ResourceTypes)iResource, bTestVisible);

	mov	ecx, DWORD PTR _bTestVisible$[esp+20]
	push	ecx
	push	ebx
	mov	ecx, edi
	call	?IsHasResourceLocal@CvCity@@QBE_NW4ResourceTypes@@_N@Z ; CvCity::IsHasResourceLocal

; 3165 : 
; 3166 : 	lua_pushboolean(L, bResult);

	movzx	edx, al
	push	edx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3167 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3168 : }

	pop	ecx
	ret	0
?lIsHasResourceLocal@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsHasResourceLocal
_TEXT	ENDS
PUBLIC	?lGetBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingProduction
EXTRN	?GetBuildingProduction@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetBuildingProduction
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingProduction, COMDAT

; 3172 : {

	push	ebx
	push	ebp
	push	esi

; 3173 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetBuildi@6
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetBuildi@6
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetBuildi@6
	xor	bl, bl
$LN7@lGetBuildi@6:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetBuildi@6
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetBuildi@6:

; 3174 : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 3175 : 	if(iIndex != NO_BUILDING)

	cmp	eax, -1
	je	SHORT $LN2@lGetBuildi@6

; 3176 : 	{
; 3177 : 		const int iResult = pkCity->GetCityBuildings()->GetBuildingProduction((BuildingTypes)iIndex);

	push	eax
	mov	ecx, edi
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetBuildingProduction@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetBuildingProduction

; 3178 : 		lua_pushinteger(L, iResult);

	push	eax

; 3179 : 	}
; 3180 : 	else
; 3181 : 	{
; 3182 : 		lua_pushinteger(L, 0);

	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3183 : 	}
; 3184 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3185 : }

	ret	0
$LN2@lGetBuildi@6:

; 3179 : 	}
; 3180 : 	else
; 3181 : 	{
; 3182 : 		lua_pushinteger(L, 0);

	push	0
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3183 : 	}
; 3184 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3185 : }

	ret	0
?lGetBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingProduction
_TEXT	ENDS
PUBLIC	?lSetBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetBuildingProduction
EXTRN	?SetBuildingProduction@CvCityBuildings@@QAEXW4BuildingTypes@@H@Z:PROC ; CvCityBuildings::SetBuildingProduction
; Function compile flags: /Ogtpy
;	COMDAT ?lSetBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetBuildingProduction, COMDAT

; 3189 : {

	push	ebx
	push	ebp
	push	esi

; 3190 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lSetBuildi
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lSetBuildi
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN6@lSetBuildi
	xor	bl, bl
$LN6@lSetBuildi:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lSetBuildi
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lSetBuildi:

; 3191 : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 3192 : 	const int iNewValue = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	edi, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 3193 : 	if(iIndex != NO_BUILDING)

	cmp	edi, -1
	je	SHORT $LN15@lSetBuildi

; 3194 : 	{
; 3195 : 		pkCity->GetCityBuildings()->SetBuildingProduction((BuildingTypes)iIndex, iNewValue);

	push	eax
	push	edi
	mov	ecx, ebp
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?SetBuildingProduction@CvCityBuildings@@QAEXW4BuildingTypes@@H@Z ; CvCityBuildings::SetBuildingProduction
$LN15@lSetBuildi:
	pop	edi
	pop	esi
	pop	ebp

; 3196 : 	}
; 3197 : 
; 3198 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3199 : }

	ret	0
?lSetBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetBuildingProduction
_TEXT	ENDS
PUBLIC	?lChangeBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBuildingProduction
EXTRN	?ChangeBuildingProduction@CvCityBuildings@@QAEXW4BuildingTypes@@H@Z:PROC ; CvCityBuildings::ChangeBuildingProduction
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeBuildingProduction, COMDAT

; 3203 : {

	push	ebx
	push	ebp
	push	esi

; 3204 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lChangeBui
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lChangeBui
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN6@lChangeBui
	xor	bl, bl
$LN6@lChangeBui:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lChangeBui
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lChangeBui:

; 3205 : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 3206 : 	const int iChange = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	edi, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 3207 : 	if(iIndex != NO_BUILDING)

	cmp	edi, -1
	je	SHORT $LN15@lChangeBui

; 3208 : 	{
; 3209 : 		pkCity->GetCityBuildings()->ChangeBuildingProduction((BuildingTypes)iIndex, iChange);

	push	eax
	push	edi
	mov	ecx, ebp
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?ChangeBuildingProduction@CvCityBuildings@@QAEXW4BuildingTypes@@H@Z ; CvCityBuildings::ChangeBuildingProduction
$LN15@lChangeBui:
	pop	edi
	pop	esi
	pop	ebp

; 3210 : 	}
; 3211 : 
; 3212 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3213 : }

	ret	0
?lChangeBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeBuildingProduction
_TEXT	ENDS
PUBLIC	?lGetBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingProductionTime
EXTRN	?GetBuildingProductionTime@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetBuildingProductionTime
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingProductionTime, COMDAT

; 3217 : {

	push	ebx
	push	ebp
	push	esi

; 3218 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetBuildi@7
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetBuildi@7
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetBuildi@7
	xor	bl, bl
$LN7@lGetBuildi@7:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetBuildi@7
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetBuildi@7:

; 3219 : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 3220 : 	if(iIndex != NO_BUILDING)

	cmp	eax, -1
	je	SHORT $LN2@lGetBuildi@7

; 3221 : 	{
; 3222 : 		const int iResult = pkCity->GetCityBuildings()->GetBuildingProductionTime((BuildingTypes)iIndex);

	push	eax
	mov	ecx, edi
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetBuildingProductionTime@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetBuildingProductionTime

; 3223 : 		lua_pushinteger(L, iResult);

	push	eax

; 3224 : 	}
; 3225 : 	else
; 3226 : 	{
; 3227 : 		lua_pushinteger(L, 0);

	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3228 : 	}
; 3229 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3230 : }

	ret	0
$LN2@lGetBuildi@7:

; 3224 : 	}
; 3225 : 	else
; 3226 : 	{
; 3227 : 		lua_pushinteger(L, 0);

	push	0
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3228 : 	}
; 3229 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3230 : }

	ret	0
?lGetBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingProductionTime
_TEXT	ENDS
PUBLIC	?lSetBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetBuildingProductionTime
EXTRN	?SetBuildingProductionTime@CvCityBuildings@@QAEXW4BuildingTypes@@H@Z:PROC ; CvCityBuildings::SetBuildingProductionTime
; Function compile flags: /Ogtpy
;	COMDAT ?lSetBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetBuildingProductionTime, COMDAT

; 3234 : {

	push	ebx
	push	ebp
	push	esi

; 3235 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lSetBuildi@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lSetBuildi@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN6@lSetBuildi@2
	xor	bl, bl
$LN6@lSetBuildi@2:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lSetBuildi@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lSetBuildi@2:

; 3236 : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 3237 : 	const int iNewValue = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	edi, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 3238 : 	if(iIndex != NO_BUILDING)

	cmp	edi, -1
	je	SHORT $LN15@lSetBuildi@2

; 3239 : 	{
; 3240 : 		pkCity->GetCityBuildings()->SetBuildingProductionTime((BuildingTypes)iIndex, iNewValue);

	push	eax
	push	edi
	mov	ecx, ebp
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?SetBuildingProductionTime@CvCityBuildings@@QAEXW4BuildingTypes@@H@Z ; CvCityBuildings::SetBuildingProductionTime
$LN15@lSetBuildi@2:
	pop	edi
	pop	esi
	pop	ebp

; 3241 : 	}
; 3242 : 
; 3243 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3244 : }

	ret	0
?lSetBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetBuildingProductionTime
_TEXT	ENDS
PUBLIC	?lChangeBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBuildingProductionTime
EXTRN	?ChangeBuildingProductionTime@CvCityBuildings@@QAEXW4BuildingTypes@@H@Z:PROC ; CvCityBuildings::ChangeBuildingProductionTime
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeBuildingProductionTime, COMDAT

; 3248 : {

	push	ebx
	push	ebp
	push	esi

; 3249 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lChangeBui@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lChangeBui@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lChangeBui@2
	xor	bl, bl
$LN6@lChangeBui@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lChangeBui@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lChangeBui@2:

; 3250 : 	const int iIndex = toValue<BuildingTypes>(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	mov	ebx, eax
	add	esp, 8

; 3251 : 	if(iIndex != NO_BUILDING)

	cmp	ebx, -1
	je	SHORT $LN19@lChangeBui@2

; 3252 : 	{
; 3253 : 		pkCity->GetCityBuildings()->ChangeBuildingProductionTime((BuildingTypes)iIndex, toValue<int>(L, 3));

	push	3
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	ebx
	mov	ecx, edi
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?ChangeBuildingProductionTime@CvCityBuildings@@QAEXW4BuildingTypes@@H@Z ; CvCityBuildings::ChangeBuildingProductionTime
$LN19@lChangeBui@2:
	pop	edi
	pop	esi
	pop	ebp

; 3254 : 	}
; 3255 : 
; 3256 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3257 : }

	ret	0
?lChangeBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeBuildingProductionTime
_TEXT	ENDS
PUBLIC	?lGetBuildingOriginalOwner@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingOriginalOwner
EXTRN	?GetBuildingOriginalOwner@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetBuildingOriginalOwner
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingOriginalOwner@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingOriginalOwner@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingOriginalOwner, COMDAT

; 3261 : {

	push	ebx
	push	ebp
	push	esi

; 3262 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetBuildi@8
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetBuildi@8
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetBuildi@8
	xor	bl, bl
$LN7@lGetBuildi@8:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetBuildi@8
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetBuildi@8:

; 3263 : 	const int iIndex = toValue<BuildingTypes>(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 3264 : 	if(iIndex != NO_BUILDING)

	cmp	eax, -1
	je	SHORT $LN2@lGetBuildi@8

; 3265 : 	{
; 3266 : 		const int iResult = pkCity->GetCityBuildings()->GetBuildingOriginalOwner((BuildingTypes)iIndex);

	push	eax
	mov	ecx, edi
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetBuildingOriginalOwner@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetBuildingOriginalOwner

; 3267 : 		lua_pushinteger(L, iResult);

	push	eax

; 3268 : 	}
; 3269 : 	else
; 3270 : 	{
; 3271 : 		lua_pushinteger(L, -1);

	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3272 : 	}
; 3273 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3274 : }

	ret	0
$LN2@lGetBuildi@8:

; 3268 : 	}
; 3269 : 	else
; 3270 : 	{
; 3271 : 		lua_pushinteger(L, -1);

	push	-1
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3272 : 	}
; 3273 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3274 : }

	ret	0
?lGetBuildingOriginalOwner@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingOriginalOwner
_TEXT	ENDS
PUBLIC	?lGetBuildingOriginalTime@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingOriginalTime
EXTRN	?GetBuildingOriginalTime@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetBuildingOriginalTime
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingOriginalTime@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingOriginalTime@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingOriginalTime, COMDAT

; 3278 : {

	push	ebx
	push	ebp
	push	esi

; 3279 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetBuildi@9
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetBuildi@9
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetBuildi@9
	xor	bl, bl
$LN7@lGetBuildi@9:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetBuildi@9
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetBuildi@9:

; 3280 : 	const int iIndex = toValue<BuildingTypes>(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 3281 : 	if(iIndex != NO_BUILDING)

	cmp	eax, -1
	je	SHORT $LN2@lGetBuildi@9

; 3282 : 	{
; 3283 : 		const int iResult = pkCity->GetCityBuildings()->GetBuildingOriginalTime((BuildingTypes)iIndex);

	push	eax
	mov	ecx, edi
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetBuildingOriginalTime@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetBuildingOriginalTime

; 3284 : 		lua_pushinteger(L, iResult);

	push	eax

; 3285 : 	}
; 3286 : 	else
; 3287 : 	{
; 3288 : 		lua_pushinteger(L, 0);

	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3289 : 	}
; 3290 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3291 : }

	ret	0
$LN2@lGetBuildi@9:

; 3285 : 	}
; 3286 : 	else
; 3287 : 	{
; 3288 : 		lua_pushinteger(L, 0);

	push	0
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3289 : 	}
; 3290 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3291 : }

	ret	0
?lGetBuildingOriginalTime@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingOriginalTime
_TEXT	ENDS
PUBLIC	?lGetUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitProduction
EXTRN	?getUnitProduction@CvCity@@QBEHW4UnitTypes@@@Z:PROC ; CvCity::getUnitProduction
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetUnitProduction, COMDAT

; 3295 : {

	push	ebx
	push	ebp
	push	esi

; 3296 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetUnitPr@3
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetUnitPr@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetUnitPr@3
	xor	bl, bl
$LN5@lGetUnitPr@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetUnitPr@3
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetUnitPr@3:

; 3297 : 	const int iResult = pkCity->getUnitProduction(toValue<UnitTypes>(L, 2));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	?getUnitProduction@CvCity@@QBEHW4UnitTypes@@@Z ; CvCity::getUnitProduction

; 3298 : 
; 3299 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3300 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3301 : }

	ret	0
?lGetUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetUnitProduction
_TEXT	ENDS
PUBLIC	?lSetUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetUnitProduction
EXTRN	?setUnitProduction@CvCity@@QAEXW4UnitTypes@@H@Z:PROC ; CvCity::setUnitProduction
; Function compile flags: /Ogtpy
;	COMDAT ?lSetUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lSetUnitProduction, COMDAT

; 3305 : {

	push	ebx
	push	ebp
	push	esi

; 3306 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lSetUnitPr
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lSetUnitPr
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lSetUnitPr
	xor	bl, bl
$LN5@lSetUnitPr:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lSetUnitPr
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lSetUnitPr:

; 3307 : 	pkCity->setUnitProduction(toValue<UnitTypes>(L, 2), toValue<int>(L, 3));

	push	3
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	?setUnitProduction@CvCity@@QAEXW4UnitTypes@@H@Z ; CvCity::setUnitProduction
	pop	edi
	pop	esi
	pop	ebp

; 3308 : 
; 3309 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3310 : }

	ret	0
?lSetUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lSetUnitProduction
_TEXT	ENDS
PUBLIC	?lChangeUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeUnitProduction
EXTRN	?changeUnitProduction@CvCity@@QAEXW4UnitTypes@@H@Z:PROC ; CvCity::changeUnitProduction
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeUnitProduction, COMDAT

; 3314 : {

	push	ebx
	push	ebp
	push	esi

; 3315 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lChangeUni
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lChangeUni
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lChangeUni
	xor	bl, bl
$LN5@lChangeUni:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lChangeUni
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lChangeUni:

; 3316 : 	pkCity->changeUnitProduction(toValue<UnitTypes>(L, 2), toValue<int>(L, 3));

	push	3
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	?changeUnitProduction@CvCity@@QAEXW4UnitTypes@@H@Z ; CvCity::changeUnitProduction
	pop	edi
	pop	esi
	pop	ebp

; 3317 : 
; 3318 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3319 : }

	ret	0
?lChangeUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeUnitProduction
_TEXT	ENDS
PUBLIC	?lIsCanAddSpecialistToBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsCanAddSpecialistToBuilding
EXTRN	?IsCanAddSpecialistToBuilding@CvCityCitizens@@QAE_NW4BuildingTypes@@@Z:PROC ; CvCityCitizens::IsCanAddSpecialistToBuilding
; Function compile flags: /Ogtpy
;	COMDAT ?lIsCanAddSpecialistToBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsCanAddSpecialistToBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsCanAddSpecialistToBuilding, COMDAT

; 3323 : {

	push	ebx
	push	ebp
	push	esi

; 3324 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lIsCanAddS
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lIsCanAddS
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lIsCanAddS
	xor	bl, bl
$LN7@lIsCanAddS:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lIsCanAddS
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lIsCanAddS:

; 3325 : 	BuildingTypes bt = toValue<BuildingTypes>(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 3326 : #ifdef AUI_WARNING_FIXES
; 3327 : 	bool bResult = false;
; 3328 : #endif
; 3329 : 	if(bt != NO_BUILDING)

	cmp	eax, -1
	je	SHORT $LN2@lIsCanAddS

; 3330 : 	{
; 3331 : #ifdef AUI_WARNING_FIXES
; 3332 : 		bResult = pkCity->GetCityCitizens()->IsCanAddSpecialistToBuilding(bt);
; 3333 : 	}
; 3334 : 	lua_pushboolean(L, bResult ? 1 : 0);
; 3335 : #else
; 3336 : 		const bool bResult = pkCity->GetCityCitizens()->IsCanAddSpecialistToBuilding(bt);

	push	eax
	mov	ecx, edi
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?IsCanAddSpecialistToBuilding@CvCityCitizens@@QAE_NW4BuildingTypes@@@Z ; CvCityCitizens::IsCanAddSpecialistToBuilding

; 3337 : 		lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax

; 3338 : 	}
; 3339 : 	else
; 3340 : 	{
; 3341 : 		lua_pushboolean(L, false);

	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3342 : 	}
; 3343 : #endif
; 3344 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3345 : }

	ret	0
$LN2@lIsCanAddS:

; 3338 : 	}
; 3339 : 	else
; 3340 : 	{
; 3341 : 		lua_pushboolean(L, false);

	push	0
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3342 : 	}
; 3343 : #endif
; 3344 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3345 : }

	ret	0
?lIsCanAddSpecialistToBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsCanAddSpecialistToBuilding
_TEXT	ENDS
PUBLIC	?lGetSpecialistUpgradeThreshold@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistUpgradeThreshold
EXTRN	?GetSpecialistUpgradeThreshold@CvCityCitizens@@QAEHW4UnitClassTypes@@@Z:PROC ; CvCityCitizens::GetSpecialistUpgradeThreshold
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSpecialistUpgradeThreshold@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSpecialistUpgradeThreshold@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSpecialistUpgradeThreshold, COMDAT

; 3349 : {

	push	ebx
	push	ebp
	push	esi

; 3350 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetSpecia@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetSpecia@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetSpecia@2
	xor	bl, bl
$LN5@lGetSpecia@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetSpecia@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetSpecia@2:

; 3351 : 	const UnitClassTypes eUnitClassType = toValue<UnitClassTypes>(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 3352 : 	const int iResult = pkCity->GetCityCitizens()->GetSpecialistUpgradeThreshold(eUnitClassType);

	push	eax
	mov	ecx, edi
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?GetSpecialistUpgradeThreshold@CvCityCitizens@@QAEHW4UnitClassTypes@@@Z ; CvCityCitizens::GetSpecialistUpgradeThreshold

; 3353 : 
; 3354 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3355 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3356 : }

	ret	0
?lGetSpecialistUpgradeThreshold@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSpecialistUpgradeThreshold
_TEXT	ENDS
PUBLIC	?lGetNumSpecialistsAllowedByBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumSpecialistsAllowedByBuilding
EXTRN	?GetNumSpecialistsAllowedByBuilding@CvCityCitizens@@QAEHABVCvBuildingEntry@@@Z:PROC ; CvCityCitizens::GetNumSpecialistsAllowedByBuilding
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumSpecialistsAllowedByBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResult$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumSpecialistsAllowedByBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumSpecialistsAllowedByBuilding, COMDAT

; 3360 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 3361 : 	int iResult = 0;
; 3362 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	xor	edi, edi
	push	esi
	mov	DWORD PTR _iResult$[esp+24], edi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetNumSpe
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetNumSpe
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetNumSpe
	xor	bl, bl
$LN7@lGetNumSpe:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetNumSpe
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetNumSpe:

; 3363 : 	BuildingTypes bt = toValue<BuildingTypes>(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 3364 : 	if(bt != NO_BUILDING)

	cmp	eax, -1
	je	SHORT $LN18@lGetNumSpe

; 3365 : 	{
; 3366 : 		CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(bt);

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo

; 3367 : 		if(pkBuildingInfo)

	test	eax, eax
	je	SHORT $LN18@lGetNumSpe

; 3368 : 		{
; 3369 : 			iResult = pkCity->GetCityCitizens()->GetNumSpecialistsAllowedByBuilding(*pkBuildingInfo);

	push	eax
	mov	ecx, edi
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?GetNumSpecialistsAllowedByBuilding@CvCityCitizens@@QAEHABVCvBuildingEntry@@@Z ; CvCityCitizens::GetNumSpecialistsAllowedByBuilding
	jmp	SHORT $LN1@lGetNumSpe
$LN18@lGetNumSpe:
	mov	eax, DWORD PTR _iResult$[esp+20]
$LN1@lGetNumSpe:

; 3370 : 		}
; 3371 : 	}
; 3372 : 
; 3373 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3374 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3375 : }

	pop	ecx
	ret	0
?lGetNumSpecialistsAllowedByBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumSpecialistsAllowedByBuilding
_TEXT	ENDS
PUBLIC	?lGetSpecialistCount@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistCount
EXTRN	?GetSpecialistCount@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z:PROC ; CvCityCitizens::GetSpecialistCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSpecialistCount@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSpecialistCount@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSpecialistCount, COMDAT

; 3379 : {

	push	ebx
	push	ebp
	push	esi

; 3380 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetSpecia@3
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetSpecia@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetSpecia@3
	xor	bl, bl
$LN5@lGetSpecia@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetSpecia@3
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetSpecia@3:

; 3381 : #ifndef AUI_WARNING_FIXES
; 3382 : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 3383 : #endif
; 3384 : 	const int iResult = pkCity->GetCityCitizens()->GetSpecialistCount(toValue<SpecialistTypes>(L, 2));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	eax
	mov	ecx, edi
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?GetSpecialistCount@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z ; CvCityCitizens::GetSpecialistCount

; 3385 : 
; 3386 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3387 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3388 : }

	ret	0
?lGetSpecialistCount@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSpecialistCount
_TEXT	ENDS
PUBLIC	?lGetSpecialistGreatPersonProgress@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistGreatPersonProgress
EXTRN	?GetSpecialistGreatPersonProgress@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z:PROC ; CvCityCitizens::GetSpecialistGreatPersonProgress
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSpecialistGreatPersonProgress@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSpecialistGreatPersonProgress@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSpecialistGreatPersonProgress, COMDAT

; 3392 : {

	push	ebx
	push	ebp
	push	esi

; 3393 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetSpecia@4
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetSpecia@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetSpecia@4
	xor	bl, bl
$LN5@lGetSpecia@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetSpecia@4
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetSpecia@4:

; 3394 : #ifndef AUI_WARNING_FIXES
; 3395 : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 3396 : #endif
; 3397 : 	const int iResult = pkCity->GetCityCitizens()->GetSpecialistGreatPersonProgress(toValue<SpecialistTypes>(L, 2));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	eax
	mov	ecx, edi
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?GetSpecialistGreatPersonProgress@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z ; CvCityCitizens::GetSpecialistGreatPersonProgress

; 3398 : 
; 3399 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3400 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3401 : }

	ret	0
?lGetSpecialistGreatPersonProgress@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSpecialistGreatPersonProgress
_TEXT	ENDS
PUBLIC	?lGetSpecialistGreatPersonProgressTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistGreatPersonProgressTimes100
EXTRN	?GetSpecialistGreatPersonProgressTimes100@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z:PROC ; CvCityCitizens::GetSpecialistGreatPersonProgressTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSpecialistGreatPersonProgressTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSpecialistGreatPersonProgressTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSpecialistGreatPersonProgressTimes100, COMDAT

; 3406 : {

	push	ebx
	push	ebp
	push	esi

; 3407 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetSpecia@5
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetSpecia@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetSpecia@5
	xor	bl, bl
$LN5@lGetSpecia@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetSpecia@5
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetSpecia@5:

; 3408 : #ifndef AUI_WARNING_FIXES
; 3409 : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 3410 : #endif
; 3411 : 	const int iResult = pkCity->GetCityCitizens()->GetSpecialistGreatPersonProgressTimes100(toValue<SpecialistTypes>(L, 2));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	eax
	mov	ecx, edi
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?GetSpecialistGreatPersonProgressTimes100@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z ; CvCityCitizens::GetSpecialistGreatPersonProgressTimes100

; 3412 : 
; 3413 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3414 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3415 : }

	ret	0
?lGetSpecialistGreatPersonProgressTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSpecialistGreatPersonProgressTimes100
_TEXT	ENDS
PUBLIC	?lChangeSpecialistGreatPersonProgressTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeSpecialistGreatPersonProgressTimes100
EXTRN	?ChangeSpecialistGreatPersonProgressTimes100@CvCityCitizens@@QAEXW4SpecialistTypes@@H@Z:PROC ; CvCityCitizens::ChangeSpecialistGreatPersonProgressTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeSpecialistGreatPersonProgressTimes100@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeSpecialistGreatPersonProgressTimes100@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lChangeSpecialistGreatPersonProgressTimes100, COMDAT

; 3420 : {

	push	ebx
	push	ebp
	push	esi

; 3421 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lChangeSpe
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lChangeSpe
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lChangeSpe
	xor	bl, bl
$LN5@lChangeSpe:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lChangeSpe
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lChangeSpe:

; 3422 : #ifndef AUI_WARNING_FIXES
; 3423 : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 3424 : #endif
; 3425 : 	const int iChange = lua_tointeger(L, 3);

	push	3
	push	esi
	call	_lua_tointeger

; 3426 : 	pkCity->GetCityCitizens()->ChangeSpecialistGreatPersonProgressTimes100(toValue<SpecialistTypes>(L, 2), iChange);

	push	2
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 24					; 00000018H
	push	ebx
	push	eax
	mov	ecx, edi
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?ChangeSpecialistGreatPersonProgressTimes100@CvCityCitizens@@QAEXW4SpecialistTypes@@H@Z ; CvCityCitizens::ChangeSpecialistGreatPersonProgressTimes100
	pop	edi
	pop	esi
	pop	ebp

; 3427 : 
; 3428 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3429 : }

	ret	0
?lChangeSpecialistGreatPersonProgressTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lChangeSpecialistGreatPersonProgressTimes100
_TEXT	ENDS
PUBLIC	?lGetNumSpecialistsInBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumSpecialistsInBuilding
EXTRN	?GetNumSpecialistsInBuilding@CvCityCitizens@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityCitizens::GetNumSpecialistsInBuilding
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumSpecialistsInBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumSpecialistsInBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumSpecialistsInBuilding, COMDAT

; 3434 : {

	push	ebx
	push	ebp
	push	esi

; 3435 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumSpe@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumSpe@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumSpe@2
	xor	bl, bl
$LN5@lGetNumSpe@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumSpe@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumSpe@2:

; 3436 : #ifndef AUI_WARNING_FIXES
; 3437 : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 3438 : #endif
; 3439 : 	const int iResult = pkCity->GetCityCitizens()->GetNumSpecialistsInBuilding(toValue<BuildingTypes>(L, 2));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	eax
	mov	ecx, edi
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?GetNumSpecialistsInBuilding@CvCityCitizens@@QBEHW4BuildingTypes@@@Z ; CvCityCitizens::GetNumSpecialistsInBuilding

; 3440 : 
; 3441 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3442 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3443 : }

	ret	0
?lGetNumSpecialistsInBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumSpecialistsInBuilding
_TEXT	ENDS
PUBLIC	?lDoReallocateCitizens@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lDoReallocateCitizens
EXTRN	?DoReallocateCitizens@CvCityCitizens@@QAEXXZ:PROC ; CvCityCitizens::DoReallocateCitizens
; Function compile flags: /Ogtpy
;	COMDAT ?lDoReallocateCitizens@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoReallocateCitizens@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lDoReallocateCitizens, COMDAT

; 3448 : {

	push	ebx
	push	ebp
	push	esi

; 3449 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lDoRealloc
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lDoRealloc
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lDoRealloc
	xor	bl, bl
$LN5@lDoRealloc:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lDoRealloc
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lDoRealloc:

; 3450 : 	pkCity->GetCityCitizens()->DoReallocateCitizens();

	mov	ecx, edi
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?DoReallocateCitizens@CvCityCitizens@@QAEXXZ ; CvCityCitizens::DoReallocateCitizens
	pop	edi
	pop	esi
	pop	ebp

; 3451 : 
; 3452 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3453 : }

	ret	0
?lDoReallocateCitizens@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lDoReallocateCitizens
_TEXT	ENDS
PUBLIC	?lDoVerifyWorkingPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lDoVerifyWorkingPlots
EXTRN	?DoVerifyWorkingPlots@CvCityCitizens@@QAEXXZ:PROC ; CvCityCitizens::DoVerifyWorkingPlots
; Function compile flags: /Ogtpy
;	COMDAT ?lDoVerifyWorkingPlots@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoVerifyWorkingPlots@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lDoVerifyWorkingPlots, COMDAT

; 3458 : {

	push	ebx
	push	ebp
	push	esi

; 3459 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lDoVerifyW
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lDoVerifyW
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lDoVerifyW
	xor	bl, bl
$LN5@lDoVerifyW:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lDoVerifyW
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lDoVerifyW:

; 3460 : 	pkCity->GetCityCitizens()->DoVerifyWorkingPlots();

	mov	ecx, edi
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?DoVerifyWorkingPlots@CvCityCitizens@@QAEXXZ ; CvCityCitizens::DoVerifyWorkingPlots
	pop	edi
	pop	esi
	pop	ebp

; 3461 : 
; 3462 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3463 : }

	ret	0
?lDoVerifyWorkingPlots@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lDoVerifyWorkingPlots
_TEXT	ENDS
PUBLIC	?lIsNoAutoAssignSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsNoAutoAssignSpecialists
EXTRN	?IsNoAutoAssignSpecialists@CvCityCitizens@@QBE_NXZ:PROC ; CvCityCitizens::IsNoAutoAssignSpecialists
; Function compile flags: /Ogtpy
;	COMDAT ?lIsNoAutoAssignSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsNoAutoAssignSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsNoAutoAssignSpecialists, COMDAT

; 3468 : {

	push	ebx
	push	ebp
	push	esi

; 3469 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsNoAutoA
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsNoAutoA
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsNoAutoA
	xor	bl, bl
$LN5@lIsNoAutoA:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsNoAutoA
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsNoAutoA:

; 3470 : 	const bool bResult = pkCity->GetCityCitizens()->IsNoAutoAssignSpecialists();

	mov	ecx, edi
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?IsNoAutoAssignSpecialists@CvCityCitizens@@QBE_NXZ ; CvCityCitizens::IsNoAutoAssignSpecialists

; 3471 : 
; 3472 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3473 : 
; 3474 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3475 : }

	ret	0
?lIsNoAutoAssignSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsNoAutoAssignSpecialists
_TEXT	ENDS
PUBLIC	?lGetFocusType@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetFocusType
EXTRN	?GetFocusType@CvCityCitizens@@QBE?AW4CityAIFocusTypes@@XZ:PROC ; CvCityCitizens::GetFocusType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFocusType@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFocusType@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetFocusType, COMDAT

; 3480 : {

	push	ebx
	push	ebp
	push	esi

; 3481 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetFocusT
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetFocusT
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetFocusT
	xor	bl, bl
$LN5@lGetFocusT:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetFocusT
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetFocusT:

; 3482 : 	const int iResult = pkCity->GetCityCitizens()->GetFocusType();

	mov	ecx, edi
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?GetFocusType@CvCityCitizens@@QBE?AW4CityAIFocusTypes@@XZ ; CvCityCitizens::GetFocusType

; 3483 : 
; 3484 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3485 : 
; 3486 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3487 : }

	ret	0
?lGetFocusType@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetFocusType
_TEXT	ENDS
PUBLIC	?lSetFocusType@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lSetFocusType
EXTRN	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z:PROC ; CvCityCitizens::SetFocusType
; Function compile flags: /Ogtpy
;	COMDAT ?lSetFocusType@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetFocusType@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lSetFocusType, COMDAT

; 3492 : {

	push	ebx
	push	ebp
	push	esi

; 3493 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lSetFocusT
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lSetFocusT
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lSetFocusT
	xor	bl, bl
$LN5@lSetFocusT:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lSetFocusT
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lSetFocusT:

; 3494 : 	const int iFocus = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 3495 : 
; 3496 : 	pkCity->GetCityCitizens()->SetFocusType((CityAIFocusTypes) iFocus);

	push	eax
	mov	ecx, edi
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType
	pop	edi
	pop	esi
	pop	ebp

; 3497 : 
; 3498 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3499 : }

	ret	0
?lSetFocusType@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lSetFocusType
_TEXT	ENDS
PUBLIC	?lIsForcedAvoidGrowth@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsForcedAvoidGrowth
EXTRN	?IsForcedAvoidGrowth@CvCityCitizens@@QAE_NXZ:PROC ; CvCityCitizens::IsForcedAvoidGrowth
; Function compile flags: /Ogtpy
;	COMDAT ?lIsForcedAvoidGrowth@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsForcedAvoidGrowth@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsForcedAvoidGrowth, COMDAT

; 3504 : {

	push	ebx
	push	ebp
	push	esi

; 3505 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsForcedA
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsForcedA
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsForcedA
	xor	bl, bl
$LN5@lIsForcedA:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsForcedA
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsForcedA:

; 3506 : 	const int iResult = pkCity->GetCityCitizens()->IsForcedAvoidGrowth();

	mov	ecx, edi
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?IsForcedAvoidGrowth@CvCityCitizens@@QAE_NXZ ; CvCityCitizens::IsForcedAvoidGrowth
	movzx	eax, al

; 3507 : 
; 3508 : 	lua_pushboolean(L, iResult);

	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3509 : 
; 3510 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3511 : }

	ret	0
?lIsForcedAvoidGrowth@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsForcedAvoidGrowth
_TEXT	ENDS
PUBLIC	?lGetUnitCombatFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitCombatFreeExperience
EXTRN	?getUnitCombatFreeExperience@CvCity@@QBEHW4UnitCombatTypes@@@Z:PROC ; CvCity::getUnitCombatFreeExperience
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnitCombatFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitCombatFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetUnitCombatFreeExperience, COMDAT

; 3519 : 	return BasicLuaMethod(L, &CvCity::getUnitCombatFreeExperience);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getUnitCombatFreeExperience@CvCity@@QBEHW4UnitCombatTypes@@@Z ; CvCity::getUnitCombatFreeExperience
	push	eax
	call	??$BasicLuaMethod@HW4UnitCombatTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4UnitCombatTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum UnitCombatTypes>
	add	esp, 8

; 3520 : }

	ret	0
?lGetUnitCombatFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetUnitCombatFreeExperience
_TEXT	ENDS
PUBLIC	?lGetFreePromotionCount@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFreePromotionCount
EXTRN	?getFreePromotionCount@CvCity@@QBEHW4PromotionTypes@@@Z:PROC ; CvCity::getFreePromotionCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFreePromotionCount@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFreePromotionCount@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetFreePromotionCount, COMDAT

; 3525 : 	return BasicLuaMethod(L, &CvCity::getFreePromotionCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getFreePromotionCount@CvCity@@QBEHW4PromotionTypes@@@Z ; CvCity::getFreePromotionCount
	push	eax
	call	??$BasicLuaMethod@HW4PromotionTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4PromotionTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum PromotionTypes>
	add	esp, 8

; 3526 : }

	ret	0
?lGetFreePromotionCount@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetFreePromotionCount
_TEXT	ENDS
PUBLIC	?lIsFreePromotion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsFreePromotion
EXTRN	?isFreePromotion@CvCity@@QBE_NW4PromotionTypes@@@Z:PROC ; CvCity::isFreePromotion
; Function compile flags: /Ogtpy
;	COMDAT ?lIsFreePromotion@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsFreePromotion@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsFreePromotion, COMDAT

; 3531 : 	return BasicLuaMethod(L, &CvCity::isFreePromotion);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isFreePromotion@CvCity@@QBE_NW4PromotionTypes@@@Z ; CvCity::isFreePromotion
	push	eax
	call	??$BasicLuaMethod@_NW4PromotionTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NW4PromotionTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,enum PromotionTypes>
	add	esp, 8

; 3532 : }

	ret	0
?lIsFreePromotion@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsFreePromotion
_TEXT	ENDS
PUBLIC	?lGetSpecialistFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistFreeExperience
EXTRN	?getSpecialistFreeExperience@CvCity@@QBEHXZ:PROC ; CvCity::getSpecialistFreeExperience
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSpecialistFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSpecialistFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSpecialistFreeExperience, COMDAT

; 3536 : {

	push	ebx
	push	ebp
	push	esi

; 3537 : #ifdef DEL_RANGED_COUNTERATTACKS
; 3538 : 	return BasicLuaMethod(L, &CvCity::getSpecialistFreeExperience);
; 3539 : #else
; 3540 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetSpecia@6
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetSpecia@6
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetSpecia@6
	xor	bl, bl
$LN5@lGetSpecia@6:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetSpecia@6
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetSpecia@6:

; 3541 : 	const int iResult = pkCity->getSpecialistFreeExperience();

	mov	ecx, edi
	call	?getSpecialistFreeExperience@CvCity@@QBEHXZ ; CvCity::getSpecialistFreeExperience

; 3542 : 
; 3543 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3544 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3545 : #endif
; 3546 : }

	ret	0
?lGetSpecialistFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSpecialistFreeExperience
_TEXT	ENDS
PUBLIC	?lUpdateStrengthValue@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lUpdateStrengthValue
EXTRN	?updateStrengthValue@CvCity@@QAEXXZ:PROC	; CvCity::updateStrengthValue
; Function compile flags: /Ogtpy
;	COMDAT ?lUpdateStrengthValue@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lUpdateStrengthValue@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lUpdateStrengthValue, COMDAT

; 3550 : {

	push	ebx
	push	ebp
	push	esi

; 3551 : #ifdef DEL_RANGED_COUNTERATTACKS
; 3552 : 	return BasicLuaMethod(L, &CvCity::updateStrengthValue);
; 3553 : #else
; 3554 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lUpdateStr
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lUpdateStr
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lUpdateStr
	xor	bl, bl
$LN5@lUpdateStr:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lUpdateStr
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lUpdateStr:

; 3555 : 	pkCity->updateStrengthValue();

	mov	ecx, edi
	call	?updateStrengthValue@CvCity@@QAEXXZ	; CvCity::updateStrengthValue
	pop	edi
	pop	esi
	pop	ebp

; 3556 : 
; 3557 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3558 : #endif
; 3559 : }

	ret	0
?lUpdateStrengthValue@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lUpdateStrengthValue
_TEXT	ENDS
PUBLIC	?lGetStrengthValue@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetStrengthValue
EXTRN	?getStrengthValue@CvCity@@QBEH_N@Z:PROC		; CvCity::getStrengthValue
; Function compile flags: /Ogtpy
;	COMDAT ?lGetStrengthValue@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetStrengthValue@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetStrengthValue, COMDAT

; 3563 : {

	push	ebx
	push	ebp
	push	esi

; 3564 : #ifdef DEL_RANGED_COUNTERATTACKS
; 3565 : 	return BasicLuaMethod(L, &CvCity::getStrengthValue);
; 3566 : #else
; 3567 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetStreng
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetStreng
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetStreng
	xor	bl, bl
$LN5@lGetStreng:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetStreng
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetStreng:

; 3568 : 	const int iResult = pkCity->getStrengthValue();

	push	0
	mov	ecx, edi
	call	?getStrengthValue@CvCity@@QBEH_N@Z	; CvCity::getStrengthValue

; 3569 : 
; 3570 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3571 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3572 : #endif
; 3573 : }

	ret	0
?lGetStrengthValue@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetStrengthValue
_TEXT	ENDS
PUBLIC	?lGetDamage@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lGetDamage
EXTRN	?getDamage@CvCity@@QBEHXZ:PROC			; CvCity::getDamage
; Function compile flags: /Ogtpy
;	COMDAT ?lGetDamage@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetDamage@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lGetDamage, COMDAT

; 3577 : {

	push	ebx
	push	ebp
	push	esi

; 3578 : #ifdef DEL_RANGED_COUNTERATTACKS
; 3579 : 	return BasicLuaMethod(L, &CvCity::getDamage);
; 3580 : #else
; 3581 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetDamage
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetDamage
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetDamage
	xor	bl, bl
$LN5@lGetDamage:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetDamage
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetDamage:

; 3582 : 	const int iResult = pkCity->getDamage();

	mov	ecx, edi
	call	?getDamage@CvCity@@QBEHXZ		; CvCity::getDamage

; 3583 : 
; 3584 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3585 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3586 : #endif
; 3587 : }

	ret	0
?lGetDamage@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lGetDamage
_TEXT	ENDS
PUBLIC	?lSetDamage@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lSetDamage
EXTRN	?setDamage@CvCity@@QAEXH_N@Z:PROC		; CvCity::setDamage
; Function compile flags: /Ogtpy
;	COMDAT ?lSetDamage@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetDamage@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lSetDamage, COMDAT

; 3592 : 	return BasicLuaMethod(L, &CvCity::setDamage);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setDamage@CvCity@@QAEXH_N@Z	; CvCity::setDamage
	push	eax
	call	??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH_N@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,bool>
	add	esp, 8

; 3593 : }

	ret	0
?lSetDamage@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lSetDamage
_TEXT	ENDS
PUBLIC	?lChangeDamage@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lChangeDamage
EXTRN	?changeDamage@CvCity@@QAEXH@Z:PROC		; CvCity::changeDamage
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeDamage@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeDamage@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lChangeDamage, COMDAT

; 3598 : 	return BasicLuaMethod(L, &CvCity::changeDamage);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeDamage@CvCity@@QAEXH@Z	; CvCity::changeDamage
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 3599 : }

	ret	0
?lChangeDamage@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lChangeDamage
_TEXT	ENDS
PUBLIC	?lGetMaxHitPoints@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetMaxHitPoints
EXTRN	?GetMaxHitPoints@CvCity@@QBEHXZ:PROC		; CvCity::GetMaxHitPoints
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMaxHitPoints@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMaxHitPoints@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetMaxHitPoints, COMDAT

; 3603 : {

	push	ebx
	push	ebp
	push	esi

; 3604 : #ifdef DEL_RANGED_COUNTERATTACKS
; 3605 : 	return BasicLuaMethod(L, &CvCity::GetMaxHitPoints);
; 3606 : #else
; 3607 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMaxHit
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMaxHit
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMaxHit
	xor	bl, bl
$LN5@lGetMaxHit:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMaxHit
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMaxHit:

; 3608 : 	const int iResult = pkCity->GetMaxHitPoints();

	mov	ecx, edi
	call	?GetMaxHitPoints@CvCity@@QBEHXZ		; CvCity::GetMaxHitPoints

; 3609 : 
; 3610 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3611 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3612 : #endif
; 3613 : }

	ret	0
?lGetMaxHitPoints@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetMaxHitPoints
_TEXT	ENDS
PUBLIC	?lCanRangeStrike@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lCanRangeStrike
EXTRN	?canRangeStrike@CvCity@@QBE_NXZ:PROC		; CvCity::canRangeStrike
; Function compile flags: /Ogtpy
;	COMDAT ?lCanRangeStrike@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanRangeStrike@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanRangeStrike, COMDAT

; 3618 : 	return BasicLuaMethod(L, &CvCity::canRangeStrike);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?canRangeStrike@CvCity@@QBE_NXZ	; CvCity::canRangeStrike
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 3619 : }

	ret	0
?lCanRangeStrike@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanRangeStrike
_TEXT	ENDS
PUBLIC	?lCanRangeStrikeNow@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanRangeStrikeNow
EXTRN	?CanRangeStrikeNow@CvCity@@QBE_NXZ:PROC		; CvCity::CanRangeStrikeNow
; Function compile flags: /Ogtpy
;	COMDAT ?lCanRangeStrikeNow@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanRangeStrikeNow@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanRangeStrikeNow, COMDAT

; 3623 : 	return BasicLuaMethod(L, &CvCity::CanRangeStrikeNow);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?CanRangeStrikeNow@CvCity@@QBE_NXZ ; CvCity::CanRangeStrikeNow
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 3624 : }

	ret	0
?lCanRangeStrikeNow@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanRangeStrikeNow
_TEXT	ENDS
PUBLIC	?lCanRangeStrikeAt@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanRangeStrikeAt
EXTRN	?canRangeStrikeAt@CvCity@@QBE_NHH@Z:PROC	; CvCity::canRangeStrikeAt
; Function compile flags: /Ogtpy
;	COMDAT ?lCanRangeStrikeAt@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanRangeStrikeAt@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanRangeStrikeAt, COMDAT

; 3629 : 	return BasicLuaMethod(L, &CvCity::canRangeStrikeAt);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?canRangeStrikeAt@CvCity@@QBE_NHH@Z ; CvCity::canRangeStrikeAt
	push	eax
	call	??$BasicLuaMethod@_NHH@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NHH@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool,int,int>
	add	esp, 8

; 3630 : }

	ret	0
?lCanRangeStrikeAt@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanRangeStrikeAt
_TEXT	ENDS
PUBLIC	?lHasPerformedRangedStrikeThisTurn@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lHasPerformedRangedStrikeThisTurn
EXTRN	?isMadeAttack@CvCity@@QBE_NXZ:PROC		; CvCity::isMadeAttack
; Function compile flags: /Ogtpy
;	COMDAT ?lHasPerformedRangedStrikeThisTurn@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasPerformedRangedStrikeThisTurn@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lHasPerformedRangedStrikeThisTurn, COMDAT

; 3634 : 	return BasicLuaMethod(L, &CvCity::isMadeAttack);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isMadeAttack@CvCity@@QBE_NXZ	; CvCity::isMadeAttack
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<bool>
	add	esp, 8

; 3635 : }

	ret	0
?lHasPerformedRangedStrikeThisTurn@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lHasPerformedRangedStrikeThisTurn
_TEXT	ENDS
PUBLIC	?lRangeCombatUnitDefense@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lRangeCombatUnitDefense
EXTRN	?rangeCombatUnitDefense@CvCity@@QBEHPBVCvUnit@@@Z:PROC ; CvCity::rangeCombatUnitDefense
; Function compile flags: /Ogtpy
;	COMDAT ?lRangeCombatUnitDefense@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$232717 = -4					; size = 4
_L$ = 8							; size = 4
?lRangeCombatUnitDefense@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lRangeCombatUnitDefense, COMDAT

; 3638 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 3639 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$232717[esp+32], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lRangeComb
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lRangeComb
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$232717[esp+20], eax
	test	eax, eax
	je	SHORT $LN5@lRangeComb
	xor	bl, bl
$LN5@lRangeComb:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lRangeComb
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lRangeComb:

; 3640 : 	CvUnit* pkDefender = CvLuaUnit::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lRangeComb
	push	OFFSET $SG223886
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lRangeComb
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN16@lRangeComb
	xor	bl, bl
$LN16@lRangeComb:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lRangeComb
	push	esi
	call	?HandleMissingInstance@CvLuaUnit@@SAXPAUlua_State@@@Z ; CvLuaUnit::HandleMissingInstance
	add	esp, 4
$LN15@lRangeComb:

; 3641 : 
; 3642 : 	const int iDefenseStr = pkCity->rangeCombatUnitDefense(pkDefender);

	mov	ecx, DWORD PTR _pkInstance$232717[esp+20]
	push	edi
	call	?rangeCombatUnitDefense@CvCity@@QBEHPBVCvUnit@@@Z ; CvCity::rangeCombatUnitDefense

; 3643 : 	lua_pushinteger(L, iDefenseStr);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3644 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3645 : }

	pop	ecx
	ret	0
?lRangeCombatUnitDefense@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lRangeCombatUnitDefense
_TEXT	ENDS
PUBLIC	?lRangeCombatDamage@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lRangeCombatDamage
EXTRN	?rangeCombatDamage@CvCity@@QBEHPBVCvUnit@@PAV1@_N@Z:PROC ; CvCity::rangeCombatDamage
; Function compile flags: /Ogtpy
;	COMDAT ?lRangeCombatDamage@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bIncludeRand$ = -4					; size = 1
_L$ = 8							; size = 4
?lRangeCombatDamage@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lRangeCombatDamage, COMDAT

; 3648 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 3649 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lRangeComb@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lRangeComb@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN5@lRangeComb@2
	xor	bl, bl
$LN5@lRangeComb@2:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lRangeComb@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lRangeComb@2:

; 3650 : 	CvUnit* pkDefendingUnit = CvLuaUnit::GetInstance(L, 2, false);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	edi, eax
	xor	ebx, ebx
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lRangeComb@2
	push	OFFSET $SG223886
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lRangeComb@2
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	ebx, eax
$LN16@lRangeComb@2:
	push	edi
	push	esi
	call	_lua_settop

; 3651 : 	CvCity* pkDefendingCity = GetInstance(L, 3, false);

	push	0
	push	3
	push	esi
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance

; 3652 : 	bool bIncludeRand = luaL_optbool(L, 4, false);

	push	0
	push	4
	push	esi
	mov	edi, eax
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	add	esp, 32					; 00000020H
	mov	BYTE PTR _bIncludeRand$[esp+20], al

; 3653 : 
; 3654 : 	const int iRangedDamage = pkCity->rangeCombatDamage(pkDefendingUnit, pkDefendingCity, bIncludeRand);

	mov	eax, DWORD PTR _bIncludeRand$[esp+20]
	push	eax
	push	edi
	push	ebx
	mov	ecx, ebp
	call	?rangeCombatDamage@CvCity@@QBEHPBVCvUnit@@PAV1@_N@Z ; CvCity::rangeCombatDamage

; 3655 : 	lua_pushinteger(L, iRangedDamage);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3656 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3657 : }

	pop	ecx
	ret	0
?lRangeCombatDamage@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lRangeCombatDamage
_TEXT	ENDS
PUBLIC	?lGetAirStrikeDefenseDamage@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetAirStrikeDefenseDamage
EXTRN	?GetAirStrikeDefenseDamage@CvCity@@QBEHPBVCvUnit@@_N@Z:PROC ; CvCity::GetAirStrikeDefenseDamage
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAirStrikeDefenseDamage@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bIncludeRand$ = -4					; size = 1
_L$ = 8							; size = 4
?lGetAirStrikeDefenseDamage@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetAirStrikeDefenseDamage, COMDAT

; 3660 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 3661 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetAirStr
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetAirStr
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN5@lGetAirStr
	xor	bl, bl
$LN5@lGetAirStr:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetAirStr
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetAirStr:

; 3662 : 	CvUnit* pkAttackingUnit = CvLuaUnit::GetInstance(L, 2, false);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebx, eax
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lGetAirStr
	push	OFFSET $SG223886
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lGetAirStr
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	edi, eax
$LN16@lGetAirStr:
	push	ebx
	push	esi
	call	_lua_settop

; 3663 : 	bool bIncludeRand = luaL_optbool(L, 3, false);

	push	0
	push	3
	push	esi
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	mov	BYTE PTR _bIncludeRand$[esp+40], al

; 3664 : 
; 3665 : 	const int iRangedDamage = pkCity->GetAirStrikeDefenseDamage(pkAttackingUnit, bIncludeRand);

	mov	eax, DWORD PTR _bIncludeRand$[esp+40]
	add	esp, 20					; 00000014H
	push	eax
	push	edi
	mov	ecx, ebp
	call	?GetAirStrikeDefenseDamage@CvCity@@QBEHPBVCvUnit@@_N@Z ; CvCity::GetAirStrikeDefenseDamage

; 3666 : 	lua_pushinteger(L, iRangedDamage);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3667 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3668 : }

	pop	ecx
	ret	0
?lGetAirStrikeDefenseDamage@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetAirStrikeDefenseDamage
_TEXT	ENDS
PUBLIC	?lIsWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lIsWorkingPlot
EXTRN	?IsWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z:PROC ; CvCityCitizens::IsWorkingPlot
; Function compile flags: /Ogtpy
;	COMDAT ?lIsWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$232828 = -4					; size = 4
_L$ = 8							; size = 4
?lIsWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lIsWorkingPlot, COMDAT

; 3672 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 3673 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$232828[esp+32], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsWorking
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsWorking
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$232828[esp+20], eax
	test	eax, eax
	je	SHORT $LN5@lIsWorking
	xor	bl, bl
$LN5@lIsWorking:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsWorking
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsWorking:

; 3674 : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lIsWorking
	push	OFFSET $SG223846
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lIsWorking
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN16@lIsWorking
	xor	bl, bl
$LN16@lIsWorking:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lIsWorking
	push	esi
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 4
$LN15@lIsWorking:

; 3675 : 	const bool bResult = pkCity->GetCityCitizens()->IsWorkingPlot(pkPlot);

	mov	ecx, DWORD PTR _pkInstance$232828[esp+20]
	push	edi
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?IsWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z ; CvCityCitizens::IsWorkingPlot

; 3676 : 
; 3677 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3678 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3679 : }

	pop	ecx
	ret	0
?lIsWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lIsWorkingPlot
_TEXT	ENDS
PUBLIC	?lAlterWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lAlterWorkingPlot
EXTRN	?DoAlterWorkingPlot@CvCityCitizens@@QAEXH@Z:PROC ; CvCityCitizens::DoAlterWorkingPlot
; Function compile flags: /Ogtpy
;	COMDAT ?lAlterWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAlterWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lAlterWorkingPlot, COMDAT

; 3683 : {

	push	ebx
	push	ebp
	push	esi

; 3684 : //	return BasicLuaMethod(L, &CvCity::GetCityCitizens()->DoAlterWorkingPlot);
; 3685 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lAlterWork
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lAlterWork
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lAlterWork
	xor	bl, bl
$LN5@lAlterWork:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lAlterWork
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lAlterWork:

; 3686 : 	const int iIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 3687 : 	pkCity->GetCityCitizens()->DoAlterWorkingPlot(iIndex);

	push	eax
	mov	ecx, edi
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?DoAlterWorkingPlot@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::DoAlterWorkingPlot
	pop	edi
	pop	esi
	pop	ebp

; 3688 : 
; 3689 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3690 : }

	ret	0
?lAlterWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lAlterWorkingPlot
_TEXT	ENDS
PUBLIC	?lIsForcedWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsForcedWorkingPlot
EXTRN	?IsForcedWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z:PROC ; CvCityCitizens::IsForcedWorkingPlot
; Function compile flags: /Ogtpy
;	COMDAT ?lIsForcedWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$232891 = -4					; size = 4
_L$ = 8							; size = 4
?lIsForcedWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsForcedWorkingPlot, COMDAT

; 3694 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 3695 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$232891[esp+32], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsForcedW
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsForcedW
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$232891[esp+20], eax
	test	eax, eax
	je	SHORT $LN5@lIsForcedW
	xor	bl, bl
$LN5@lIsForcedW:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsForcedW
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsForcedW:

; 3696 : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lIsForcedW
	push	OFFSET $SG223846
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lIsForcedW
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN16@lIsForcedW
	xor	bl, bl
$LN16@lIsForcedW:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lIsForcedW
	push	esi
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 4
$LN15@lIsForcedW:

; 3697 : 	const bool bResult = pkCity->GetCityCitizens()->IsForcedWorkingPlot(pkPlot);

	mov	ecx, DWORD PTR _pkInstance$232891[esp+20]
	push	edi
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?IsForcedWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z ; CvCityCitizens::IsForcedWorkingPlot

; 3698 : 
; 3699 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3700 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3701 : }

	pop	ecx
	ret	0
?lIsForcedWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsForcedWorkingPlot
_TEXT	ENDS
PUBLIC	?lGetNumForcedWorkingPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumForcedWorkingPlots
EXTRN	?GetNumForcedWorkingPlots@CvCityCitizens@@QBEHXZ:PROC ; CvCityCitizens::GetNumForcedWorkingPlots
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumForcedWorkingPlots@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumForcedWorkingPlots@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumForcedWorkingPlots, COMDAT

; 3705 : {

	push	ebx
	push	ebp
	push	esi

; 3706 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumFor
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumFor
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumFor
	xor	bl, bl
$LN5@lGetNumFor:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumFor
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumFor:

; 3707 : 	const int iResult = pkCity->GetCityCitizens()->GetNumForcedWorkingPlots();

	mov	ecx, edi
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?GetNumForcedWorkingPlots@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumForcedWorkingPlots

; 3708 : 
; 3709 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3710 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3711 : }

	ret	0
?lGetNumForcedWorkingPlots@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumForcedWorkingPlots
_TEXT	ENDS
PUBLIC	?lGetNumRealBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumRealBuilding
EXTRN	?GetNumRealBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetNumRealBuilding
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumRealBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumRealBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumRealBuilding, COMDAT

; 3715 : {

	push	ebx
	push	ebp
	push	esi

; 3716 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetNumRea
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetNumRea
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetNumRea
	xor	bl, bl
$LN7@lGetNumRea:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetNumRea
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetNumRea:

; 3717 : 	const BuildingTypes iIndex = toValue<BuildingTypes>(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 3718 : 	if(iIndex != NO_BUILDING)

	cmp	eax, -1
	je	SHORT $LN2@lGetNumRea

; 3719 : 	{
; 3720 : 		const int iResult = pkCity->GetCityBuildings()->GetNumRealBuilding(iIndex);

	push	eax
	mov	ecx, edi
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumRealBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumRealBuilding

; 3721 : 		lua_pushinteger(L, iResult);

	push	eax

; 3722 : 	}
; 3723 : 	else
; 3724 : 	{
; 3725 : 		lua_pushinteger(L, 0);

	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3726 : 	}
; 3727 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3728 : }

	ret	0
$LN2@lGetNumRea:

; 3722 : 	}
; 3723 : 	else
; 3724 : 	{
; 3725 : 		lua_pushinteger(L, 0);

	push	0
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3726 : 	}
; 3727 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3728 : }

	ret	0
?lGetNumRealBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumRealBuilding
_TEXT	ENDS
PUBLIC	?lSetNumRealBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetNumRealBuilding
EXTRN	?SetNumRealBuilding@CvCityBuildings@@QAEXW4BuildingTypes@@H@Z:PROC ; CvCityBuildings::SetNumRealBuilding
; Function compile flags: /Ogtpy
;	COMDAT ?lSetNumRealBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetNumRealBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetNumRealBuilding, COMDAT

; 3732 : {

	push	ebx
	push	ebp
	push	esi

; 3733 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lSetNumRea
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lSetNumRea
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lSetNumRea
	xor	bl, bl
$LN6@lSetNumRea:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lSetNumRea
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lSetNumRea:

; 3734 : 	const BuildingTypes iIndex = toValue<BuildingTypes>(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	mov	ebx, eax
	add	esp, 8

; 3735 : 	if(iIndex != NO_BUILDING)

	cmp	ebx, -1
	je	SHORT $LN17@lSetNumRea

; 3736 : 	{
; 3737 : 		const int iNewValue = lua_tointeger(L, 3);

	push	3
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 3738 : 		pkCity->GetCityBuildings()->SetNumRealBuilding(iIndex, iNewValue);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?SetNumRealBuilding@CvCityBuildings@@QAEXW4BuildingTypes@@H@Z ; CvCityBuildings::SetNumRealBuilding
$LN17@lSetNumRea:
	pop	edi
	pop	esi
	pop	ebp

; 3739 : 	}
; 3740 : 
; 3741 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3742 : }

	ret	0
?lSetNumRealBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetNumRealBuilding
_TEXT	ENDS
PUBLIC	?lGetNumFreeBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumFreeBuilding
EXTRN	?GetNumFreeBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetNumFreeBuilding
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumFreeBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumFreeBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumFreeBuilding, COMDAT

; 3746 : {

	push	ebx
	push	ebp
	push	esi

; 3747 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetNumFre
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetNumFre
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetNumFre
	xor	bl, bl
$LN7@lGetNumFre:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetNumFre
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetNumFre:

; 3748 : 	const BuildingTypes iIndex = toValue<BuildingTypes>(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 3749 : 	if(iIndex != NO_BUILDING)

	cmp	eax, -1
	je	SHORT $LN2@lGetNumFre

; 3750 : 	{
; 3751 : 		const int iResult = pkCity->GetCityBuildings()->GetNumFreeBuilding(iIndex);

	push	eax
	mov	ecx, edi
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumFreeBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumFreeBuilding

; 3752 : 		lua_pushinteger(L, iResult);

	push	eax

; 3753 : 	}
; 3754 : 	else
; 3755 : 	{
; 3756 : 		lua_pushinteger(L, 0);

	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3757 : 	}
; 3758 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3759 : }

	ret	0
$LN2@lGetNumFre:

; 3753 : 	}
; 3754 : 	else
; 3755 : 	{
; 3756 : 		lua_pushinteger(L, 0);

	push	0
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3757 : 	}
; 3758 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3759 : }

	ret	0
?lGetNumFreeBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumFreeBuilding
_TEXT	ENDS
PUBLIC	?lIsBuildingSellable@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsBuildingSellable
EXTRN	?IsBuildingSellable@CvCityBuildings@@QBE_NABVCvBuildingEntry@@@Z:PROC ; CvCityBuildings::IsBuildingSellable
; Function compile flags: /Ogtpy
;	COMDAT ?lIsBuildingSellable@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsBuildingSellable@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsBuildingSellable, COMDAT

; 3763 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 3764 : 	bool bResult = false;
; 3765 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	mov	BYTE PTR _bResult$[esp+24], 0
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lIsBuildin@2
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lIsBuildin@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lIsBuildin@2
	xor	bl, bl
$LN7@lIsBuildin@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lIsBuildin@2
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lIsBuildin@2:

; 3766 : 	const BuildingTypes iIndex = toValue<BuildingTypes>(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 3767 : 	if(iIndex != NO_BUILDING)

	cmp	eax, -1
	je	SHORT $LN18@lIsBuildin@2

; 3768 : 	{
; 3769 : 		CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(iIndex);

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo

; 3770 : 		if(pkBuildingInfo)

	test	eax, eax
	je	SHORT $LN18@lIsBuildin@2

; 3771 : 		{
; 3772 : 			bResult = pkCity->GetCityBuildings()->IsBuildingSellable(*pkBuildingInfo);

	push	eax
	mov	ecx, edi
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?IsBuildingSellable@CvCityBuildings@@QBE_NABVCvBuildingEntry@@@Z ; CvCityBuildings::IsBuildingSellable
	jmp	SHORT $LN1@lIsBuildin@2
$LN18@lIsBuildin@2:
	mov	al, BYTE PTR _bResult$[esp+20]
$LN1@lIsBuildin@2:

; 3773 : 		}
; 3774 : 	}
; 3775 : 
; 3776 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3777 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3778 : }

	pop	ecx
	ret	0
?lIsBuildingSellable@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsBuildingSellable
_TEXT	ENDS
PUBLIC	?lGetSellBuildingRefund@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSellBuildingRefund
EXTRN	?GetSellBuildingRefund@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetSellBuildingRefund
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSellBuildingRefund@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSellBuildingRefund@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSellBuildingRefund, COMDAT

; 3783 : {

	push	ebx
	push	ebp
	push	esi

; 3784 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetSellBu
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetSellBu
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetSellBu
	xor	bl, bl
$LN7@lGetSellBu:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetSellBu
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetSellBu:

; 3785 : 	const BuildingTypes iIndex = toValue<BuildingTypes>(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 3786 : 	if(iIndex != NO_BUILDING)

	cmp	eax, -1
	je	SHORT $LN2@lGetSellBu

; 3787 : 	{
; 3788 : 		const int iResult = pkCity->GetCityBuildings()->GetSellBuildingRefund(iIndex);

	push	eax
	mov	ecx, edi
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetSellBuildingRefund@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetSellBuildingRefund

; 3789 : 		lua_pushinteger(L, iResult);

	push	eax

; 3790 : 	}
; 3791 : 	else
; 3792 : 	{
; 3793 : 		lua_pushinteger(L, 0);

	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3794 : 	}
; 3795 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3796 : }

	ret	0
$LN2@lGetSellBu:

; 3790 : 	}
; 3791 : 	else
; 3792 : 	{
; 3793 : 		lua_pushinteger(L, 0);

	push	0
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3794 : 	}
; 3795 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3796 : }

	ret	0
?lGetSellBuildingRefund@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSellBuildingRefund
_TEXT	ENDS
PUBLIC	?lGetTotalBaseBuildingMaintenance@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetTotalBaseBuildingMaintenance
EXTRN	?GetTotalBaseBuildingMaintenance@CvCityBuildings@@QBEHXZ:PROC ; CvCityBuildings::GetTotalBaseBuildingMaintenance
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTotalBaseBuildingMaintenance@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalBaseBuildingMaintenance@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetTotalBaseBuildingMaintenance, COMDAT

; 3801 : {

	push	ebx
	push	ebp
	push	esi

; 3802 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetTotalB
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetTotalB
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetTotalB
	xor	bl, bl
$LN5@lGetTotalB:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetTotalB
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetTotalB:

; 3803 : 	const int iResult = pkCity->GetCityBuildings()->GetTotalBaseBuildingMaintenance();

	mov	ecx, edi
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetTotalBaseBuildingMaintenance@CvCityBuildings@@QBEHXZ ; CvCityBuildings::GetTotalBaseBuildingMaintenance

; 3804 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3805 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3806 : }

	ret	0
?lGetTotalBaseBuildingMaintenance@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetTotalBaseBuildingMaintenance
_TEXT	ENDS
PUBLIC	?lGetBuildingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingGreatWork
EXTRN	?GetBuildingGreatWork@CvCityBuildings@@QBEHW4BuildingClassTypes@@H@Z:PROC ; CvCityBuildings::GetBuildingGreatWork
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingGreatWork, COMDAT

; 3810 : {

	push	ebx
	push	ebp
	push	esi

; 3811 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetBuildi@10
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetBuildi@10
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetBuildi@10
	xor	bl, bl
$LN5@lGetBuildi@10:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetBuildi@10
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetBuildi@10:

; 3812 : 	const BuildingClassTypes iIndex = toValue<BuildingClassTypes>(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 3813 : 	const int iSlot = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 3814 : 	const int iResult = pkCity->GetCityBuildings()->GetBuildingGreatWork(iIndex, iSlot);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetBuildingGreatWork@CvCityBuildings@@QBEHW4BuildingClassTypes@@H@Z ; CvCityBuildings::GetBuildingGreatWork

; 3815 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3816 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3817 : }

	ret	0
?lGetBuildingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingGreatWork
_TEXT	ENDS
PUBLIC	?lSetBuildingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetBuildingGreatWork
EXTRN	?SetBuildingGreatWork@CvCityBuildings@@QAEXW4BuildingClassTypes@@HH@Z:PROC ; CvCityBuildings::SetBuildingGreatWork
; Function compile flags: /Ogtpy
;	COMDAT ?lSetBuildingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetBuildingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetBuildingGreatWork, COMDAT

; 3821 : {

	push	ebx
	push	ebp
	push	esi

; 3822 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lSetBuildi@3
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lSetBuildi@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN6@lSetBuildi@3
	xor	bl, bl
$LN6@lSetBuildi@3:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lSetBuildi@3
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lSetBuildi@3:

; 3823 : 	const BuildingClassTypes iIndex = toValue<BuildingClassTypes>(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 3824 : 	const int iSlot = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	edi, eax
	call	_lua_tointeger

; 3825 : 	const int iGreatWorkIndex = lua_tointeger(L, 4);

	push	4
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 24					; 00000018H

; 3826 : #ifdef AUI_WARNING_FIXES
; 3827 : 	if (iIndex != NO_BUILDINGCLASS)
; 3828 : #else
; 3829 : 	if(iIndex != NO_BUILDING)

	cmp	edi, -1
	je	SHORT $LN17@lSetBuildi@3

; 3830 : #endif
; 3831 : 	{
; 3832 : 		pkCity->GetCityBuildings()->SetBuildingGreatWork(iIndex, iSlot, iGreatWorkIndex);

	push	eax
	push	ebx
	push	edi
	mov	ecx, ebp
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?SetBuildingGreatWork@CvCityBuildings@@QAEXW4BuildingClassTypes@@HH@Z ; CvCityBuildings::SetBuildingGreatWork
$LN17@lSetBuildi@3:
	pop	edi
	pop	esi
	pop	ebp

; 3833 : 	}
; 3834 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3835 : }

	ret	0
?lSetBuildingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetBuildingGreatWork
_TEXT	ENDS
PUBLIC	?lIsHoldingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsHoldingGreatWork
EXTRN	?IsHoldingGreatWork@CvCityBuildings@@QBE_NW4BuildingClassTypes@@@Z:PROC ; CvCityBuildings::IsHoldingGreatWork
; Function compile flags: /Ogtpy
;	COMDAT ?lIsHoldingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsHoldingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lIsHoldingGreatWork, COMDAT

; 3839 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 3840 : 	bool bResult = false;
; 3841 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	mov	BYTE PTR _bResult$[esp+24], 0
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lIsHolding
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lIsHolding
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN7@lIsHolding
	xor	bl, bl
$LN7@lIsHolding:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lIsHolding
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lIsHolding:

; 3842 : 	const BuildingClassTypes iIndex = toValue<BuildingClassTypes>(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	mov	edi, eax
	add	esp, 8

; 3843 : 	if(iIndex != NO_BUILDINGCLASS)

	cmp	edi, -1
	je	SHORT $LN18@lIsHolding

; 3844 : 	{
; 3845 : 		CvBuildingClassInfo* pkBuildingClassInfo = GC.getBuildingClassInfo(iIndex);

	push	edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingClassInfo@CvGlobals@@QAEPAVCvBuildingClassInfo@@W4BuildingClassTypes@@@Z ; CvGlobals::getBuildingClassInfo

; 3846 : 		if(pkBuildingClassInfo)

	test	eax, eax
	je	SHORT $LN18@lIsHolding

; 3847 : 		{
; 3848 : 			bResult = pkCity->GetCityBuildings()->IsHoldingGreatWork(iIndex);

	push	edi
	mov	ecx, ebp
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?IsHoldingGreatWork@CvCityBuildings@@QBE_NW4BuildingClassTypes@@@Z ; CvCityBuildings::IsHoldingGreatWork
	jmp	SHORT $LN1@lIsHolding
$LN18@lIsHolding:
	mov	al, BYTE PTR _bResult$[esp+20]
$LN1@lIsHolding:

; 3849 : 		}
; 3850 : 	}
; 3851 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3852 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3853 : }

	pop	ecx
	ret	0
?lIsHoldingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lIsHoldingGreatWork
_TEXT	ENDS
PUBLIC	?lGetNumGreatWorksInBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumGreatWorksInBuilding
EXTRN	?GetNumGreatWorksInBuilding@CvCityBuildings@@QBEHW4BuildingClassTypes@@@Z:PROC ; CvCityBuildings::GetNumGreatWorksInBuilding
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumGreatWorksInBuilding@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumGreatWorksInBuilding@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetNumGreatWorksInBuilding, COMDAT

; 3857 : {

	push	ebx
	push	ebp
	push	esi

; 3858 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumGre@3
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumGre@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumGre@3
	xor	bl, bl
$LN5@lGetNumGre@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumGre@3
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumGre@3:

; 3859 : 	const BuildingClassTypes iIndex = toValue<BuildingClassTypes>(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 3860 : 	const int iResult = pkCity->GetCityBuildings()->GetNumGreatWorksInBuilding(iIndex);

	push	eax
	mov	ecx, edi
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumGreatWorksInBuilding@CvCityBuildings@@QBEHW4BuildingClassTypes@@@Z ; CvCityBuildings::GetNumGreatWorksInBuilding

; 3861 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3862 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3863 : }

	ret	0
?lGetNumGreatWorksInBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetNumGreatWorksInBuilding
_TEXT	ENDS
PUBLIC	?lPushOrder@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lPushOrder
EXTRN	?pushOrder@CvCity@@QAEXW4OrderTypes@@HH_N111@Z:PROC ; CvCity::pushOrder
; Function compile flags: /Ogtpy
;	COMDAT ?lPushOrder@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bForce$ = -20						; size = 1
_bAppend$ = -16						; size = 1
_bPop$ = -12						; size = 1
_bSave$ = -8						; size = 1
_iData2$ = -4						; size = 4
_L$ = 8							; size = 4
?lPushOrder@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lPushOrder, COMDAT

; 3873 : {

	sub	esp, 20					; 00000014H
	push	ebx
	push	ebp
	push	esi

; 3874 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+28]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lPushOrder
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lPushOrder
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lPushOrder
	xor	bl, bl
$LN5@lPushOrder:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lPushOrder
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lPushOrder:

; 3875 : 	const OrderTypes eOrder	= (OrderTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 3876 : 	const int iData1		= lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 3877 : 	const int iData2		= lua_tointeger(L, 4);

	push	4
	push	esi
	mov	ebp, eax
	call	_lua_tointeger

; 3878 : 	const bool bSave		= lua_tointeger(L, 5);

	push	5
	push	esi
	mov	DWORD PTR _iData2$[esp+68], eax
	call	_lua_tointeger
	test	eax, eax
	setne	al

; 3879 : 	const bool bPop			= lua_toboolean(L, 6);

	push	6
	push	esi
	mov	BYTE PTR _bSave$[esp+76], al
	call	_lua_toboolean
	test	eax, eax
	setne	cl

; 3880 : 	const bool bAppend		= lua_toboolean(L, 7);

	push	7
	push	esi
	mov	BYTE PTR _bPop$[esp+84], cl
	call	_lua_toboolean

; 3881 : 	const bool bForce		= luaL_optint(L, 8, 0);

	push	0
	test	eax, eax
	setne	dl
	push	8
	push	esi
	mov	BYTE PTR _bAppend$[esp+96], dl
	call	_luaL_optinteger

; 3882 : 	pkCity->pushOrder(eOrder, iData1, iData2, bSave, bPop, bAppend, bForce);

	mov	edx, DWORD PTR _bAppend$[esp+96]
	add	esp, 60					; 0000003cH
	test	eax, eax
	setne	al
	mov	BYTE PTR _bForce$[esp+36], al
	mov	ecx, DWORD PTR _bForce$[esp+36]
	mov	eax, DWORD PTR _bPop$[esp+36]
	push	ecx
	mov	ecx, DWORD PTR _bSave$[esp+40]
	push	edx
	mov	edx, DWORD PTR _iData2$[esp+44]
	push	eax
	push	ecx
	push	edx
	push	ebp
	push	ebx
	mov	ecx, edi
	call	?pushOrder@CvCity@@QAEXW4OrderTypes@@HH_N111@Z ; CvCity::pushOrder
	pop	edi
	pop	esi
	pop	ebp

; 3883 : 
; 3884 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3885 : }

	add	esp, 20					; 00000014H
	ret	0
?lPushOrder@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lPushOrder
_TEXT	ENDS
PUBLIC	?lPopOrder@CvLuaCity@@KAHPAUlua_State@@@Z	; CvLuaCity::lPopOrder
EXTRN	?popOrder@CvCity@@QAEXH_N0@Z:PROC		; CvCity::popOrder
; Function compile flags: /Ogtpy
;	COMDAT ?lPopOrder@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bChoose$ = -8						; size = 1
_bFinish$ = -4						; size = 1
_L$ = 8							; size = 4
?lPopOrder@CvLuaCity@@KAHPAUlua_State@@@Z PROC		; CvLuaCity::lPopOrder, COMDAT

; 3889 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 3890 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lPopOrder
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lPopOrder
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lPopOrder
	xor	bl, bl
$LN5@lPopOrder:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lPopOrder
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lPopOrder:

; 3891 : 	const int iNum = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 3892 : 	const bool bFinish = luaL_optint(L, 3, 0);

	push	0
	push	3
	push	esi
	mov	ebx, eax
	call	_luaL_optinteger

; 3893 : 	const bool bChoose = luaL_optint(L, 4, 0);

	push	0
	test	eax, eax
	setne	al
	push	4
	push	esi
	mov	BYTE PTR _bFinish$[esp+56], al
	call	_luaL_optinteger
	add	esp, 32					; 00000020H
	test	eax, eax

; 3894 : 	pkCity->popOrder(iNum, bFinish, bChoose);

	mov	eax, DWORD PTR _bFinish$[esp+24]
	setne	cl
	mov	BYTE PTR _bChoose$[esp+24], cl
	mov	edx, DWORD PTR _bChoose$[esp+24]
	push	edx
	push	eax
	push	ebx
	mov	ecx, edi
	call	?popOrder@CvCity@@QAEXH_N0@Z		; CvCity::popOrder
	pop	edi
	pop	esi
	pop	ebp

; 3895 : 
; 3896 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3897 : }

	add	esp, 8
	ret	0
?lPopOrder@CvLuaCity@@KAHPAUlua_State@@@Z ENDP		; CvLuaCity::lPopOrder
_TEXT	ENDS
PUBLIC	?lGetOrderQueueLength@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetOrderQueueLength
EXTRN	?getOrderQueueLength@CvCity@@QAEHXZ:PROC	; CvCity::getOrderQueueLength
; Function compile flags: /Ogtpy
;	COMDAT ?lGetOrderQueueLength@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetOrderQueueLength@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetOrderQueueLength, COMDAT

; 3902 : 	return BasicLuaMethod(L, &CvCity::getOrderQueueLength);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getOrderQueueLength@CvCity@@QAEHXZ ; CvCity::getOrderQueueLength
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int>
	add	esp, 8

; 3903 : }

	ret	0
?lGetOrderQueueLength@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetOrderQueueLength
_TEXT	ENDS
PUBLIC	?lGetOrderFromQueue@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetOrderFromQueue
EXTRN	?getOrderFromQueue@CvCity@@QAEPAUOrderData@@H@Z:PROC ; CvCity::getOrderFromQueue
; Function compile flags: /Ogtpy
;	COMDAT ?lGetOrderFromQueue@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetOrderFromQueue@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lGetOrderFromQueue, COMDAT

; 3908 : {

	push	ebx
	push	ebp
	push	esi

; 3909 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetOrderF
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetOrderF
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetOrderF
	xor	bl, bl
$LN7@lGetOrderF:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetOrderF
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetOrderF:

; 3910 : 	if(pkCity)

	test	edi, edi
	je	SHORT $LN1@lGetOrderF

; 3911 : 	{
; 3912 : 		const int iNum = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 3913 : 		OrderData* pkOrder = pkCity->getOrderFromQueue(iNum);

	push	eax
	mov	ecx, edi
	call	?getOrderFromQueue@CvCity@@QAEPAUOrderData@@H@Z ; CvCity::getOrderFromQueue
	mov	edi, eax

; 3914 : 		if(pkOrder)

	test	edi, edi
	je	SHORT $LN1@lGetOrderF

; 3915 : 		{
; 3916 : 			lua_pushinteger(L, pkOrder->eOrderType);

	mov	eax, DWORD PTR [edi]
	push	eax
	push	esi
	call	_lua_pushinteger

; 3917 : 			lua_pushinteger(L, pkOrder->iData1);

	mov	ecx, DWORD PTR [edi+4]
	push	ecx
	push	esi
	call	_lua_pushinteger

; 3918 : 			lua_pushinteger(L, pkOrder->iData1);

	mov	edx, DWORD PTR [edi+4]
	push	edx
	push	esi
	call	_lua_pushinteger

; 3919 : #ifdef AUI_WARNING_FIXES
; 3920 : 			lua_pushboolean(L, pkOrder->bSave ? 1 : 0);
; 3921 : 			lua_pushboolean(L, pkOrder->bRush ? 1 : 0);
; 3922 : #else
; 3923 : 			lua_pushboolean(L, pkOrder->bSave);

	movzx	eax, BYTE PTR [edi+12]
	push	eax
	push	esi
	call	_lua_pushboolean

; 3924 : 			lua_pushboolean(L, pkOrder->bRush);

	movzx	ecx, BYTE PTR [edi+13]
	push	ecx

; 3937 : 	lua_pushboolean(L, false);

	push	esi
	call	_lua_pushboolean
	add	esp, 40					; 00000028H
	pop	edi
	pop	esi
	pop	ebp

; 3938 : #endif
; 3939 : 	return 5;

	mov	eax, 5
	pop	ebx

; 3940 : }

	ret	0
$LN1@lGetOrderF:

; 3925 : #endif
; 3926 : 			return 5;
; 3927 : 		}
; 3928 : 	}
; 3929 : 	lua_pushinteger(L, -1);

	push	-1
	push	esi
	call	_lua_pushinteger

; 3930 : 	lua_pushinteger(L, 0);

	push	0
	push	esi
	call	_lua_pushinteger

; 3931 : 	lua_pushinteger(L, 0);

	push	0
	push	esi
	call	_lua_pushinteger

; 3932 : #ifdef AUI_WARNING_FIXES
; 3933 : 	lua_pushboolean(L, 0);
; 3934 : 	lua_pushboolean(L, 0);
; 3935 : #else
; 3936 : 	lua_pushboolean(L, false);

	push	0
	push	esi
	call	_lua_pushboolean

; 3937 : 	lua_pushboolean(L, false);

	push	0
	push	esi
	call	_lua_pushboolean
	add	esp, 40					; 00000028H
	pop	edi
	pop	esi
	pop	ebp

; 3938 : #endif
; 3939 : 	return 5;

	mov	eax, 5
	pop	ebx

; 3940 : }

	ret	0
?lGetOrderFromQueue@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lGetOrderFromQueue
_TEXT	ENDS
PUBLIC	?lGetBuildingYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingYieldChange
EXTRN	?GetBuildingYieldChange@CvCityBuildings@@QBEHW4BuildingClassTypes@@W4YieldTypes@@@Z:PROC ; CvCityBuildings::GetBuildingYieldChange
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuildingYieldChange, COMDAT

; 3944 : {

	push	ebx
	push	ebp
	push	esi

; 3945 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetBuildi@11
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetBuildi@11
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetBuildi@11
	xor	bl, bl
$LN5@lGetBuildi@11:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetBuildi@11
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetBuildi@11:

; 3946 : 	const int eBuildingClass = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 3947 : 	const int eYield = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 3948 : 	const int iResult = pkCity->GetCityBuildings()->GetBuildingYieldChange((BuildingClassTypes)eBuildingClass, (YieldTypes)eYield);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetBuildingYieldChange@CvCityBuildings@@QBEHW4BuildingClassTypes@@W4YieldTypes@@@Z ; CvCityBuildings::GetBuildingYieldChange

; 3949 : 
; 3950 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3951 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3952 : }

	ret	0
?lGetBuildingYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuildingYieldChange
_TEXT	ENDS
PUBLIC	?lSetBuildingYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetBuildingYieldChange
EXTRN	?SetBuildingYieldChange@CvCityBuildings@@QAEXW4BuildingClassTypes@@W4YieldTypes@@H@Z:PROC ; CvCityBuildings::SetBuildingYieldChange
; Function compile flags: /Ogtpy
;	COMDAT ?lSetBuildingYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetBuildingYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lSetBuildingYieldChange, COMDAT

; 3992 : {

	push	ebx
	push	ebp
	push	esi

; 3993 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lSetBuildi@4
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lSetBuildi@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lSetBuildi@4
	xor	bl, bl
$LN5@lSetBuildi@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lSetBuildi@4
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lSetBuildi@4:

; 3994 : 	const int eBuildingClass = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 3995 : 	const int eYield = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 3996 : 	const int iChange = lua_tointeger(L, 4);

	push	4
	push	esi
	mov	ebp, eax
	call	_lua_tointeger
	add	esp, 24					; 00000018H

; 3997 : 
; 3998 : 	pkCity->GetCityBuildings()->SetBuildingYieldChange((BuildingClassTypes)eBuildingClass, (YieldTypes)eYield, iChange);

	push	eax
	push	ebp
	push	ebx
	mov	ecx, edi
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?SetBuildingYieldChange@CvCityBuildings@@QAEXW4BuildingClassTypes@@W4YieldTypes@@H@Z ; CvCityBuildings::SetBuildingYieldChange
	pop	edi
	pop	esi
	pop	ebp

; 3999 : 
; 4000 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4001 : }

	ret	0
?lSetBuildingYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lSetBuildingYieldChange
_TEXT	ENDS
PUBLIC	?lCanPlaceUnitHere@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanPlaceUnitHere
; Function compile flags: /Ogtpy
;	COMDAT ?lCanPlaceUnitHere@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanPlaceUnitHere@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lCanPlaceUnitHere, COMDAT

; 4012 : {

	push	ebx
	push	ebp
	push	esi

; 4013 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanPlaceU
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanPlaceU
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanPlaceU
	xor	bl, bl
$LN5@lCanPlaceU:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanPlaceU
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanPlaceU:

; 4014 : 	int iUnitType = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 4015 : 	lua_pushboolean(L, pkCity->CanPlaceUnitHere((UnitTypes)iUnitType));

	push	eax
	mov	ecx, edi
	call	?CanPlaceUnitHere@CvCity@@QAE_NW4UnitTypes@@@Z ; CvCity::CanPlaceUnitHere
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 4016 : 
; 4017 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4018 : }

	ret	0
?lCanPlaceUnitHere@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lCanPlaceUnitHere
_TEXT	ENDS
PUBLIC	?lGetSpecialistYield@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistYield
EXTRN	?specialistYield@CvPlayer@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z:PROC ; CvPlayer::specialistYield
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSpecialistYield@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSpecialistYield@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetSpecialistYield, COMDAT

; 4021 : {

	push	ebx
	push	ebp
	push	esi

; 4022 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetSpecia@7
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetSpecia@7
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetSpecia@7
	xor	bl, bl
$LN5@lGetSpecia@7:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetSpecia@7
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetSpecia@7:

; 4023 : 	const SpecialistTypes eSpecialist = (SpecialistTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 4024 : 	const YieldTypes eYield = (YieldTypes) lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 4025 : 
; 4026 : 	const PlayerTypes ePlayer = pkCity->getOwner();
; 4027 : 
; 4028 : 	const int iValue = GET_PLAYER(ePlayer).specialistYield(eSpecialist, eYield);

	mov	ecx, DWORD PTR [edi+84]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	esp, 16					; 00000010H
	push	eax
	push	ebx
	call	?specialistYield@CvPlayer@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z ; CvPlayer::specialistYield

; 4029 : 
; 4030 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 4031 : 
; 4032 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4033 : }

	ret	0
?lGetSpecialistYield@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetSpecialistYield
_TEXT	ENDS
PUBLIC	?lGetCultureFromSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCultureFromSpecialist
EXTRN	?GetCultureFromSpecialist@CvCity@@QBEHW4SpecialistTypes@@@Z:PROC ; CvCity::GetCultureFromSpecialist
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCultureFromSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCultureFromSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetCultureFromSpecialist, COMDAT

; 4037 : 	return BasicLuaMethod(L, &CvCity::GetCultureFromSpecialist);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetCultureFromSpecialist@CvCity@@QBEHW4SpecialistTypes@@@Z ; CvCity::GetCultureFromSpecialist
	push	eax
	call	??$BasicLuaMethod@HW4SpecialistTypes@@@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@BEHW4SpecialistTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod<int,enum SpecialistTypes>
	add	esp, 8

; 4038 : }

	ret	0
?lGetCultureFromSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetCultureFromSpecialist
_TEXT	ENDS
PUBLIC	?lGetReligionCityRangeStrikeModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetReligionCityRangeStrikeModifier
EXTRN	?GetCityRangeStrikeModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetCityRangeStrikeModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetReligionCityRangeStrikeModifier@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iReligionRangeStrikeMod$ = -4				; size = 4
_L$ = 8							; size = 4
?lGetReligionCityRangeStrikeModifier@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetReligionCityRangeStrikeModifier, COMDAT

; 4041 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 4042 : 	int iReligionRangeStrikeMod = 0;
; 4043 : 
; 4044 : 	CvCity* pkCity = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	xor	edi, edi
	push	esi
	mov	DWORD PTR _iReligionRangeStrikeMod$[esp+24], edi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN8@lGetReligi@4
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN8@lGetReligi@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN8@lGetReligi@4
	xor	bl, bl
$LN8@lGetReligi@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lGetReligi@4
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN15@lGetReligi@4:

; 4045 : 	ReligionTypes eMajority = pkCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, edi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority

; 4046 : 	if(eMajority != NO_RELIGION)

	cmp	eax, -1
	je	SHORT $LN25@lGetReligi@4

; 4047 : 	{
; 4048 : 		const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eMajority, pkCity->getOwner());

	mov	ecx, DWORD PTR [edi+84]
	push	ecx
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 4049 : 		if(pReligion)

	test	eax, eax
	je	SHORT $LN25@lGetReligi@4

; 4050 : 		{
; 4051 : 			iReligionRangeStrikeMod = pReligion->m_Beliefs.GetCityRangeStrikeModifier();

	mov	ebx, DWORD PTR [eax+164]

; 4052 : 			BeliefTypes eSecondaryPantheon = pkCity->GetCityReligions()->GetSecondaryReligionPantheonBelief();

	mov	ecx, edi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetSecondaryReligionPantheonBelief@CvCityReligions@@QAE?AW4BeliefTypes@@XZ ; CvCityReligions::GetSecondaryReligionPantheonBelief

; 4053 : 			if (eSecondaryPantheon != NO_BELIEF)

	cmp	eax, -1
	je	SHORT $LN1@lGetReligi@4

; 4054 : 			{
; 4055 : 				iReligionRangeStrikeMod += GC.GetGameBeliefs()->GetEntry(eSecondaryPantheon)->GetCityRangeStrikeModifier();

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	ecx, eax
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetCityRangeStrikeModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCityRangeStrikeModifier
	add	ebx, eax
	jmp	SHORT $LN1@lGetReligi@4
$LN25@lGetReligi@4:
	mov	ebx, DWORD PTR _iReligionRangeStrikeMod$[esp+20]
$LN1@lGetReligi@4:

; 4056 : 			}
; 4057 : 		}
; 4058 : 	}
; 4059 : 
; 4060 : 	lua_pushinteger(L, iReligionRangeStrikeMod);

	push	ebx
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 4061 : 
; 4062 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4063 : }

	pop	ecx
	ret	0
?lGetReligionCityRangeStrikeModifier@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetReligionCityRangeStrikeModifier
_TEXT	ENDS
PUBLIC	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
;	COMDAT ?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXXZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXXZ@Z PROC ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod, COMDAT

; 222  : {

	push	ebx
	push	ebp
	push	esi

; 223  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@56
	push	OFFSET $SG223798
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@56
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@56
	xor	bl, bl
$LN5@BasicLuaMe@56:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@56
	push	OFFSET $SG223804
	push	esi
	call	_luaL_error
	push	OFFSET $SG223812
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@56:

; 224  : 	(pkType->*func)();

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	pop	edi
	pop	esi
	pop	ebp

; 225  : 	return 0;

	xor	eax, eax
	pop	ebx

; 226  : }

	ret	0
?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z ; std::vector<int,std::allocator<int> >::_Buy
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z PROC	; std::vector<int,std::allocator<int> >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	esi

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	xor	eax, eax
	push	edi

; 1104 : 		if (_Capacity == 0)

	mov	edi, DWORD PTR __Capacity$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	cmp	edi, eax
	jne	SHORT $LN4@Buy
	pop	edi

; 1105 : 			return (false);

	xor	al, al
	pop	esi

; 1115 : 		}

	ret	4
$LN4@Buy:

; 1106 : 		else if (max_size() < _Capacity)

	cmp	edi, 1073741823				; 3fffffffH
	jbe	SHORT $LN2@Buy

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ ; std::vector<int,std::allocator<int> >::_Xlen
$LN16@Buy:
$LN2@Buy:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	push	eax
	push	edi
	call	??$_Allocate@H@std@@YAPAHIPAH@Z		; std::_Allocate<int>
	mov	DWORD PTR [esi+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	DWORD PTR [esi+8], eax
	add	esp, 8

; 1112 : 			_Myend = _Myfirst + _Capacity;

	lea	eax, DWORD PTR [eax+edi*4]
	mov	DWORD PTR [esi+12], eax
	pop	edi

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
	pop	esi

; 1115 : 		}

	ret	4
$LN15@Buy:
?_Buy@?$vector@HV?$allocator@H@std@@@std@@IAE_NI@Z ENDP	; std::vector<int,std::allocator<int> >::_Buy
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z ; std::vector<int,std::allocator<int> >::_Destroy
; Function compile flags: /Ogtpy
;	COMDAT ?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z PROC ; std::vector<int,std::allocator<int> >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	8
?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z ENDP ; std::vector<int,std::allocator<int> >::_Destroy
_TEXT	ENDS
PUBLIC	?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ ; std::vector<int,std::allocator<int> >::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ PROC ; std::vector<int,std::allocator<int> >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ ENDP ; std::vector<int,std::allocator<int> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ ; std::vector<int,std::allocator<int> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ PROC ; std::vector<int,std::allocator<int> >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ ENDP ; std::vector<int,std::allocator<int> >::end
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@@Z ; std::vector<int,std::allocator<int> >::_Make_iter
; Function compile flags: /Ogtpy
;	COMDAT ?_Make_iter@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@@Z PROC ; std::vector<int,std::allocator<int> >::_Make_iter, COMDAT
; _this$ = ecx

; 687  : 		return (iterator(_Where._Myptr));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR __Where$[esp-4]
	mov	DWORD PTR [eax], ecx

; 688  : 		}

	ret	8
?_Make_iter@?$vector@HV?$allocator@H@std@@@std@@QBE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@@Z ENDP ; std::vector<int,std::allocator<int> >::_Make_iter
_TEXT	ENDS
PUBLIC	??H?$_Vector_iterator@HV?$allocator@H@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<int,std::allocator<int> >::operator+
; Function compile flags: /Ogtpy
;	COMDAT ??H?$_Vector_iterator@HV?$allocator@H@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@HV?$allocator@H@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<int,std::allocator<int> >::operator+, COMDAT
; _this$ = ecx

; 381  : 		_Myt _Tmp = *this;
; 382  : 		return (_Tmp += _Off);

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], edx

; 383  : 		}

	ret	8
??H?$_Vector_iterator@HV?$allocator@H@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<int,std::allocator<int> >::operator+
_TEXT	ENDS
PUBLIC	??$_Unchecked_move_backward@PAHPAH@stdext@@YAPAHPAH00@Z ; stdext::_Unchecked_move_backward<int *,int *>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xutility
;	COMDAT ??$_Unchecked_move_backward@PAHPAH@stdext@@YAPAHPAH00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAHPAH@stdext@@YAPAHPAH00@Z PROC ; stdext::_Unchecked_move_backward<int *,int *>, COMDAT

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	sar	eax, 2
	push	esi
	mov	esi, DWORD PTR __Dest$[esp]
	lea	ecx, DWORD PTR [eax*4]
	sub	esi, ecx
	test	eax, eax
	jle	SHORT $LN14@Unchecked_
	push	ecx
	push	edx
	push	ecx
	push	esi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN14@Unchecked_:
	mov	eax, esi
	pop	esi

; 3697 : 	}

	ret	0
??$_Unchecked_move_backward@PAHPAH@stdext@@YAPAHPAH00@Z ENDP ; stdext::_Unchecked_move_backward<int *,int *>
_TEXT	ENDS
PUBLIC	??$unchecked_fill_n@PAHIH@stdext@@YAXPAHIABH@Z	; stdext::unchecked_fill_n<int *,unsigned int,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_fill_n@PAHIH@stdext@@YAXPAHIABH@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
??$unchecked_fill_n@PAHIH@stdext@@YAXPAHIABH@Z PROC	; stdext::unchecked_fill_n<int *,unsigned int,int>, COMDAT

; 3721 : 		_STD _Fill_n(_First, _Count, _Val, _STD _Iter_cat(_First), _STD _Range_checked_iterator_tag());

	mov	eax, DWORD PTR __Count$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	test	eax, eax
	jbe	SHORT $LN7@unchecked_@3
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL9@unchecked_@3:
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [ecx], esi
	dec	eax
	add	ecx, 4
	test	eax, eax
	ja	SHORT $LL9@unchecked_@3
	pop	esi
$LN7@unchecked_@3:

; 3722 : 	}

	ret	0
??$unchecked_fill_n@PAHIH@stdext@@YAXPAHIABH@Z ENDP	; stdext::unchecked_fill_n<int *,unsigned int,int>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAHPAHV?$allocator@H@std@@U_Undefined_move_tag@2@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<int *,int *,std::allocator<int>,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\memory
;	COMDAT ??$_Uninit_move@PAHPAHV?$allocator@H@std@@U_Undefined_move_tag@2@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_move@PAHPAHV?$allocator@H@std@@U_Undefined_move_tag@2@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<int *,int *,std::allocator<int>,std::_Undefined_move_tag>, COMDAT

; 207  : 	return (_STDEXT unchecked_uninitialized_copy(_First, _Last, _Dest, _Al));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]
	test	eax, eax
	jbe	SHORT $LN10@Uninit_mov
	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN10@Uninit_mov:
	pop	edi
	mov	eax, esi
	pop	esi

; 208  : 	}

	ret	0
??$_Uninit_move@PAHPAHV?$allocator@H@std@@U_Undefined_move_tag@2@@std@@YAPAHPAH00AAV?$allocator@H@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<int *,int *,std::allocator<int>,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	?lDoJONSCultureLevelIncrease@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lDoJONSCultureLevelIncrease
EXTRN	?DoJONSCultureLevelIncrease@CvCity@@QAEXXZ:PROC	; CvCity::DoJONSCultureLevelIncrease
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
;	COMDAT ?lDoJONSCultureLevelIncrease@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoJONSCultureLevelIncrease@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lDoJONSCultureLevelIncrease, COMDAT

; 2069 : 	return BasicLuaMethod(L, &CvCity::DoJONSCultureLevelIncrease);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?DoJONSCultureLevelIncrease@CvCity@@QAEXXZ ; CvCity::DoJONSCultureLevelIncrease
	push	eax
	call	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod
	add	esp, 8

; 2070 : }

	ret	0
?lDoJONSCultureLevelIncrease@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lDoJONSCultureLevelIncrease
_TEXT	ENDS
PUBLIC	?lClearOrderQueue@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lClearOrderQueue
EXTRN	?clearOrderQueue@CvCity@@QAEXXZ:PROC		; CvCity::clearOrderQueue
; Function compile flags: /Ogtpy
;	COMDAT ?lClearOrderQueue@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lClearOrderQueue@CvLuaCity@@KAHPAUlua_State@@@Z PROC	; CvLuaCity::lClearOrderQueue, COMDAT

; 3868 : 	return BasicLuaMethod(L, &CvCity::clearOrderQueue);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?clearOrderQueue@CvCity@@QAEXXZ	; CvCity::clearOrderQueue
	push	eax
	call	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaCity@@VCvCity@@@@KAHPAUlua_State@@P8CvCity@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaCity,CvCity>::BasicLuaMethod
	add	esp, 8

; 3869 : }

	ret	0
?lClearOrderQueue@CvLuaCity@@KAHPAUlua_State@@@Z ENDP	; CvLuaCity::lClearOrderQueue
_TEXT	ENDS
PUBLIC	??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	mov	eax, ecx

; 471  : 		_Buy(0);

	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 472  : 		}

	ret	0
??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ PROC	; std::vector<int,std::allocator<int> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@Tidy

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1135 : 		}

	ret	0
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ENDP	; std::vector<int,std::allocator<int> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@0@Z ; std::vector<int,std::allocator<int> >::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@0@Z PROC ; std::vector<int,std::allocator<int> >::erase, COMDAT
; _this$ = ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);

	mov	edx, DWORD PTR __First_arg$[esp-4]
	push	ebp
	mov	ebp, DWORD PTR ___$ReturnUdt$[esp]
	push	esi

; 1030 : 		iterator _Last = _Make_iter(_Last_arg);
; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	esi, DWORD PTR __Last_arg$[esp+4]
	push	edi
	mov	edi, ecx
	mov	DWORD PTR [ebp], edx
	cmp	edx, esi
	je	SHORT $LN29@erase

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	eax, DWORD PTR [edi+8]
	sub	eax, esi
	sar	eax, 2
	lea	ecx, DWORD PTR [eax*4]
	push	ebx
	lea	ebx, DWORD PTR [ecx+edx]
	test	eax, eax
	jle	SHORT $LN26@erase
	push	ecx
	push	esi
	push	ecx
	push	edx
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN26@erase:

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);
; 1049 : 			_Mylast = _Ptr;

	mov	DWORD PTR [edi+8], ebx
	pop	ebx
$LN29@erase:
	pop	edi
	pop	esi

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);

	mov	eax, ebp
	pop	ebp

; 1055 : #endif
; 1056 : 		}

	ret	12					; 0000000cH
?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@0@Z ENDP ; std::vector<int,std::allocator<int> >::erase
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAHIHV?$allocator@H@std@@@std@@YAXPAHIABHAAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<int *,unsigned int,int,std::allocator<int> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\memory
;	COMDAT ??$_Uninit_fill_n@PAHIHV?$allocator@H@std@@@std@@YAXPAHIABHAAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAHIHV?$allocator@H@std@@@std@@YAXPAHIABHAAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<int *,unsigned int,int,std::allocator<int> >, COMDAT

; 419  : 		_STDEXT unchecked_fill_n(_First, _Count, _Val);

	mov	eax, DWORD PTR __Count$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	test	eax, eax
	jbe	SHORT $LN9@Uninit_fil
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL11@Uninit_fil:
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [ecx], esi
	dec	eax
	add	ecx, 4
	test	eax, eax
	ja	SHORT $LL11@Uninit_fil
	pop	esi
$LN9@Uninit_fil:

; 420  : 	}

	ret	0
??$_Uninit_fill_n@PAHIHV?$allocator@H@std@@@std@@YAXPAHIABHAAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<int *,unsigned int,int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??$_Unchecked_uninitialized_move@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z ; stdext::_Unchecked_uninitialized_move<int *,int *,std::allocator<int> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unchecked_uninitialized_move@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Unchecked_uninitialized_move@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z PROC ; stdext::_Unchecked_uninitialized_move<int *,int *,std::allocator<int> >, COMDAT

; 862  : 	return (_STD _Uninit_move(_CHECKED_BASE(_First),
; 863  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 864  : 		_STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]
	test	eax, eax
	jbe	SHORT $LN14@Unchecked_@2
	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN14@Unchecked_@2:
	pop	edi
	mov	eax, esi
	pop	esi

; 865  : 	}

	ret	0
??$_Unchecked_uninitialized_move@PAHPAHV?$allocator@H@std@@@stdext@@YAPAHPAH00AAV?$allocator@H@std@@@Z ENDP ; stdext::_Unchecked_uninitialized_move<int *,int *,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@vector
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 560  : 		}

	ret	0
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_fill_n@PAHIHV?$allocator@H@std@@@stdext@@YAXPAHIABHAAV?$allocator@H@std@@@Z ; stdext::unchecked_uninitialized_fill_n<int *,unsigned int,int,std::allocator<int> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_fill_n@PAHIHV?$allocator@H@std@@@stdext@@YAXPAHIABHAAV?$allocator@H@std@@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_fill_n@PAHIHV?$allocator@H@std@@@stdext@@YAXPAHIABHAAV?$allocator@H@std@@@Z PROC ; stdext::unchecked_uninitialized_fill_n<int *,unsigned int,int,std::allocator<int> >, COMDAT

; 941  : 	_STD _Uninit_fill_n(_First, _Count, _Val, _Al,
; 942  : 		_STD _Ptr_cat(_First, _First), _STD _Range_checked_iterator_tag());

	mov	eax, DWORD PTR __Count$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	test	eax, eax
	jbe	SHORT $LN13@unchecked_@4
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL15@unchecked_@4:
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [ecx], esi
	dec	eax
	add	ecx, 4
	test	eax, eax
	ja	SHORT $LL15@unchecked_@4
	pop	esi
$LN13@unchecked_@4:

; 943  : 	}

	ret	0
??$unchecked_uninitialized_fill_n@PAHIHV?$allocator@H@std@@@stdext@@YAXPAHIABHAAV?$allocator@H@std@@@Z ENDP ; stdext::unchecked_uninitialized_fill_n<int *,unsigned int,int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ; std::vector<int,std::allocator<int> >::_Umove<int *>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z PROC ; std::vector<int,std::allocator<int> >::_Umove<int *>, COMDAT
; _this$ = ecx

; 1146 : 		{	// move initializing [_First, _Last), using allocator
; 1147 : 		return (_STDEXT _Unchecked_uninitialized_move(_First, _Last,
; 1148 : 			_Ptr, this->_Alval));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi
	mov	edi, DWORD PTR __Ptr$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]
	test	eax, eax
	jbe	SHORT $LN16@Umove
	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN16@Umove:
	pop	edi
	mov	eax, esi
	pop	esi

; 1149 : 		}

	ret	12					; 0000000cH
??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ENDP ; std::vector<int,std::allocator<int> >::_Umove<int *>
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAHIABH@Z ; std::vector<int,std::allocator<int> >::_Ufill
; Function compile flags: /Ogtpy
;	COMDAT ?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAHIABH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAHIABH@Z PROC ; std::vector<int,std::allocator<int> >::_Ufill, COMDAT
; _this$ = ecx

; 1253 : 		{	// copy initializing _Count * _Val, using allocator

	push	esi

; 1254 : 		_STDEXT unchecked_uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

	mov	esi, DWORD PTR __Count$[esp]
	push	edi
	mov	edi, DWORD PTR __Ptr$[esp+4]
	mov	eax, esi
	mov	ecx, edi
	test	esi, esi
	jbe	SHORT $LN22@Ufill
	mov	edx, DWORD PTR __Val$[esp+4]
	push	ebx
$LL17@Ufill:
	mov	ebx, DWORD PTR [edx]
	mov	DWORD PTR [ecx], ebx
	dec	eax
	add	ecx, 4
	test	eax, eax
	ja	SHORT $LL17@Ufill
	pop	ebx
$LN22@Ufill:

; 1255 : 		return (_Ptr + _Count);

	lea	eax, DWORD PTR [edi+esi*4]
	pop	edi
	pop	esi

; 1256 : 		}

	ret	12					; 0000000cH
?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAHIABH@Z ENDP ; std::vector<int,std::allocator<int> >::_Ufill
_TEXT	ENDS
PUBLIC	?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z ; std::vector<int,std::allocator<int> >::_Insert_n
; Function compile flags: /Ogtpy
;	COMDAT ?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z
_TEXT	SEGMENT
__Capacity$ = -4					; size = 4
__Where$ = 8						; size = 4
__Count$ = 12						; size = 4
__Tmp$214846 = 16					; size = 4
__Tmp$214836 = 16					; size = 4
__Val$ = 16						; size = 4
?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z PROC ; std::vector<int,std::allocator<int> >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ecx
	push	esi
	mov	esi, ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	edx, DWORD PTR [esi+4]
	push	edi
	test	edx, edx
	jne	SHORT $LN29@Insert_n
	xor	ecx, ecx
	jmp	SHORT $LN30@Insert_n
$LN29@Insert_n:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, edx
	sar	eax, 2
	mov	ecx, eax
$LN30@Insert_n:

; 1162 : 
; 1163 : 		if (_Count == 0)

	mov	edi, DWORD PTR __Count$[esp+8]
	test	edi, edi
	je	$LN1@Insert_n
	push	ebx

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	ebx, DWORD PTR [esi+8]
	mov	eax, ebx
	sub	eax, edx
	sar	eax, 2
	mov	edx, 1073741823				; 3fffffffH
	sub	edx, eax
	cmp	edx, edi
	jae	SHORT $LN12@Insert_n

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@HV?$allocator@H@std@@@std@@KAXXZ ; std::vector<int,std::allocator<int> >::_Xlen
$LN64@Insert_n:
$LN12@Insert_n:

; 1167 : 		else if (_Capacity < size() + _Count)

	lea	edx, DWORD PTR [eax+edi]
	push	ebp
	cmp	ecx, edx
	jae	$LN10@Insert_n

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	eax, ecx
	shr	eax, 1
	mov	ebx, 1073741823				; 3fffffffH
	sub	ebx, eax
	cmp	ebx, ecx
	jae	SHORT $LN17@Insert_n
	mov	DWORD PTR __Capacity$[esp+20], 0
	mov	ecx, DWORD PTR __Capacity$[esp+20]
	jmp	SHORT $LN18@Insert_n
$LN17@Insert_n:
	add	ecx, eax
	mov	DWORD PTR __Capacity$[esp+20], ecx
$LN18@Insert_n:

; 1171 : 			if (_Capacity < size() + _Count)

	cmp	ecx, edx
	jae	SHORT $LN9@Insert_n

; 1172 : 				_Capacity = size() + _Count;

	mov	DWORD PTR __Capacity$[esp+20], edx
	mov	ecx, edx
$LN9@Insert_n:

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

	push	0
	push	ecx
	call	??$_Allocate@H@std@@YAPAHIPAH@Z		; std::_Allocate<int>

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	ebx, DWORD PTR __Where$[esp+24]
	sub	ebx, DWORD PTR [esi+4]
	add	esp, 8
	mov	ebp, eax

; 1175 : 			int _Ncopied = 0;
; 1176 : 
; 1177 : 			_TRY_BEGIN
; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	eax, DWORD PTR __Val$[esp+16]
	push	eax
	sar	ebx, 2
	push	edi
	lea	ecx, DWORD PTR [ebp+ebx*4]
	push	ecx
	mov	ecx, esi
	call	?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAHIABH@Z ; std::vector<int,std::allocator<int> >::_Ufill

; 1179 : 			++_Ncopied;
; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	edx, DWORD PTR __Where$[esp+16]
	mov	eax, DWORD PTR [esi+4]
	push	ebp
	push	edx
	push	eax
	mov	ecx, esi
	call	??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ; std::vector<int,std::allocator<int> >::_Umove<int *>

; 1182 : 			++_Ncopied;
; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	edx, DWORD PTR [esi+8]
	mov	eax, DWORD PTR __Where$[esp+16]
	add	ebx, edi
	lea	ecx, DWORD PTR [ebp+ebx*4]
	push	ecx
	push	edx
	push	eax
	mov	ecx, esi
	call	??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ; std::vector<int,std::allocator<int> >::_Umove<int *>

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)
; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);
; 1188 : 			if (0 < _Ncopied)
; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);
; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);
; 1191 : 			_RERAISE;
; 1192 : 			_CATCH_END
; 1193 : 
; 1194 : 			_Count += size();

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, eax
	sar	ecx, 2
	add	edi, ecx

; 1195 : 			if (_Myfirst != 0)

	test	eax, eax
	je	SHORT $LN57@Insert_n

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);
; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN57@Insert_n:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	edx, DWORD PTR __Capacity$[esp+20]

; 1206 : 			_Mylast = _Newvec + _Count;

	lea	ecx, DWORD PTR [ebp+edi*4]
	lea	eax, DWORD PTR [ebp+edx*4]

; 1207 : 			_Myfirst = _Newvec;

	mov	DWORD PTR [esi+4], ebp
	pop	ebp
	pop	ebx
	pop	edi
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+8], ecx
	pop	esi

; 1249 : 			}
; 1250 : 		}

	pop	ecx
	ret	12					; 0000000cH
$LN10@Insert_n:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	eax, DWORD PTR __Where$[esp+16]

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[esp+16]
	mov	edx, ebx
	sub	edx, eax
	sar	edx, 2
	cmp	edx, edi
	mov	edx, DWORD PTR [ecx]

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	lea	ebp, DWORD PTR [edi*4]
	mov	DWORD PTR __Tmp$214836[esp+16], edx
	jae	SHORT $LN3@Insert_n
	lea	ecx, DWORD PTR [eax+ebp]
	push	ecx
	push	ebx
	push	eax
	mov	ecx, esi
	call	??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ; std::vector<int,std::allocator<int> >::_Umove<int *>

; 1215 : 
; 1216 : 			_TRY_BEGIN
; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, eax
	sub	ecx, DWORD PTR __Where$[esp+16]
	lea	edx, DWORD PTR __Tmp$214836[esp+16]
	sar	ecx, 2
	push	edx
	sub	edi, ecx
	push	edi
	push	eax
	mov	ecx, esi
	call	?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAHIABH@Z ; std::vector<int,std::allocator<int> >::_Ufill

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 1221 : 			_RERAISE;
; 1222 : 			_CATCH_END
; 1223 : 
; 1224 : 			_Mylast += _Count;

	add	DWORD PTR [esi+8], ebp
	mov	esi, DWORD PTR [esi+8]

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	mov	eax, DWORD PTR __Where$[esp+16]
	lea	edx, DWORD PTR __Tmp$214836[esp+16]
	push	edx
	sub	esi, ebp
	push	esi
	push	eax
	call	??$fill@PAHH@std@@YAXPAH0ABH@Z		; std::fill<int *,int>
	add	esp, 12					; 0000000cH
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi

; 1249 : 			}
; 1250 : 		}

	pop	ecx
	ret	12					; 0000000cH
$LN3@Insert_n:

; 1232 : 			}
; 1233 : 		else
; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence
; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;
; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	push	ebx
	mov	edi, ebx
	push	ebx
	sub	edi, ebp
	push	edi
	mov	ecx, esi
	call	??$_Umove@PAH@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPAH00@Z ; std::vector<int,std::allocator<int> >::_Umove<int *>

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	push	ebx
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR __Where$[esp+20]
	push	edi
	push	eax
	call	??$_Unchecked_move_backward@PAHPAH@stdext@@YAPAHPAH00@Z ; stdext::_Unchecked_move_backward<int *,int *>

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	mov	eax, DWORD PTR __Where$[esp+28]
	lea	ecx, DWORD PTR __Tmp$214846[esp+28]
	push	ecx
	add	ebp, eax
	push	ebp
	push	eax
	call	??$fill@PAHH@std@@YAXPAH0ABH@Z		; std::fill<int *,int>
	add	esp, 24					; 00000018H
	pop	ebp
	pop	ebx
$LN1@Insert_n:
	pop	edi
	pop	esi

; 1249 : 			}
; 1250 : 		}

	pop	ecx
	ret	12					; 0000000cH
$LN63@Insert_n:
?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z ENDP ; std::vector<int,std::allocator<int> >::_Insert_n
_TEXT	ENDS
PUBLIC	?resize@?$vector@HV?$allocator@H@std@@@std@@QAEXIH@Z ; std::vector<int,std::allocator<int> >::resize
; Function compile flags: /Ogtpy
;	COMDAT ?resize@?$vector@HV?$allocator@H@std@@@std@@QAEXIH@Z
_TEXT	SEGMENT
$T234360 = 8						; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
?resize@?$vector@HV?$allocator@H@std@@@std@@QAEXIH@Z PROC ; std::vector<int,std::allocator<int> >::resize, COMDAT
; _this$ = ecx

; 718  : 		if (size() < _Newsize)

	mov	edx, DWORD PTR __Newsize$[esp-4]
	push	esi
	mov	esi, DWORD PTR [ecx+8]
	push	edi
	mov	edi, DWORD PTR [ecx+4]
	mov	eax, esi
	sub	eax, edi
	sar	eax, 2
	cmp	edx, eax
	jbe	SHORT $LN36@resize

; 719  : 			_Insert_n(end(), _Newsize - size(), _Val);

	lea	edi, DWORD PTR __Val$[esp+4]
	push	edi
	sub	edx, eax
	push	edx
	push	esi
	call	?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z ; std::vector<int,std::allocator<int> >::_Insert_n
	pop	edi
	pop	esi

; 722  : 		}

	ret	8
$LN36@resize:

; 720  : 		else if (_Newsize < size())

	jae	SHORT $LN1@resize

; 721  : 			erase(begin() + _Newsize, end());

	lea	eax, DWORD PTR [edi+edx*4]
	push	esi
	push	eax
	lea	eax, DWORD PTR $T234360[esp+12]
	push	eax
	call	?erase@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@V?$_Vector_const_iterator@HV?$allocator@H@std@@@2@0@Z ; std::vector<int,std::allocator<int> >::erase
$LN1@resize:
	pop	edi
	pop	esi

; 722  : 		}

	ret	8
?resize@?$vector@HV?$allocator@H@std@@@std@@QAEXIH@Z ENDP ; std::vector<int,std::allocator<int> >::resize
_TEXT	ENDS
PUBLIC	?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuyablePlotList
EXTRN	?GetBuyablePlotList@CvCity@@QAEXAAV?$vector@HV?$allocator@H@std@@@std@@@Z:PROC ; CvCity::GetBuyablePlotList
;	COMDAT xdata$x
; File s:\msvs2008\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\lekmod_dll\cvgamecoredll_expansion2\lua\cvluacity.cpp
xdata$x	ENDS
;	COMDAT ?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T234727 = -32						; size = 4
_stack_size$234450 = -32				; size = 4
_aiPlotList$ = -28					; size = 16
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z PROC ; CvLuaCity::lGetBuyablePlotList, COMDAT

; 1835 : {

	push	-1
	push	__ehhandler$?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 20					; 00000014H
	push	ebx
	push	ebp
	push	esi
	push	edi

; 1836 : 	CvCity* pkCity = GetInstance(L);

	mov	edi, DWORD PTR _L$[esp+44]
	push	edi
	call	_lua_gettop
	push	1
	push	edi
	mov	DWORD PTR _stack_size$234450[esp+60], eax
	mov	bl, 1
	xor	ebp, ebp
	xor	esi, esi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN11@lGetBuyabl
	push	OFFSET $SG223798
	push	1
	push	edi
	call	_lua_getfield
	push	-1
	push	edi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN11@lGetBuyabl
	push	-1
	push	edi
	call	_lua_touserdata
	mov	esi, eax
	add	esp, 8
	cmp	esi, ebp
	je	SHORT $LN11@lGetBuyabl
	xor	bl, bl
$LN11@lGetBuyabl:
	mov	eax, DWORD PTR _stack_size$234450[esp+48]
	push	eax
	push	edi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN18@lGetBuyabl
	push	OFFSET $SG223804
	push	edi
	call	_luaL_error
	push	OFFSET $SG223812
	push	edi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN18@lGetBuyabl:

; 1837 : 	std::vector<int> aiPlotList;

	mov	DWORD PTR _aiPlotList$[esp+52], ebp
	mov	DWORD PTR _aiPlotList$[esp+56], ebp
	mov	DWORD PTR _aiPlotList$[esp+60], ebp

; 1838 : #ifdef AUI_CITY_FIX_GET_NEXT_BUYABLE_PLOT_VECTOR_USE_RESERVE
; 1839 : 	aiPlotList.reserve(NUM_DIRECTION_TYPES * GC.getMAXIMUM_ACQUIRE_PLOT_DISTANCE());
; 1840 : #else
; 1841 : 	aiPlotList.resize(20, -1);

	lea	ecx, DWORD PTR $T234727[esp+48]
	push	ecx
	xor	eax, eax
	push	20					; 00000014H
	push	eax
	lea	ecx, DWORD PTR _aiPlotList$[esp+60]
	mov	DWORD PTR __$EHRec$[esp+68], ebp
	mov	DWORD PTR $T234727[esp+60], -1
	call	?_Insert_n@?$vector@HV?$allocator@H@std@@@std@@IAEXV?$_Vector_const_iterator@HV?$allocator@H@std@@@2@IABH@Z ; std::vector<int,std::allocator<int> >::_Insert_n

; 1842 : #endif
; 1843 : 	pkCity->GetBuyablePlotList(aiPlotList);

	lea	edx, DWORD PTR _aiPlotList$[esp+48]
	push	edx
	mov	ecx, esi
	call	?GetBuyablePlotList@CvCity@@QAEXAAV?$vector@HV?$allocator@H@std@@@std@@@Z ; CvCity::GetBuyablePlotList

; 1844 : 
; 1845 : #ifdef AUI_CITY_FIX_GET_NEXT_BUYABLE_PLOT_VECTOR_USE_RESERVE
; 1846 : 
; 1847 : 	for (std::vector<int>::iterator it = aiPlotList.begin(); it != aiPlotList.end(); ++it)
; 1848 : 	{
; 1849 : 		CvLuaPlot::Push(L, GC.getMap().plotByIndex(*it));
; 1850 : 	}
; 1851 : 
; 1852 : 	return  aiPlotList.size();
; 1853 : #else
; 1854 : 	int iReturnValues = 0;
; 1855 : 
; 1856 : 	for(uint ui = 0; ui < aiPlotList.size(); ui++)

	mov	eax, DWORD PTR _aiPlotList$[esp+56]
	mov	ecx, DWORD PTR _aiPlotList$[esp+52]
	sub	eax, ecx
	sar	eax, 2
	xor	esi, esi
	test	eax, eax
	jbe	SHORT $LN2@lGetBuyabl
$LL5@lGetBuyabl:

; 1857 : 	{
; 1858 : 		if(aiPlotList[ui] >= 0)

	mov	eax, DWORD PTR [ecx+esi*4]
	test	eax, eax
	jl	SHORT $LN2@lGetBuyabl

; 1859 : 		{
; 1860 : 			CvPlot* pkPlot = GC.getMap().plotByIndex(aiPlotList[ui]);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	eax, DWORD PTR [ecx+4028]
	jge	SHORT $LN102@lGetBuyabl
	imul	eax, 484				; 000001e4H
	add	eax, DWORD PTR [ecx+4068]
	jmp	SHORT $LN103@lGetBuyabl
$LN102@lGetBuyabl:
	xor	eax, eax
$LN103@lGetBuyabl:

; 1861 : 			CvLuaPlot::Push(L, pkPlot);

	push	eax
	push	edi
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	mov	edx, DWORD PTR _aiPlotList$[esp+64]
	mov	ecx, DWORD PTR _aiPlotList$[esp+60]
	sub	edx, ecx
	inc	esi
	sar	edx, 2
	add	esp, 8

; 1862 : 			iReturnValues++;

	inc	ebp
	cmp	esi, edx
	jb	SHORT $LL5@lGetBuyabl
$LN2@lGetBuyabl:

; 1863 : 		}
; 1864 : 		else
; 1865 : 		{
; 1866 : 			break;
; 1867 : 		}
; 1868 : 	}
; 1869 : 
; 1870 : 	return iReturnValues;

	test	ecx, ecx
	je	SHORT $LN115@lGetBuyabl
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN115@lGetBuyabl:

; 1871 : #endif
; 1872 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+48]
	pop	edi
	pop	esi
	mov	eax, ebp
	pop	ebp
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 32					; 00000020H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _aiPlotList$[ebp]
	jmp	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
__ehhandler$?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z ENDP ; CvLuaCity::lGetBuyablePlotList
PUBLIC	?PushMethods@CvLuaCity@@SAXPAUlua_State@@H@Z	; CvLuaCity::PushMethods
EXTRN	_lua_pushcclosure:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?PushMethods@CvLuaCity@@SAXPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
?PushMethods@CvLuaCity@@SAXPAUlua_State@@H@Z PROC	; CvLuaCity::PushMethods, COMDAT

; 26   : {

	push	esi

; 27   : 	Method(IsNone);

	mov	esi, DWORD PTR _L$[esp]
	push	edi
	push	0
	push	OFFSET ?lIsNone@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsNone
	push	esi
	call	_lua_pushcclosure
	mov	edi, DWORD PTR _t$[esp+16]
	push	OFFSET $SG219983
	push	edi
	push	esi
	call	_lua_setfield

; 28   : 	Method(Kill);

	push	0
	push	OFFSET ?lKill@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lKill
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219984
	push	edi
	push	esi
	call	_lua_setfield

; 29   : 
; 30   : 	Method(CreateGreatGeneral);

	push	0
	push	OFFSET ?lCreateGreatGeneral@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCreateGreatGeneral
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219985
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 31   : 	Method(CreateGreatAdmiral);

	push	0
	push	OFFSET ?lCreateGreatAdmiral@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCreateGreatAdmiral
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219986
	push	edi
	push	esi
	call	_lua_setfield

; 32   : 
; 33   : 	Method(DoTask);

	push	0
	push	OFFSET ?lDoTask@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lDoTask
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219987
	push	edi
	push	esi
	call	_lua_setfield

; 34   : 	Method(ChooseProduction);

	push	0
	push	OFFSET ?lChooseProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChooseProduction
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219988
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 35   : 	Method(GetCityPlotIndex);

	push	0
	push	OFFSET ?lGetCityPlotIndex@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCityPlotIndex
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219989
	push	edi
	push	esi
	call	_lua_setfield

; 36   : 	Method(GetCityIndexPlot);

	push	0
	push	OFFSET ?lGetCityIndexPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCityIndexPlot
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219990
	push	edi
	push	esi
	call	_lua_setfield

; 37   : 	Method(CanWork);

	push	0
	push	OFFSET ?lCanWork@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanWork
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219991
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 38   : 	Method(IsPlotBlockaded);

	push	0
	push	OFFSET ?lIsPlotBlockaded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsPlotBlockaded
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219992
	push	edi
	push	esi
	call	_lua_setfield

; 39   : 	Method(ClearWorkingOverride);

	push	0
	push	OFFSET ?lClearWorkingOverride@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lClearWorkingOverride
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219993
	push	edi
	push	esi
	call	_lua_setfield

; 40   : 	Method(CountNumImprovedPlots);

	push	0
	push	OFFSET ?lCountNumImprovedPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCountNumImprovedPlots
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219994
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 41   : 	Method(CountNumWaterPlots);

	push	0
	push	OFFSET ?lCountNumWaterPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCountNumWaterPlots
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219995
	push	edi
	push	esi
	call	_lua_setfield

; 42   : 	Method(CountNumRiverPlots);

	push	0
	push	OFFSET ?lCountNumRiverPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCountNumRiverPlots
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219996
	push	edi
	push	esi
	call	_lua_setfield

; 43   : 
; 44   : 	Method(FindPopulationRank);

	push	0
	push	OFFSET ?lFindPopulationRank@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lFindPopulationRank
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219997
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 45   : 	Method(FindBaseYieldRateRank);

	push	0
	push	OFFSET ?lFindBaseYieldRateRank@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lFindBaseYieldRateRank
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219998
	push	edi
	push	esi
	call	_lua_setfield

; 46   : 	Method(FindYieldRateRank);

	push	0
	push	OFFSET ?lFindYieldRateRank@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lFindYieldRateRank
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219999
	push	edi
	push	esi
	call	_lua_setfield

; 47   : 
; 48   : 	Method(AllUpgradesAvailable);

	push	0
	push	OFFSET ?lAllUpgradesAvailable@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lAllUpgradesAvailable
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220000
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 49   : 	Method(IsWorldWondersMaxed);

	push	0
	push	OFFSET ?lIsWorldWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsWorldWondersMaxed
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220001
	push	edi
	push	esi
	call	_lua_setfield

; 50   : 	Method(IsTeamWondersMaxed);

	push	0
	push	OFFSET ?lIsTeamWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsTeamWondersMaxed
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220002
	push	edi
	push	esi
	call	_lua_setfield

; 51   : 	Method(IsNationalWondersMaxed);

	push	0
	push	OFFSET ?lIsNationalWondersMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsNationalWondersMaxed
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220003
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 52   : 	Method(IsBuildingsMaxed);

	push	0
	push	OFFSET ?lIsBuildingsMaxed@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsBuildingsMaxed
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220004
	push	edi
	push	esi
	call	_lua_setfield

; 53   : 
; 54   : 	Method(CanTrainTooltip);

	push	0
	push	OFFSET ?lCanTrainTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanTrainTooltip
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220005
	push	edi
	push	esi
	call	_lua_setfield

; 55   : 	Method(CanTrain);

	push	0
	push	OFFSET ?lCanTrain@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanTrain
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220006
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 56   : 	Method(CanConstructTooltip);

	push	0
	push	OFFSET ?lCanConstructTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanConstructTooltip
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220007
	push	edi
	push	esi
	call	_lua_setfield

; 57   : 	Method(CanConstruct);

	push	0
	push	OFFSET ?lCanConstruct@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanConstruct
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220008
	push	edi
	push	esi
	call	_lua_setfield

; 58   : 	Method(CanCreate);

	push	0
	push	OFFSET ?lCanCreate@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanCreate
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220009
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 59   : 	Method(CanPrepare);

	push	0
	push	OFFSET ?lCanPrepare@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanPrepare
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220010
	push	edi
	push	esi
	call	_lua_setfield

; 60   : 	Method(CanMaintain);

	push	0
	push	OFFSET ?lCanMaintain@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanMaintain
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220011
	push	edi
	push	esi
	call	_lua_setfield

; 61   : 
; 62   : 	Method(GetPurchaseUnitTooltip);

	push	0
	push	OFFSET ?lGetPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetPurchaseUnitTooltip
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220012
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 63   : 	Method(GetFaithPurchaseUnitTooltip);

	push	0
	push	OFFSET ?lGetFaithPurchaseUnitTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPurchaseUnitTooltip
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220013
	push	edi
	push	esi
	call	_lua_setfield

; 64   : 	Method(GetPurchaseBuildingTooltip);

	push	0
	push	OFFSET ?lGetPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetPurchaseBuildingTooltip
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220014
	push	edi
	push	esi
	call	_lua_setfield

; 65   : 	Method(GetFaithPurchaseBuildingTooltip);

	push	0
	push	OFFSET ?lGetFaithPurchaseBuildingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPurchaseBuildingTooltip
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220015
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 66   : 
; 67   : 	Method(CanJoin);

	push	0
	push	OFFSET ?lCanJoin@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanJoin
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220016
	push	edi
	push	esi
	call	_lua_setfield

; 68   : 	Method(IsBuildingLocalResourceValid);

	push	0
	push	OFFSET ?lIsBuildingLocalResourceValid@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsBuildingLocalResourceValid
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220017
	push	edi
	push	esi
	call	_lua_setfield

; 69   : 
; 70   : 	Method(GetResourceDemanded);

	push	0
	push	OFFSET ?lGetResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetResourceDemanded
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220018
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 71   : 	Method(SetResourceDemanded);

	push	0
	push	OFFSET ?lSetResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetResourceDemanded
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220019
	push	edi
	push	esi
	call	_lua_setfield

; 72   : 	Method(DoPickResourceDemanded);

	push	0
	push	OFFSET ?lDoPickResourceDemanded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lDoPickResourceDemanded
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220020
	push	edi
	push	esi
	call	_lua_setfield

; 73   : 
; 74   : 	Method(GetFoodTurnsLeft);

	push	0
	push	OFFSET ?lGetFoodTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFoodTurnsLeft
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220021
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 75   : 	Method(IsProduction);

	push	0
	push	OFFSET ?lIsProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProduction
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220022
	push	edi
	push	esi
	call	_lua_setfield

; 76   : 	Method(IsProductionLimited);

	push	0
	push	OFFSET ?lIsProductionLimited@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionLimited
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220023
	push	edi
	push	esi
	call	_lua_setfield

; 77   : 	Method(IsProductionUnit);

	push	0
	push	OFFSET ?lIsProductionUnit@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220024
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 78   : 	Method(IsProductionBuilding);

	push	0
	push	OFFSET ?lIsProductionBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionBuilding
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220025
	push	edi
	push	esi
	call	_lua_setfield

; 79   : 	Method(IsProductionProject);

	push	0
	push	OFFSET ?lIsProductionProject@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionProject
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220026
	push	edi
	push	esi
	call	_lua_setfield

; 80   : 	Method(IsProductionSpecialist);

	push	0
	push	OFFSET ?lIsProductionSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionSpecialist
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220027
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 81   : 	Method(IsProductionProcess);

	push	0
	push	OFFSET ?lIsProductionProcess@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionProcess
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220028
	push	edi
	push	esi
	call	_lua_setfield

; 82   : 
; 83   : 	Method(CanContinueProduction);

	push	0
	push	OFFSET ?lCanContinueProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanContinueProduction
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220029
	push	edi
	push	esi
	call	_lua_setfield

; 84   : 	Method(GetProductionExperience);

	push	0
	push	OFFSET ?lGetProductionExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionExperience
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220030
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 85   : 	Method(AddProductionExperience);

	push	0
	push	OFFSET ?lAddProductionExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lAddProductionExperience
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220031
	push	edi
	push	esi
	call	_lua_setfield

; 86   : 
; 87   : 	Method(GetProductionUnit);

	push	0
	push	OFFSET ?lGetProductionUnit@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220032
	push	edi
	push	esi
	call	_lua_setfield

; 88   : 	Method(GetProductionUnitAI);

	push	0
	push	OFFSET ?lGetProductionUnitAI@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionUnitAI
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220033
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 89   : 	Method(GetProductionBuilding);

	push	0
	push	OFFSET ?lGetProductionBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionBuilding
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220034
	push	edi
	push	esi
	call	_lua_setfield

; 90   : 	Method(GetProductionProject);

	push	0
	push	OFFSET ?lGetProductionProject@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionProject
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220035
	push	edi
	push	esi
	call	_lua_setfield

; 91   : 	Method(GetProductionSpecialist);

	push	0
	push	OFFSET ?lGetProductionSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionSpecialist
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220036
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 92   : 	Method(GetProductionProcess);

	push	0
	push	OFFSET ?lGetProductionProcess@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionProcess
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220037
	push	edi
	push	esi
	call	_lua_setfield

; 93   : 	//Method(GetProductionName);
; 94   : 	Method(GetProductionNameKey);

	push	0
	push	OFFSET ?lGetProductionNameKey@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionNameKey
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220038
	push	edi
	push	esi
	call	_lua_setfield

; 95   : 	Method(GetGeneralProductionTurnsLeft);

	push	0
	push	OFFSET ?lGetGeneralProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGeneralProductionTurnsLeft
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220039
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 96   : 	Method(IsFoodProduction);

	push	0
	push	OFFSET ?lIsFoodProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsFoodProduction
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220040
	push	edi
	push	esi
	call	_lua_setfield

; 97   : 	Method(GetFirstUnitOrder);

	push	0
	push	OFFSET ?lGetFirstUnitOrder@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFirstUnitOrder
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220041
	push	edi
	push	esi
	call	_lua_setfield

; 98   : 	Method(GetFirstProjectOrder);

	push	0
	push	OFFSET ?lGetFirstProjectOrder@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFirstProjectOrder
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220042
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 99   : 	Method(GetFirstSpecialistOrder);

	push	0
	push	OFFSET ?lGetFirstSpecialistOrder@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFirstSpecialistOrder
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220043
	push	edi
	push	esi
	call	_lua_setfield

; 100  : 
; 101  : 	Method(GetOrderFromQueue);

	push	0
	push	OFFSET ?lGetOrderFromQueue@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetOrderFromQueue
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220044
	push	edi
	push	esi
	call	_lua_setfield

; 102  : 
; 103  : 	Method(GetNumTrainUnitAI);

	push	0
	push	OFFSET ?lGetNumTrainUnitAI@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumTrainUnitAI
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220045
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 104  : 	Method(GetFirstBuildingOrder);

	push	0
	push	OFFSET ?lGetFirstBuildingOrder@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFirstBuildingOrder
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220046
	push	edi
	push	esi
	call	_lua_setfield

; 105  : 	Method(IsUnitFoodProduction);

	push	0
	push	OFFSET ?lIsUnitFoodProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsUnitFoodProduction
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220047
	push	edi
	push	esi
	call	_lua_setfield

; 106  : 	Method(GetProduction);

	push	0
	push	OFFSET ?lGetProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProduction
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220048
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 107  : 	Method(GetProductionTimes100);

	push	0
	push	OFFSET ?lGetProductionTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220049
	push	edi
	push	esi
	call	_lua_setfield

; 108  : 	Method(GetProductionNeeded);

	push	0
	push	OFFSET ?lGetProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionNeeded
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220050
	push	edi
	push	esi
	call	_lua_setfield

; 109  : 	Method(GetUnitProductionNeeded);

	push	0
	push	OFFSET ?lGetUnitProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitProductionNeeded
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220051
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 110  : 	Method(GetBuildingProductionNeeded);

	push	0
	push	OFFSET ?lGetBuildingProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingProductionNeeded
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220052
	push	edi
	push	esi
	call	_lua_setfield

; 111  : 	Method(GetProjectProductionNeeded);

	push	0
	push	OFFSET ?lGetProjectProductionNeeded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProjectProductionNeeded
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220053
	push	edi
	push	esi
	call	_lua_setfield

; 112  : 	Method(GetProductionTurnsLeft);

	push	0
	push	OFFSET ?lGetProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionTurnsLeft
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220054
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 113  : 	Method(GetUnitProductionTurnsLeft);

	push	0
	push	OFFSET ?lGetUnitProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitProductionTurnsLeft
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220055
	push	edi
	push	esi
	call	_lua_setfield

; 114  : 	Method(GetBuildingProductionTurnsLeft);

	push	0
	push	OFFSET ?lGetBuildingProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingProductionTurnsLeft
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220056
	push	edi
	push	esi
	call	_lua_setfield

; 115  : 	Method(GetProjectProductionTurnsLeft);

	push	0
	push	OFFSET ?lGetProjectProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProjectProductionTurnsLeft
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220057
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 116  : 	Method(GetSpecialistProductionTurnsLeft);

	push	0
	push	OFFSET ?lGetSpecialistProductionTurnsLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistProductionTurnsLeft
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220058
	push	edi
	push	esi
	call	_lua_setfield

; 117  : 
; 118  : 	Method(CreateApolloProgram);

	push	0
	push	OFFSET ?lCreateApolloProgram@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCreateApolloProgram
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220059
	push	edi
	push	esi
	call	_lua_setfield

; 119  : 
; 120  : 	Method(IsCanPurchase);

	push	0
	push	OFFSET ?lIsCanPurchase@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsCanPurchase
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220060
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 121  : 	Method(GetUnitPurchaseCost);

	push	0
	push	OFFSET ?lGetUnitPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitPurchaseCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220061
	push	edi
	push	esi
	call	_lua_setfield

; 122  : 	Method(GetUnitFaithPurchaseCost);

	push	0
	push	OFFSET ?lGetUnitFaithPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitFaithPurchaseCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220062
	push	edi
	push	esi
	call	_lua_setfield

; 123  : 	Method(GetBuildingPurchaseCost);

	push	0
	push	OFFSET ?lGetBuildingPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingPurchaseCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220063
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 124  : 	Method(GetBuildingFaithPurchaseCost);

	push	0
	push	OFFSET ?lGetBuildingFaithPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingFaithPurchaseCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220064
	push	edi
	push	esi
	call	_lua_setfield

; 125  : 	Method(GetProjectPurchaseCost);

	push	0
	push	OFFSET ?lGetProjectPurchaseCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProjectPurchaseCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220065
	push	edi
	push	esi
	call	_lua_setfield

; 126  : 
; 127  : 	Method(SetProduction);

	push	0
	push	OFFSET ?lSetProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetProduction
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220066
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 128  : 	Method(ChangeProduction);

	push	0
	push	OFFSET ?lChangeProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeProduction
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220067
	push	edi
	push	esi
	call	_lua_setfield

; 129  : 
; 130  : 	Method(GetYieldModifierTooltip);

	push	0
	push	OFFSET ?lGetYieldModifierTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetYieldModifierTooltip
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220068
	push	edi
	push	esi
	call	_lua_setfield

; 131  : 	Method(GetProductionModifier);

	push	0
	push	OFFSET ?lGetProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220069
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 132  : 
; 133  : 	Method(GetCurrentProductionDifference);

	push	0
	push	OFFSET ?lGetCurrentProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCurrentProductionDifference
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220070
	push	edi
	push	esi
	call	_lua_setfield

; 134  : 	Method(GetRawProductionDifference);

	push	0
	push	OFFSET ?lGetRawProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetRawProductionDifference
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220071
	push	edi
	push	esi
	call	_lua_setfield

; 135  : 	Method(GetCurrentProductionDifferenceTimes100);

	push	0
	push	OFFSET ?lGetCurrentProductionDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCurrentProductionDifferenceTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220072
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 136  : 	Method(GetRawProductionDifferenceTimes100);

	push	0
	push	OFFSET ?lGetRawProductionDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetRawProductionDifferenceTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220073
	push	edi
	push	esi
	call	_lua_setfield

; 137  : 	Method(GetUnitProductionModifier);

	push	0
	push	OFFSET ?lGetUnitProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220074
	push	edi
	push	esi
	call	_lua_setfield

; 138  : 	Method(GetBuildingProductionModifier);

	push	0
	push	OFFSET ?lGetBuildingProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220075
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 139  : 	Method(GetProjectProductionModifier);

	push	0
	push	OFFSET ?lGetProjectProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetProjectProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220076
	push	edi
	push	esi
	call	_lua_setfield

; 140  : 	Method(GetSpecialistProductionModifier);

	push	0
	push	OFFSET ?lGetSpecialistProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220077
	push	edi
	push	esi
	call	_lua_setfield

; 141  : 
; 142  : 	Method(GetExtraProductionDifference);

	push	0
	push	OFFSET ?lGetExtraProductionDifference@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetExtraProductionDifference
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220078
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 143  : 
; 144  : 	Method(CanHurry);

	push	0
	push	OFFSET ?lCanHurry@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanHurry
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220079
	push	edi
	push	esi
	call	_lua_setfield

; 145  : 	Method(Hurry);

	push	0
	push	OFFSET ?lHurry@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lHurry
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220080
	push	edi
	push	esi
	call	_lua_setfield

; 146  : 	Method(GetConscriptUnit);

	push	0
	push	OFFSET ?lGetConscriptUnit@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetConscriptUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220081
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 147  : 	Method(GetConscriptPopulation);

	push	0
	push	OFFSET ?lGetConscriptPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetConscriptPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220082
	push	edi
	push	esi
	call	_lua_setfield

; 148  : 	Method(ConscriptMinCityPopulation);

	push	0
	push	OFFSET ?lConscriptMinCityPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lConscriptMinCityPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220083
	push	edi
	push	esi
	call	_lua_setfield

; 149  : 	Method(CanConscript);

	push	0
	push	OFFSET ?lCanConscript@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanConscript
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220084
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 150  : 	Method(Conscript);

	push	0
	push	OFFSET ?lConscript@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lConscript
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220085
	push	edi
	push	esi
	call	_lua_setfield

; 151  : 	Method(GetResourceYieldRateModifier);

	push	0
	push	OFFSET ?lGetResourceYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetResourceYieldRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220086
	push	edi
	push	esi
	call	_lua_setfield

; 152  : 	Method(GetHandicapType);

	push	0
	push	OFFSET ?lGetHandicapType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetHandicapType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220087
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 153  : 	Method(GetCivilizationType);

	push	0
	push	OFFSET ?lGetCivilizationType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCivilizationType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220088
	push	edi
	push	esi
	call	_lua_setfield

; 154  : 	Method(GetPersonalityType);

	push	0
	push	OFFSET ?lGetPersonalityType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetPersonalityType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220089
	push	edi
	push	esi
	call	_lua_setfield

; 155  : 	Method(GetArtStyleType);

	push	0
	push	OFFSET ?lGetArtStyleType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetArtStyleType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220090
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 156  : 	Method(GetCitySizeType);

	push	0
	push	OFFSET ?lGetCitySizeType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCitySizeType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220091
	push	edi
	push	esi
	call	_lua_setfield

; 157  : 
; 158  : 	Method(IsBarbarian);

	push	0
	push	OFFSET ?lIsBarbarian@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsBarbarian
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220092
	push	edi
	push	esi
	call	_lua_setfield

; 159  : 	Method(IsHuman);

	push	0
	push	OFFSET ?lIsHuman@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsHuman
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220093
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 160  : 	Method(IsVisible);

	push	0
	push	OFFSET ?lIsVisible@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsVisible
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220094
	push	edi
	push	esi
	call	_lua_setfield

; 161  : 
; 162  : 	Method(IsCapital);

	push	0
	push	OFFSET ?lIsCapital@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsCapital
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220095
	push	edi
	push	esi
	call	_lua_setfield

; 163  : 	Method(IsOriginalCapital);

	push	0
	push	OFFSET ?lIsOriginalCapital@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsOriginalCapital
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220096
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 164  : 	Method(IsOriginalMajorCapital);

	push	0
	push	OFFSET ?lIsOriginalMajorCapital@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsOriginalMajorCapital
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220097
	push	edi
	push	esi
	call	_lua_setfield

; 165  : 	Method(IsCoastal);

	push	0
	push	OFFSET ?lIsCoastal@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsCoastal
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220098
	push	edi
	push	esi
	call	_lua_setfield

; 166  : 
; 167  : 	Method(FoodConsumption);

	push	0
	push	OFFSET ?lFoodConsumption@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lFoodConsumption
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220099
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 168  : 	Method(FoodDifference);

	push	0
	push	OFFSET ?lFoodDifference@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lFoodDifference
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220100
	push	edi
	push	esi
	call	_lua_setfield

; 169  : 	Method(FoodDifferenceTimes100);

	push	0
	push	OFFSET ?lFoodDifferenceTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lFoodDifferenceTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220101
	push	edi
	push	esi
	call	_lua_setfield

; 170  : 	Method(GrowthThreshold);

	push	0
	push	OFFSET ?lGrowthThreshold@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGrowthThreshold
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220102
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 171  : 	Method(ProductionLeft);

	push	0
	push	OFFSET ?lProductionLeft@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lProductionLeft
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220103
	push	edi
	push	esi
	call	_lua_setfield

; 172  : 	Method(HurryCost);

	push	0
	push	OFFSET ?lHurryCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lHurryCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220104
	push	edi
	push	esi
	call	_lua_setfield

; 173  : 	Method(HurryGold);

	push	0
	push	OFFSET ?lHurryGold@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lHurryGold
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220105
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 174  : 	Method(HurryPopulation);

	push	0
	push	OFFSET ?lHurryPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lHurryPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220106
	push	edi
	push	esi
	call	_lua_setfield

; 175  : 	Method(HurryProduction);

	push	0
	push	OFFSET ?lHurryProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lHurryProduction
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220107
	push	edi
	push	esi
	call	_lua_setfield

; 176  : 	Method(MaxHurryPopulation);

	push	0
	push	OFFSET ?lMaxHurryPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lMaxHurryPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220108
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 177  : 
; 178  : 	Method(GetNumBuilding);

	push	0
	push	OFFSET ?lGetNumBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumBuilding
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220109
	push	edi
	push	esi
	call	_lua_setfield

; 179  : 	Method(IsHasBuilding);

	push	0
	push	OFFSET ?lIsHasBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsHasBuilding
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220110
	push	edi
	push	esi
	call	_lua_setfield

; 180  : 	Method(GetNumActiveBuilding);

	push	0
	push	OFFSET ?lGetNumActiveBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumActiveBuilding
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220111
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 181  : 	Method(GetID);

	push	0
	push	OFFSET ?lGetID@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetID
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220112
	push	edi
	push	esi
	call	_lua_setfield

; 182  : 	Method(GetX);

	push	0
	push	OFFSET ?lGetX@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetX
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220113
	push	edi
	push	esi
	call	_lua_setfield

; 183  : 	Method(GetY);

	push	0
	push	OFFSET ?lGetY@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetY
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220114
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 184  : 	Method(At);

	push	0
	push	OFFSET ?lAt@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lAt
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220115
	push	edi
	push	esi
	call	_lua_setfield

; 185  : 	Method(AtPlot);

	push	0
	push	OFFSET ?lAtPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lAtPlot
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220116
	push	edi
	push	esi
	call	_lua_setfield

; 186  : 	Method(Plot);

	push	0
	push	OFFSET ?lPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lPlot
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220117
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 187  : 	Method(Area);

	push	0
	push	OFFSET ?lArea@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lArea
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220118
	push	edi
	push	esi
	call	_lua_setfield

; 188  : 	Method(WaterArea);

	push	0
	push	OFFSET ?lWaterArea@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lWaterArea
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220119
	push	edi
	push	esi
	call	_lua_setfield

; 189  : 	Method(GetRallyPlot);

	push	0
	push	OFFSET ?lGetRallyPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetRallyPlot
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220120
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 190  : 
; 191  : 	Method(CanBuyPlot);

	push	0
	push	OFFSET ?lCanBuyPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanBuyPlot
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220121
	push	edi
	push	esi
	call	_lua_setfield

; 192  : 	Method(CanBuyPlotAt);

	push	0
	push	OFFSET ?lCanBuyPlotAt@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanBuyPlotAt
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220122
	push	edi
	push	esi
	call	_lua_setfield

; 193  : 	Method(GetNextBuyablePlot);

	push	0
	push	OFFSET ?lGetNextBuyablePlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNextBuyablePlot
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220123
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 194  : 	Method(GetBuyablePlotList);

	push	0
	push	OFFSET ?lGetBuyablePlotList@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuyablePlotList
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220124
	push	edi
	push	esi
	call	_lua_setfield

; 195  : 	Method(GetBuyPlotCost);

	push	0
	push	OFFSET ?lGetBuyPlotCost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuyPlotCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220125
	push	edi
	push	esi
	call	_lua_setfield

; 196  : 	Method(CanBuyAnyPlot);

	push	0
	push	OFFSET ?lCanBuyAnyPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanBuyAnyPlot
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220126
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 197  : 
; 198  : 	Method(GetGarrisonedUnit);

	push	0
	push	OFFSET ?lGetGarrisonedUnit@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGarrisonedUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220127
	push	edi
	push	esi
	call	_lua_setfield

; 199  : 
; 200  : 	Method(GetGameTurnFounded);

	push	0
	push	OFFSET ?lGetGameTurnFounded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGameTurnFounded
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220128
	push	edi
	push	esi
	call	_lua_setfield

; 201  : 	Method(GetGameTurnAcquired);

	push	0
	push	OFFSET ?lGetGameTurnAcquired@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGameTurnAcquired
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220129
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 202  : 	Method(GetGameTurnLastExpanded);

	push	0
	push	OFFSET ?lGetGameTurnLastExpanded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGameTurnLastExpanded
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220130
	push	edi
	push	esi
	call	_lua_setfield

; 203  : 	Method(GetPopulation);

	push	0
	push	OFFSET ?lGetPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220131
	push	edi
	push	esi
	call	_lua_setfield

; 204  : 	Method(SetPopulation);

	push	0
	push	OFFSET ?lSetPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220132
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 205  : 	Method(ChangePopulation);

	push	0
	push	OFFSET ?lChangePopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangePopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220133
	push	edi
	push	esi
	call	_lua_setfield

; 206  : 	Method(GetRealPopulation);

	push	0
	push	OFFSET ?lGetRealPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetRealPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220134
	push	edi
	push	esi
	call	_lua_setfield

; 207  : 
; 208  : 	Method(GetHighestPopulation);

	push	0
	push	OFFSET ?lGetHighestPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetHighestPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220135
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 209  : 	Method(SetHighestPopulation);

	push	0
	push	OFFSET ?lSetHighestPopulation@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetHighestPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220136
	push	edi
	push	esi
	call	_lua_setfield

; 210  : 	//Method(GetWorkingPopulation);
; 211  : 	//Method(GetSpecialistPopulation);
; 212  : 	Method(GetNumGreatPeople);

	push	0
	push	OFFSET ?lGetNumGreatPeople@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumGreatPeople
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220137
	push	edi
	push	esi
	call	_lua_setfield

; 213  : 	Method(GetBaseGreatPeopleRate);

	push	0
	push	OFFSET ?lGetBaseGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseGreatPeopleRate
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220138
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 214  : 	Method(GetGreatPeopleRate);

	push	0
	push	OFFSET ?lGetGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGreatPeopleRate
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220139
	push	edi
	push	esi
	call	_lua_setfield

; 215  : 	Method(GetTotalGreatPeopleRateModifier);

	push	0
	push	OFFSET ?lGetTotalGreatPeopleRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetTotalGreatPeopleRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220140
	push	edi
	push	esi
	call	_lua_setfield

; 216  : 	Method(ChangeBaseGreatPeopleRate);

	push	0
	push	OFFSET ?lChangeBaseGreatPeopleRate@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseGreatPeopleRate
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220141
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 217  : 	Method(GetGreatPeopleRateModifier);

	push	0
	push	OFFSET ?lGetGreatPeopleRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetGreatPeopleRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220142
	push	edi
	push	esi
	call	_lua_setfield

; 218  : 
; 219  : 	Method(GetJONSCultureStored);

	push	0
	push	OFFSET ?lGetJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCultureStored
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220143
	push	edi
	push	esi
	call	_lua_setfield

; 220  : 	Method(SetJONSCultureStored);

	push	0
	push	OFFSET ?lSetJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetJONSCultureStored
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220144
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 221  : 	Method(ChangeJONSCultureStored);

	push	0
	push	OFFSET ?lChangeJONSCultureStored@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCultureStored
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220145
	push	edi
	push	esi
	call	_lua_setfield

; 222  : #ifdef AUI_PLAYER_FIX_JONS_CULTURE_IS_T100
; 223  : 	Method(GetJONSCultureStoredTimes100);

	push	0
	push	OFFSET ?lGetJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCultureStoredTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220146
	push	edi
	push	esi
	call	_lua_setfield

; 224  : 	Method(SetJONSCultureStoredTimes100);

	push	0
	push	OFFSET ?lSetJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetJONSCultureStoredTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220147
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 225  : 	Method(ChangeJONSCultureStoredTimes100);

	push	0
	push	OFFSET ?lChangeJONSCultureStoredTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCultureStoredTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220148
	push	edi
	push	esi
	call	_lua_setfield

; 226  : 	Method(GetJONSCulturePerTurnTimes100);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220149
	push	edi
	push	esi
	call	_lua_setfield

; 227  : #endif
; 228  : 	Method(GetJONSCultureLevel);

	push	0
	push	OFFSET ?lGetJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCultureLevel
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220150
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 229  : 	Method(SetJONSCultureLevel);

	push	0
	push	OFFSET ?lSetJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetJONSCultureLevel
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220151
	push	edi
	push	esi
	call	_lua_setfield

; 230  : 	Method(ChangeJONSCultureLevel);

	push	0
	push	OFFSET ?lChangeJONSCultureLevel@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCultureLevel
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220152
	push	edi
	push	esi
	call	_lua_setfield

; 231  : 	Method(DoJONSCultureLevelIncrease);

	push	0
	push	OFFSET ?lDoJONSCultureLevelIncrease@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lDoJONSCultureLevelIncrease
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220153
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 232  : 	Method(GetJONSCultureThreshold);

	push	0
	push	OFFSET ?lGetJONSCultureThreshold@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCultureThreshold
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220154
	push	edi
	push	esi
	call	_lua_setfield

; 233  : 
; 234  : 	Method(GetJONSCulturePerTurn);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurn
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220155
	push	edi
	push	esi
	call	_lua_setfield

; 235  : 
; 236  : 	Method(GetBaseJONSCulturePerTurn);

	push	0
	push	OFFSET ?lGetBaseJONSCulturePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseJONSCulturePerTurn
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220156
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 237  : 	Method(GetJONSCulturePerTurnFromBuildings);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromBuildings
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220157
	push	edi
	push	esi
	call	_lua_setfield

; 238  : 	Method(ChangeJONSCulturePerTurnFromBuildings);

	push	0
	push	OFFSET ?lChangeJONSCulturePerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCulturePerTurnFromBuildings
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220158
	push	edi
	push	esi
	call	_lua_setfield

; 239  : 	Method(GetJONSCulturePerTurnFromPolicies);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromPolicies
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220159
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 240  : 	Method(ChangeJONSCulturePerTurnFromPolicies);

	push	0
	push	OFFSET ?lChangeJONSCulturePerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCulturePerTurnFromPolicies
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220160
	push	edi
	push	esi
	call	_lua_setfield

; 241  : 	Method(GetJONSCulturePerTurnFromSpecialists);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromSpecialists
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220161
	push	edi
	push	esi
	call	_lua_setfield

; 242  : 	Method(ChangeJONSCulturePerTurnFromSpecialists);

	push	0
	push	OFFSET ?lChangeJONSCulturePerTurnFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeJONSCulturePerTurnFromSpecialists
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220162
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 243  : 	Method(GetJONSCulturePerTurnFromGreatWorks);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromGreatWorks
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220163
	push	edi
	push	esi
	call	_lua_setfield

; 244  : 	Method(GetJONSCulturePerTurnFromTraits);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromTraits@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromTraits
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220164
	push	edi
	push	esi
	call	_lua_setfield

; 245  : 	Method(GetJONSCulturePerTurnFromReligion);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromReligion
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220165
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 246  : 	Method(GetJONSCulturePerTurnFromLeagues);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromLeagues@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetJONSCulturePerTurnFromLeagues
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220166
	push	edi
	push	esi
	call	_lua_setfield

; 247  : 
; 248  : 	Method(GetCultureRateModifier);

	push	0
	push	OFFSET ?lGetCultureRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCultureRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220167
	push	edi
	push	esi
	call	_lua_setfield

; 249  : 	Method(ChangeCultureRateModifier);

	push	0
	push	OFFSET ?lChangeCultureRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeCultureRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220168
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 250  : 
; 251  : 	Method(GetNumGreatWorks);

	push	0
	push	OFFSET ?lGetNumGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumGreatWorks
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220169
	push	edi
	push	esi
	call	_lua_setfield

; 252  : 	Method(GetNumGreatWorkSlots);

	push	0
	push	OFFSET ?lGetNumGreatWorkSlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumGreatWorkSlots
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220170
	push	edi
	push	esi
	call	_lua_setfield

; 253  : 	Method(GetBaseTourism);

	push	0
	push	OFFSET ?lGetBaseTourism@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseTourism
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220171
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 254  : 	Method(GetTourismMultiplier);

	push	0
	push	OFFSET ?lGetTourismMultiplier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetTourismMultiplier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220172
	push	edi
	push	esi
	call	_lua_setfield

; 255  : 	Method(GetTourismTooltip);

	push	0
	push	OFFSET ?lGetTourismTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetTourismTooltip
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220173
	push	edi
	push	esi
	call	_lua_setfield

; 256  : 	Method(GetFilledSlotsTooltip);

	push	0
	push	OFFSET ?lGetFilledSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFilledSlotsTooltip
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220174
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 257  : 	Method(GetTotalSlotsTooltip);

	push	0
	push	OFFSET ?lGetTotalSlotsTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetTotalSlotsTooltip
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220175
	push	edi
	push	esi
	call	_lua_setfield

; 258  : 	Method(ClearGreatWorks);

	push	0
	push	OFFSET ?lClearGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lClearGreatWorks
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220176
	push	edi
	push	esi
	call	_lua_setfield

; 259  : 	Method(GetFaithBuildingTourism);

	push	0
	push	OFFSET ?lGetFaithBuildingTourism@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithBuildingTourism
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220177
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 260  : 
; 261  : 	Method(IsThemingBonusPossible);

	push	0
	push	OFFSET ?lIsThemingBonusPossible@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsThemingBonusPossible
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220178
	push	edi
	push	esi
	call	_lua_setfield

; 262  : 	Method(GetThemingBonus);

	push	0
	push	OFFSET ?lGetThemingBonus@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetThemingBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220179
	push	edi
	push	esi
	call	_lua_setfield

; 263  : 	Method(GetThemingTooltip);

	push	0
	push	OFFSET ?lGetThemingTooltip@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetThemingTooltip
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220180
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 264  : 
; 265  : 	Method(GetFaithPerTurn);

	push	0
	push	OFFSET ?lGetFaithPerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPerTurn
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220181
	push	edi
	push	esi
	call	_lua_setfield

; 266  : 	Method(GetFaithPerTurnFromBuildings);

	push	0
	push	OFFSET ?lGetFaithPerTurnFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPerTurnFromBuildings
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220182
	push	edi
	push	esi
	call	_lua_setfield

; 267  : 	Method(GetFaithPerTurnFromPolicies);

	push	0
	push	OFFSET ?lGetFaithPerTurnFromPolicies@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPerTurnFromPolicies
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220183
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 268  : 	Method(GetFaithPerTurnFromTraits);

	push	0
	push	OFFSET ?lGetFaithPerTurnFromTraits@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPerTurnFromTraits
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220184
	push	edi
	push	esi
	call	_lua_setfield

; 269  : 	Method(GetFaithPerTurnFromReligion);

	push	0
	push	OFFSET ?lGetFaithPerTurnFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFaithPerTurnFromReligion
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220185
	push	edi
	push	esi
	call	_lua_setfield

; 270  : 
; 271  : 	Method(IsReligionInCity);

	push	0
	push	OFFSET ?lIsReligionInCity@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsReligionInCity
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220186
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 272  : 	Method(IsHolyCityForReligion);

	push	0
	push	OFFSET ?lIsHolyCityForReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsHolyCityForReligion
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220187
	push	edi
	push	esi
	call	_lua_setfield

; 273  : 	Method(IsHolyCityAnyReligion);

	push	0
	push	OFFSET ?lIsHolyCityAnyReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsHolyCityAnyReligion
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220188
	push	edi
	push	esi
	call	_lua_setfield

; 274  : 
; 275  : 	Method(GetNumFollowers);

	push	0
	push	OFFSET ?lGetNumFollowers@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumFollowers
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220189
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 276  : 	Method(GetReligiousMajority);

	push	0
	push	OFFSET ?lGetReligiousMajority@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetReligiousMajority
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220190
	push	edi
	push	esi
	call	_lua_setfield

; 277  : 	Method(GetSecondaryReligion);

	push	0
	push	OFFSET ?lGetSecondaryReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSecondaryReligion
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220191
	push	edi
	push	esi
	call	_lua_setfield

; 278  : 	Method(GetSecondaryReligionPantheonBelief);

	push	0
	push	OFFSET ?lGetSecondaryReligionPantheonBelief@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSecondaryReligionPantheonBelief
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220192
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 279  : 	Method(GetPressurePerTurn);

	push	0
	push	OFFSET ?lGetPressurePerTurn@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetPressurePerTurn
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220193
	push	edi
	push	esi
	call	_lua_setfield

; 280  : 	Method(ConvertPercentFollowers);

	push	0
	push	OFFSET ?lConvertPercentFollowers@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lConvertPercentFollowers
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220194
	push	edi
	push	esi
	call	_lua_setfield

; 281  : 	Method(AdoptReligionFully);

	push	0
	push	OFFSET ?lAdoptReligionFully@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lAdoptReligionFully
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220195
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 282  : 	Method(GetReligionBuildingClassHappiness);

	push	0
	push	OFFSET ?lGetReligionBuildingClassHappiness@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetReligionBuildingClassHappiness
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220196
	push	edi
	push	esi
	call	_lua_setfield

; 283  : 	Method(GetReligionBuildingClassYieldChange);

	push	0
	push	OFFSET ?lGetReligionBuildingClassYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetReligionBuildingClassYieldChange
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220197
	push	edi
	push	esi
	call	_lua_setfield

; 284  : 	Method(GetLeagueBuildingClassYieldChange);

	push	0
	push	OFFSET ?lGetLeagueBuildingClassYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetLeagueBuildingClassYieldChange
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220198
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 285  : 	Method(GetNumTradeRoutesAddingPressure);

	push	0
	push	OFFSET ?lGetNumTradeRoutesAddingPressure@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumTradeRoutesAddingPressure
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220199
	push	edi
	push	esi
	call	_lua_setfield

; 286  : 
; 287  : 	Method(GetNumWorldWonders);

	push	0
	push	OFFSET ?lGetNumWorldWonders@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumWorldWonders
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220200
	push	edi
	push	esi
	call	_lua_setfield

; 288  : 	Method(GetNumTeamWonders);

	push	0
	push	OFFSET ?lGetNumTeamWonders@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumTeamWonders
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220201
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 289  : 	Method(GetNumNationalWonders);

	push	0
	push	OFFSET ?lGetNumNationalWonders@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumNationalWonders
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220202
	push	edi
	push	esi
	call	_lua_setfield

; 290  : 	Method(GetNumBuildings);

	push	0
	push	OFFSET ?lGetNumBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumBuildings
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220203
	push	edi
	push	esi
	call	_lua_setfield

; 291  : 
; 292  : 	Method(GetWonderProductionModifier);

	push	0
	push	OFFSET ?lGetWonderProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetWonderProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220204
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 293  : 	Method(ChangeWonderProductionModifier);

	push	0
	push	OFFSET ?lChangeWonderProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeWonderProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220205
	push	edi
	push	esi
	call	_lua_setfield

; 294  : 
; 295  : 	Method(GetLocalResourceWonderProductionMod);

	push	0
	push	OFFSET ?lGetLocalResourceWonderProductionMod@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetLocalResourceWonderProductionMod
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220206
	push	edi
	push	esi
	call	_lua_setfield

; 296  : 
; 297  : 	Method(ChangeHealRate);

	push	0
	push	OFFSET ?lChangeHealRate@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeHealRate
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220207
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 298  : 
; 299  : 	Method(IsNoOccupiedUnhappiness);

	push	0
	push	OFFSET ?lIsNoOccupiedUnhappiness@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsNoOccupiedUnhappiness
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220208
	push	edi
	push	esi
	call	_lua_setfield

; 300  : 
; 301  : 	Method(GetFood);

	push	0
	push	OFFSET ?lGetFood@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFood
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220209
	push	edi
	push	esi
	call	_lua_setfield

; 302  : 	Method(GetFoodTimes100);

	push	0
	push	OFFSET ?lGetFoodTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFoodTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220210
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 303  : 	Method(SetFood);

	push	0
	push	OFFSET ?lSetFood@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetFood
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220211
	push	edi
	push	esi
	call	_lua_setfield

; 304  : 	Method(ChangeFood);

	push	0
	push	OFFSET ?lChangeFood@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeFood
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220212
	push	edi
	push	esi
	call	_lua_setfield

; 305  : 	Method(GetFoodKept);

	push	0
	push	OFFSET ?lGetFoodKept@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFoodKept
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220213
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 306  : 	Method(GetMaxFoodKeptPercent);

	push	0
	push	OFFSET ?lGetMaxFoodKeptPercent@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetMaxFoodKeptPercent
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220214
	push	edi
	push	esi
	call	_lua_setfield

; 307  : 	Method(GetOverflowProduction);

	push	0
	push	OFFSET ?lGetOverflowProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetOverflowProduction
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220215
	push	edi
	push	esi
	call	_lua_setfield

; 308  : 	Method(SetOverflowProduction);

	push	0
	push	OFFSET ?lSetOverflowProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetOverflowProduction
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220216
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 309  : 	Method(GetFeatureProduction);

	push	0
	push	OFFSET ?lGetFeatureProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFeatureProduction
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220217
	push	edi
	push	esi
	call	_lua_setfield

; 310  : 	Method(SetFeatureProduction);

	push	0
	push	OFFSET ?lSetFeatureProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetFeatureProduction
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220218
	push	edi
	push	esi
	call	_lua_setfield

; 311  : 	Method(GetMilitaryProductionModifier);

	push	0
	push	OFFSET ?lGetMilitaryProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetMilitaryProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220219
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 312  : 	Method(GetSpaceProductionModifier);

	push	0
	push	OFFSET ?lGetSpaceProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpaceProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220220
	push	edi
	push	esi
	call	_lua_setfield

; 313  : 	Method(GetBuildingDefense);

	push	0
	push	OFFSET ?lGetBuildingDefense@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingDefense
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220221
	push	edi
	push	esi
	call	_lua_setfield

; 314  : 	Method(GetFreeExperience);

	push	0
	push	OFFSET ?lGetFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFreeExperience
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220222
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 315  : 	Method(GetNukeModifier);

	push	0
	push	OFFSET ?lGetNukeModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNukeModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220223
	push	edi
	push	esi
	call	_lua_setfield

; 316  : 	//Method(GetFreeSpecialist);
; 317  : 
; 318  : 	Method(IsResistance);

	push	0
	push	OFFSET ?lIsResistance@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsResistance
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220224
	push	edi
	push	esi
	call	_lua_setfield

; 319  : 	Method(GetResistanceTurns);

	push	0
	push	OFFSET ?lGetResistanceTurns@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetResistanceTurns
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220225
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 320  : 	Method(ChangeResistanceTurns);

	push	0
	push	OFFSET ?lChangeResistanceTurns@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeResistanceTurns
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220226
	push	edi
	push	esi
	call	_lua_setfield

; 321  : 
; 322  : 	Method(IsRazing);

	push	0
	push	OFFSET ?lIsRazing@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsRazing
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220227
	push	edi
	push	esi
	call	_lua_setfield

; 323  : 	Method(GetRazingTurns);

	push	0
	push	OFFSET ?lGetRazingTurns@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetRazingTurns
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220228
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 324  : 	Method(ChangeRazingTurns);

	push	0
	push	OFFSET ?lChangeRazingTurns@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeRazingTurns
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220229
	push	edi
	push	esi
	call	_lua_setfield

; 325  : 
; 326  : 	Method(IsOccupied);

	push	0
	push	OFFSET ?lIsOccupied@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsOccupied
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220230
	push	edi
	push	esi
	call	_lua_setfield

; 327  : 	Method(SetOccupied);

	push	0
	push	OFFSET ?lSetOccupied@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetOccupied
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220231
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 328  : 
; 329  : 	Method(IsPuppet);

	push	0
	push	OFFSET ?lIsPuppet@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsPuppet
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220232
	push	edi
	push	esi
	call	_lua_setfield

; 330  : 	Method(SetPuppet);

	push	0
	push	OFFSET ?lSetPuppet@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetPuppet
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220233
	push	edi
	push	esi
	call	_lua_setfield

; 331  : 
; 332  : 	Method(GetHappinessFromBuildings);

	push	0
	push	OFFSET ?lGetHappinessFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetHappinessFromBuildings
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220234
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 333  : 	Method(GetHappiness);

	push	0
	push	OFFSET ?lGetHappiness@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetHappiness
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220235
	push	edi
	push	esi
	call	_lua_setfield

; 334  : 	Method(GetLocalHappiness);

	push	0
	push	OFFSET ?lGetLocalHappiness@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetLocalHappiness
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220236
	push	edi
	push	esi
	call	_lua_setfield

; 335  : 
; 336  : 	Method(IsNeverLost);

	push	0
	push	OFFSET ?lIsNeverLost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsNeverLost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220237
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 337  : 	Method(SetNeverLost);

	push	0
	push	OFFSET ?lSetNeverLost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetNeverLost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220238
	push	edi
	push	esi
	call	_lua_setfield

; 338  : 	Method(IsDrafted);

	push	0
	push	OFFSET ?lIsDrafted@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsDrafted
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220239
	push	edi
	push	esi
	call	_lua_setfield

; 339  : 	Method(SetDrafted);

	push	0
	push	OFFSET ?lSetDrafted@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetDrafted
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220240
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 340  : 
; 341  : 	Method(IsBlockaded);

	push	0
	push	OFFSET ?lIsBlockaded@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsBlockaded
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220241
	push	edi
	push	esi
	call	_lua_setfield

; 342  : 
; 343  : 	Method(GetWeLoveTheKingDayCounter);

	push	0
	push	OFFSET ?lGetWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetWeLoveTheKingDayCounter
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220242
	push	edi
	push	esi
	call	_lua_setfield

; 344  : 	Method(SetWeLoveTheKingDayCounter);

	push	0
	push	OFFSET ?lSetWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetWeLoveTheKingDayCounter
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220243
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 345  : 	Method(ChangeWeLoveTheKingDayCounter);

	push	0
	push	OFFSET ?lChangeWeLoveTheKingDayCounter@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeWeLoveTheKingDayCounter
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220244
	push	edi
	push	esi
	call	_lua_setfield

; 346  : 
; 347  : 	Method(GetNumThingsProduced);

	push	0
	push	OFFSET ?lGetNumThingsProduced@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumThingsProduced
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220245
	push	edi
	push	esi
	call	_lua_setfield

; 348  : 
; 349  : 	Method(IsProductionAutomated);

	push	0
	push	OFFSET ?lIsProductionAutomated@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsProductionAutomated
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220246
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 350  : 	Method(SetProductionAutomated);

	push	0
	push	OFFSET ?lSetProductionAutomated@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetProductionAutomated
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220247
	push	edi
	push	esi
	call	_lua_setfield

; 351  : 	Method(SetCitySizeBoost);

	push	0
	push	OFFSET ?lSetCitySizeBoost@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetCitySizeBoost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220248
	push	edi
	push	esi
	call	_lua_setfield

; 352  : 	Method(GetOwner);

	push	0
	push	OFFSET ?lGetOwner@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetOwner
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220249
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 353  : 	Method(GetTeam);

	push	0
	push	OFFSET ?lGetTeam@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetTeam
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220250
	push	edi
	push	esi
	call	_lua_setfield

; 354  : 	Method(GetPreviousOwner);

	push	0
	push	OFFSET ?lGetPreviousOwner@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetPreviousOwner
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220251
	push	edi
	push	esi
	call	_lua_setfield

; 355  : 	Method(GetOriginalOwner);

	push	0
	push	OFFSET ?lGetOriginalOwner@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetOriginalOwner
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220252
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 356  : 	Method(GetSeaPlotYield);

	push	0
	push	OFFSET ?lGetSeaPlotYield@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSeaPlotYield
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220253
	push	edi
	push	esi
	call	_lua_setfield

; 357  : 	Method(GetRiverPlotYield);

	push	0
	push	OFFSET ?lGetRiverPlotYield@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetRiverPlotYield
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220254
	push	edi
	push	esi
	call	_lua_setfield

; 358  : 	Method(GetLakePlotYield);

	push	0
	push	OFFSET ?lGetLakePlotYield@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetLakePlotYield
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220255
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 359  : 
; 360  : 	Method(GetBaseYieldRate);

	push	0
	push	OFFSET ?lGetBaseYieldRate@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRate
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220256
	push	edi
	push	esi
	call	_lua_setfield

; 361  : 
; 362  : 	Method(GetBaseYieldRateFromGreatWorks);

	push	0
	push	OFFSET ?lGetBaseYieldRateFromGreatWorks@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromGreatWorks
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220257
	push	edi
	push	esi
	call	_lua_setfield

; 363  : 
; 364  : 	Method(GetBaseYieldRateFromTerrain);

	push	0
	push	OFFSET ?lGetBaseYieldRateFromTerrain@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromTerrain
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220258
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 365  : 	Method(ChangeBaseYieldRateFromTerrain);

	push	0
	push	OFFSET ?lChangeBaseYieldRateFromTerrain@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseYieldRateFromTerrain
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220259
	push	edi
	push	esi
	call	_lua_setfield

; 366  : 
; 367  : 	Method(GetBaseYieldRateFromBuildings);

	push	0
	push	OFFSET ?lGetBaseYieldRateFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromBuildings
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220260
	push	edi
	push	esi
	call	_lua_setfield

; 368  : 	Method(ChangeBaseYieldRateFromBuildings);

	push	0
	push	OFFSET ?lChangeBaseYieldRateFromBuildings@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseYieldRateFromBuildings
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220261
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 369  : 
; 370  : 	Method(GetBaseYieldRateFromSpecialists);

	push	0
	push	OFFSET ?lGetBaseYieldRateFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromSpecialists
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220262
	push	edi
	push	esi
	call	_lua_setfield

; 371  : 	Method(ChangeBaseYieldRateFromSpecialists);

	push	0
	push	OFFSET ?lChangeBaseYieldRateFromSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseYieldRateFromSpecialists
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220263
	push	edi
	push	esi
	call	_lua_setfield

; 372  : 
; 373  : 	Method(GetBaseYieldRateFromMisc);

	push	0
	push	OFFSET ?lGetBaseYieldRateFromMisc@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromMisc
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220264
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 374  : 	Method(ChangeBaseYieldRateFromMisc);

	push	0
	push	OFFSET ?lChangeBaseYieldRateFromMisc@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseYieldRateFromMisc
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220265
	push	edi
	push	esi
	call	_lua_setfield

; 375  : 
; 376  : 	Method(GetBaseYieldRateFromReligion);

	push	0
	push	OFFSET ?lGetBaseYieldRateFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateFromReligion
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220266
	push	edi
	push	esi
	call	_lua_setfield

; 377  : 	Method(ChangeBaseYieldRateFromReligion);

	push	0
	push	OFFSET ?lChangeBaseYieldRateFromReligion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBaseYieldRateFromReligion
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220267
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 378  : 
; 379  : 	Method(GetYieldPerPopTimes100);

	push	0
	push	OFFSET ?lGetYieldPerPopTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetYieldPerPopTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220268
	push	edi
	push	esi
	call	_lua_setfield

; 380  : 
; 381  : 	Method(GetBaseYieldRateModifier);

	push	0
	push	OFFSET ?lGetBaseYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBaseYieldRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220269
	push	edi
	push	esi
	call	_lua_setfield

; 382  : 	Method(GetYieldRate);

	push	0
	push	OFFSET ?lGetYieldRate@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetYieldRate
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220270
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 383  : 	Method(GetYieldRateTimes100);

	push	0
	push	OFFSET ?lGetYieldRateTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetYieldRateTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220271
	push	edi
	push	esi
	call	_lua_setfield

; 384  : 	Method(GetYieldRateModifier);

	push	0
	push	OFFSET ?lGetYieldRateModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetYieldRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220272
	push	edi
	push	esi
	call	_lua_setfield

; 385  : 
; 386  : 	Method(GetExtraSpecialistYield);

	push	0
	push	OFFSET ?lGetExtraSpecialistYield@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetExtraSpecialistYield
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220273
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 387  : 	Method(GetExtraSpecialistYieldOfType);

	push	0
	push	OFFSET ?lGetExtraSpecialistYieldOfType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetExtraSpecialistYieldOfType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220274
	push	edi
	push	esi
	call	_lua_setfield

; 388  : 
; 389  : 	Method(GetDomainFreeExperience);

	push	0
	push	OFFSET ?lGetDomainFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetDomainFreeExperience
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220275
	push	edi
	push	esi
	call	_lua_setfield

; 390  : 	Method(GetDomainProductionModifier);

	push	0
	push	OFFSET ?lGetDomainProductionModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetDomainProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220276
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 391  : 
; 392  : 	Method(IsEverOwned);

	push	0
	push	OFFSET ?lIsEverOwned@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsEverOwned
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220277
	push	edi
	push	esi
	call	_lua_setfield

; 393  : 
; 394  : 	Method(IsRevealed);

	push	0
	push	OFFSET ?lIsRevealed@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsRevealed
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220278
	push	edi
	push	esi
	call	_lua_setfield

; 395  : 	Method(SetRevealed);

	push	0
	push	OFFSET ?lSetRevealed@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetRevealed
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220279
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 396  : 	Method(GetNameKey);

	push	0
	push	OFFSET ?lGetNameKey@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNameKey
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220280
	push	edi
	push	esi
	call	_lua_setfield

; 397  : 	Method(GetName);

	push	0
	push	OFFSET ?lGetName@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetName
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220281
	push	edi
	push	esi
	call	_lua_setfield

; 398  : 	Method(SetName);

	push	0
	push	OFFSET ?lSetName@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetName
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220282
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 399  : 	Method(IsHasResourceLocal);

	push	0
	push	OFFSET ?lIsHasResourceLocal@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsHasResourceLocal
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220283
	push	edi
	push	esi
	call	_lua_setfield

; 400  : 	Method(GetBuildingProduction);

	push	0
	push	OFFSET ?lGetBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingProduction
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220284
	push	edi
	push	esi
	call	_lua_setfield

; 401  : 	Method(SetBuildingProduction);

	push	0
	push	OFFSET ?lSetBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetBuildingProduction
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220285
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 402  : 	Method(ChangeBuildingProduction);

	push	0
	push	OFFSET ?lChangeBuildingProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBuildingProduction
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220286
	push	edi
	push	esi
	call	_lua_setfield

; 403  : 	Method(GetBuildingProductionTime);

	push	0
	push	OFFSET ?lGetBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingProductionTime
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220287
	push	edi
	push	esi
	call	_lua_setfield

; 404  : 	Method(SetBuildingProductionTime);

	push	0
	push	OFFSET ?lSetBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetBuildingProductionTime
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220288
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 405  : 	Method(ChangeBuildingProductionTime);

	push	0
	push	OFFSET ?lChangeBuildingProductionTime@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeBuildingProductionTime
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220289
	push	edi
	push	esi
	call	_lua_setfield

; 406  : 	Method(GetBuildingOriginalOwner);

	push	0
	push	OFFSET ?lGetBuildingOriginalOwner@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingOriginalOwner
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220290
	push	edi
	push	esi
	call	_lua_setfield

; 407  : 	Method(GetBuildingOriginalTime);

	push	0
	push	OFFSET ?lGetBuildingOriginalTime@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingOriginalTime
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220291
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 408  : 	Method(GetUnitProduction);

	push	0
	push	OFFSET ?lGetUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitProduction
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220292
	push	edi
	push	esi
	call	_lua_setfield

; 409  : 	Method(SetUnitProduction);

	push	0
	push	OFFSET ?lSetUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetUnitProduction
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220293
	push	edi
	push	esi
	call	_lua_setfield

; 410  : 	Method(ChangeUnitProduction);

	push	0
	push	OFFSET ?lChangeUnitProduction@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeUnitProduction
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220294
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 411  : 
; 412  : 	Method(IsCanAddSpecialistToBuilding);

	push	0
	push	OFFSET ?lIsCanAddSpecialistToBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsCanAddSpecialistToBuilding
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220295
	push	edi
	push	esi
	call	_lua_setfield

; 413  : 	Method(GetSpecialistUpgradeThreshold);

	push	0
	push	OFFSET ?lGetSpecialistUpgradeThreshold@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistUpgradeThreshold
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220296
	push	edi
	push	esi
	call	_lua_setfield

; 414  : 	Method(GetNumSpecialistsAllowedByBuilding);

	push	0
	push	OFFSET ?lGetNumSpecialistsAllowedByBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumSpecialistsAllowedByBuilding
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220297
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 415  : 	Method(GetSpecialistCount);

	push	0
	push	OFFSET ?lGetSpecialistCount@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220298
	push	edi
	push	esi
	call	_lua_setfield

; 416  : 	Method(GetSpecialistGreatPersonProgress);

	push	0
	push	OFFSET ?lGetSpecialistGreatPersonProgress@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistGreatPersonProgress
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220299
	push	edi
	push	esi
	call	_lua_setfield

; 417  : 	Method(GetSpecialistGreatPersonProgressTimes100);

	push	0
	push	OFFSET ?lGetSpecialistGreatPersonProgressTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistGreatPersonProgressTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220300
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 418  : 	Method(ChangeSpecialistGreatPersonProgressTimes100);

	push	0
	push	OFFSET ?lChangeSpecialistGreatPersonProgressTimes100@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeSpecialistGreatPersonProgressTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220301
	push	edi
	push	esi
	call	_lua_setfield

; 419  : 	Method(GetNumSpecialistsInBuilding);

	push	0
	push	OFFSET ?lGetNumSpecialistsInBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumSpecialistsInBuilding
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220302
	push	edi
	push	esi
	call	_lua_setfield

; 420  : 	Method(DoReallocateCitizens);

	push	0
	push	OFFSET ?lDoReallocateCitizens@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lDoReallocateCitizens
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220303
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 421  : 	Method(DoVerifyWorkingPlots);

	push	0
	push	OFFSET ?lDoVerifyWorkingPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lDoVerifyWorkingPlots
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220304
	push	edi
	push	esi
	call	_lua_setfield

; 422  : 	Method(IsNoAutoAssignSpecialists);

	push	0
	push	OFFSET ?lIsNoAutoAssignSpecialists@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsNoAutoAssignSpecialists
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220305
	push	edi
	push	esi
	call	_lua_setfield

; 423  : 
; 424  : 	Method(GetFocusType);

	push	0
	push	OFFSET ?lGetFocusType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFocusType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220306
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 425  : 	Method(SetFocusType);

	push	0
	push	OFFSET ?lSetFocusType@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetFocusType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220307
	push	edi
	push	esi
	call	_lua_setfield

; 426  : 
; 427  : 	Method(IsForcedAvoidGrowth);

	push	0
	push	OFFSET ?lIsForcedAvoidGrowth@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsForcedAvoidGrowth
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220308
	push	edi
	push	esi
	call	_lua_setfield

; 428  : 
; 429  : 	Method(GetUnitCombatFreeExperience);

	push	0
	push	OFFSET ?lGetUnitCombatFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetUnitCombatFreeExperience
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220309
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 430  : 	Method(GetFreePromotionCount);

	push	0
	push	OFFSET ?lGetFreePromotionCount@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetFreePromotionCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220310
	push	edi
	push	esi
	call	_lua_setfield

; 431  : 	Method(IsFreePromotion);

	push	0
	push	OFFSET ?lIsFreePromotion@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsFreePromotion
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220311
	push	edi
	push	esi
	call	_lua_setfield

; 432  : 	Method(GetSpecialistFreeExperience);

	push	0
	push	OFFSET ?lGetSpecialistFreeExperience@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistFreeExperience
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220312
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 433  : 
; 434  : 	Method(UpdateStrengthValue);

	push	0
	push	OFFSET ?lUpdateStrengthValue@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lUpdateStrengthValue
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220313
	push	edi
	push	esi
	call	_lua_setfield

; 435  : 	Method(GetStrengthValue);

	push	0
	push	OFFSET ?lGetStrengthValue@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetStrengthValue
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220314
	push	edi
	push	esi
	call	_lua_setfield

; 436  : 
; 437  : 	Method(GetDamage);

	push	0
	push	OFFSET ?lGetDamage@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetDamage
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220315
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 438  : 	Method(SetDamage);

	push	0
	push	OFFSET ?lSetDamage@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetDamage
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220316
	push	edi
	push	esi
	call	_lua_setfield

; 439  : 	Method(ChangeDamage);

	push	0
	push	OFFSET ?lChangeDamage@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lChangeDamage
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220317
	push	edi
	push	esi
	call	_lua_setfield

; 440  : 	Method(GetMaxHitPoints);

	push	0
	push	OFFSET ?lGetMaxHitPoints@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetMaxHitPoints
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220318
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 441  : 	Method(CanRangeStrike);

	push	0
	push	OFFSET ?lCanRangeStrike@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanRangeStrike
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220319
	push	edi
	push	esi
	call	_lua_setfield

; 442  : 	Method(CanRangeStrikeNow);

	push	0
	push	OFFSET ?lCanRangeStrikeNow@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanRangeStrikeNow
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220320
	push	edi
	push	esi
	call	_lua_setfield

; 443  : 	Method(CanRangeStrikeAt);

	push	0
	push	OFFSET ?lCanRangeStrikeAt@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanRangeStrikeAt
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220321
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 444  : 	Method(HasPerformedRangedStrikeThisTurn);

	push	0
	push	OFFSET ?lHasPerformedRangedStrikeThisTurn@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lHasPerformedRangedStrikeThisTurn
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220322
	push	edi
	push	esi
	call	_lua_setfield

; 445  : 	Method(RangeCombatUnitDefense);

	push	0
	push	OFFSET ?lRangeCombatUnitDefense@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lRangeCombatUnitDefense
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220323
	push	edi
	push	esi
	call	_lua_setfield

; 446  : 	Method(RangeCombatDamage);

	push	0
	push	OFFSET ?lRangeCombatDamage@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lRangeCombatDamage
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220324
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 447  : 	Method(GetAirStrikeDefenseDamage);

	push	0
	push	OFFSET ?lGetAirStrikeDefenseDamage@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetAirStrikeDefenseDamage
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220325
	push	edi
	push	esi
	call	_lua_setfield

; 448  : 
; 449  : 	Method(IsWorkingPlot);

	push	0
	push	OFFSET ?lIsWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsWorkingPlot
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220326
	push	edi
	push	esi
	call	_lua_setfield

; 450  : 	Method(AlterWorkingPlot);

	push	0
	push	OFFSET ?lAlterWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lAlterWorkingPlot
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220327
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 451  : 	Method(IsForcedWorkingPlot);

	push	0
	push	OFFSET ?lIsForcedWorkingPlot@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsForcedWorkingPlot
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220328
	push	edi
	push	esi
	call	_lua_setfield

; 452  : 	Method(GetNumRealBuilding);

	push	0
	push	OFFSET ?lGetNumRealBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumRealBuilding
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220329
	push	edi
	push	esi
	call	_lua_setfield

; 453  : 	Method(SetNumRealBuilding);

	push	0
	push	OFFSET ?lSetNumRealBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetNumRealBuilding
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220330
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 454  : 	Method(GetNumFreeBuilding);

	push	0
	push	OFFSET ?lGetNumFreeBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumFreeBuilding
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220331
	push	edi
	push	esi
	call	_lua_setfield

; 455  : 	Method(IsBuildingSellable);

	push	0
	push	OFFSET ?lIsBuildingSellable@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsBuildingSellable
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220332
	push	edi
	push	esi
	call	_lua_setfield

; 456  : 	Method(GetSellBuildingRefund);

	push	0
	push	OFFSET ?lGetSellBuildingRefund@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSellBuildingRefund
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220333
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 457  : 	Method(GetTotalBaseBuildingMaintenance);

	push	0
	push	OFFSET ?lGetTotalBaseBuildingMaintenance@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetTotalBaseBuildingMaintenance
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220334
	push	edi
	push	esi
	call	_lua_setfield

; 458  : 	Method(GetBuildingGreatWork);

	push	0
	push	OFFSET ?lGetBuildingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingGreatWork
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220335
	push	edi
	push	esi
	call	_lua_setfield

; 459  : 	Method(SetBuildingGreatWork);

	push	0
	push	OFFSET ?lSetBuildingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetBuildingGreatWork
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220336
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 460  : 	Method(IsHoldingGreatWork);

	push	0
	push	OFFSET ?lIsHoldingGreatWork@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lIsHoldingGreatWork
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220337
	push	edi
	push	esi
	call	_lua_setfield

; 461  : 	Method(GetNumGreatWorksInBuilding);

	push	0
	push	OFFSET ?lGetNumGreatWorksInBuilding@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumGreatWorksInBuilding
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220338
	push	edi
	push	esi
	call	_lua_setfield

; 462  : 
; 463  : 	Method(ClearOrderQueue);

	push	0
	push	OFFSET ?lClearOrderQueue@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lClearOrderQueue
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220339
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 464  : 	Method(PushOrder);

	push	0
	push	OFFSET ?lPushOrder@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lPushOrder
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220340
	push	edi
	push	esi
	call	_lua_setfield

; 465  : 	Method(PopOrder);

	push	0
	push	OFFSET ?lPopOrder@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lPopOrder
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220341
	push	edi
	push	esi
	call	_lua_setfield

; 466  : 	Method(GetOrderQueueLength);

	push	0
	push	OFFSET ?lGetOrderQueueLength@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetOrderQueueLength
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220342
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 467  : 
; 468  : 	Method(GetBuildingYieldChange);

	push	0
	push	OFFSET ?lGetBuildingYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingYieldChange
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220343
	push	edi
	push	esi
	call	_lua_setfield

; 469  : 	Method(SetBuildingYieldChange);

	push	0
	push	OFFSET ?lSetBuildingYieldChange@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lSetBuildingYieldChange
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220344
	push	edi
	push	esi
	call	_lua_setfield

; 470  : 
; 471  : 	Method(GetBuildingEspionageModifier);

	push	0
	push	OFFSET ?lGetBuildingEspionageModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingEspionageModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220345
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 472  : 	Method(GetBuildingGlobalEspionageModifier);

	push	0
	push	OFFSET ?lGetBuildingGlobalEspionageModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetBuildingGlobalEspionageModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220346
	push	edi
	push	esi
	call	_lua_setfield

; 473  : 
; 474  : 	Method(GetNumCityPlots);

	push	0
	push	OFFSET ?lGetNumCityPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumCityPlots
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220347
	push	edi
	push	esi
	call	_lua_setfield

; 475  : 	Method(CanPlaceUnitHere);

	push	0
	push	OFFSET ?lCanPlaceUnitHere@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lCanPlaceUnitHere
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220348
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 476  : 
; 477  : 	Method(GetSpecialistYield);

	push	0
	push	OFFSET ?lGetSpecialistYield@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetSpecialistYield
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220349
	push	edi
	push	esi
	call	_lua_setfield

; 478  : 	Method(GetCultureFromSpecialist);

	push	0
	push	OFFSET ?lGetCultureFromSpecialist@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetCultureFromSpecialist
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220350
	push	edi
	push	esi
	call	_lua_setfield

; 479  : 
; 480  : 	Method(GetNumForcedWorkingPlots);

	push	0
	push	OFFSET ?lGetNumForcedWorkingPlots@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetNumForcedWorkingPlots
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220351
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 481  : 
; 482  : 	Method(GetReligionCityRangeStrikeModifier);

	push	0
	push	OFFSET ?lGetReligionCityRangeStrikeModifier@CvLuaCity@@KAHPAUlua_State@@@Z ; CvLuaCity::lGetReligionCityRangeStrikeModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG220352
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 24					; 00000018H
	pop	edi
	pop	esi

; 483  : }

	ret	0
?PushMethods@CvLuaCity@@SAXPAUlua_State@@H@Z ENDP	; CvLuaCity::PushMethods
_TEXT	ENDS
END
